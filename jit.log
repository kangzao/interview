<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='16173' time_ms='1618663146006'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.181-b13
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.181-b13) for bsd-amd64 JRE (1.8.0_181-b13), built on Jul  7 2018 01:02:31 by &quot;java_re&quot; with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61604:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 
</args>
<command>
com.jep.github.interview.concurrency.threadDemo.VisibilityDemo
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.181-b13
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/enping/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/endorsed
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib
java.library.path=/Users/enping/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre
java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/dt.jar
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.jep.github.interview.concurrency.threadDemo.VisibilityDemo
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='16643'/>
<thread_logfile thread='16643' filename='/var/folders/5r/7f77vb012t9fj6rvtkddcmx80000gn/T//hs_c16643_pid16173.log'/>
<writer thread='16387'/>
<thread_logfile thread='16387' filename='/var/folders/5r/7f77vb012t9fj6rvtkddcmx80000gn/T//hs_c16387_pid16173.log'/>
<writer thread='21763'/>
<thread_logfile thread='21763' filename='/var/folders/5r/7f77vb012t9fj6rvtkddcmx80000gn/T//hs_c21763_pid16173.log'/>
<writer thread='15619'/>
<thread_logfile thread='15619' filename='/var/folders/5r/7f77vb012t9fj6rvtkddcmx80000gn/T//hs_c15619_pid16173.log'/>
<writer thread='15107'/>
<task_queued compile_id='1' method='java/lang/Math min (II)I' bytes='11' count='2944' iicount='2944' level='3' stamp='0.115' comment='tiered' hot_count='2944'/>
<task_queued compile_id='2' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='477' backedge_count='29696' iicount='477' level='3' stamp='0.115' comment='tiered' hot_count='477'/>
<task_queued compile_id='3' method='java/lang/String hashCode ()I' bytes='55' count='949' backedge_count='27648' iicount='949' stamp='0.115' comment='tiered' hot_count='949'/>
<writer thread='21763'/>
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/hsdis-amd64.dylib
Decoding compiled method 0x000000011c3099d0:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011c309b40: mov    %eax,-0x14000(%rsp)
  0x000000011c309b47: push   %rbp
  0x000000011c309b48: sub    $0x30,%rsp
  0x000000011c309b4c: movabs $0x112489e90,%rax  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c309b56: mov    0xdc(%rax),%edi
  0x000000011c309b5c: add    $0x8,%edi
  0x000000011c309b5f: mov    %edi,0xdc(%rax)
  0x000000011c309b65: movabs $0x1123b6508,%rax  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c309b6f: and    $0x1ff8,%edi
  0x000000011c309b75: cmp    $0x0,%edi
  0x000000011c309b78: je     0x000000011c309bdd  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x000000011c309b7e: cmp    %edx,%esi
  0x000000011c309b80: movabs $0x112489e90,%rax  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c309b8a: movabs $0x108,%rdi
  0x000000011c309b94: jg     0x000000011c309ba4
  0x000000011c309b9a: movabs $0x118,%rdi
  0x000000011c309ba4: mov    (%rax,%rdi,1),%rbx
  0x000000011c309ba8: lea    0x1(%rbx),%rbx
  0x000000011c309bac: mov    %rbx,(%rax,%rdi,1)
  0x000000011c309bb0: jg     0x000000011c309bcb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x000000011c309bb6: movabs $0x112489e90,%rax  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c309bc0: incl   0x128(%rax)
  0x000000011c309bc6: jmpq   0x000000011c309bce  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000011c309bcb: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000011c309bce: mov    %rsi,%rax
  0x000000011c309bd1: add    $0x30,%rsp
  0x000000011c309bd5: pop    %rbp
  0x000000011c309bd6: test   %eax,-0xf822adc(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c309bdc: retq   
  0x000000011c309bdd: mov    %rax,0x8(%rsp)
  0x000000011c309be2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c309bea: callq  0x000000011c306120  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x000000011c309bef: jmp    0x000000011c309b7e
  0x000000011c309bf1: nop
  0x000000011c309bf2: nop
  0x000000011c309bf3: mov    0x2a8(%r15),%rax
  0x000000011c309bfa: movabs $0x0,%r10
  0x000000011c309c04: mov    %r10,0x2a8(%r15)
  0x000000011c309c0b: movabs $0x0,%r10
  0x000000011c309c15: mov    %r10,0x2b0(%r15)
  0x000000011c309c1c: add    $0x30,%rsp
  0x000000011c309c20: pop    %rbp
  0x000000011c309c21: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c309c26: hlt    
  0x000000011c309c27: hlt    
  0x000000011c309c28: hlt    
  0x000000011c309c29: hlt    
  0x000000011c309c2a: hlt    
  0x000000011c309c2b: hlt    
  0x000000011c309c2c: hlt    
  0x000000011c309c2d: hlt    
  0x000000011c309c2e: hlt    
  0x000000011c309c2f: hlt    
  0x000000011c309c30: hlt    
  0x000000011c309c31: hlt    
  0x000000011c309c32: hlt    
  0x000000011c309c33: hlt    
  0x000000011c309c34: hlt    
  0x000000011c309c35: hlt    
  0x000000011c309c36: hlt    
  0x000000011c309c37: hlt    
  0x000000011c309c38: hlt    
  0x000000011c309c39: hlt    
  0x000000011c309c3a: hlt    
  0x000000011c309c3b: hlt    
  0x000000011c309c3c: hlt    
  0x000000011c309c3d: hlt    
  0x000000011c309c3e: hlt    
  0x000000011c309c3f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c309c40: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c309c45: mov    %rsp,-0x28(%rsp)
  0x000000011c309c4a: sub    $0x80,%rsp
  0x000000011c309c51: mov    %rax,0x78(%rsp)
  0x000000011c309c56: mov    %rcx,0x70(%rsp)
  0x000000011c309c5b: mov    %rdx,0x68(%rsp)
  0x000000011c309c60: mov    %rbx,0x60(%rsp)
  0x000000011c309c65: mov    %rbp,0x50(%rsp)
  0x000000011c309c6a: mov    %rsi,0x48(%rsp)
  0x000000011c309c6f: mov    %rdi,0x40(%rsp)
  0x000000011c309c74: mov    %r8,0x38(%rsp)
  0x000000011c309c79: mov    %r9,0x30(%rsp)
  0x000000011c309c7e: mov    %r10,0x28(%rsp)
  0x000000011c309c83: mov    %r11,0x20(%rsp)
  0x000000011c309c88: mov    %r12,0x18(%rsp)
  0x000000011c309c8d: mov    %r13,0x10(%rsp)
  0x000000011c309c92: mov    %r14,0x8(%rsp)
  0x000000011c309c97: mov    %r15,(%rsp)
  0x000000011c309c9b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c309ca5: movabs $0x11c309c45,%rsi  ;   {internal_word}
  0x000000011c309caf: mov    %rsp,%rdx
  0x000000011c309cb2: and    $0xfffffffffffffff0,%rsp
  0x000000011c309cb6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c309cbb: hlt    
[Deopt Handler Code]
  0x000000011c309cbc: movabs $0x11c309cbc,%r10  ;   {section_word}
  0x000000011c309cc6: push   %r10
  0x000000011c309cc8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c309ccd: hlt    
  0x000000011c309cce: hlt    
  0x000000011c309ccf: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x000000011c309b40' size='936' address='0x000000011c3099d0' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math min (II)I' bytes='11' count='2963' iicount='2963' stamp='0.120'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='9475'/>
<task_queued compile_id='4' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='512' iicount='512' level='3' stamp='0.121' comment='tiered' hot_count='512'/>
<task_queued compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1062' backedge_count='4204' iicount='1062' level='3' stamp='0.121' comment='tiered' hot_count='1062'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c30a250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rsi:rsi   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = &apos;[B&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000011c30a440: mov    0x8(%rsi),%r10d
  0x000000011c30a444: shl    $0x3,%r10
  0x000000011c30a448: cmp    %rax,%r10
  0x000000011c30a44b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c30a451: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c30a45c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c30a460: mov    %eax,-0x14000(%rsp)
  0x000000011c30a467: push   %rbp
  0x000000011c30a468: sub    $0x80,%rsp
  0x000000011c30a46f: mov    %rsi,0x48(%rsp)
  0x000000011c30a474: mov    %rdx,0x60(%rsp)
  0x000000011c30a479: mov    %r9,0x70(%rsp)
  0x000000011c30a47e: movabs $0x1124d8600,%rax  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a488: mov    0xdc(%rax),%edi
  0x000000011c30a48e: add    $0x8,%edi
  0x000000011c30a491: mov    %edi,0xdc(%rax)
  0x000000011c30a497: movabs $0x11240fac0,%rax  ;   {metadata({method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a4a1: and    $0x1ff8,%edi
  0x000000011c30a4a7: cmp    $0x0,%edi
  0x000000011c30a4aa: je     0x000000011c30ad3d  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x000000011c30a4b0: mov    %rcx,%rdi
  0x000000011c30a4b3: add    %r8d,%edi
  0x000000011c30a4b6: mov    %edi,0x68(%rsp)
  0x000000011c30a4ba: mov    0xc(%r9),%eax      ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x000000011c30ad54
  0x000000011c30a4be: movabs $0x1124d8600,%rbx  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a4c8: addq   $0x1,0x108(%rbx)
  0x000000011c30a4d0: movabs $0x112489e90,%rbx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c30a4da: mov    0xdc(%rbx),%r11d
  0x000000011c30a4e1: add    $0x8,%r11d
  0x000000011c30a4e5: mov    %r11d,0xdc(%rbx)
  0x000000011c30a4ec: movabs $0x1123b6508,%rbx  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c30a4f6: and    $0x7ffff8,%r11d
  0x000000011c30a4fd: cmp    $0x0,%r11d
  0x000000011c30a501: je     0x000000011c30ad59
  0x000000011c30a507: cmp    %eax,%r8d
  0x000000011c30a50a: movabs $0x112489e90,%rbx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c30a514: movabs $0x108,%r11
  0x000000011c30a51e: jg     0x000000011c30a52e
  0x000000011c30a524: movabs $0x118,%r11
  0x000000011c30a52e: mov    (%rbx,%r11,1),%r13
  0x000000011c30a532: lea    0x1(%r13),%r13
  0x000000011c30a536: mov    %r13,(%rbx,%r11,1)
  0x000000011c30a53a: jg     0x000000011c30a555  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000011c30a540: movabs $0x112489e90,%rax  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c30a54a: incl   0x128(%rax)
  0x000000011c30a550: jmpq   0x000000011c30a558  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000011c30a555: mov    %rax,%r8           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000011c30a558: mov    $0x0,%eax
  0x000000011c30a55d: jmpq   0x000000011c30a61a  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000011c30a562: nopw   0x0(%rax,%rax,1)
  0x000000011c30a568: movslq %ecx,%rbx
  0x000000011c30a56b: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x000000011c30ad70
  0x000000011c30a56e: jae    0x000000011c30ad7a
  0x000000011c30a574: movzwl 0x10(%rdx,%rbx,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000011c30a579: cmp    $0x80,%ebx
  0x000000011c30a57f: movabs $0x1124d8600,%r11  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a589: movabs $0x138,%r13
  0x000000011c30a593: jge    0x000000011c30a5a3
  0x000000011c30a599: movabs $0x148,%r13
  0x000000011c30a5a3: mov    (%r11,%r13,1),%r14
  0x000000011c30a5a7: lea    0x1(%r14),%r14
  0x000000011c30a5ab: mov    %r14,(%r11,%r13,1)
  0x000000011c30a5af: jge    0x000000011c30a658  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000011c30a5b5: mov    %rax,%r11
  0x000000011c30a5b8: inc    %r11d
  0x000000011c30a5bb: inc    %ecx
  0x000000011c30a5bd: movslq %eax,%r13
  0x000000011c30a5c0: cmp    0xc(%r9),%eax
  0x000000011c30a5c4: jae    0x000000011c30ad83
  0x000000011c30a5ca: mov    %bl,0x10(%r9,%r13,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000011c30a5cf: movabs $0x1124d8600,%rax  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a5d9: mov    0xe0(%rax),%ebx
  0x000000011c30a5df: add    $0x8,%ebx
  0x000000011c30a5e2: mov    %ebx,0xe0(%rax)
  0x000000011c30a5e8: movabs $0x11240fac0,%rax  ;   {metadata({method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a5f2: and    $0xfff8,%ebx
  0x000000011c30a5f8: cmp    $0x0,%ebx
  0x000000011c30a5fb: je     0x000000011c30ad8c  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=449}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000011c30a601: test   %eax,-0xf823507(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c30a607: movabs $0x1124d8600,%rax  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a611: incl   0x158(%rax)
  0x000000011c30a617: mov    %r11,%rax          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000011c30a61a: cmp    %r8d,%eax
  0x000000011c30a61d: movabs $0x1124d8600,%rbx  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a627: movabs $0x118,%r11
  0x000000011c30a631: jge    0x000000011c30a641
  0x000000011c30a637: movabs $0x128,%r11
  0x000000011c30a641: mov    (%rbx,%r11,1),%r13
  0x000000011c30a645: lea    0x1(%r13),%r13
  0x000000011c30a649: mov    %r13,(%rbx,%r11,1)
  0x000000011c30a64d: jl     0x000000011c30a568  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000011c30a653: nopl   0x0(%rax,%rax,1)
  0x000000011c30a658: cmp    %edi,%ecx
  0x000000011c30a65a: movabs $0x1124d8600,%rbx  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a664: movabs $0x170,%r8
  0x000000011c30a66e: jge    0x000000011c30a67e
  0x000000011c30a674: movabs $0x180,%r8
  0x000000011c30a67e: mov    (%rbx,%r8,1),%r11
  0x000000011c30a682: lea    0x1(%r11),%r11
  0x000000011c30a686: mov    %r11,(%rbx,%r8,1)
  0x000000011c30a68a: jge    0x000000011c30ad28  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x000000011c30a690: mov    %rcx,%rbx
  0x000000011c30a693: inc    %ebx
  0x000000011c30a695: movslq %ecx,%r8
  0x000000011c30a698: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x000000011c30ada3
  0x000000011c30a69b: jae    0x000000011c30adad
  0x000000011c30a6a1: movzwl 0x10(%rdx,%r8,2),%ecx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x000000011c30a6a7: cmp    $0x80,%ecx
  0x000000011c30a6ad: movabs $0x1124d8600,%r8   ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a6b7: movabs $0x190,%r11
  0x000000011c30a6c1: jge    0x000000011c30a6d1
  0x000000011c30a6c7: movabs $0x1a0,%r11
  0x000000011c30a6d1: mov    (%r8,%r11,1),%r13
  0x000000011c30a6d5: lea    0x1(%r13),%r13
  0x000000011c30a6d9: mov    %r13,(%r8,%r11,1)
  0x000000011c30a6dd: jge    0x000000011c30a710  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x000000011c30a6e3: mov    %rax,%r8
  0x000000011c30a6e6: inc    %r8d
  0x000000011c30a6e9: movslq %eax,%r11
  0x000000011c30a6ec: cmp    0xc(%r9),%eax
  0x000000011c30a6f0: jae    0x000000011c30adb6
  0x000000011c30a6f6: mov    %cl,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x000000011c30a6fb: movabs $0x1124d8600,%rax  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a705: incl   0x1b0(%rax)
  0x000000011c30a70b: jmpq   0x000000011c30acb5  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x000000011c30a710: cmp    $0x800,%ecx
  0x000000011c30a716: movabs $0x1124d8600,%r8   ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a720: movabs $0x1c8,%r11
  0x000000011c30a72a: jge    0x000000011c30a73a
  0x000000011c30a730: movabs $0x1d8,%r11
  0x000000011c30a73a: mov    (%r8,%r11,1),%r13
  0x000000011c30a73e: lea    0x1(%r13),%r13
  0x000000011c30a742: mov    %r13,(%r8,%r11,1)
  0x000000011c30a746: jge    0x000000011c30a7a4  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x000000011c30a74c: mov    %rcx,%r8
  0x000000011c30a74f: sar    $0x6,%r8d
  0x000000011c30a753: or     $0xc0,%r8d
  0x000000011c30a75a: movslq %eax,%r11
  0x000000011c30a75d: cmp    0xc(%r9),%eax
  0x000000011c30a761: jae    0x000000011c30adbf
  0x000000011c30a767: mov    %r8b,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x000000011c30a76c: inc    %eax
  0x000000011c30a76e: mov    %rax,%r8
  0x000000011c30a771: inc    %r8d
  0x000000011c30a774: and    $0x3f,%ecx
  0x000000011c30a777: or     $0x80,%ecx
  0x000000011c30a77d: movslq %eax,%r11
  0x000000011c30a780: cmp    0xc(%r9),%eax
  0x000000011c30a784: jae    0x000000011c30adc8
  0x000000011c30a78a: mov    %cl,0x10(%r9,%r11,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x000000011c30a78f: movabs $0x1124d8600,%rax  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a799: incl   0x1e8(%rax)
  0x000000011c30a79f: jmpq   0x000000011c30acb5  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x000000011c30a7a4: movabs $0x1124d8600,%r8   ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a7ae: addq   $0x1,0x200(%r8)
  0x000000011c30a7b6: movabs $0x112551a40,%r8   ;   {metadata(method data for {method} {0x000000011235a008} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c30a7c0: mov    0xdc(%r8),%r11d
  0x000000011c30a7c7: add    $0x8,%r11d
  0x000000011c30a7cb: mov    %r11d,0xdc(%r8)
  0x000000011c30a7d2: movabs $0x11235a008,%r8   ;   {metadata({method} {0x000000011235a008} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c30a7dc: and    $0x7ffff8,%r11d
  0x000000011c30a7e3: cmp    $0x0,%r11d
  0x000000011c30a7e7: je     0x000000011c30add1
  0x000000011c30a7ed: cmp    $0xd800,%ecx
  0x000000011c30a7f3: movabs $0x112551a40,%r8   ;   {metadata(method data for {method} {0x000000011235a008} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c30a7fd: movabs $0x108,%r11
  0x000000011c30a807: jl     0x000000011c30a817
  0x000000011c30a80d: movabs $0x118,%r11
  0x000000011c30a817: mov    (%r8,%r11,1),%r13
  0x000000011c30a81b: lea    0x1(%r13),%r13
  0x000000011c30a81f: mov    %r13,(%r8,%r11,1)
  0x000000011c30a823: jl     0x000000011c30a865  ;*if_icmplt
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000011c30a829: cmp    $0xe000,%ecx
  0x000000011c30a82f: movabs $0x112551a40,%r8   ;   {metadata(method data for {method} {0x000000011235a008} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c30a839: movabs $0x128,%r11
  0x000000011c30a843: jge    0x000000011c30a853
  0x000000011c30a849: movabs $0x138,%r11
  0x000000011c30a853: mov    (%r8,%r11,1),%r13
  0x000000011c30a857: lea    0x1(%r13),%r13
  0x000000011c30a85b: mov    %r13,(%r8,%r11,1)
  0x000000011c30a85f: jl     0x000000011c30a870  ;*if_icmpge
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000011c30a865: mov    $0x0,%r8d
  0x000000011c30a86b: jmpq   0x000000011c30a887  ;*ireturn
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000011c30a870: movabs $0x112551a40,%r8   ;   {metadata(method data for {method} {0x000000011235a008} &apos;isSurrogate&apos; &apos;(C)Z&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c30a87a: incl   0x148(%r8)
  0x000000011c30a881: mov    $0x1,%r8d          ;*goto
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000011c30a887: and    $0x1,%r8d
  0x000000011c30a88b: cmp    $0x0,%r8d
  0x000000011c30a88f: movabs $0x1124d8600,%r8   ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a899: movabs $0x210,%r11
  0x000000011c30a8a3: je     0x000000011c30a8b3
  0x000000011c30a8a9: movabs $0x220,%r11
  0x000000011c30a8b3: mov    (%r8,%r11,1),%r13
  0x000000011c30a8b7: lea    0x1(%r13),%r13
  0x000000011c30a8bb: mov    %r13,(%r8,%r11,1)
  0x000000011c30a8bf: je     0x000000011c30ac49  ;*ifeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x000000011c30a8c5: mov    0x30(%rsi),%r8d
  0x000000011c30a8c9: shl    $0x3,%r8           ;*getfield sManual
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x000000011c30a8cd: cmp    $0x0,%r8
  0x000000011c30a8d1: movabs $0x1124d8600,%r8   ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a8db: movabs $0x230,%r11
  0x000000011c30a8e5: jne    0x000000011c30a8f5
  0x000000011c30a8eb: movabs $0x240,%r11
  0x000000011c30a8f5: mov    (%r8,%r11,1),%r13
  0x000000011c30a8f9: lea    0x1(%r13),%r13
  0x000000011c30a8fd: mov    %r13,(%r8,%r11,1)
  0x000000011c30a901: mov    %ecx,0x5c(%rsp)
  0x000000011c30a905: mov    %ebx,0x58(%rsp)
  0x000000011c30a909: mov    %eax,0x6c(%rsp)
  0x000000011c30a90d: jne    0x000000011c30a976  ;*ifnonnull
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x000000011c30a913: nopl   0x0(%rax,%rax,1)
  0x000000011c30a918: jmpq   0x000000011c30adf7  ;   {no_reloc}
  0x000000011c30a91d: add    %al,(%rax)
  0x000000011c30a91f: add    %al,(%rax)
  0x000000011c30a921: add    %ch,%cl
  0x000000011c30a923: fiaddl (%rax,%rax,1)
  0x000000011c30a926: add    %cl,-0x75(%rax)    ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x000000011c30a929: rorb   -0x43(%rcx)        ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a92c: add    %al,0x1124d(%rsi)
  0x000000011c30a932: add    %al,(%rax)
  0x000000011c30a934: addq   $0x1,0x250(%r13)
  0x000000011c30a93c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x000000011c30a93f: mov    %rax,0x50(%rsp)
  0x000000011c30a944: nop
  0x000000011c30a945: nop
  0x000000011c30a946: nop
  0x000000011c30a947: callq  0x000000011c24c0a0  ; OopMap{[72]=Oop [80]=Oop [96]=Oop [112]=Oop off=1292}
                                                ;*invokespecial &lt;init&gt;
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x000000011c30a94c: mov    0x48(%rsp),%rsi
  0x000000011c30a951: mov    0x50(%rsp),%rax
  0x000000011c30a956: mov    %rax,%r10
  0x000000011c30a959: shr    $0x3,%r10
  0x000000011c30a95d: mov    %r10d,0x30(%rsi)
  0x000000011c30a961: mov    %rsi,%rdx
  0x000000011c30a964: shr    $0x9,%rdx
  0x000000011c30a968: movabs $0x10c974000,%rcx
  0x000000011c30a972: movb   $0x0,(%rdx,%rcx,1)  ;*putfield sManual
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x000000011c30a976: mov    0x30(%rsi),%edi
  0x000000011c30a979: shl    $0x3,%rdi          ;*getfield sManual
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x000000011c30a97d: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011c30ae0e
  0x000000011c30a980: mov    %rdi,%rdx
  0x000000011c30a983: movabs $0x1124d8600,%rcx  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30a98d: mov    0x8(%rdx),%edx
  0x000000011c30a990: shl    $0x3,%rdx
  0x000000011c30a994: cmp    0x268(%rcx),%rdx
  0x000000011c30a99b: jne    0x000000011c30a9aa
  0x000000011c30a99d: addq   $0x1,0x270(%rcx)
  0x000000011c30a9a5: jmpq   0x000000011c30aa10
  0x000000011c30a9aa: cmp    0x278(%rcx),%rdx
  0x000000011c30a9b1: jne    0x000000011c30a9c0
  0x000000011c30a9b3: addq   $0x1,0x280(%rcx)
  0x000000011c30a9bb: jmpq   0x000000011c30aa10
  0x000000011c30a9c0: cmpq   $0x0,0x268(%rcx)
  0x000000011c30a9cb: jne    0x000000011c30a9e4
  0x000000011c30a9cd: mov    %rdx,0x268(%rcx)
  0x000000011c30a9d4: movq   $0x1,0x270(%rcx)
  0x000000011c30a9df: jmpq   0x000000011c30aa10
  0x000000011c30a9e4: cmpq   $0x0,0x278(%rcx)
  0x000000011c30a9ef: jne    0x000000011c30aa08
  0x000000011c30a9f1: mov    %rdx,0x278(%rcx)
  0x000000011c30a9f8: movq   $0x1,0x280(%rcx)
  0x000000011c30aa03: jmpq   0x000000011c30aa10
  0x000000011c30aa08: addq   $0x1,0x260(%rcx)
  0x000000011c30aa10: mov    0x58(%rsp),%ebx
  0x000000011c30aa14: dec    %ebx
  0x000000011c30aa16: mov    0x5c(%rsp),%edx
  0x000000011c30aa1a: mov    0x60(%rsp),%rcx
  0x000000011c30aa1f: mov    %rbx,%r8
  0x000000011c30aa22: mov    0x68(%rsp),%r9d
  0x000000011c30aa27: mov    %rdi,%rsi          ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x000000011c30aa2a: nop
  0x000000011c30aa2b: nop
  0x000000011c30aa2c: nop
  0x000000011c30aa2d: movabs $0xffffffffffffffff,%rax
  0x000000011c30aa37: callq  0x000000011c24c2e0  ; OopMap{[96]=Oop [112]=Oop [72]=Oop off=1532}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x000000011c30aa3c: cmp    $0x0,%eax
  0x000000011c30aa3f: movabs $0x1124d8600,%rsi  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30aa49: movabs $0x290,%rdi
  0x000000011c30aa53: jge    0x000000011c30aa63
  0x000000011c30aa59: movabs $0x2a0,%rdi
  0x000000011c30aa63: mov    (%rsi,%rdi,1),%rbx
  0x000000011c30aa67: lea    0x1(%rbx),%rbx
  0x000000011c30aa6b: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c30aa6f: jge    0x000000011c30ab91  ;*ifge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x000000011c30aa75: mov    0x48(%rsp),%rsi
  0x000000011c30aa7a: mov    %rsi,%rax
  0x000000011c30aa7d: movabs $0x1124d8600,%rdi  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30aa87: mov    0x8(%rax),%eax
  0x000000011c30aa8a: shl    $0x3,%rax
  0x000000011c30aa8e: cmp    0x2b8(%rdi),%rax
  0x000000011c30aa95: jne    0x000000011c30aaa4
  0x000000011c30aa97: addq   $0x1,0x2c0(%rdi)
  0x000000011c30aa9f: jmpq   0x000000011c30ab0a
  0x000000011c30aaa4: cmp    0x2c8(%rdi),%rax
  0x000000011c30aaab: jne    0x000000011c30aaba
  0x000000011c30aaad: addq   $0x1,0x2d0(%rdi)
  0x000000011c30aab5: jmpq   0x000000011c30ab0a
  0x000000011c30aaba: cmpq   $0x0,0x2b8(%rdi)
  0x000000011c30aac5: jne    0x000000011c30aade
  0x000000011c30aac7: mov    %rax,0x2b8(%rdi)
  0x000000011c30aace: movq   $0x1,0x2c0(%rdi)
  0x000000011c30aad9: jmpq   0x000000011c30ab0a
  0x000000011c30aade: cmpq   $0x0,0x2c8(%rdi)
  0x000000011c30aae9: jne    0x000000011c30ab02
  0x000000011c30aaeb: mov    %rax,0x2c8(%rdi)
  0x000000011c30aaf2: movq   $0x1,0x2d0(%rdi)
  0x000000011c30aafd: jmpq   0x000000011c30ab0a
  0x000000011c30ab02: addq   $0x1,0x2b0(%rdi)
  0x000000011c30ab0a: mov    0x20(%rsi),%eax
  0x000000011c30ab0d: shl    $0x3,%rax          ;*getfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x000000011c30ab11: movabs $0x715596988,%r10  ;   {oop(a &apos;java/nio/charset/CodingErrorAction&apos;)}
  0x000000011c30ab1b: cmp    %r10,%rax
  0x000000011c30ab1e: movabs $0x1124d8600,%rax  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30ab28: movabs $0x2e0,%rdi
  0x000000011c30ab32: je     0x000000011c30ab42
  0x000000011c30ab38: movabs $0x2f0,%rdi
  0x000000011c30ab42: mov    (%rax,%rdi,1),%rbx
  0x000000011c30ab46: lea    0x1(%rbx),%rbx
  0x000000011c30ab4a: mov    %rbx,(%rax,%rdi,1)
  0x000000011c30ab4e: jne    0x000000011c30ad14  ;*if_acmpeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x000000011c30ab54: mov    0x6c(%rsp),%edi
  0x000000011c30ab58: mov    0x70(%rsp),%r9
  0x000000011c30ab5d: mov    %rdi,%rax
  0x000000011c30ab60: inc    %eax
  0x000000011c30ab62: movsbl 0x2c(%rsi),%ebx    ;*getfield repl
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x000000011c30ab66: movslq %edi,%rdx
  0x000000011c30ab69: cmp    0xc(%r9),%edi
  0x000000011c30ab6d: jae    0x000000011c30ae13
  0x000000011c30ab73: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x000000011c30ab78: movabs $0x1124d8600,%rdi  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30ab82: incl   0x300(%rdi)
  0x000000011c30ab88: mov    0x58(%rsp),%ebx
  0x000000011c30ab8c: jmpq   0x000000011c30ac31  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x000000011c30ab91: mov    0x6c(%rsp),%edi
  0x000000011c30ab95: mov    0x70(%rsp),%r9
  0x000000011c30ab9a: mov    0x48(%rsp),%rsi
  0x000000011c30ab9f: mov    %rax,%rbx
  0x000000011c30aba2: sar    $0x12,%ebx
  0x000000011c30aba5: or     $0xf0,%ebx
  0x000000011c30abab: movslq %edi,%rdx
  0x000000011c30abae: cmp    0xc(%r9),%edi
  0x000000011c30abb2: jae    0x000000011c30ae1c
  0x000000011c30abb8: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x000000011c30abbd: inc    %edi
  0x000000011c30abbf: mov    %rax,%rbx
  0x000000011c30abc2: sar    $0xc,%ebx
  0x000000011c30abc5: and    $0x3f,%ebx
  0x000000011c30abc8: or     $0x80,%ebx
  0x000000011c30abce: movslq %edi,%rdx
  0x000000011c30abd1: cmp    0xc(%r9),%edi
  0x000000011c30abd5: jae    0x000000011c30ae25
  0x000000011c30abdb: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x000000011c30abe0: inc    %edi
  0x000000011c30abe2: mov    %rax,%rbx
  0x000000011c30abe5: sar    $0x6,%ebx
  0x000000011c30abe8: and    $0x3f,%ebx
  0x000000011c30abeb: or     $0x80,%ebx
  0x000000011c30abf1: movslq %edi,%rdx
  0x000000011c30abf4: cmp    0xc(%r9),%edi
  0x000000011c30abf8: jae    0x000000011c30ae2e
  0x000000011c30abfe: mov    %bl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x000000011c30ac03: inc    %edi
  0x000000011c30ac05: mov    %rdi,%rbx
  0x000000011c30ac08: inc    %ebx
  0x000000011c30ac0a: and    $0x3f,%eax
  0x000000011c30ac0d: or     $0x80,%eax
  0x000000011c30ac13: movslq %edi,%rdx
  0x000000011c30ac16: cmp    0xc(%r9),%edi
  0x000000011c30ac1a: jae    0x000000011c30ae37
  0x000000011c30ac20: mov    %al,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x000000011c30ac25: mov    0x58(%rsp),%edi
  0x000000011c30ac29: inc    %edi
  0x000000011c30ac2b: mov    %rbx,%rax
  0x000000011c30ac2e: mov    %rdi,%rbx
  0x000000011c30ac31: movabs $0x1124d8600,%rdi  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30ac3b: incl   0x318(%rdi)
  0x000000011c30ac41: mov    %rax,%r8
  0x000000011c30ac44: jmpq   0x000000011c30acb5  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x000000011c30ac49: mov    %rax,%rdi
  0x000000011c30ac4c: mov    %rcx,%rax
  0x000000011c30ac4f: sar    $0xc,%eax
  0x000000011c30ac52: or     $0xe0,%eax
  0x000000011c30ac58: movslq %edi,%rdx
  0x000000011c30ac5b: cmp    0xc(%r9),%edi
  0x000000011c30ac5f: jae    0x000000011c30ae40
  0x000000011c30ac65: mov    %al,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x000000011c30ac6a: mov    %rdi,%rax
  0x000000011c30ac6d: inc    %eax
  0x000000011c30ac6f: mov    %rcx,%rdi
  0x000000011c30ac72: sar    $0x6,%edi
  0x000000011c30ac75: and    $0x3f,%edi
  0x000000011c30ac78: or     $0x80,%edi
  0x000000011c30ac7e: movslq %eax,%rdx
  0x000000011c30ac81: cmp    0xc(%r9),%eax
  0x000000011c30ac85: jae    0x000000011c30ae49
  0x000000011c30ac8b: mov    %dil,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x000000011c30ac90: inc    %eax
  0x000000011c30ac92: mov    %rax,%rdi
  0x000000011c30ac95: inc    %edi
  0x000000011c30ac97: and    $0x3f,%ecx
  0x000000011c30ac9a: or     $0x80,%ecx
  0x000000011c30aca0: movslq %eax,%rdx
  0x000000011c30aca3: cmp    0xc(%r9),%eax
  0x000000011c30aca7: jae    0x000000011c30ae52
  0x000000011c30acad: mov    %cl,0x10(%r9,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x000000011c30acb2: mov    %rdi,%r8           ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000011c30acb5: movabs $0x1124d8600,%rax  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30acbf: mov    0xe0(%rax),%edi
  0x000000011c30acc5: add    $0x8,%edi
  0x000000011c30acc8: mov    %edi,0xe0(%rax)
  0x000000011c30acce: movabs $0x11240fac0,%rax  ;   {metadata({method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30acd8: and    $0xfff8,%edi
  0x000000011c30acde: cmp    $0x0,%edi
  0x000000011c30ace1: je     0x000000011c30ae5b  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2215}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000011c30ace7: test   %eax,-0xf823bed(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c30aced: movabs $0x1124d8600,%rax  ;   {metadata(method data for {method} {0x000000011240fac0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;)}
  0x000000011c30acf7: incl   0x330(%rax)
  0x000000011c30acfd: mov    %r8,%rdi
  0x000000011c30ad00: mov    %rbx,%rcx
  0x000000011c30ad03: mov    %rdi,%rax
  0x000000011c30ad06: mov    0x68(%rsp),%edi
  0x000000011c30ad0a: mov    0x60(%rsp),%rdx
  0x000000011c30ad0f: jmpq   0x000000011c30a658  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000011c30ad14: mov    $0xffffffff,%eax
  0x000000011c30ad19: add    $0x80,%rsp
  0x000000011c30ad20: pop    %rbp
  0x000000011c30ad21: test   %eax,-0xf823c27(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c30ad27: retq                      ;*ireturn
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x000000011c30ad28: mov    %rax,%rdi
  0x000000011c30ad2b: mov    %rdi,%rax
  0x000000011c30ad2e: add    $0x80,%rsp
  0x000000011c30ad35: pop    %rbp
  0x000000011c30ad36: test   %eax,-0xf823c3c(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c30ad3c: retq   
  0x000000011c30ad3d: mov    %rax,0x8(%rsp)
  0x000000011c30ad42: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c30ad4a: callq  0x000000011c306120  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2319}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x000000011c30ad4f: jmpq   0x000000011c30a4b0
  0x000000011c30ad54: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2329}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x000000011c30ad59: mov    %rbx,0x8(%rsp)
  0x000000011c30ad5e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c30ad66: callq  0x000000011c306120  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2347}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x000000011c30ad6b: jmpq   0x000000011c30a507
  0x000000011c30ad70: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2357}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000011c30ad75: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2362}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000011c30ad7a: mov    %rcx,(%rsp)
  0x000000011c30ad7e: callq  0x000000011c274080  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2371}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000011c30ad83: mov    %rax,(%rsp)
  0x000000011c30ad87: callq  0x000000011c274080  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2380}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000011c30ad8c: mov    %rax,0x8(%rsp)
  0x000000011c30ad91: movq   $0x33,(%rsp)
  0x000000011c30ad99: callq  0x000000011c306120  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2398}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x000000011c30ad9e: jmpq   0x000000011c30a601
  0x000000011c30ada3: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2408}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000011c30ada8: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2413}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000011c30adad: mov    %rcx,(%rsp)
  0x000000011c30adb1: callq  0x000000011c274080  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2422}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000011c30adb6: mov    %rax,(%rsp)
  0x000000011c30adba: callq  0x000000011c274080  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2431}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x000000011c30adbf: mov    %rax,(%rsp)
  0x000000011c30adc3: callq  0x000000011c274080  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2440}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x000000011c30adc8: mov    %rax,(%rsp)
  0x000000011c30adcc: callq  0x000000011c274080  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2449}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x000000011c30add1: mov    %r8,0x8(%rsp)
  0x000000011c30add6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c30adde: callq  0x000000011c306120  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [96]=Oop r9=Oop [112]=Oop off=2467}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x000000011c30ade3: jmpq   0x000000011c30a7ed
  0x000000011c30ade8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c30adf2: mov    $0xa050f00,%eax
  0x000000011c30adf7: callq  0x000000011c305120  ; OopMap{[72]=Oop [112]=Oop [96]=Oop off=2492}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000011c30adfc: jmpq   0x000000011c30a918
  0x000000011c30ae01: mov    %rdx,%rdx
  0x000000011c30ae04: callq  0x000000011c301f60  ; OopMap{[72]=Oop [112]=Oop [96]=Oop off=2505}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000011c30ae09: jmpq   0x000000011c30a927
  0x000000011c30ae0e: callq  0x000000011c301ac0  ; OopMap{[96]=Oop [112]=Oop rsi=Oop [72]=Oop rdi=Oop off=2515}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x000000011c30ae13: mov    %rdi,(%rsp)
  0x000000011c30ae17: callq  0x000000011c274080  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2524}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x000000011c30ae1c: mov    %rdi,(%rsp)
  0x000000011c30ae20: callq  0x000000011c274080  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2533}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x000000011c30ae25: mov    %rdi,(%rsp)
  0x000000011c30ae29: callq  0x000000011c274080  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2542}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x000000011c30ae2e: mov    %rdi,(%rsp)
  0x000000011c30ae32: callq  0x000000011c274080  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2551}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x000000011c30ae37: mov    %rdi,(%rsp)
  0x000000011c30ae3b: callq  0x000000011c274080  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2560}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x000000011c30ae40: mov    %rdi,(%rsp)
  0x000000011c30ae44: callq  0x000000011c274080  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2569}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x000000011c30ae49: mov    %rax,(%rsp)
  0x000000011c30ae4d: callq  0x000000011c274080  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2578}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x000000011c30ae52: mov    %rax,(%rsp)
  0x000000011c30ae56: callq  0x000000011c274080  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2587}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x000000011c30ae5b: mov    %rax,0x8(%rsp)
  0x000000011c30ae60: movq   $0x161,(%rsp)
  0x000000011c30ae68: callq  0x000000011c306120  ; OopMap{[96]=Oop rsi=Oop [72]=Oop r9=Oop [112]=Oop off=2605}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x000000011c30ae6d: jmpq   0x000000011c30ace7
  0x000000011c30ae72: nop
  0x000000011c30ae73: nop
  0x000000011c30ae74: mov    0x2a8(%r15),%rax
  0x000000011c30ae7b: movabs $0x0,%r10
  0x000000011c30ae85: mov    %r10,0x2a8(%r15)
  0x000000011c30ae8c: movabs $0x0,%r10
  0x000000011c30ae96: mov    %r10,0x2b0(%r15)
  0x000000011c30ae9d: add    $0x80,%rsp
  0x000000011c30aea4: pop    %rbp
  0x000000011c30aea5: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c30aeaa: hlt    
  0x000000011c30aeab: hlt    
  0x000000011c30aeac: hlt    
  0x000000011c30aead: hlt    
  0x000000011c30aeae: hlt    
  0x000000011c30aeaf: hlt    
  0x000000011c30aeb0: hlt    
  0x000000011c30aeb1: hlt    
  0x000000011c30aeb2: hlt    
  0x000000011c30aeb3: hlt    
  0x000000011c30aeb4: hlt    
  0x000000011c30aeb5: hlt    
  0x000000011c30aeb6: hlt    
  0x000000011c30aeb7: hlt    
  0x000000011c30aeb8: hlt    
  0x000000011c30aeb9: hlt    
  0x000000011c30aeba: hlt    
  0x000000011c30aebb: hlt    
  0x000000011c30aebc: hlt    
  0x000000011c30aebd: hlt    
  0x000000011c30aebe: hlt    
  0x000000011c30aebf: hlt    
[Stub Code]
  0x000000011c30aec0: nop                       ;   {no_reloc}
  0x000000011c30aec1: nop
  0x000000011c30aec2: nop
  0x000000011c30aec3: nop
  0x000000011c30aec4: nop
  0x000000011c30aec5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c30aecf: jmpq   0x000000011c30aecf  ;   {runtime_call}
  0x000000011c30aed4: nop
  0x000000011c30aed5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c30aedf: jmpq   0x000000011c30aedf  ;   {runtime_call}
[Exception Handler]
  0x000000011c30aee4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c30aee9: mov    %rsp,-0x28(%rsp)
  0x000000011c30aeee: sub    $0x80,%rsp
  0x000000011c30aef5: mov    %rax,0x78(%rsp)
  0x000000011c30aefa: mov    %rcx,0x70(%rsp)
  0x000000011c30aeff: mov    %rdx,0x68(%rsp)
  0x000000011c30af04: mov    %rbx,0x60(%rsp)
  0x000000011c30af09: mov    %rbp,0x50(%rsp)
  0x000000011c30af0e: mov    %rsi,0x48(%rsp)
  0x000000011c30af13: mov    %rdi,0x40(%rsp)
  0x000000011c30af18: mov    %r8,0x38(%rsp)
  0x000000011c30af1d: mov    %r9,0x30(%rsp)
  0x000000011c30af22: mov    %r10,0x28(%rsp)
  0x000000011c30af27: mov    %r11,0x20(%rsp)
  0x000000011c30af2c: mov    %r12,0x18(%rsp)
  0x000000011c30af31: mov    %r13,0x10(%rsp)
  0x000000011c30af36: mov    %r14,0x8(%rsp)
  0x000000011c30af3b: mov    %r15,(%rsp)
  0x000000011c30af3f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c30af49: movabs $0x11c30aee9,%rsi  ;   {internal_word}
  0x000000011c30af53: mov    %rsp,%rdx
  0x000000011c30af56: and    $0xfffffffffffffff0,%rsp
  0x000000011c30af5a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c30af5f: hlt    
[Deopt Handler Code]
  0x000000011c30af60: movabs $0x11c30af60,%r10  ;   {section_word}
  0x000000011c30af6a: push   %r10
  0x000000011c30af6c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c30af71: hlt    
  0x000000011c30af72: hlt    
  0x000000011c30af73: hlt    
  0x000000011c30af74: hlt    
  0x000000011c30af75: hlt    
  0x000000011c30af76: hlt    
  0x000000011c30af77: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x000000011c30a440' size='5552' address='0x000000011c30a250' relocation_offset='296' insts_offset='496' stub_offset='3184' scopes_data_offset='3400' scopes_pcs_offset='4176' dependencies_offset='5488' nul_chk_table_offset='5496' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='478' backedge_count='29850' iicount='478' stamp='0.145'/>
Decoding compiled method 0x000000011c308fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c309160: mov    0x8(%rsi),%r10d
  0x000000011c309164: shl    $0x3,%r10
  0x000000011c309168: cmp    %rax,%r10
  0x000000011c30916b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c309171: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c30917c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c309180: mov    %eax,-0x14000(%rsp)
  0x000000011c309187: push   %rbp
  0x000000011c309188: sub    $0x30,%rsp
  0x000000011c30918c: movabs $0x1124accf8,%rax  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c309196: mov    0xdc(%rax),%edi
  0x000000011c30919c: add    $0x8,%edi
  0x000000011c30919f: mov    %edi,0xdc(%rax)
  0x000000011c3091a5: movabs $0x1122c4618,%rax  ;   {metadata({method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3091af: and    $0x1ff8,%edi
  0x000000011c3091b5: cmp    $0x0,%edi
  0x000000011c3091b8: je     0x000000011c309586  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x000000011c3091be: cmp    %rdx,%rsi
  0x000000011c3091c1: movabs $0x1124accf8,%rax  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3091cb: movabs $0x108,%rdi
  0x000000011c3091d5: jne    0x000000011c3091e5
  0x000000011c3091db: movabs $0x118,%rdi
  0x000000011c3091e5: mov    (%rax,%rdi,1),%rbx
  0x000000011c3091e9: lea    0x1(%rbx),%rbx
  0x000000011c3091ed: mov    %rbx,(%rax,%rdi,1)
  0x000000011c3091f1: je     0x000000011c309575  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000011c3091f7: cmp    $0x0,%rdx
  0x000000011c3091fb: jne    0x000000011c309216
  0x000000011c3091fd: movabs $0x1124accf8,%rbx  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c309207: orl    $0x100,0x120(%rbx)
  0x000000011c309211: jmpq   0x000000011c3092d6
  0x000000011c309216: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c309220: mov    0x8(%rdx),%edi
  0x000000011c309223: shl    $0x3,%rdi
  0x000000011c309227: cmp    %rdi,%rcx
  0x000000011c30922a: jne    0x000000011c3092ba
  0x000000011c309230: movabs $0x1124accf8,%rbx  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c30923a: mov    0x8(%rdx),%ecx
  0x000000011c30923d: shl    $0x3,%rcx
  0x000000011c309241: cmp    0x130(%rbx),%rcx
  0x000000011c309248: jne    0x000000011c309257
  0x000000011c30924a: addq   $0x1,0x138(%rbx)
  0x000000011c309252: jmpq   0x000000011c3092db
  0x000000011c309257: cmp    0x140(%rbx),%rcx
  0x000000011c30925e: jne    0x000000011c30926d
  0x000000011c309260: addq   $0x1,0x148(%rbx)
  0x000000011c309268: jmpq   0x000000011c3092db
  0x000000011c30926d: cmpq   $0x0,0x130(%rbx)
  0x000000011c309278: jne    0x000000011c309291
  0x000000011c30927a: mov    %rcx,0x130(%rbx)
  0x000000011c309281: movq   $0x1,0x138(%rbx)
  0x000000011c30928c: jmpq   0x000000011c3092db
  0x000000011c309291: cmpq   $0x0,0x140(%rbx)
  0x000000011c30929c: jne    0x000000011c3092b5
  0x000000011c30929e: mov    %rcx,0x140(%rbx)
  0x000000011c3092a5: movq   $0x1,0x148(%rbx)
  0x000000011c3092b0: jmpq   0x000000011c3092db
  0x000000011c3092b5: jmpq   0x000000011c3092db
  0x000000011c3092ba: movabs $0x1124accf8,%rbx  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3092c4: subq   $0x1,0x128(%rbx)
  0x000000011c3092cc: jmpq   0x000000011c3092d6
  0x000000011c3092d1: jmpq   0x000000011c3092db
  0x000000011c3092d6: xor    %rax,%rax
  0x000000011c3092d9: jmp    0x000000011c3092e5
  0x000000011c3092db: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000011c3092e5: cmp    $0x0,%eax
  0x000000011c3092e8: movabs $0x1124accf8,%rax  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3092f2: movabs $0x158,%rdi
  0x000000011c3092fc: je     0x000000011c30930c
  0x000000011c309302: movabs $0x168,%rdi
  0x000000011c30930c: mov    (%rax,%rdi,1),%rbx
  0x000000011c309310: lea    0x1(%rbx),%rbx
  0x000000011c309314: mov    %rbx,(%rax,%rdi,1)
  0x000000011c309318: je     0x000000011c309564  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x000000011c30931e: cmp    $0x0,%rdx
  0x000000011c309322: jne    0x000000011c30933d
  0x000000011c309324: movabs $0x1124accf8,%rbx  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c30932e: orl    $0x100,0x170(%rbx)
  0x000000011c309338: jmpq   0x000000011c3093fd
  0x000000011c30933d: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c309347: mov    0x8(%rdx),%edi
  0x000000011c30934a: shl    $0x3,%rdi
  0x000000011c30934e: cmp    %rdi,%rax
  0x000000011c309351: jne    0x000000011c3093e1
  0x000000011c309357: movabs $0x1124accf8,%rbx  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c309361: mov    0x8(%rdx),%eax
  0x000000011c309364: shl    $0x3,%rax
  0x000000011c309368: cmp    0x180(%rbx),%rax
  0x000000011c30936f: jne    0x000000011c30937e
  0x000000011c309371: addq   $0x1,0x188(%rbx)
  0x000000011c309379: jmpq   0x000000011c3093fd
  0x000000011c30937e: cmp    0x190(%rbx),%rax
  0x000000011c309385: jne    0x000000011c309394
  0x000000011c309387: addq   $0x1,0x198(%rbx)
  0x000000011c30938f: jmpq   0x000000011c3093fd
  0x000000011c309394: cmpq   $0x0,0x180(%rbx)
  0x000000011c30939f: jne    0x000000011c3093b8
  0x000000011c3093a1: mov    %rax,0x180(%rbx)
  0x000000011c3093a8: movq   $0x1,0x188(%rbx)
  0x000000011c3093b3: jmpq   0x000000011c3093fd
  0x000000011c3093b8: cmpq   $0x0,0x190(%rbx)
  0x000000011c3093c3: jne    0x000000011c3093dc
  0x000000011c3093c5: mov    %rax,0x190(%rbx)
  0x000000011c3093cc: movq   $0x1,0x198(%rbx)
  0x000000011c3093d7: jmpq   0x000000011c3093fd
  0x000000011c3093dc: jmpq   0x000000011c3093fd
  0x000000011c3093e1: movabs $0x1124accf8,%rbx  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3093eb: subq   $0x1,0x178(%rbx)
  0x000000011c3093f3: jmpq   0x000000011c30959d
  0x000000011c3093f8: jmpq   0x000000011c3093fd
  0x000000011c3093fd: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x000000011c309400: mov    0xc(%rsi),%esi
  0x000000011c309403: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000011c309407: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x000000011c3095a6
  0x000000011c30940a: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000011c3095ab
  0x000000011c30940d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000011c309411: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000011c3095b0
  0x000000011c309414: cmp    %ebx,%edi
  0x000000011c309416: movabs $0x1124accf8,%rbx  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c309420: movabs $0x1a8,%rdx
  0x000000011c30942a: jne    0x000000011c30943a
  0x000000011c309430: movabs $0x1b8,%rdx
  0x000000011c30943a: mov    (%rbx,%rdx,1),%rcx
  0x000000011c30943e: lea    0x1(%rcx),%rcx
  0x000000011c309442: mov    %rcx,(%rbx,%rdx,1)
  0x000000011c309446: jne    0x000000011c309564  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000011c30944c: mov    $0x0,%ebx
  0x000000011c309451: jmpq   0x000000011c3094ff  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x000000011c309456: xchg   %ax,%ax
  0x000000011c309458: movslq %ebx,%rdi
  0x000000011c30945b: cmp    0xc(%rsi),%ebx
  0x000000011c30945e: jae    0x000000011c3095b5
  0x000000011c309464: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011c309469: movslq %ebx,%rcx
  0x000000011c30946c: cmp    0xc(%rax),%ebx
  0x000000011c30946f: jae    0x000000011c3095be
  0x000000011c309475: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000011c30947a: cmp    %ecx,%edi
  0x000000011c30947c: movabs $0x1124accf8,%rdi  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c309486: movabs $0x1e8,%rcx
  0x000000011c309490: je     0x000000011c3094a0
  0x000000011c309496: movabs $0x1f8,%rcx
  0x000000011c3094a0: mov    (%rdi,%rcx,1),%r8
  0x000000011c3094a4: lea    0x1(%r8),%r8
  0x000000011c3094a8: mov    %r8,(%rdi,%rcx,1)
  0x000000011c3094ac: jne    0x000000011c309542  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000011c3094b2: inc    %ebx
  0x000000011c3094b4: movabs $0x1124accf8,%rdi  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3094be: mov    0xe0(%rdi),%ecx
  0x000000011c3094c4: add    $0x8,%ecx
  0x000000011c3094c7: mov    %ecx,0xe0(%rdi)
  0x000000011c3094cd: movabs $0x1122c4618,%rdi  ;   {metadata({method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3094d7: and    $0xfff8,%ecx
  0x000000011c3094dd: cmp    $0x0,%ecx
  0x000000011c3094e0: je     0x000000011c3095c7  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000011c3094e6: test   %eax,-0xf8223ec(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c3094ec: movabs $0x1124accf8,%rdi  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3094f6: incl   0x208(%rdi)
  0x000000011c3094fc: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000011c3094ff: mov    %rdi,%rdx
  0x000000011c309502: dec    %edx
  0x000000011c309504: cmp    $0x0,%edi
  0x000000011c309507: movabs $0x1124accf8,%rdi  ;   {metadata(method data for {method} {0x00000001122c4618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c309511: movabs $0x1c8,%rcx
  0x000000011c30951b: je     0x000000011c30952b
  0x000000011c309521: movabs $0x1d8,%rcx
  0x000000011c30952b: mov    (%rdi,%rcx,1),%r8
  0x000000011c30952f: lea    0x1(%r8),%r8
  0x000000011c309533: mov    %r8,(%rdi,%rcx,1)
  0x000000011c309537: je     0x000000011c309553
  0x000000011c30953d: jmpq   0x000000011c309458  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000011c309542: mov    $0x0,%eax
  0x000000011c309547: add    $0x30,%rsp
  0x000000011c30954b: pop    %rbp
  0x000000011c30954c: test   %eax,-0xf822452(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c309552: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x000000011c309553: mov    $0x1,%eax
  0x000000011c309558: add    $0x30,%rsp
  0x000000011c30955c: pop    %rbp
  0x000000011c30955d: test   %eax,-0xf822463(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c309563: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x000000011c309564: mov    $0x0,%eax
  0x000000011c309569: add    $0x30,%rsp
  0x000000011c30956d: pop    %rbp
  0x000000011c30956e: test   %eax,-0xf822474(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c309574: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x000000011c309575: mov    $0x1,%eax
  0x000000011c30957a: add    $0x30,%rsp
  0x000000011c30957e: pop    %rbp
  0x000000011c30957f: test   %eax,-0xf822485(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c309585: retq   
  0x000000011c309586: mov    %rax,0x8(%rsp)
  0x000000011c30958b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c309593: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000011c309598: jmpq   0x000000011c3091be
  0x000000011c30959d: mov    %rdx,(%rsp)
  0x000000011c3095a1: callq  0x000000011c303cc0  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x000000011c3095a6: callq  0x000000011c301ac0  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000011c3095ab: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x000000011c3095b0: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000011c3095b5: mov    %rbx,(%rsp)
  0x000000011c3095b9: callq  0x000000011c274080  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000011c3095be: mov    %rbx,(%rsp)
  0x000000011c3095c2: callq  0x000000011c274080  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000011c3095c7: mov    %rdi,0x8(%rsp)
  0x000000011c3095cc: movq   $0x4a,(%rsp)
  0x000000011c3095d4: callq  0x000000011c306120  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000011c3095d9: jmpq   0x000000011c3094e6
  0x000000011c3095de: nop
  0x000000011c3095df: nop
  0x000000011c3095e0: mov    0x2a8(%r15),%rax
  0x000000011c3095e7: movabs $0x0,%r10
  0x000000011c3095f1: mov    %r10,0x2a8(%r15)
  0x000000011c3095f8: movabs $0x0,%r10
  0x000000011c309602: mov    %r10,0x2b0(%r15)
  0x000000011c309609: add    $0x30,%rsp
  0x000000011c30960d: pop    %rbp
  0x000000011c30960e: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c309613: hlt    
  0x000000011c309614: hlt    
  0x000000011c309615: hlt    
  0x000000011c309616: hlt    
  0x000000011c309617: hlt    
  0x000000011c309618: hlt    
  0x000000011c309619: hlt    
  0x000000011c30961a: hlt    
  0x000000011c30961b: hlt    
  0x000000011c30961c: hlt    
  0x000000011c30961d: hlt    
  0x000000011c30961e: hlt    
  0x000000011c30961f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c309620: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c309625: mov    %rsp,-0x28(%rsp)
  0x000000011c30962a: sub    $0x80,%rsp
  0x000000011c309631: mov    %rax,0x78(%rsp)
  0x000000011c309636: mov    %rcx,0x70(%rsp)
  0x000000011c30963b: mov    %rdx,0x68(%rsp)
  0x000000011c309640: mov    %rbx,0x60(%rsp)
  0x000000011c309645: mov    %rbp,0x50(%rsp)
  0x000000011c30964a: mov    %rsi,0x48(%rsp)
  0x000000011c30964f: mov    %rdi,0x40(%rsp)
  0x000000011c309654: mov    %r8,0x38(%rsp)
  0x000000011c309659: mov    %r9,0x30(%rsp)
  0x000000011c30965e: mov    %r10,0x28(%rsp)
  0x000000011c309663: mov    %r11,0x20(%rsp)
  0x000000011c309668: mov    %r12,0x18(%rsp)
  0x000000011c30966d: mov    %r13,0x10(%rsp)
  0x000000011c309672: mov    %r14,0x8(%rsp)
  0x000000011c309677: mov    %r15,(%rsp)
  0x000000011c30967b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c309685: movabs $0x11c309625,%rsi  ;   {internal_word}
  0x000000011c30968f: mov    %rsp,%rdx
  0x000000011c309692: and    $0xfffffffffffffff0,%rsp
  0x000000011c309696: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c30969b: hlt    
[Deopt Handler Code]
  0x000000011c30969c: movabs $0x11c30969c,%r10  ;   {section_word}
  0x000000011c3096a6: push   %r10
  0x000000011c3096a8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3096ad: hlt    
  0x000000011c3096ae: hlt    
  0x000000011c3096af: hlt    
<nmethod compile_id='5' compiler='C1' level='3' entry='0x000000011c309160' size='2504' address='0x000000011c308fd0' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1092' backedge_count='4393' iicount='1092' stamp='0.156'/>
<writer thread='15107'/>
<task_queued compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='20736' iicount='20736' stamp='0.156' comment='tiered' hot_count='20736'/>
<writer thread='9475'/>
<task_queued compile_id='7' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4480' iicount='4480' level='3' stamp='0.156' comment='tiered' hot_count='4480'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c307550:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001122d9778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c3076a0: mov    %eax,-0x14000(%rsp)
  0x000000011c3076a7: push   %rbp
  0x000000011c3076a8: sub    $0x30,%rsp
  0x000000011c3076ac: movabs $0x112556ed8,%rax  ;   {metadata(method data for {method} {0x00000001122d9778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000000011c3076b6: mov    0xdc(%rax),%esi
  0x000000011c3076bc: add    $0x8,%esi
  0x000000011c3076bf: mov    %esi,0xdc(%rax)
  0x000000011c3076c5: movabs $0x1122d9778,%rax  ;   {metadata({method} {0x00000001122d9778} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000000011c3076cf: and    $0x1ff8,%esi
  0x000000011c3076d5: cmp    $0x0,%esi
  0x000000011c3076d8: je     0x000000011c3076fb
  0x000000011c3076de: movabs $0x715580c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000011c3076e8: mov    0x74(%rax),%eax
  0x000000011c3076eb: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x000000011c3076ef: add    $0x30,%rsp
  0x000000011c3076f3: pop    %rbp
  0x000000011c3076f4: test   %eax,-0xf8205fa(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c3076fa: retq   
  0x000000011c3076fb: mov    %rax,0x8(%rsp)
  0x000000011c307700: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c307708: callq  0x000000011c306120  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x000000011c30770d: jmp    0x000000011c3076de
  0x000000011c30770f: nop
  0x000000011c307710: nop
  0x000000011c307711: mov    0x2a8(%r15),%rax
  0x000000011c307718: movabs $0x0,%r10
  0x000000011c307722: mov    %r10,0x2a8(%r15)
  0x000000011c307729: movabs $0x0,%r10
  0x000000011c307733: mov    %r10,0x2b0(%r15)
  0x000000011c30773a: add    $0x30,%rsp
  0x000000011c30773e: pop    %rbp
  0x000000011c30773f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c307744: hlt    
  0x000000011c307745: hlt    
  0x000000011c307746: hlt    
  0x000000011c307747: hlt    
  0x000000011c307748: hlt    
  0x000000011c307749: hlt    
  0x000000011c30774a: hlt    
  0x000000011c30774b: hlt    
  0x000000011c30774c: hlt    
  0x000000011c30774d: hlt    
  0x000000011c30774e: hlt    
  0x000000011c30774f: hlt    
  0x000000011c307750: hlt    
  0x000000011c307751: hlt    
  0x000000011c307752: hlt    
  0x000000011c307753: hlt    
  0x000000011c307754: hlt    
  0x000000011c307755: hlt    
  0x000000011c307756: hlt    
  0x000000011c307757: hlt    
  0x000000011c307758: hlt    
  0x000000011c307759: hlt    
  0x000000011c30775a: hlt    
  0x000000011c30775b: hlt    
  0x000000011c30775c: hlt    
  0x000000011c30775d: hlt    
  0x000000011c30775e: hlt    
  0x000000011c30775f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c307760: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c307765: mov    %rsp,-0x28(%rsp)
  0x000000011c30776a: sub    $0x80,%rsp
  0x000000011c307771: mov    %rax,0x78(%rsp)
  0x000000011c307776: mov    %rcx,0x70(%rsp)
  0x000000011c30777b: mov    %rdx,0x68(%rsp)
  0x000000011c307780: mov    %rbx,0x60(%rsp)
  0x000000011c307785: mov    %rbp,0x50(%rsp)
  0x000000011c30778a: mov    %rsi,0x48(%rsp)
  0x000000011c30778f: mov    %rdi,0x40(%rsp)
  0x000000011c307794: mov    %r8,0x38(%rsp)
  0x000000011c307799: mov    %r9,0x30(%rsp)
  0x000000011c30779e: mov    %r10,0x28(%rsp)
  0x000000011c3077a3: mov    %r11,0x20(%rsp)
  0x000000011c3077a8: mov    %r12,0x18(%rsp)
  0x000000011c3077ad: mov    %r13,0x10(%rsp)
  0x000000011c3077b2: mov    %r14,0x8(%rsp)
  0x000000011c3077b7: mov    %r15,(%rsp)
  0x000000011c3077bb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3077c5: movabs $0x11c307765,%rsi  ;   {internal_word}
  0x000000011c3077cf: mov    %rsp,%rdx
  0x000000011c3077d2: and    $0xfffffffffffffff0,%rsp
  0x000000011c3077d6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3077db: hlt    
[Deopt Handler Code]
  0x000000011c3077dc: movabs $0x11c3077dc,%r10  ;   {section_word}
  0x000000011c3077e6: push   %r10
  0x000000011c3077e8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3077ed: hlt    
  0x000000011c3077ee: hlt    
  0x000000011c3077ef: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x000000011c3076a0' size='768' address='0x000000011c307550' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='541' iicount='541' stamp='0.159'/>
<writer thread='9475'/>
<task_queued compile_id='8' method='java/lang/String getBytes (Ljava/lang/String;)[B' bytes='27' count='256' iicount='256' level='3' stamp='0.159' comment='tiered' hot_count='256'/>
<task_queued compile_id='9' method='java/lang/StringCoding encode (Ljava/lang/String;[CII)[B' bytes='120' count='256' iicount='256' level='3' stamp='0.159' comment='tiered' hot_count='256'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c307110:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c307280: mov    0x8(%rsi),%r10d
  0x000000011c307284: shl    $0x3,%r10
  0x000000011c307288: cmp    %rax,%r10
  0x000000011c30728b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c307291: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c30729c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3072a0: mov    %eax,-0x14000(%rsp)
  0x000000011c3072a7: push   %rbp
  0x000000011c3072a8: sub    $0x30,%rsp
  0x000000011c3072ac: movabs $0x1124371c0,%rdi  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c3072b6: mov    0xdc(%rdi),%ebx
  0x000000011c3072bc: add    $0x8,%ebx
  0x000000011c3072bf: mov    %ebx,0xdc(%rdi)
  0x000000011c3072c5: movabs $0x1122c0480,%rdi  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c3072cf: and    $0x1ff8,%ebx
  0x000000011c3072d5: cmp    $0x0,%ebx
  0x000000011c3072d8: je     0x000000011c3072f7
  0x000000011c3072de: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000011c3072e1: mov    %rsi,0x20(%rsp)
  0x000000011c3072e6: callq  0x000000011c301ce0  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x000000011c3072eb: add    $0x30,%rsp
  0x000000011c3072ef: pop    %rbp
  0x000000011c3072f0: test   %eax,-0xf8201f6(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c3072f6: retq   
  0x000000011c3072f7: mov    %rdi,0x8(%rsp)
  0x000000011c3072fc: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c307304: callq  0x000000011c306120  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x000000011c307309: jmp    0x000000011c3072de
  0x000000011c30730b: nop
  0x000000011c30730c: nop
  0x000000011c30730d: mov    0x2a8(%r15),%rax
  0x000000011c307314: movabs $0x0,%r10
  0x000000011c30731e: mov    %r10,0x2a8(%r15)
  0x000000011c307325: movabs $0x0,%r10
  0x000000011c30732f: mov    %r10,0x2b0(%r15)
  0x000000011c307336: add    $0x30,%rsp
  0x000000011c30733a: pop    %rbp
  0x000000011c30733b: jmpq   0x000000011c274520  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000011c307340: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c307345: mov    %rsp,-0x28(%rsp)
  0x000000011c30734a: sub    $0x80,%rsp
  0x000000011c307351: mov    %rax,0x78(%rsp)
  0x000000011c307356: mov    %rcx,0x70(%rsp)
  0x000000011c30735b: mov    %rdx,0x68(%rsp)
  0x000000011c307360: mov    %rbx,0x60(%rsp)
  0x000000011c307365: mov    %rbp,0x50(%rsp)
  0x000000011c30736a: mov    %rsi,0x48(%rsp)
  0x000000011c30736f: mov    %rdi,0x40(%rsp)
  0x000000011c307374: mov    %r8,0x38(%rsp)
  0x000000011c307379: mov    %r9,0x30(%rsp)
  0x000000011c30737e: mov    %r10,0x28(%rsp)
  0x000000011c307383: mov    %r11,0x20(%rsp)
  0x000000011c307388: mov    %r12,0x18(%rsp)
  0x000000011c30738d: mov    %r13,0x10(%rsp)
  0x000000011c307392: mov    %r14,0x8(%rsp)
  0x000000011c307397: mov    %r15,(%rsp)
  0x000000011c30739b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3073a5: movabs $0x11c307345,%rsi  ;   {internal_word}
  0x000000011c3073af: mov    %rsp,%rdx
  0x000000011c3073b2: and    $0xfffffffffffffff0,%rsp
  0x000000011c3073b6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3073bb: hlt    
[Deopt Handler Code]
  0x000000011c3073bc: movabs $0x11c3073bc,%r10  ;   {section_word}
  0x000000011c3073c6: push   %r10
  0x000000011c3073c8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3073cd: hlt    
  0x000000011c3073ce: hlt    
  0x000000011c3073cf: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x000000011c307280' size='832' address='0x000000011c307110' relocation_offset='296' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4491' iicount='4491' stamp='0.161'/>
<writer thread='9475'/>
<task_queued compile_id='10' method='java/lang/String length ()I' bytes='6' count='2432' iicount='2432' level='3' stamp='0.161' comment='tiered' hot_count='2432'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c308b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c3c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c308cc0: mov    0x8(%rsi),%r10d
  0x000000011c308cc4: shl    $0x3,%r10
  0x000000011c308cc8: cmp    %rax,%r10
  0x000000011c308ccb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c308cd1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c308cdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c308ce0: mov    %eax,-0x14000(%rsp)
  0x000000011c308ce7: push   %rbp
  0x000000011c308ce8: sub    $0x30,%rsp
  0x000000011c308cec: movabs $0x112493fa0,%rax  ;   {metadata(method data for {method} {0x00000001122c3c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c308cf6: mov    0xdc(%rax),%edi
  0x000000011c308cfc: add    $0x8,%edi
  0x000000011c308cff: mov    %edi,0xdc(%rax)
  0x000000011c308d05: movabs $0x1122c3c60,%rax  ;   {metadata({method} {0x00000001122c3c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c308d0f: and    $0x1ff8,%edi
  0x000000011c308d15: cmp    $0x0,%edi
  0x000000011c308d18: je     0x000000011c308d34  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x000000011c308d1e: mov    0xc(%rsi),%eax
  0x000000011c308d21: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000011c308d25: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x000000011c308d48
  0x000000011c308d28: add    $0x30,%rsp
  0x000000011c308d2c: pop    %rbp
  0x000000011c308d2d: test   %eax,-0xf821c33(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c308d33: retq   
  0x000000011c308d34: mov    %rax,0x8(%rsp)
  0x000000011c308d39: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c308d41: callq  0x000000011c306120  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x000000011c308d46: jmp    0x000000011c308d1e
  0x000000011c308d48: callq  0x000000011c301ac0  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000011c308d4d: nop
  0x000000011c308d4e: nop
  0x000000011c308d4f: mov    0x2a8(%r15),%rax
  0x000000011c308d56: movabs $0x0,%r10
  0x000000011c308d60: mov    %r10,0x2a8(%r15)
  0x000000011c308d67: movabs $0x0,%r10
  0x000000011c308d71: mov    %r10,0x2b0(%r15)
  0x000000011c308d78: add    $0x30,%rsp
  0x000000011c308d7c: pop    %rbp
  0x000000011c308d7d: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c308d82: hlt    
  0x000000011c308d83: hlt    
  0x000000011c308d84: hlt    
  0x000000011c308d85: hlt    
  0x000000011c308d86: hlt    
  0x000000011c308d87: hlt    
  0x000000011c308d88: hlt    
  0x000000011c308d89: hlt    
  0x000000011c308d8a: hlt    
  0x000000011c308d8b: hlt    
  0x000000011c308d8c: hlt    
  0x000000011c308d8d: hlt    
  0x000000011c308d8e: hlt    
  0x000000011c308d8f: hlt    
  0x000000011c308d90: hlt    
  0x000000011c308d91: hlt    
  0x000000011c308d92: hlt    
  0x000000011c308d93: hlt    
  0x000000011c308d94: hlt    
  0x000000011c308d95: hlt    
  0x000000011c308d96: hlt    
  0x000000011c308d97: hlt    
  0x000000011c308d98: hlt    
  0x000000011c308d99: hlt    
  0x000000011c308d9a: hlt    
  0x000000011c308d9b: hlt    
  0x000000011c308d9c: hlt    
  0x000000011c308d9d: hlt    
  0x000000011c308d9e: hlt    
  0x000000011c308d9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c308da0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c308da5: mov    %rsp,-0x28(%rsp)
  0x000000011c308daa: sub    $0x80,%rsp
  0x000000011c308db1: mov    %rax,0x78(%rsp)
  0x000000011c308db6: mov    %rcx,0x70(%rsp)
  0x000000011c308dbb: mov    %rdx,0x68(%rsp)
  0x000000011c308dc0: mov    %rbx,0x60(%rsp)
  0x000000011c308dc5: mov    %rbp,0x50(%rsp)
  0x000000011c308dca: mov    %rsi,0x48(%rsp)
  0x000000011c308dcf: mov    %rdi,0x40(%rsp)
  0x000000011c308dd4: mov    %r8,0x38(%rsp)
  0x000000011c308dd9: mov    %r9,0x30(%rsp)
  0x000000011c308dde: mov    %r10,0x28(%rsp)
  0x000000011c308de3: mov    %r11,0x20(%rsp)
  0x000000011c308de8: mov    %r12,0x18(%rsp)
  0x000000011c308ded: mov    %r13,0x10(%rsp)
  0x000000011c308df2: mov    %r14,0x8(%rsp)
  0x000000011c308df7: mov    %r15,(%rsp)
  0x000000011c308dfb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c308e05: movabs $0x11c308da5,%rsi  ;   {internal_word}
  0x000000011c308e0f: mov    %rsp,%rdx
  0x000000011c308e12: and    $0xfffffffffffffff0,%rsp
  0x000000011c308e16: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c308e1b: hlt    
[Deopt Handler Code]
  0x000000011c308e1c: movabs $0x11c308e1c,%r10  ;   {section_word}
  0x000000011c308e26: push   %r10
  0x000000011c308e28: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c308e2d: hlt    
  0x000000011c308e2e: hlt    
  0x000000011c308e2f: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x000000011c308cc0' size='920' address='0x000000011c308b50' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='2509' iicount='2509' stamp='0.165'/>
<writer thread='9475'/>
Decoding compiled method 0x000000011c3087d0:
Code:
[Entry Point]
  # {method} {0x00000001122d9930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000000011c308940: mov    0x8(%rsi),%r10d
  0x000000011c308944: shl    $0x3,%r10
  0x000000011c308948: cmp    %r10,%rax
  0x000000011c30894b: je     0x000000011c308958
  0x000000011c308951: jmpq   0x000000011c24be60  ;   {runtime_call}
  0x000000011c308956: xchg   %ax,%ax
[Verified Entry Point]
  0x000000011c308958: mov    %eax,-0x14000(%rsp)
  0x000000011c30895f: push   %rbp
  0x000000011c308960: mov    %rsp,%rbp
  0x000000011c308963: sub    $0x50,%rsp
  0x000000011c308967: mov    %r9,(%rsp)
  0x000000011c30896b: mov    %r8,%r9
  0x000000011c30896e: mov    %rcx,0x18(%rsp)
  0x000000011c308973: cmp    $0x0,%rcx
  0x000000011c308977: lea    0x18(%rsp),%r8
  0x000000011c30897c: cmove  0x18(%rsp),%r8
  0x000000011c308982: mov    %rdx,%rcx
  0x000000011c308985: mov    %rsi,0x8(%rsp)
  0x000000011c30898a: cmp    $0x0,%rsi
  0x000000011c30898e: lea    0x8(%rsp),%rdx
  0x000000011c308993: cmove  0x8(%rsp),%rdx
  0x000000011c308999: movabs $0x715580c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000011c3089a3: mov    %r14,0x38(%rsp)
  0x000000011c3089a8: lea    0x38(%rsp),%r14
  0x000000011c3089ad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x000000011c3089b0: movabs $0x11c3089b0,%r10  ;   {section_word}
  0x000000011c3089ba: mov    %r10,0x1e0(%r15)
  0x000000011c3089c1: mov    %rsp,0x1d8(%r15)
  0x000000011c3089c8: cmpb   $0x0,-0xd618785(%rip)        # 0x000000010ecf024a
                                                ;   {external_word}
  0x000000011c3089cf: je     0x000000011c308a13
  0x000000011c3089d5: push   %rsi
  0x000000011c3089d6: push   %rdx
  0x000000011c3089d7: push   %rcx
  0x000000011c3089d8: push   %r8
  0x000000011c3089da: push   %r9
  0x000000011c3089dc: movabs $0x1122d9930,%rsi  ;   {metadata({method} {0x00000001122d9930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000011c3089e6: mov    %r15,%rdi
  0x000000011c3089e9: test   $0xf,%esp
  0x000000011c3089ef: je     0x000000011c308a07
  0x000000011c3089f5: sub    $0x8,%rsp
  0x000000011c3089f9: callq  0x000000010e8ebfca  ;   {runtime_call}
  0x000000011c3089fe: add    $0x8,%rsp
  0x000000011c308a02: jmpq   0x000000011c308a0c
  0x000000011c308a07: callq  0x000000010e8ebfca  ;   {runtime_call}
  0x000000011c308a0c: pop    %r9
  0x000000011c308a0e: pop    %r8
  0x000000011c308a10: pop    %rcx
  0x000000011c308a11: pop    %rdx
  0x000000011c308a12: pop    %rsi
  0x000000011c308a13: lea    0x1f8(%r15),%rdi
  0x000000011c308a1a: movl   $0x4,0x270(%r15)
  0x000000011c308a25: callq  0x000000010e745e40  ;   {runtime_call}
  0x000000011c308a2a: vzeroupper 
  0x000000011c308a2d: movl   $0x5,0x270(%r15)
  0x000000011c308a38: lock addl $0x0,(%rsp)
  0x000000011c308a3d: cmpl   $0x0,-0xd60de47(%rip)        # 0x000000010ecfac00
                                                ;   {external_word}
  0x000000011c308a47: jne    0x000000011c308a5b
  0x000000011c308a4d: cmpl   $0x0,0x30(%r15)
  0x000000011c308a55: je     0x000000011c308a74
  0x000000011c308a5b: mov    %r15,%rdi
  0x000000011c308a5e: mov    %rsp,%r12
  0x000000011c308a61: sub    $0x0,%rsp
  0x000000011c308a65: and    $0xfffffffffffffff0,%rsp
  0x000000011c308a69: callq  0x000000010e96ed0a  ;   {runtime_call}
  0x000000011c308a6e: mov    %r12,%rsp
  0x000000011c308a71: xor    %r12,%r12
  0x000000011c308a74: movl   $0x8,0x270(%r15)
  0x000000011c308a7f: cmpl   $0x1,0x29c(%r15)
  0x000000011c308a8a: je     0x000000011c308b12
  0x000000011c308a90: cmpb   $0x0,-0xd61884d(%rip)        # 0x000000010ecf024a
                                                ;   {external_word}
  0x000000011c308a97: je     0x000000011c308acd
  0x000000011c308a9d: movabs $0x1122d9930,%rsi  ;   {metadata({method} {0x00000001122d9930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000011c308aa7: mov    %r15,%rdi
  0x000000011c308aaa: test   $0xf,%esp
  0x000000011c308ab0: je     0x000000011c308ac8
  0x000000011c308ab6: sub    $0x8,%rsp
  0x000000011c308aba: callq  0x000000010e8ebf3c  ;   {runtime_call}
  0x000000011c308abf: add    $0x8,%rsp
  0x000000011c308ac3: jmpq   0x000000011c308acd
  0x000000011c308ac8: callq  0x000000010e8ebf3c  ;   {runtime_call}
  0x000000011c308acd: movabs $0x0,%r10
  0x000000011c308ad7: mov    %r10,0x1d8(%r15)
  0x000000011c308ade: movabs $0x0,%r10
  0x000000011c308ae8: mov    %r10,0x1e0(%r15)
  0x000000011c308aef: mov    0x38(%r15),%rcx
  0x000000011c308af3: movl   $0x0,0x100(%rcx)
  0x000000011c308afd: leaveq 
  0x000000011c308afe: cmpq   $0x0,0x8(%r15)
  0x000000011c308b06: jne    0x000000011c308b0d
  0x000000011c308b0c: retq   
  0x000000011c308b0d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000011c308b12: mov    %rsp,%r12
  0x000000011c308b15: sub    $0x0,%rsp
  0x000000011c308b19: and    $0xfffffffffffffff0,%rsp
  0x000000011c308b1d: callq  0x000000010e8e9d10  ;   {runtime_call}
  0x000000011c308b22: mov    %r12,%rsp
  0x000000011c308b25: xor    %r12,%r12
  0x000000011c308b28: jmpq   0x000000011c308a90
  0x000000011c308b2d: hlt    
  0x000000011c308b2e: hlt    
  0x000000011c308b2f: hlt    
<nmethod compile_id='11' compile_kind='c2n' level='0' entry='0x000000011c308940' size='864' address='0x000000011c3087d0' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='3200' iicount='3200' stamp='0.168'/>
<task_queued compile_id='12' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='235' backedge_count='17408' iicount='235' level='3' stamp='0.168' comment='tiered' hot_count='235'/>
<task_queued compile_id='13' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='896' iicount='896' level='3' stamp='0.168' comment='tiered' hot_count='896'/>
<task_queued compile_id='14' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.168' comment='tiered' hot_count='256'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c315ed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c43d8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011c316060: mov    0x8(%rsi),%r10d
  0x000000011c316064: shl    $0x3,%r10
  0x000000011c316068: cmp    %rax,%r10
  0x000000011c31606b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c316071: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c31607c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c316080: mov    %eax,-0x14000(%rsp)
  0x000000011c316087: push   %rbp
  0x000000011c316088: sub    $0x40,%rsp
  0x000000011c31608c: movabs $0x11256c440,%rcx  ;   {metadata(method data for {method} {0x00000001122c43d8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x000000011c316096: mov    0xdc(%rcx),%r8d
  0x000000011c31609d: add    $0x8,%r8d
  0x000000011c3160a1: mov    %r8d,0xdc(%rcx)
  0x000000011c3160a8: movabs $0x1122c43d8,%rcx  ;   {metadata({method} {0x00000001122c43d8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3160b2: and    $0x1ff8,%r8d
  0x000000011c3160b9: cmp    $0x0,%r8d
  0x000000011c3160bd: je     0x000000011c3161ae  ;*aload_1
                                                ; - java.lang.String::getBytes@0 (line 917)

  0x000000011c3160c3: cmp    $0x0,%rdx
  0x000000011c3160c7: movabs $0x11256c440,%rcx  ;   {metadata(method data for {method} {0x00000001122c43d8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3160d1: movabs $0x108,%r8
  0x000000011c3160db: jne    0x000000011c3160eb
  0x000000011c3160e1: movabs $0x118,%r8
  0x000000011c3160eb: mov    (%rcx,%r8,1),%rdi
  0x000000011c3160ef: lea    0x1(%rdi),%rdi
  0x000000011c3160f3: mov    %rdi,(%rcx,%r8,1)
  0x000000011c3160f7: je     0x000000011c316138  ;*ifnonnull
                                                ; - java.lang.String::getBytes@1 (line 917)

  0x000000011c3160fd: mov    0xc(%rsi),%ecx
  0x000000011c316100: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::getBytes@14 (line 918)

  0x000000011c316104: mov    0xc(%rcx),%r8d     ;*arraylength
                                                ; - java.lang.String::getBytes@22 (line 918)
                                                ; implicit exception: dispatches to 0x000000011c3161c5
  0x000000011c316108: movabs $0x11256c440,%rsi  ;   {metadata(method data for {method} {0x00000001122c43d8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x000000011c316112: addq   $0x1,0x138(%rsi)
  0x000000011c31611a: mov    %rdx,%rsi
  0x000000011c31611d: mov    %rcx,%rdx
  0x000000011c316120: mov    $0x0,%ecx          ;*invokestatic encode
                                                ; - java.lang.String::getBytes@23 (line 918)

  0x000000011c316125: nop
  0x000000011c316126: nop
  0x000000011c316127: callq  0x000000011c24c520  ; OopMap{off=204}
                                                ;*invokestatic encode
                                                ; - java.lang.String::getBytes@23 (line 918)
                                                ;   {static_call}
  0x000000011c31612c: add    $0x40,%rsp
  0x000000011c316130: pop    %rbp
  0x000000011c316131: test   %eax,-0xf82f037(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c316137: retq                      ;*areturn
                                                ; - java.lang.String::getBytes@26 (line 918)

  0x000000011c316138: jmpq   0x000000011c3161d9  ;   {no_reloc}
  0x000000011c31613d: add    %al,(%rax)
  0x000000011c31613f: add    %al,(%rax)
  0x000000011c316141: add    %cl,-0x75(%rcx)
  0x000000011c316144: rex.RXB (bad) 
  0x000000011c316146: lea    0x20(%rax),%rdi
  0x000000011c31614a: cmp    0x70(%r15),%rdi
  0x000000011c31614e: ja     0x000000011c3161e3
  0x000000011c316154: mov    %rdi,0x60(%r15)
  0x000000011c316158: mov    0xa8(%rdx),%rcx
  0x000000011c31615f: mov    %rcx,(%rax)
  0x000000011c316162: mov    %rdx,%rcx
  0x000000011c316165: shr    $0x3,%rcx
  0x000000011c316169: mov    %ecx,0x8(%rax)
  0x000000011c31616c: xor    %rcx,%rcx
  0x000000011c31616f: mov    %ecx,0xc(%rax)
  0x000000011c316172: xor    %rcx,%rcx
  0x000000011c316175: mov    %rcx,0x10(%rax)
  0x000000011c316179: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.String::getBytes@4 (line 917)

  0x000000011c31617d: mov    %rax,%rsi
  0x000000011c316180: movabs $0x11256c440,%rdi  ;   {metadata(method data for {method} {0x00000001122c43d8} &apos;getBytes&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31618a: addq   $0x1,0x128(%rdi)
  0x000000011c316192: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getBytes@8 (line 917)

  0x000000011c316195: mov    %rax,0x28(%rsp)
  0x000000011c31619a: nop
  0x000000011c31619b: nop
  0x000000011c31619c: nop
  0x000000011c31619d: nop
  0x000000011c31619e: nop
  0x000000011c31619f: callq  0x000000011c24c0a0  ; OopMap{[40]=Oop off=324}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getBytes@8 (line 917)
                                                ;   {optimized virtual_call}
  0x000000011c3161a4: mov    0x28(%rsp),%rax
  0x000000011c3161a9: jmpq   0x000000011c316218
  0x000000011c3161ae: mov    %rcx,0x8(%rsp)
  0x000000011c3161b3: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3161bb: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=352}
                                                ;*synchronization entry
                                                ; - java.lang.String::getBytes@-1 (line 917)
                                                ;   {runtime_call}
  0x000000011c3161c0: jmpq   0x000000011c3160c3
  0x000000011c3161c5: callq  0x000000011c301ac0  ; OopMap{rdx=Oop rcx=Oop off=362}
                                                ;*arraylength
                                                ; - java.lang.String::getBytes@22 (line 918)
                                                ;   {runtime_call}
  0x000000011c3161ca: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c3161d4: mov    $0xa050f00,%eax
  0x000000011c3161d9: callq  0x000000011c305120  ; OopMap{off=382}
                                                ;*new  ; - java.lang.String::getBytes@4 (line 917)
                                                ;   {runtime_call}
  0x000000011c3161de: jmpq   0x000000011c316138
  0x000000011c3161e3: mov    %rdx,%rdx
  0x000000011c3161e6: callq  0x000000011c302220  ; OopMap{off=395}
                                                ;*new  ; - java.lang.String::getBytes@4 (line 917)
                                                ;   {runtime_call}
  0x000000011c3161eb: jmp    0x000000011c31617d
  0x000000011c3161ed: nop
  0x000000011c3161ee: nop
  0x000000011c3161ef: mov    0x2a8(%r15),%rax
  0x000000011c3161f6: movabs $0x0,%r10
  0x000000011c316200: mov    %r10,0x2a8(%r15)
  0x000000011c316207: movabs $0x0,%r10
  0x000000011c316211: mov    %r10,0x2b0(%r15)
  0x000000011c316218: add    $0x40,%rsp
  0x000000011c31621c: pop    %rbp
  0x000000011c31621d: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c316222: hlt    
  0x000000011c316223: hlt    
  0x000000011c316224: hlt    
  0x000000011c316225: hlt    
  0x000000011c316226: hlt    
  0x000000011c316227: hlt    
  0x000000011c316228: hlt    
  0x000000011c316229: hlt    
  0x000000011c31622a: hlt    
  0x000000011c31622b: hlt    
  0x000000011c31622c: hlt    
  0x000000011c31622d: hlt    
  0x000000011c31622e: hlt    
  0x000000011c31622f: hlt    
  0x000000011c316230: hlt    
  0x000000011c316231: hlt    
  0x000000011c316232: hlt    
  0x000000011c316233: hlt    
  0x000000011c316234: hlt    
  0x000000011c316235: hlt    
  0x000000011c316236: hlt    
  0x000000011c316237: hlt    
  0x000000011c316238: hlt    
  0x000000011c316239: hlt    
  0x000000011c31623a: hlt    
  0x000000011c31623b: hlt    
  0x000000011c31623c: hlt    
  0x000000011c31623d: hlt    
  0x000000011c31623e: hlt    
  0x000000011c31623f: hlt    
[Stub Code]
  0x000000011c316240: nop                       ;   {no_reloc}
  0x000000011c316241: nop
  0x000000011c316242: nop
  0x000000011c316243: nop
  0x000000011c316244: nop
  0x000000011c316245: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31624f: jmpq   0x000000011c31624f  ;   {runtime_call}
  0x000000011c316254: nop
  0x000000011c316255: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31625f: jmpq   0x000000011c31625f  ;   {runtime_call}
[Exception Handler]
  0x000000011c316264: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c316269: mov    %rsp,-0x28(%rsp)
  0x000000011c31626e: sub    $0x80,%rsp
  0x000000011c316275: mov    %rax,0x78(%rsp)
  0x000000011c31627a: mov    %rcx,0x70(%rsp)
  0x000000011c31627f: mov    %rdx,0x68(%rsp)
  0x000000011c316284: mov    %rbx,0x60(%rsp)
  0x000000011c316289: mov    %rbp,0x50(%rsp)
  0x000000011c31628e: mov    %rsi,0x48(%rsp)
  0x000000011c316293: mov    %rdi,0x40(%rsp)
  0x000000011c316298: mov    %r8,0x38(%rsp)
  0x000000011c31629d: mov    %r9,0x30(%rsp)
  0x000000011c3162a2: mov    %r10,0x28(%rsp)
  0x000000011c3162a7: mov    %r11,0x20(%rsp)
  0x000000011c3162ac: mov    %r12,0x18(%rsp)
  0x000000011c3162b1: mov    %r13,0x10(%rsp)
  0x000000011c3162b6: mov    %r14,0x8(%rsp)
  0x000000011c3162bb: mov    %r15,(%rsp)
  0x000000011c3162bf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3162c9: movabs $0x11c316269,%rsi  ;   {internal_word}
  0x000000011c3162d3: mov    %rsp,%rdx
  0x000000011c3162d6: and    $0xfffffffffffffff0,%rsp
  0x000000011c3162da: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3162df: hlt    
[Deopt Handler Code]
  0x000000011c3162e0: movabs $0x11c3162e0,%r10  ;   {section_word}
  0x000000011c3162ea: push   %r10
  0x000000011c3162ec: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3162f1: hlt    
  0x000000011c3162f2: hlt    
  0x000000011c3162f3: hlt    
  0x000000011c3162f4: hlt    
  0x000000011c3162f5: hlt    
  0x000000011c3162f6: hlt    
  0x000000011c3162f7: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x000000011c316060' size='1448' address='0x000000011c315ed0' relocation_offset='296' insts_offset='400' stub_offset='880' scopes_data_offset='1072' scopes_pcs_offset='1168' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String getBytes (Ljava/lang/String;)[B' bytes='27' count='260' iicount='260' stamp='0.174'/>
Decoding compiled method 0x000000011c314c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;
  # this:     rsi:rsi   = &apos;java/io/UnixFileSystem&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000011c314e20: mov    0x8(%rsi),%r10d
  0x000000011c314e24: shl    $0x3,%r10
  0x000000011c314e28: cmp    %rax,%r10
  0x000000011c314e2b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c314e31: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c314e3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c314e40: mov    %eax,-0x14000(%rsp)
  0x000000011c314e47: push   %rbp
  0x000000011c314e48: sub    $0x80,%rsp
  0x000000011c314e4f: movabs $0x1124d9e70,%rcx  ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c314e59: mov    0xdc(%rcx),%r8d
  0x000000011c314e60: add    $0x8,%r8d
  0x000000011c314e64: mov    %r8d,0xdc(%rcx)
  0x000000011c314e6b: movabs $0x112427658,%rcx  ;   {metadata({method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c314e75: and    $0x1ff8,%r8d
  0x000000011c314e7c: cmp    $0x0,%r8d
  0x000000011c314e80: je     0x000000011c3152d6  ;*aload_1
                                                ; - java.io.UnixFileSystem::normalize@0 (line 84)

  0x000000011c314e86: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000011c3152ed
  0x000000011c314e89: mov    %rdx,%rcx
  0x000000011c314e8c: movabs $0x1124d9e70,%r8   ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c314e96: mov    0x8(%rcx),%ecx
  0x000000011c314e99: shl    $0x3,%rcx
  0x000000011c314e9d: cmp    0x110(%r8),%rcx
  0x000000011c314ea4: jne    0x000000011c314eb3
  0x000000011c314ea6: addq   $0x1,0x118(%r8)
  0x000000011c314eae: jmpq   0x000000011c314f19
  0x000000011c314eb3: cmp    0x120(%r8),%rcx
  0x000000011c314eba: jne    0x000000011c314ec9
  0x000000011c314ebc: addq   $0x1,0x128(%r8)
  0x000000011c314ec4: jmpq   0x000000011c314f19
  0x000000011c314ec9: cmpq   $0x0,0x110(%r8)
  0x000000011c314ed4: jne    0x000000011c314eed
  0x000000011c314ed6: mov    %rcx,0x110(%r8)
  0x000000011c314edd: movq   $0x1,0x118(%r8)
  0x000000011c314ee8: jmpq   0x000000011c314f19
  0x000000011c314eed: cmpq   $0x0,0x120(%r8)
  0x000000011c314ef8: jne    0x000000011c314f11
  0x000000011c314efa: mov    %rcx,0x120(%r8)
  0x000000011c314f01: movq   $0x1,0x128(%r8)
  0x000000011c314f0c: jmpq   0x000000011c314f19
  0x000000011c314f11: addq   $0x1,0x108(%r8)
  0x000000011c314f19: movabs $0x112493fa0,%rcx  ;   {metadata(method data for {method} {0x00000001122c3c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c314f23: mov    0xdc(%rcx),%r8d
  0x000000011c314f2a: add    $0x8,%r8d
  0x000000011c314f2e: mov    %r8d,0xdc(%rcx)
  0x000000011c314f35: movabs $0x1122c3c60,%rcx  ;   {metadata({method} {0x00000001122c3c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c314f3f: and    $0x7ffff8,%r8d
  0x000000011c314f46: cmp    $0x0,%r8d
  0x000000011c314f4a: je     0x000000011c3152f2
  0x000000011c314f50: mov    0xc(%rdx),%ecx
  0x000000011c314f53: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)

  0x000000011c314f57: mov    0xc(%rcx),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000011c315309
  0x000000011c314f5a: mov    $0x0,%ebx
  0x000000011c314f5f: mov    $0x0,%ecx          ;*iload
                                                ; - java.io.UnixFileSystem::normalize@10 (line 86)

  0x000000011c314f64: nopl   0x0(%rax)
  0x000000011c314f68: cmp    %edi,%ebx
  0x000000011c314f6a: movabs $0x1124d9e70,%r8   ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c314f74: movabs $0x138,%rax
  0x000000011c314f7e: jge    0x000000011c314f8e
  0x000000011c314f84: movabs $0x148,%rax
  0x000000011c314f8e: mov    (%r8,%rax,1),%r9
  0x000000011c314f92: lea    0x1(%r9),%r9
  0x000000011c314f96: mov    %r9,(%r8,%rax,1)
  0x000000011c314f9a: jge    0x000000011c3151c1  ;*if_icmpge
                                                ; - java.io.UnixFileSystem::normalize@13 (line 86)

  0x000000011c314fa0: mov    %rdx,%r8
  0x000000011c314fa3: movabs $0x1124d9e70,%rax  ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c314fad: mov    0x8(%r8),%r8d
  0x000000011c314fb1: shl    $0x3,%r8
  0x000000011c314fb5: cmp    0x160(%rax),%r8
  0x000000011c314fbc: jne    0x000000011c314fcb
  0x000000011c314fbe: addq   $0x1,0x168(%rax)
  0x000000011c314fc6: jmpq   0x000000011c315031
  0x000000011c314fcb: cmp    0x170(%rax),%r8
  0x000000011c314fd2: jne    0x000000011c314fe1
  0x000000011c314fd4: addq   $0x1,0x178(%rax)
  0x000000011c314fdc: jmpq   0x000000011c315031
  0x000000011c314fe1: cmpq   $0x0,0x160(%rax)
  0x000000011c314fec: jne    0x000000011c315005
  0x000000011c314fee: mov    %r8,0x160(%rax)
  0x000000011c314ff5: movq   $0x1,0x168(%rax)
  0x000000011c315000: jmpq   0x000000011c315031
  0x000000011c315005: cmpq   $0x0,0x170(%rax)
  0x000000011c315010: jne    0x000000011c315029
  0x000000011c315012: mov    %r8,0x170(%rax)
  0x000000011c315019: movq   $0x1,0x178(%rax)
  0x000000011c315024: jmpq   0x000000011c315031
  0x000000011c315029: addq   $0x1,0x158(%rax)
  0x000000011c315031: movabs $0x112445c18,%r8   ;   {metadata(method data for {method} {0x00000001122c3db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31503b: mov    0xdc(%r8),%eax
  0x000000011c315042: add    $0x8,%eax
  0x000000011c315045: mov    %eax,0xdc(%r8)
  0x000000011c31504c: movabs $0x1122c3db0,%r8   ;   {metadata({method} {0x00000001122c3db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011c315056: and    $0x7ffff8,%eax
  0x000000011c31505c: cmp    $0x0,%eax
  0x000000011c31505f: je     0x000000011c31530e
  0x000000011c315065: cmp    $0x0,%ebx
  0x000000011c315068: movabs $0x112445c18,%r8   ;   {metadata(method data for {method} {0x00000001122c3db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011c315072: movabs $0x108,%rax
  0x000000011c31507c: jl     0x000000011c31508c
  0x000000011c315082: movabs $0x118,%rax
  0x000000011c31508c: mov    (%r8,%rax,1),%r9
  0x000000011c315090: lea    0x1(%r9),%r9
  0x000000011c315094: mov    %r9,(%r8,%rax,1)
  0x000000011c315098: jl     0x000000011c31527b  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000011c31509e: mov    0xc(%rdx),%r8d
  0x000000011c3150a2: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000011c3150a6: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ; implicit exception: dispatches to 0x000000011c315325
  0x000000011c3150aa: cmp    %eax,%ebx
  0x000000011c3150ac: movabs $0x112445c18,%rax  ;   {metadata(method data for {method} {0x00000001122c3db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3150b6: movabs $0x128,%r9
  0x000000011c3150c0: jl     0x000000011c3150d0
  0x000000011c3150c6: movabs $0x138,%r9
  0x000000011c3150d0: mov    (%rax,%r9,1),%r11
  0x000000011c3150d4: lea    0x1(%r11),%r11
  0x000000011c3150d8: mov    %r11,(%rax,%r9,1)
  0x000000011c3150dc: jge    0x000000011c31527b  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000011c3150e2: movslq %ebx,%rax
  0x000000011c3150e5: cmp    0xc(%r8),%ebx
  0x000000011c3150e9: jae    0x000000011c31532a
  0x000000011c3150ef: movzwl 0x10(%r8,%rax,2),%r8d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000011c3150f5: and    $0xffff,%r8d
  0x000000011c3150fc: cmp    $0x2f,%ecx
  0x000000011c3150ff: movabs $0x1124d9e70,%rcx  ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c315109: movabs $0x188,%rax
  0x000000011c315113: jne    0x000000011c315123
  0x000000011c315119: movabs $0x198,%rax
  0x000000011c315123: mov    (%rcx,%rax,1),%r9
  0x000000011c315127: lea    0x1(%r9),%r9
  0x000000011c31512b: mov    %r9,(%rcx,%rax,1)
  0x000000011c31512f: jne    0x000000011c31516f  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@27 (line 88)

  0x000000011c315135: cmp    $0x2f,%r8d
  0x000000011c315139: movabs $0x1124d9e70,%rcx  ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c315143: movabs $0x1a8,%rax
  0x000000011c31514d: jne    0x000000011c31515d
  0x000000011c315153: movabs $0x1b8,%rax
  0x000000011c31515d: mov    (%rcx,%rax,1),%r9
  0x000000011c315161: lea    0x1(%r9),%r9
  0x000000011c315165: mov    %r9,(%rcx,%rax,1)
  0x000000011c315169: je     0x000000011c315245  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@34 (line 88)

  0x000000011c31516f: inc    %ebx
  0x000000011c315171: movabs $0x1124d9e70,%rcx  ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c31517b: mov    0xe0(%rcx),%eax
  0x000000011c315181: add    $0x8,%eax
  0x000000011c315184: mov    %eax,0xe0(%rcx)
  0x000000011c31518a: movabs $0x112427658,%rcx  ;   {metadata({method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c315194: and    $0xfff8,%eax
  0x000000011c31519a: cmp    $0x0,%eax
  0x000000011c31519d: je     0x000000011c315333  ; OopMap{rsi=Oop rdx=Oop off=899}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000011c3151a3: test   %eax,-0xf82e0a9(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c3151a9: movabs $0x1124d9e70,%rcx  ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c3151b3: incl   0x1d8(%rcx)
  0x000000011c3151b9: mov    %r8,%rcx
  0x000000011c3151bc: jmpq   0x000000011c314f68  ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000011c3151c1: cmp    $0x2f,%ecx
  0x000000011c3151c4: movabs $0x1124d9e70,%rcx  ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c3151ce: movabs $0x1f0,%r8
  0x000000011c3151d8: jne    0x000000011c3151e8
  0x000000011c3151de: movabs $0x200,%r8
  0x000000011c3151e8: mov    (%rcx,%r8,1),%rbx
  0x000000011c3151ec: lea    0x1(%rbx),%rbx
  0x000000011c3151f0: mov    %rbx,(%rcx,%r8,1)
  0x000000011c3151f4: jne    0x000000011c315233  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@60 (line 92)

  0x000000011c3151fa: mov    %rsi,%rcx
  0x000000011c3151fd: movabs $0x1124d9e70,%r8   ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c315207: addq   $0x1,0x210(%r8)
  0x000000011c31520f: mov    %rdi,%r8
  0x000000011c315212: dec    %r8d
  0x000000011c315215: mov    %rdi,%rcx          ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)

  0x000000011c315218: nop
  0x000000011c315219: nop
  0x000000011c31521a: nop
  0x000000011c31521b: nop
  0x000000011c31521c: nop
  0x000000011c31521d: nop
  0x000000011c31521e: nop
  0x000000011c31521f: callq  0x000000011c24c0a0  ; OopMap{off=1028}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)
                                                ;   {optimized virtual_call}
  0x000000011c315224: add    $0x80,%rsp
  0x000000011c31522b: pop    %rbp
  0x000000011c31522c: test   %eax,-0xf82e132(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c315232: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@72 (line 92)

  0x000000011c315233: mov    %rdx,%rax
  0x000000011c315236: add    $0x80,%rsp
  0x000000011c31523d: pop    %rbp
  0x000000011c31523e: test   %eax,-0xf82e144(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c315244: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@74 (line 93)

  0x000000011c315245: mov    %rsi,%rcx
  0x000000011c315248: movabs $0x1124d9e70,%r8   ;   {metadata(method data for {method} {0x0000000112427658} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/UnixFileSystem&apos;)}
  0x000000011c315252: addq   $0x1,0x1c8(%r8)
  0x000000011c31525a: dec    %ebx
  0x000000011c31525c: mov    %rdi,%rcx
  0x000000011c31525f: mov    %rbx,%r8           ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)

  0x000000011c315262: nop
  0x000000011c315263: nop
  0x000000011c315264: nop
  0x000000011c315265: nop
  0x000000011c315266: nop
  0x000000011c315267: callq  0x000000011c24c0a0  ; OopMap{off=1100}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)
                                                ;   {optimized virtual_call}
  0x000000011c31526c: add    $0x80,%rsp
  0x000000011c315273: pop    %rbp
  0x000000011c315274: test   %eax,-0xf82e17a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31527a: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@47 (line 89)

  0x000000011c31527b: mov    %ecx,0x6c(%rsp)
  0x000000011c31527f: mov    %edi,0x68(%rsp)
  0x000000011c315283: mov    %rdx,0x60(%rsp)
  0x000000011c315288: mov    %rsi,0x58(%rsp)
  0x000000011c31528d: data32 xchg %ax,%ax
  0x000000011c315290: jmpq   0x000000011c315359  ;   {no_reloc}
  0x000000011c315295: add    %al,(%rax)
  0x000000011c315297: add    %al,(%rax)
  0x000000011c315299: add    %ch,%cl
  0x000000011c31529b: (bad)  
  0x000000011c31529c: add    %al,(%rax)
  0x000000011c31529e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000011c3152a1: rorb   -0x47(%rcx)        ;   {metadata(method data for {method} {0x00000001122c3db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3152a4: sbb    %bl,0x12(%rsp,%rax,2)
  0x000000011c3152a8: add    %eax,(%rax)
  0x000000011c3152aa: add    %al,(%rax)
  0x000000011c3152ac: addq   $0x1,0x148(%r9)
  0x000000011c3152b4: mov    %rbx,%rdx
  0x000000011c3152b7: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000011c3152ba: mov    %ebx,0x70(%rsp)
  0x000000011c3152be: mov    %rax,0x50(%rsp)
  0x000000011c3152c3: nop
  0x000000011c3152c4: nop
  0x000000011c3152c5: nop
  0x000000011c3152c6: nop
  0x000000011c3152c7: callq  0x000000011c24c0a0  ; OopMap{[80]=Oop [96]=Oop [88]=Oop off=1196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {optimized virtual_call}
  0x000000011c3152cc: mov    0x50(%rsp),%rax
  0x000000011c3152d1: jmpq   0x000000011c31539b
  0x000000011c3152d6: mov    %rcx,0x8(%rsp)
  0x000000011c3152db: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3152e3: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=1224}
                                                ;*synchronization entry
                                                ; - java.io.UnixFileSystem::normalize@-1 (line 84)
                                                ;   {runtime_call}
  0x000000011c3152e8: jmpq   0x000000011c314e86
  0x000000011c3152ed: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdx=Oop off=1234}
                                                ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000011c3152f2: mov    %rcx,0x8(%rsp)
  0x000000011c3152f7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3152ff: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=1252}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000011c315304: jmpq   0x000000011c314f50
  0x000000011c315309: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdx=Oop off=1262}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000011c31530e: mov    %r8,0x8(%rsp)
  0x000000011c315313: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31531b: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=1280}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000011c315320: jmpq   0x000000011c315065
  0x000000011c315325: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1290}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000011c31532a: mov    %rbx,(%rsp)
  0x000000011c31532e: callq  0x000000011c274080  ; OopMap{rsi=Oop rdx=Oop r8=Oop off=1299}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000011c315333: mov    %rcx,0x8(%rsp)
  0x000000011c315338: movq   $0x36,(%rsp)
  0x000000011c315340: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=1317}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)
                                                ;   {runtime_call}
  0x000000011c315345: jmpq   0x000000011c3151a3
  0x000000011c31534a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c315354: mov    $0xa050f00,%eax
  0x000000011c315359: callq  0x000000011c305120  ; OopMap{[88]=Oop [96]=Oop off=1342}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000011c31535e: jmpq   0x000000011c315290
  0x000000011c315363: mov    %rdx,%rdx
  0x000000011c315366: callq  0x000000011c301f60  ; OopMap{[88]=Oop [96]=Oop off=1355}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000011c31536b: jmpq   0x000000011c31529f
  0x000000011c315370: nop
  0x000000011c315371: nop
  0x000000011c315372: mov    0x2a8(%r15),%rax
  0x000000011c315379: movabs $0x0,%r10
  0x000000011c315383: mov    %r10,0x2a8(%r15)
  0x000000011c31538a: movabs $0x0,%r10
  0x000000011c315394: mov    %r10,0x2b0(%r15)
  0x000000011c31539b: add    $0x80,%rsp
  0x000000011c3153a2: pop    %rbp
  0x000000011c3153a3: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c3153a8: hlt    
  0x000000011c3153a9: hlt    
  0x000000011c3153aa: hlt    
  0x000000011c3153ab: hlt    
  0x000000011c3153ac: hlt    
  0x000000011c3153ad: hlt    
  0x000000011c3153ae: hlt    
  0x000000011c3153af: hlt    
  0x000000011c3153b0: hlt    
  0x000000011c3153b1: hlt    
  0x000000011c3153b2: hlt    
  0x000000011c3153b3: hlt    
  0x000000011c3153b4: hlt    
  0x000000011c3153b5: hlt    
  0x000000011c3153b6: hlt    
  0x000000011c3153b7: hlt    
  0x000000011c3153b8: hlt    
  0x000000011c3153b9: hlt    
  0x000000011c3153ba: hlt    
  0x000000011c3153bb: hlt    
  0x000000011c3153bc: hlt    
  0x000000011c3153bd: hlt    
  0x000000011c3153be: hlt    
  0x000000011c3153bf: hlt    
[Stub Code]
  0x000000011c3153c0: nop                       ;   {no_reloc}
  0x000000011c3153c1: nop
  0x000000011c3153c2: nop
  0x000000011c3153c3: nop
  0x000000011c3153c4: nop
  0x000000011c3153c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3153cf: jmpq   0x000000011c3153cf  ;   {runtime_call}
  0x000000011c3153d4: nop
  0x000000011c3153d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3153df: jmpq   0x000000011c3153df  ;   {runtime_call}
  0x000000011c3153e4: nop
  0x000000011c3153e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3153ef: jmpq   0x000000011c3153ef  ;   {runtime_call}
[Exception Handler]
  0x000000011c3153f4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c3153f9: mov    %rsp,-0x28(%rsp)
  0x000000011c3153fe: sub    $0x80,%rsp
  0x000000011c315405: mov    %rax,0x78(%rsp)
  0x000000011c31540a: mov    %rcx,0x70(%rsp)
  0x000000011c31540f: mov    %rdx,0x68(%rsp)
  0x000000011c315414: mov    %rbx,0x60(%rsp)
  0x000000011c315419: mov    %rbp,0x50(%rsp)
  0x000000011c31541e: mov    %rsi,0x48(%rsp)
  0x000000011c315423: mov    %rdi,0x40(%rsp)
  0x000000011c315428: mov    %r8,0x38(%rsp)
  0x000000011c31542d: mov    %r9,0x30(%rsp)
  0x000000011c315432: mov    %r10,0x28(%rsp)
  0x000000011c315437: mov    %r11,0x20(%rsp)
  0x000000011c31543c: mov    %r12,0x18(%rsp)
  0x000000011c315441: mov    %r13,0x10(%rsp)
  0x000000011c315446: mov    %r14,0x8(%rsp)
  0x000000011c31544b: mov    %r15,(%rsp)
  0x000000011c31544f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c315459: movabs $0x11c3153f9,%rsi  ;   {internal_word}
  0x000000011c315463: mov    %rsp,%rdx
  0x000000011c315466: and    $0xfffffffffffffff0,%rsp
  0x000000011c31546a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c31546f: hlt    
[Deopt Handler Code]
  0x000000011c315470: movabs $0x11c315470,%r10  ;   {section_word}
  0x000000011c31547a: push   %r10
  0x000000011c31547c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c315481: hlt    
  0x000000011c315482: hlt    
  0x000000011c315483: hlt    
  0x000000011c315484: hlt    
  0x000000011c315485: hlt    
  0x000000011c315486: hlt    
  0x000000011c315487: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x000000011c314e20' size='3168' address='0x000000011c314c50' relocation_offset='296' insts_offset='464' stub_offset='1904' scopes_data_offset='2136' scopes_pcs_offset='2520' dependencies_offset='3128' nul_chk_table_offset='3136' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='237' backedge_count='17502' iicount='237' stamp='0.188'/>
<writer thread='16643'/>
Decoding compiled method 0x000000011c314750:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c5000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000011c3148a0: mov    0x8(%rsi),%r10d
  0x000000011c3148a4: shl    $0x3,%r10
  0x000000011c3148a8: cmp    %r10,%rax
  0x000000011c3148ab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3148b1: data32 xchg %ax,%ax
  0x000000011c3148b4: nopl   0x0(%rax,%rax,1)
  0x000000011c3148bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3148c0: mov    %eax,-0x14000(%rsp)
  0x000000011c3148c7: push   %rbp
  0x000000011c3148c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000011c3148cc: mov    %rsi,%rbx
  0x000000011c3148cf: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x000000011c3148d2: test   %eax,%eax
  0x000000011c3148d4: jne    0x000000011c3149c0  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000011c3148da: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x000000011c3148dd: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x000000011c3149e9
  0x000000011c3148e2: test   %r10d,%r10d
  0x000000011c3148e5: jle    0x000000011c3149d1  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000011c3148eb: test   %r10d,%r10d
  0x000000011c3148ee: jbe    0x000000011c3149d5
  0x000000011c3148f4: mov    %r10d,%r9d
  0x000000011c3148f7: dec    %r9d
  0x000000011c3148fa: cmp    %r10d,%r9d
  0x000000011c3148fd: jae    0x000000011c3149d5  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000011c314903: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000011c314909: mov    %r10d,%edi
  0x000000011c31490c: add    $0xfffffffffffffffd,%edi
  0x000000011c31490f: mov    %r11d,%eax
  0x000000011c314912: shl    $0x5,%eax
  0x000000011c314915: lea    (%r12,%rbp,8),%rdx
  0x000000011c314919: mov    $0x1,%r8d
  0x000000011c31491f: mov    $0x80000000,%ecx
  0x000000011c314924: cmp    %edi,%r9d
  0x000000011c314927: cmovl  %ecx,%edi
  0x000000011c31492a: cmp    $0x1,%edi
  0x000000011c31492d: jle    0x000000011c314996
  0x000000011c31492f: sub    %r11d,%eax
  0x000000011c314932: jmp    0x000000011c314943
  0x000000011c314934: nopl   0x0(%rax,%rax,1)
  0x000000011c31493c: data32 data32 xchg %ax,%ax
  0x000000011c314940: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000011c314943: movzwl 0x10(%rdx,%r8,2),%r9d
  0x000000011c314949: add    %r9d,%eax
  0x000000011c31494c: movslq %r8d,%r11
  0x000000011c31494f: movzwl 0x12(%rdx,%r11,2),%ecx
  0x000000011c314955: movzwl 0x16(%rdx,%r11,2),%ebp
  0x000000011c31495b: movzwl 0x14(%rdx,%r11,2),%r9d
  0x000000011c314961: mov    %eax,%r11d
  0x000000011c314964: shl    $0x5,%r11d
  0x000000011c314968: sub    %eax,%r11d
  0x000000011c31496b: add    %ecx,%r11d
  0x000000011c31496e: mov    %r11d,%esi
  0x000000011c314971: shl    $0x5,%esi
  0x000000011c314974: sub    %r11d,%esi
  0x000000011c314977: add    %r9d,%esi
  0x000000011c31497a: mov    %esi,%r11d
  0x000000011c31497d: shl    $0x5,%r11d
  0x000000011c314981: sub    %esi,%r11d
  0x000000011c314984: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000011c314987: mov    %r11d,%eax
  0x000000011c31498a: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000011c31498d: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000011c314991: cmp    %edi,%r8d
  0x000000011c314994: jl     0x000000011c314940  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000011c314996: cmp    %r10d,%r8d
  0x000000011c314999: jge    0x000000011c3149cc  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000011c31499b: movzwl 0x10(%rdx,%r8,2),%ecx
  0x000000011c3149a1: sub    %r11d,%eax
  0x000000011c3149a4: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000011c3149a6: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000011c3149a9: cmp    %r10d,%r8d
  0x000000011c3149ac: jge    0x000000011c3149bd  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000011c3149ae: mov    %eax,%r9d
  0x000000011c3149b1: shl    $0x5,%r9d          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000011c3149b5: mov    %eax,%r11d
  0x000000011c3149b8: mov    %r9d,%eax
  0x000000011c3149bb: jmp    0x000000011c31499b
  0x000000011c3149bd: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000011c3149c0: add    $0x20,%rsp
  0x000000011c3149c4: pop    %rbp
  0x000000011c3149c5: test   %eax,-0xf82d9cb(%rip)        # 0x000000010cae7000
                                                ;   {poll_return}
  0x000000011c3149cb: retq   
  0x000000011c3149cc: mov    %r11d,%eax
  0x000000011c3149cf: jmp    0x000000011c3149bd
  0x000000011c3149d1: xor    %eax,%eax
  0x000000011c3149d3: jmp    0x000000011c3149c0
  0x000000011c3149d5: mov    $0xffffff86,%esi
  0x000000011c3149da: mov    %rbx,(%rsp)
  0x000000011c3149de: nop
  0x000000011c3149df: callq  0x000000011c24b6a0  ; OopMap{rbp=NarrowOop [0]=Oop off=324}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x000000011c3149e4: callq  0x000000010e88997c  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x000000011c3149e9: mov    $0xfffffff6,%esi
  0x000000011c3149ee: nop
  0x000000011c3149ef: callq  0x000000011c24b6a0  ; OopMap{off=340}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000011c3149f4: callq  0x000000010e88997c  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000011c3149f9: hlt    
  0x000000011c3149fa: hlt    
  0x000000011c3149fb: hlt    
  0x000000011c3149fc: hlt    
  0x000000011c3149fd: hlt    
  0x000000011c3149fe: hlt    
  0x000000011c3149ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c314a00: jmpq   0x000000011c2747e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000011c314a05: callq  0x000000011c314a0a
  0x000000011c314a0a: subq   $0x5,(%rsp)
  0x000000011c314a0f: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c314a14: hlt    
  0x000000011c314a15: hlt    
  0x000000011c314a16: hlt    
  0x000000011c314a17: hlt    
<nmethod compile_id='3' compiler='C2' level='4' entry='0x000000011c3148a0' size='1256' address='0x000000011c314750' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='832' dependencies_offset='1232' nul_chk_table_offset='1240' method='java/lang/String hashCode ()I' bytes='55' count='997' backedge_count='28943' iicount='997' stamp='0.193'/>
<writer thread='9475'/>
<task_queued compile_id='15' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='512' iicount='512' level='3' stamp='0.193' comment='tiered' hot_count='512'/>
<writer thread='16387'/>
Decoding compiled method 0x000000011c314390:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c3db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000011c3144e0: mov    0x8(%rsi),%r10d
  0x000000011c3144e4: shl    $0x3,%r10
  0x000000011c3144e8: cmp    %r10,%rax
  0x000000011c3144eb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3144f1: data32 xchg %ax,%ax
  0x000000011c3144f4: nopl   0x0(%rax,%rax,1)
  0x000000011c3144fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c314500: mov    %eax,-0x14000(%rsp)
  0x000000011c314507: push   %rbp
  0x000000011c314508: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000011c31450c: test   %edx,%edx
  0x000000011c31450e: jl     0x000000011c31454d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000011c314510: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000011c314514: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x000000011c31457d
  0x000000011c314519: cmp    %ebp,%edx
  0x000000011c31451b: jge    0x000000011c314565  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000011c31451d: cmp    %ebp,%edx
  0x000000011c31451f: jae    0x000000011c314537
  0x000000011c314521: shl    $0x3,%r10
  0x000000011c314525: movzwl 0x10(%r10,%rdx,2),%eax
  0x000000011c31452b: add    $0x20,%rsp
  0x000000011c31452f: pop    %rbp
  0x000000011c314530: test   %eax,-0xf82d536(%rip)        # 0x000000010cae7000
                                                ;   {poll_return}
  0x000000011c314536: retq   
  0x000000011c314537: mov    $0xffffffe4,%esi
  0x000000011c31453c: mov    %edx,%ebp
  0x000000011c31453e: mov    %r10d,(%rsp)
  0x000000011c314542: nop
  0x000000011c314543: callq  0x000000011c24b6a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000011c314548: callq  0x000000010e88997c  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000011c31454d: mov    %rsi,%rbp
  0x000000011c314550: mov    %edx,0x4(%rsp)
  0x000000011c314554: mov    $0xffffff65,%esi
  0x000000011c314559: xchg   %ax,%ax
  0x000000011c31455b: callq  0x000000011c24b6a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000011c314560: callq  0x000000010e88997c  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000011c314565: mov    %rsi,(%rsp)
  0x000000011c314569: mov    %edx,0xc(%rsp)
  0x000000011c31456d: mov    $0xffffff65,%esi
  0x000000011c314572: nop
  0x000000011c314573: callq  0x000000011c24b6a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000011c314578: callq  0x000000010e88997c  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000011c31457d: mov    $0xfffffff6,%esi
  0x000000011c314582: nop
  0x000000011c314583: callq  0x000000011c24b6a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000011c314588: callq  0x000000010e88997c  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000011c31458d: hlt    
  0x000000011c31458e: hlt    
  0x000000011c31458f: hlt    
  0x000000011c314590: hlt    
  0x000000011c314591: hlt    
  0x000000011c314592: hlt    
  0x000000011c314593: hlt    
  0x000000011c314594: hlt    
  0x000000011c314595: hlt    
  0x000000011c314596: hlt    
  0x000000011c314597: hlt    
  0x000000011c314598: hlt    
  0x000000011c314599: hlt    
  0x000000011c31459a: hlt    
  0x000000011c31459b: hlt    
  0x000000011c31459c: hlt    
  0x000000011c31459d: hlt    
  0x000000011c31459e: hlt    
  0x000000011c31459f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c3145a0: jmpq   0x000000011c2747e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000011c3145a5: callq  0x000000011c3145aa
  0x000000011c3145aa: subq   $0x5,(%rsp)
  0x000000011c3145af: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3145b4: hlt    
  0x000000011c3145b5: hlt    
  0x000000011c3145b6: hlt    
  0x000000011c3145b7: hlt    
<nmethod compile_id='6' compiler='C2' level='4' entry='0x000000011c3144e0' size='928' address='0x000000011c314390' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='21208' iicount='21208' stamp='0.196'/>
<writer thread='9475'/>
<task_queued compile_id='16' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='822' backedge_count='2621' iicount='822' level='3' stamp='0.196' comment='tiered' hot_count='822'/>
<task_queued compile_id='17' method='java/util/BitSet get (I)Z' bytes='69' count='384' iicount='384' level='3' stamp='0.196' comment='tiered' hot_count='384'/>
<task_queued compile_id='18' method='java/lang/String indexOf (II)I' bytes='70' count='827' backedge_count='41984' iicount='827' stamp='0.196' comment='tiered' hot_count='827'/>
<task_queued compile_id='19' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.196' comment='tiered' hot_count='128'/>
<task_queued compile_id='20' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.196' comment='tiered' hot_count='256'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c31b410:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x000000011c31b5e0: mov    0x8(%rsi),%r10d
  0x000000011c31b5e4: shl    $0x3,%r10
  0x000000011c31b5e8: cmp    %rax,%r10
  0x000000011c31b5eb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c31b5f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c31b5fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c31b600: mov    %eax,-0x14000(%rsp)
  0x000000011c31b607: push   %rbp
  0x000000011c31b608: sub    $0x60,%rsp
  0x000000011c31b60c: movabs $0x1124d6e30,%rdi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b616: mov    0xdc(%rdi),%ebx
  0x000000011c31b61c: add    $0x8,%ebx
  0x000000011c31b61f: mov    %ebx,0xdc(%rdi)
  0x000000011c31b625: movabs $0x1122c31a0,%rdi  ;   {metadata({method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b62f: and    $0x1ff8,%ebx
  0x000000011c31b635: cmp    $0x0,%ebx
  0x000000011c31b638: je     0x000000011c31b906  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x000000011c31b63e: mov    %rsi,%rdi
  0x000000011c31b641: movabs $0x1124d6e30,%rbx  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b64b: addq   $0x1,0x108(%rbx)
  0x000000011c31b653: movabs $0x1124371c0,%rdi  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c31b65d: mov    0xdc(%rdi),%ebx
  0x000000011c31b663: add    $0x8,%ebx
  0x000000011c31b666: mov    %ebx,0xdc(%rdi)
  0x000000011c31b66c: movabs $0x1122c0480,%rdi  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c31b676: and    $0x7ffff8,%ebx
  0x000000011c31b67c: cmp    $0x0,%ebx
  0x000000011c31b67f: je     0x000000011c31b91d
  0x000000011c31b685: cmp    $0x0,%ecx
  0x000000011c31b688: movabs $0x1124d6e30,%rdi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b692: movabs $0x118,%rbx
  0x000000011c31b69c: jge    0x000000011c31b6ac
  0x000000011c31b6a2: movabs $0x128,%rbx
  0x000000011c31b6ac: mov    (%rdi,%rbx,1),%rax
  0x000000011c31b6b0: lea    0x1(%rax),%rax
  0x000000011c31b6b4: mov    %rax,(%rdi,%rbx,1)
  0x000000011c31b6b8: jl     0x000000011c31b8c6  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x000000011c31b6be: cmp    $0x0,%r8d
  0x000000011c31b6c2: movabs $0x1124d6e30,%rdi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b6cc: movabs $0x148,%rbx
  0x000000011c31b6d6: jg     0x000000011c31b6e6
  0x000000011c31b6dc: movabs $0x158,%rbx
  0x000000011c31b6e6: mov    (%rdi,%rbx,1),%rax
  0x000000011c31b6ea: lea    0x1(%rax),%rax
  0x000000011c31b6ee: mov    %rax,(%rdi,%rbx,1)
  0x000000011c31b6f2: jg     0x000000011c31b76d  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x000000011c31b6f8: cmp    $0x0,%r8d
  0x000000011c31b6fc: movabs $0x1124d6e30,%rdi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b706: movabs $0x168,%rbx
  0x000000011c31b710: jge    0x000000011c31b720
  0x000000011c31b716: movabs $0x178,%rbx
  0x000000011c31b720: mov    (%rdi,%rbx,1),%rax
  0x000000011c31b724: lea    0x1(%rax),%rax
  0x000000011c31b728: mov    %rax,(%rdi,%rbx,1)
  0x000000011c31b72c: jl     0x000000011c31b886  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x000000011c31b732: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x000000011c31b934
  0x000000011c31b735: cmp    %edi,%ecx
  0x000000011c31b737: movabs $0x1124d6e30,%rdi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b741: movabs $0x198,%rbx
  0x000000011c31b74b: jg     0x000000011c31b75b
  0x000000011c31b751: movabs $0x1a8,%rbx
  0x000000011c31b75b: mov    (%rdi,%rbx,1),%rax
  0x000000011c31b75f: lea    0x1(%rax),%rax
  0x000000011c31b763: mov    %rax,(%rdi,%rbx,1)
  0x000000011c31b767: jle    0x000000011c31b802  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x000000011c31b76d: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x000000011c31b939
  0x000000011c31b770: sub    %r8d,%edi
  0x000000011c31b773: cmp    %edi,%ecx
  0x000000011c31b775: movabs $0x1124d6e30,%rdi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b77f: movabs $0x1b8,%rbx
  0x000000011c31b789: jle    0x000000011c31b799
  0x000000011c31b78f: movabs $0x1c8,%rbx
  0x000000011c31b799: mov    (%rdi,%rbx,1),%rax
  0x000000011c31b79d: lea    0x1(%rax),%rax
  0x000000011c31b7a1: mov    %rax,(%rdi,%rbx,1)
  0x000000011c31b7a5: jg     0x000000011c31b83c  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x000000011c31b7ab: mov    %rsi,0x38(%rsp)
  0x000000011c31b7b0: movabs $0x1124d6e30,%rdi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b7ba: addq   $0x1,0x1e8(%rdi)
  0x000000011c31b7c2: add    %ecx,%r8d
  0x000000011c31b7c5: mov    %rdx,%rsi
  0x000000011c31b7c8: mov    %rcx,%rdx
  0x000000011c31b7cb: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x000000011c31b7ce: nop
  0x000000011c31b7cf: callq  0x000000011c24c520  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x000000011c31b7d4: mov    0x38(%rsp),%rsi
  0x000000011c31b7d9: mov    %rax,%r10
  0x000000011c31b7dc: shr    $0x3,%r10
  0x000000011c31b7e0: mov    %r10d,0xc(%rsi)
  0x000000011c31b7e4: shr    $0x9,%rsi
  0x000000011c31b7e8: movabs $0x10c974000,%rdx
  0x000000011c31b7f2: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x000000011c31b7f6: add    $0x60,%rsp
  0x000000011c31b7fa: pop    %rbp
  0x000000011c31b7fb: test   %eax,-0xf834701(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31b801: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x000000011c31b802: movabs $0x71558a680,%rdx  ;   {oop(&quot;&quot;)}
  0x000000011c31b80c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x000000011c31b93e
  0x000000011c31b80f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x000000011c31b813: mov    %rdx,%r10
  0x000000011c31b816: shr    $0x3,%r10
  0x000000011c31b81a: mov    %r10d,0xc(%rsi)
  0x000000011c31b81e: shr    $0x9,%rsi
  0x000000011c31b822: movabs $0x10c974000,%rdx
  0x000000011c31b82c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x000000011c31b830: add    $0x60,%rsp
  0x000000011c31b834: pop    %rbp
  0x000000011c31b835: test   %eax,-0xf83473b(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31b83b: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x000000011c31b83c: nopl   0x0(%rax)
  0x000000011c31b840: jmpq   0x000000011c31b952  ;   {no_reloc}
  0x000000011c31b845: add    %al,(%rax)
  0x000000011c31b847: add    %al,(%rax)
  0x000000011c31b849: add    %ch,%cl
  0x000000011c31b84b: or     $0x48000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x000000011c31b850: mov    %eax,%edx
  0x000000011c31b852: movabs $0x1124d6e30,%rsi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b85c: addq   $0x1,0x1d8(%rsi)
  0x000000011c31b864: add    %ecx,%r8d
  0x000000011c31b867: mov    %r8,%rdx
  0x000000011c31b86a: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x000000011c31b86d: mov    %rax,0x40(%rsp)
  0x000000011c31b872: nop
  0x000000011c31b873: nop
  0x000000011c31b874: nop
  0x000000011c31b875: nop
  0x000000011c31b876: nop
  0x000000011c31b877: callq  0x000000011c24c0a0  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x000000011c31b87c: mov    0x40(%rsp),%rax
  0x000000011c31b881: jmpq   0x000000011c31b9e0  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x000000011c31b886: xchg   %ax,%ax
  0x000000011c31b888: jmpq   0x000000011c31b978  ;   {no_reloc}
  0x000000011c31b88d: add    %al,(%rax)
  0x000000011c31b88f: add    %al,(%rax)
  0x000000011c31b891: add    %ch,%cl
  0x000000011c31b893: jmp    0x000000011c31b895
  0x000000011c31b895: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x000000011c31b897: mov    %rax,%rdx
  0x000000011c31b89a: movabs $0x1124d6e30,%rsi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b8a4: addq   $0x1,0x188(%rsi)
  0x000000011c31b8ac: mov    %r8,%rdx
  0x000000011c31b8af: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x000000011c31b8b2: mov    %rax,0x48(%rsp)
  0x000000011c31b8b7: callq  0x000000011c24c0a0  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x000000011c31b8bc: mov    0x48(%rsp),%rax
  0x000000011c31b8c1: jmpq   0x000000011c31b9e0  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x000000011c31b8c6: xchg   %ax,%ax
  0x000000011c31b8c8: jmpq   0x000000011c31b99e  ;   {no_reloc}
  0x000000011c31b8cd: add    %al,(%rax)
  0x000000011c31b8cf: add    %al,(%rax)
  0x000000011c31b8d1: add    %ch,%cl
  0x000000011c31b8d3: roll   (%rax)
  0x000000011c31b8d5: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x000000011c31b8d7: mov    %rax,%rdx
  0x000000011c31b8da: movabs $0x1124d6e30,%rsi  ;   {metadata(method data for {method} {0x00000001122c31a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31b8e4: addq   $0x1,0x138(%rsi)
  0x000000011c31b8ec: mov    %rcx,%rdx
  0x000000011c31b8ef: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x000000011c31b8f2: mov    %rax,0x50(%rsp)
  0x000000011c31b8f7: callq  0x000000011c24c0a0  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000000011c31b8fc: mov    0x50(%rsp),%rax
  0x000000011c31b901: jmpq   0x000000011c31b9e0
  0x000000011c31b906: mov    %rdi,0x8(%rsp)
  0x000000011c31b90b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31b913: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x000000011c31b918: jmpq   0x000000011c31b63e
  0x000000011c31b91d: mov    %rdi,0x8(%rsp)
  0x000000011c31b922: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31b92a: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x000000011c31b92f: jmpq   0x000000011c31b685
  0x000000011c31b934: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x000000011c31b939: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x000000011c31b93e: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x000000011c31b943: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c31b94d: mov    $0xa050f00,%eax
  0x000000011c31b952: callq  0x000000011c305120  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000011c31b957: jmpq   0x000000011c31b840
  0x000000011c31b95c: mov    %rdx,%rdx
  0x000000011c31b95f: callq  0x000000011c301f60  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x000000011c31b964: jmpq   0x000000011c31b84f
  0x000000011c31b969: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c31b973: mov    $0xa050f00,%eax
  0x000000011c31b978: callq  0x000000011c305120  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000000011c31b97d: jmpq   0x000000011c31b888
  0x000000011c31b982: mov    %rdx,%rdx
  0x000000011c31b985: callq  0x000000011c301f60  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x000000011c31b98a: jmpq   0x000000011c31b897
  0x000000011c31b98f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c31b999: mov    $0xa050f00,%eax
  0x000000011c31b99e: callq  0x000000011c305120  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000011c31b9a3: jmpq   0x000000011c31b8c8
  0x000000011c31b9a8: mov    %rdx,%rdx
  0x000000011c31b9ab: callq  0x000000011c301f60  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x000000011c31b9b0: jmpq   0x000000011c31b8d7
  0x000000011c31b9b5: nop
  0x000000011c31b9b6: nop
  0x000000011c31b9b7: mov    0x2a8(%r15),%rax
  0x000000011c31b9be: movabs $0x0,%r10
  0x000000011c31b9c8: mov    %r10,0x2a8(%r15)
  0x000000011c31b9cf: movabs $0x0,%r10
  0x000000011c31b9d9: mov    %r10,0x2b0(%r15)
  0x000000011c31b9e0: add    $0x60,%rsp
  0x000000011c31b9e4: pop    %rbp
  0x000000011c31b9e5: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c31b9ea: hlt    
  0x000000011c31b9eb: hlt    
  0x000000011c31b9ec: hlt    
  0x000000011c31b9ed: hlt    
  0x000000011c31b9ee: hlt    
  0x000000011c31b9ef: hlt    
  0x000000011c31b9f0: hlt    
  0x000000011c31b9f1: hlt    
  0x000000011c31b9f2: hlt    
  0x000000011c31b9f3: hlt    
  0x000000011c31b9f4: hlt    
  0x000000011c31b9f5: hlt    
  0x000000011c31b9f6: hlt    
  0x000000011c31b9f7: hlt    
  0x000000011c31b9f8: hlt    
  0x000000011c31b9f9: hlt    
  0x000000011c31b9fa: hlt    
  0x000000011c31b9fb: hlt    
  0x000000011c31b9fc: hlt    
  0x000000011c31b9fd: hlt    
  0x000000011c31b9fe: hlt    
  0x000000011c31b9ff: hlt    
[Stub Code]
  0x000000011c31ba00: nop                       ;   {no_reloc}
  0x000000011c31ba01: nop
  0x000000011c31ba02: nop
  0x000000011c31ba03: nop
  0x000000011c31ba04: nop
  0x000000011c31ba05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31ba0f: jmpq   0x000000011c31ba0f  ;   {runtime_call}
  0x000000011c31ba14: nop
  0x000000011c31ba15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31ba1f: jmpq   0x000000011c31ba1f  ;   {runtime_call}
  0x000000011c31ba24: nop
  0x000000011c31ba25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31ba2f: jmpq   0x000000011c31ba2f  ;   {runtime_call}
  0x000000011c31ba34: nop
  0x000000011c31ba35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31ba3f: jmpq   0x000000011c31ba3f  ;   {runtime_call}
[Exception Handler]
  0x000000011c31ba44: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c31ba49: mov    %rsp,-0x28(%rsp)
  0x000000011c31ba4e: sub    $0x80,%rsp
  0x000000011c31ba55: mov    %rax,0x78(%rsp)
  0x000000011c31ba5a: mov    %rcx,0x70(%rsp)
  0x000000011c31ba5f: mov    %rdx,0x68(%rsp)
  0x000000011c31ba64: mov    %rbx,0x60(%rsp)
  0x000000011c31ba69: mov    %rbp,0x50(%rsp)
  0x000000011c31ba6e: mov    %rsi,0x48(%rsp)
  0x000000011c31ba73: mov    %rdi,0x40(%rsp)
  0x000000011c31ba78: mov    %r8,0x38(%rsp)
  0x000000011c31ba7d: mov    %r9,0x30(%rsp)
  0x000000011c31ba82: mov    %r10,0x28(%rsp)
  0x000000011c31ba87: mov    %r11,0x20(%rsp)
  0x000000011c31ba8c: mov    %r12,0x18(%rsp)
  0x000000011c31ba91: mov    %r13,0x10(%rsp)
  0x000000011c31ba96: mov    %r14,0x8(%rsp)
  0x000000011c31ba9b: mov    %r15,(%rsp)
  0x000000011c31ba9f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c31baa9: movabs $0x11c31ba49,%rsi  ;   {internal_word}
  0x000000011c31bab3: mov    %rsp,%rdx
  0x000000011c31bab6: and    $0xfffffffffffffff0,%rsp
  0x000000011c31baba: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c31babf: hlt    
[Deopt Handler Code]
  0x000000011c31bac0: movabs $0x11c31bac0,%r10  ;   {section_word}
  0x000000011c31baca: push   %r10
  0x000000011c31bacc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c31bad1: hlt    
  0x000000011c31bad2: hlt    
  0x000000011c31bad3: hlt    
  0x000000011c31bad4: hlt    
  0x000000011c31bad5: hlt    
  0x000000011c31bad6: hlt    
  0x000000011c31bad7: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x000000011c31b5e0' size='2704' address='0x000000011c31b410' relocation_offset='296' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='915' iicount='915' stamp='0.206'/>
<writer thread='9475'/>
<task_queued compile_id='21' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4608' iicount='4608' level='1' stamp='0.206' comment='tiered' hot_count='4608'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c313810:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011c313980: mov    0x8(%rsi),%r10d
  0x000000011c313984: shl    $0x3,%r10
  0x000000011c313988: cmp    %rax,%r10
  0x000000011c31398b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c313991: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c31399c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3139a0: mov    %eax,-0x14000(%rsp)
  0x000000011c3139a7: push   %rbp
  0x000000011c3139a8: sub    $0x30,%rsp
  0x000000011c3139ac: movabs $0x1124d9a28,%rax  ;   {metadata(method data for {method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3139b6: mov    0xdc(%rax),%edi
  0x000000011c3139bc: add    $0x8,%edi
  0x000000011c3139bf: mov    %edi,0xdc(%rax)
  0x000000011c3139c5: movabs $0x1122c4df8,%rax  ;   {metadata({method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3139cf: and    $0x1ff8,%edi
  0x000000011c3139d5: cmp    $0x0,%edi
  0x000000011c3139d8: je     0x000000011c313b8d  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x000000011c3139de: mov    0xc(%rsi),%eax
  0x000000011c3139e1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x000000011c3139e5: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x000000011c313ba4
  0x000000011c3139e8: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x000000011c3139ec: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x000000011c313ba9
  0x000000011c3139ef: cmp    $0x0,%ecx
  0x000000011c3139f2: movabs $0x1124d9a28,%rbx  ;   {metadata(method data for {method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3139fc: movabs $0x108,%rdx
  0x000000011c313a06: jl     0x000000011c313a16
  0x000000011c313a0c: movabs $0x118,%rdx
  0x000000011c313a16: mov    (%rbx,%rdx,1),%r8
  0x000000011c313a1a: lea    0x1(%r8),%r8
  0x000000011c313a1e: mov    %r8,(%rbx,%rdx,1)
  0x000000011c313a22: jl     0x000000011c313b5a  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x000000011c313a28: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000011c313bae
  0x000000011c313a2b: sub    %edi,%ebx
  0x000000011c313a2d: cmp    %ebx,%ecx
  0x000000011c313a2f: movabs $0x1124d9a28,%rbx  ;   {metadata(method data for {method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c313a39: movabs $0x128,%rdx
  0x000000011c313a43: jle    0x000000011c313a53
  0x000000011c313a49: movabs $0x138,%rdx
  0x000000011c313a53: mov    (%rbx,%rdx,1),%r8
  0x000000011c313a57: lea    0x1(%r8),%r8
  0x000000011c313a5b: mov    %r8,(%rbx,%rdx,1)
  0x000000011c313a5f: jg     0x000000011c313b5a  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x000000011c313a65: mov    $0x0,%ebx
  0x000000011c313a6a: jmpq   0x000000011c313b1a  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000011c313a6f: nop
  0x000000011c313a70: mov    %rcx,%rdx
  0x000000011c313a73: inc    %edx
  0x000000011c313a75: movslq %ecx,%r8
  0x000000011c313a78: cmp    0xc(%rax),%ecx
  0x000000011c313a7b: jae    0x000000011c313bb3
  0x000000011c313a81: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x000000011c313a87: mov    %rbx,%r8
  0x000000011c313a8a: inc    %r8d
  0x000000011c313a8d: movslq %ebx,%r9
  0x000000011c313a90: cmp    0xc(%rsi),%ebx
  0x000000011c313a93: jae    0x000000011c313bbc
  0x000000011c313a99: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x000000011c313a9f: movabs $0x1124d9a28,%r9   ;   {metadata(method data for {method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c313aa9: mov    0xe0(%r9),%r11d
  0x000000011c313ab0: add    $0x8,%r11d
  0x000000011c313ab4: mov    %r11d,0xe0(%r9)
  0x000000011c313abb: movabs $0x1122c4df8,%r9   ;   {metadata({method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c313ac5: and    $0xfff8,%r11d
  0x000000011c313acc: cmp    $0x0,%r11d
  0x000000011c313ad0: je     0x000000011c313bc5  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000011c313ad6: test   %eax,-0xf82c9dc(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c313adc: cmp    %ebx,%ecx
  0x000000011c313ade: movabs $0x1124d9a28,%rbx  ;   {metadata(method data for {method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c313ae8: movabs $0x168,%rcx
  0x000000011c313af2: je     0x000000011c313b02
  0x000000011c313af8: movabs $0x178,%rcx
  0x000000011c313b02: mov    (%rbx,%rcx,1),%r9
  0x000000011c313b06: lea    0x1(%r9),%r9
  0x000000011c313b0a: mov    %r9,(%rbx,%rcx,1)
  0x000000011c313b0e: jne    0x000000011c313b6b  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000011c313b14: mov    %r8,%rbx
  0x000000011c313b17: mov    %rdx,%rcx          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000011c313b1a: dec    %edi
  0x000000011c313b1c: cmp    $0x0,%edi
  0x000000011c313b1f: movabs $0x1124d9a28,%rdx  ;   {metadata(method data for {method} {0x00000001122c4df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c313b29: movabs $0x148,%r8
  0x000000011c313b33: jl     0x000000011c313b43
  0x000000011c313b39: movabs $0x158,%r8
  0x000000011c313b43: mov    (%rdx,%r8,1),%r9
  0x000000011c313b47: lea    0x1(%r9),%r9
  0x000000011c313b4b: mov    %r9,(%rdx,%r8,1)
  0x000000011c313b4f: jl     0x000000011c313b7c
  0x000000011c313b55: jmpq   0x000000011c313a70  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x000000011c313b5a: mov    $0x0,%eax
  0x000000011c313b5f: add    $0x30,%rsp
  0x000000011c313b63: pop    %rbp
  0x000000011c313b64: test   %eax,-0xf82ca6a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c313b6a: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x000000011c313b6b: mov    $0x0,%eax
  0x000000011c313b70: add    $0x30,%rsp
  0x000000011c313b74: pop    %rbp
  0x000000011c313b75: test   %eax,-0xf82ca7b(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c313b7b: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x000000011c313b7c: mov    $0x1,%eax
  0x000000011c313b81: add    $0x30,%rsp
  0x000000011c313b85: pop    %rbp
  0x000000011c313b86: test   %eax,-0xf82ca8c(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c313b8c: retq   
  0x000000011c313b8d: mov    %rax,0x8(%rsp)
  0x000000011c313b92: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c313b9a: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x000000011c313b9f: jmpq   0x000000011c3139de
  0x000000011c313ba4: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000011c313ba9: callq  0x000000011c301ac0  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000011c313bae: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000011c313bb3: mov    %rcx,(%rsp)
  0x000000011c313bb7: callq  0x000000011c274080  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x000000011c313bbc: mov    %rbx,(%rsp)
  0x000000011c313bc0: callq  0x000000011c274080  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x000000011c313bc5: mov    %r9,0x8(%rsp)
  0x000000011c313bca: movq   $0x41,(%rsp)
  0x000000011c313bd2: callq  0x000000011c306120  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x000000011c313bd7: jmpq   0x000000011c313ad6
  0x000000011c313bdc: nop
  0x000000011c313bdd: nop
  0x000000011c313bde: mov    0x2a8(%r15),%rax
  0x000000011c313be5: movabs $0x0,%r10
  0x000000011c313bef: mov    %r10,0x2a8(%r15)
  0x000000011c313bf6: movabs $0x0,%r10
  0x000000011c313c00: mov    %r10,0x2b0(%r15)
  0x000000011c313c07: add    $0x30,%rsp
  0x000000011c313c0b: pop    %rbp
  0x000000011c313c0c: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c313c11: hlt    
  0x000000011c313c12: hlt    
  0x000000011c313c13: hlt    
  0x000000011c313c14: hlt    
  0x000000011c313c15: hlt    
  0x000000011c313c16: hlt    
  0x000000011c313c17: hlt    
  0x000000011c313c18: hlt    
  0x000000011c313c19: hlt    
  0x000000011c313c1a: hlt    
  0x000000011c313c1b: hlt    
  0x000000011c313c1c: hlt    
  0x000000011c313c1d: hlt    
  0x000000011c313c1e: hlt    
  0x000000011c313c1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c313c20: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c313c25: mov    %rsp,-0x28(%rsp)
  0x000000011c313c2a: sub    $0x80,%rsp
  0x000000011c313c31: mov    %rax,0x78(%rsp)
  0x000000011c313c36: mov    %rcx,0x70(%rsp)
  0x000000011c313c3b: mov    %rdx,0x68(%rsp)
  0x000000011c313c40: mov    %rbx,0x60(%rsp)
  0x000000011c313c45: mov    %rbp,0x50(%rsp)
  0x000000011c313c4a: mov    %rsi,0x48(%rsp)
  0x000000011c313c4f: mov    %rdi,0x40(%rsp)
  0x000000011c313c54: mov    %r8,0x38(%rsp)
  0x000000011c313c59: mov    %r9,0x30(%rsp)
  0x000000011c313c5e: mov    %r10,0x28(%rsp)
  0x000000011c313c63: mov    %r11,0x20(%rsp)
  0x000000011c313c68: mov    %r12,0x18(%rsp)
  0x000000011c313c6d: mov    %r13,0x10(%rsp)
  0x000000011c313c72: mov    %r14,0x8(%rsp)
  0x000000011c313c77: mov    %r15,(%rsp)
  0x000000011c313c7b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c313c85: movabs $0x11c313c25,%rsi  ;   {internal_word}
  0x000000011c313c8f: mov    %rsp,%rdx
  0x000000011c313c92: and    $0xfffffffffffffff0,%rsp
  0x000000011c313c96: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c313c9b: hlt    
[Deopt Handler Code]
  0x000000011c313c9c: movabs $0x11c313c9c,%r10  ;   {section_word}
  0x000000011c313ca6: push   %r10
  0x000000011c313ca8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c313cad: hlt    
  0x000000011c313cae: hlt    
  0x000000011c313caf: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x000000011c313980' size='1824' address='0x000000011c313810' relocation_offset='296' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='845' backedge_count='2678' iicount='845' stamp='0.212'/>
<writer thread='9475'/>
<task_queued compile_id='22' method='java/io/File getPrefixLength ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.212' comment='tiered' hot_count='128'/>
<writer thread='16643'/>
Decoding compiled method 0x000000011c317f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c5180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011c318060: mov    0x8(%rsi),%r10d
  0x000000011c318064: shl    $0x3,%r10
  0x000000011c318068: cmp    %r10,%rax
  0x000000011c31806b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c318071: data32 xchg %ax,%ax
  0x000000011c318074: nopl   0x0(%rax,%rax,1)
  0x000000011c31807c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c318080: mov    %eax,-0x14000(%rsp)
  0x000000011c318087: push   %rbp
  0x000000011c318088: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x000000011c31808c: mov    %rsi,%r10
  0x000000011c31808f: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000011c318093: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000011c318209
  0x000000011c318098: test   %ecx,%ecx
  0x000000011c31809a: jl     0x000000011c3181d1  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000011c3180a0: mov    $0xffffffff,%eax
  0x000000011c3180a5: cmp    %ebp,%ecx
  0x000000011c3180a7: jge    0x000000011c318185  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000011c3180ad: cmp    $0x10000,%edx
  0x000000011c3180b3: jge    0x000000011c3181ed  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000011c3180b9: cmp    %ebp,%ecx
  0x000000011c3180bb: jae    0x000000011c3181b5
  0x000000011c3180c1: mov    %ebp,%r10d
  0x000000011c3180c4: dec    %r10d
  0x000000011c3180c7: cmp    %ebp,%r10d
  0x000000011c3180ca: jae    0x000000011c3181b5
  0x000000011c3180d0: lea    (%r12,%r8,8),%r9
  0x000000011c3180d4: mov    %ecx,%r11d
  0x000000011c3180d7: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000011c3180da: movzwl 0x10(%r9,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c3180e0: cmp    %edx,%r8d
  0x000000011c3180e3: je     0x000000011c318193  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c3180e9: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000011c3180eb: cmp    %r11d,%ecx
  0x000000011c3180ee: jl     0x000000011c3180da  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000011c3180f0: mov    %ebp,%r11d
  0x000000011c3180f3: add    $0xfffffffffffffff9,%r11d
  0x000000011c3180f7: mov    $0x80000000,%r8d
  0x000000011c3180fd: cmp    %r11d,%r10d
  0x000000011c318100: cmovl  %r8d,%r11d
  0x000000011c318104: cmp    %r11d,%ecx
  0x000000011c318107: jge    0x000000011c31816d
  0x000000011c318109: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000011c318110: movzwl 0x10(%r9,%rcx,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c318116: cmp    %edx,%r10d
  0x000000011c318119: je     0x000000011c318193  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c31811b: movslq %ecx,%r10
  0x000000011c31811e: movzwl 0x12(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c318124: cmp    %edx,%ebx
  0x000000011c318126: je     0x000000011c318191  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c318128: movzwl 0x14(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c31812e: cmp    %edx,%ebx
  0x000000011c318130: je     0x000000011c318197  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c318132: movzwl 0x16(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c318138: cmp    %edx,%ebx
  0x000000011c31813a: je     0x000000011c31819c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c31813c: movzwl 0x18(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c318142: cmp    %edx,%ebx
  0x000000011c318144: je     0x000000011c3181a1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c318146: movzwl 0x1a(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c31814c: cmp    %edx,%ebx
  0x000000011c31814e: je     0x000000011c3181a6  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c318150: movzwl 0x1c(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c318156: cmp    %edx,%ebx
  0x000000011c318158: je     0x000000011c3181ab  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c31815a: movzwl 0x1e(%r9,%r10,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c318160: cmp    %edx,%r8d
  0x000000011c318163: je     0x000000011c3181b0  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c318165: add    $0x8,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000011c318168: cmp    %r11d,%ecx
  0x000000011c31816b: jl     0x000000011c318110  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000011c31816d: cmp    %ebp,%ecx
  0x000000011c31816f: jge    0x000000011c318185
  0x000000011c318171: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000011c318174: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011c31817a: cmp    %edx,%r11d
  0x000000011c31817d: je     0x000000011c318193  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011c31817f: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000011c318181: cmp    %ebp,%ecx
  0x000000011c318183: jl     0x000000011c318174  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000011c318185: add    $0x30,%rsp
  0x000000011c318189: pop    %rbp
  0x000000011c31818a: test   %eax,-0xf831190(%rip)        # 0x000000010cae7000
                                                ;   {poll_return}
  0x000000011c318190: retq   
  0x000000011c318191: inc    %ecx
  0x000000011c318193: mov    %ecx,%eax
  0x000000011c318195: jmp    0x000000011c318185
  0x000000011c318197: add    $0x2,%ecx
  0x000000011c31819a: jmp    0x000000011c318193
  0x000000011c31819c: add    $0x3,%ecx
  0x000000011c31819f: jmp    0x000000011c318193
  0x000000011c3181a1: add    $0x4,%ecx
  0x000000011c3181a4: jmp    0x000000011c318193
  0x000000011c3181a6: add    $0x5,%ecx
  0x000000011c3181a9: jmp    0x000000011c318193
  0x000000011c3181ab: add    $0x6,%ecx
  0x000000011c3181ae: jmp    0x000000011c318193
  0x000000011c3181b0: add    $0x7,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000011c3181b3: jmp    0x000000011c318193
  0x000000011c3181b5: mov    $0xffffff86,%esi
  0x000000011c3181ba: mov    %edx,(%rsp)
  0x000000011c3181bd: mov    %ecx,0x4(%rsp)
  0x000000011c3181c1: mov    %r8d,0x8(%rsp)
  0x000000011c3181c6: nop
  0x000000011c3181c7: callq  0x000000011c24b6a0  ; OopMap{[8]=NarrowOop off=364}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000011c3181cc: callq  0x000000010e88997c  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000011c3181d1: mov    $0xffffff65,%esi
  0x000000011c3181d6: mov    %edx,(%rsp)
  0x000000011c3181d9: mov    %ecx,0x8(%rsp)
  0x000000011c3181dd: mov    %r10,0x10(%rsp)
  0x000000011c3181e2: nop
  0x000000011c3181e3: callq  0x000000011c24b6a0  ; OopMap{[16]=Oop off=392}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000011c3181e8: callq  0x000000010e88997c  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000011c3181ed: mov    $0xffffff65,%esi
  0x000000011c3181f2: mov    %ecx,0x4(%rsp)
  0x000000011c3181f6: mov    %edx,0x8(%rsp)
  0x000000011c3181fa: mov    %r10,0x10(%rsp)
  0x000000011c3181ff: callq  0x000000011c24b6a0  ; OopMap{[16]=Oop off=420}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000011c318204: callq  0x000000010e88997c  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000011c318209: mov    $0xfffffff6,%esi
  0x000000011c31820e: nop
  0x000000011c31820f: callq  0x000000011c24b6a0  ; OopMap{off=436}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000011c318214: callq  0x000000010e88997c  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000011c318219: hlt    
  0x000000011c31821a: hlt    
  0x000000011c31821b: hlt    
  0x000000011c31821c: hlt    
  0x000000011c31821d: hlt    
  0x000000011c31821e: hlt    
  0x000000011c31821f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c318220: jmpq   0x000000011c2747e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000011c318225: callq  0x000000011c31822a
  0x000000011c31822a: subq   $0x5,(%rsp)
  0x000000011c31822f: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c318234: hlt    
  0x000000011c318235: hlt    
  0x000000011c318236: hlt    
  0x000000011c318237: hlt    
<nmethod compile_id='18' compiler='C2' level='4' entry='0x000000011c318060' size='1736' address='0x000000011c317f10' relocation_offset='296' insts_offset='336' stub_offset='784' scopes_data_offset='816' scopes_pcs_offset='976' dependencies_offset='1712' nul_chk_table_offset='1720' method='java/lang/String indexOf (II)I' bytes='70' count='834' backedge_count='42439' iicount='834' stamp='0.216'/>
<writer thread='9475'/>
<task_queued compile_id='23' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.216' comment='tiered' hot_count='256'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c317c10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c317d60: mov    0x8(%rsi),%r10d
  0x000000011c317d64: shl    $0x3,%r10
  0x000000011c317d68: cmp    %rax,%r10
  0x000000011c317d6b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c317d71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c317d7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c317d80: mov    %eax,-0x14000(%rsp)
  0x000000011c317d87: push   %rbp
  0x000000011c317d88: sub    $0x30,%rsp
  0x000000011c317d8c: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000011c317d8f: mov    %rsi,0x20(%rsp)
  0x000000011c317d94: callq  0x000000011c301ce0  ; OopMap{[32]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x000000011c317d99: add    $0x30,%rsp
  0x000000011c317d9d: pop    %rbp
  0x000000011c317d9e: test   %eax,-0xf830ca4(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c317da4: retq   
  0x000000011c317da5: nop
  0x000000011c317da6: nop
  0x000000011c317da7: mov    0x2a8(%r15),%rax
  0x000000011c317dae: movabs $0x0,%r10
  0x000000011c317db8: mov    %r10,0x2a8(%r15)
  0x000000011c317dbf: movabs $0x0,%r10
  0x000000011c317dc9: mov    %r10,0x2b0(%r15)
  0x000000011c317dd0: add    $0x30,%rsp
  0x000000011c317dd4: pop    %rbp
  0x000000011c317dd5: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c317dda: hlt    
  0x000000011c317ddb: hlt    
  0x000000011c317ddc: hlt    
  0x000000011c317ddd: hlt    
  0x000000011c317dde: hlt    
  0x000000011c317ddf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c317de0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c317de5: mov    %rsp,-0x28(%rsp)
  0x000000011c317dea: sub    $0x80,%rsp
  0x000000011c317df1: mov    %rax,0x78(%rsp)
  0x000000011c317df6: mov    %rcx,0x70(%rsp)
  0x000000011c317dfb: mov    %rdx,0x68(%rsp)
  0x000000011c317e00: mov    %rbx,0x60(%rsp)
  0x000000011c317e05: mov    %rbp,0x50(%rsp)
  0x000000011c317e0a: mov    %rsi,0x48(%rsp)
  0x000000011c317e0f: mov    %rdi,0x40(%rsp)
  0x000000011c317e14: mov    %r8,0x38(%rsp)
  0x000000011c317e19: mov    %r9,0x30(%rsp)
  0x000000011c317e1e: mov    %r10,0x28(%rsp)
  0x000000011c317e23: mov    %r11,0x20(%rsp)
  0x000000011c317e28: mov    %r12,0x18(%rsp)
  0x000000011c317e2d: mov    %r13,0x10(%rsp)
  0x000000011c317e32: mov    %r14,0x8(%rsp)
  0x000000011c317e37: mov    %r15,(%rsp)
  0x000000011c317e3b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c317e45: movabs $0x11c317de5,%rsi  ;   {internal_word}
  0x000000011c317e4f: mov    %rsp,%rdx
  0x000000011c317e52: and    $0xfffffffffffffff0,%rsp
  0x000000011c317e56: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c317e5b: hlt    
[Deopt Handler Code]
  0x000000011c317e5c: movabs $0x11c317e5c,%r10  ;   {section_word}
  0x000000011c317e66: push   %r10
  0x000000011c317e68: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c317e6d: hlt    
  0x000000011c317e6e: hlt    
  0x000000011c317e6f: hlt    
<nmethod compile_id='21' compiler='C1' level='1' entry='0x000000011c317d60' size='712' address='0x000000011c317c10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4632' iicount='4632' stamp='0.218'/>
<make_not_entrant thread='21763' compile_id='7' compiler='C1' level='3' stamp='0.218'/>
<writer thread='15107'/>
<task_queued compile_id='24' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='896' iicount='896' level='3' stamp='0.218' comment='tiered' hot_count='896'/>
<task_queued compile_id='25' method='java/lang/String getChars (II[CI)V' bytes='62' count='896' iicount='896' level='3' stamp='0.218' comment='tiered' hot_count='896'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c316b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;
  # this:     rsi:rsi   = &apos;java/util/BitSet&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000011c316d20: mov    0x8(%rsi),%r10d
  0x000000011c316d24: shl    $0x3,%r10
  0x000000011c316d28: cmp    %rax,%r10
  0x000000011c316d2b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c316d31: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c316d3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c316d40: mov    %eax,-0x14000(%rsp)
  0x000000011c316d47: push   %rbp
  0x000000011c316d48: sub    $0xa0,%rsp
  0x000000011c316d4f: mov    %edx,0x68(%rsp)
  0x000000011c316d53: movabs $0x11257e400,%rdi  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316d5d: mov    0xdc(%rdi),%ebx
  0x000000011c316d63: add    $0x8,%ebx
  0x000000011c316d66: mov    %ebx,0xdc(%rdi)
  0x000000011c316d6c: movabs $0x11245e890,%rdi  ;   {metadata({method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316d76: and    $0x1ff8,%ebx
  0x000000011c316d7c: cmp    $0x0,%ebx
  0x000000011c316d7f: je     0x000000011c317441  ;*iload_1
                                                ; - java.util.BitSet::get@0 (line 622)

  0x000000011c316d85: cmp    $0x0,%edx
  0x000000011c316d88: movabs $0x11257e400,%rdi  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316d92: movabs $0x108,%rbx
  0x000000011c316d9c: jge    0x000000011c316dac
  0x000000011c316da2: movabs $0x118,%rbx
  0x000000011c316dac: mov    (%rdi,%rbx,1),%rax
  0x000000011c316db0: lea    0x1(%rax),%rax
  0x000000011c316db4: mov    %rax,(%rdi,%rbx,1)
  0x000000011c316db8: jl     0x000000011c316f0f  ;*ifge
                                                ; - java.util.BitSet::get@1 (line 622)

  0x000000011c316dbe: mov    %rsi,%rdi
  0x000000011c316dc1: movabs $0x11257e400,%rbx  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316dcb: addq   $0x1,0x1d8(%rbx)
  0x000000011c316dd3: mov    %rsi,%rdi
  0x000000011c316dd6: mov    %rdi,%rsi          ;*invokespecial checkInvariants
                                                ; - java.util.BitSet::get@32 (line 625)

  0x000000011c316dd9: mov    %rdi,0x70(%rsp)
  0x000000011c316dde: nop
  0x000000011c316ddf: callq  0x000000011c24c0a0  ; OopMap{[112]=Oop off=196}
                                                ;*invokespecial checkInvariants
                                                ; - java.util.BitSet::get@32 (line 625)
                                                ;   {optimized virtual_call}
  0x000000011c316de4: movabs $0x11257e400,%rcx  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316dee: addq   $0x1,0x1e8(%rcx)
  0x000000011c316df6: movabs $0x112581c98,%rcx  ;   {metadata(method data for {method} {0x000000011245d398} &apos;wordIndex&apos; &apos;(I)I&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316e00: mov    0xdc(%rcx),%eax
  0x000000011c316e06: add    $0x8,%eax
  0x000000011c316e09: mov    %eax,0xdc(%rcx)
  0x000000011c316e0f: movabs $0x11245d398,%rcx  ;   {metadata({method} {0x000000011245d398} &apos;wordIndex&apos; &apos;(I)I&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316e19: and    $0x7ffff8,%eax
  0x000000011c316e1f: cmp    $0x0,%eax
  0x000000011c316e22: je     0x000000011c317458
  0x000000011c316e28: mov    0x68(%rsp),%edx
  0x000000011c316e2c: sar    $0x6,%edx
  0x000000011c316e2f: mov    0x70(%rsp),%rsi
  0x000000011c316e34: mov    0xc(%rsi),%ecx     ;*getfield wordsInUse
                                                ; - java.util.BitSet::get@42 (line 628)

  0x000000011c316e37: cmp    %ecx,%edx
  0x000000011c316e39: movabs $0x11257e400,%rcx  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316e43: movabs $0x1f8,%rax
  0x000000011c316e4d: jge    0x000000011c316e5d
  0x000000011c316e53: movabs $0x208,%rax
  0x000000011c316e5d: mov    (%rcx,%rax,1),%rdi
  0x000000011c316e61: lea    0x1(%rdi),%rdi
  0x000000011c316e65: mov    %rdi,(%rcx,%rax,1)
  0x000000011c316e69: jge    0x000000011c316ede  ;*if_icmpge
                                                ; - java.util.BitSet::get@45 (line 628)

  0x000000011c316e6f: mov    0x14(%rsi),%ecx
  0x000000011c316e72: shl    $0x3,%rcx          ;*getfield words
                                                ; - java.util.BitSet::get@49 (line 628)

  0x000000011c316e76: movslq %edx,%rax
  0x000000011c316e79: cmp    0xc(%rcx),%edx     ; implicit exception: dispatches to 0x000000011c31746f
  0x000000011c316e7c: jae    0x000000011c317479
  0x000000011c316e82: mov    0x10(%rcx,%rax,8),%rdx  ;*laload
                                                ; - java.util.BitSet::get@53 (line 628)

  0x000000011c316e87: mov    0x68(%rsp),%ecx
  0x000000011c316e8b: movabs $0x1,%rax
  0x000000011c316e95: shl    %cl,%rax
  0x000000011c316e98: and    %rax,%rdx
  0x000000011c316e9b: movabs $0x0,%rax
  0x000000011c316ea5: cmp    %rax,%rdx
  0x000000011c316ea8: movabs $0x11257e400,%rax  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316eb2: movabs $0x228,%rdx
  0x000000011c316ebc: jne    0x000000011c316ecc
  0x000000011c316ec2: movabs $0x218,%rdx
  0x000000011c316ecc: mov    (%rax,%rdx,1),%rsi
  0x000000011c316ed0: lea    0x1(%rsi),%rsi
  0x000000011c316ed4: mov    %rsi,(%rax,%rdx,1)
  0x000000011c316ed8: jne    0x000000011c316ee8  ;*lcmp
                                                ; - java.util.BitSet::get@59 (line 628)

  0x000000011c316ede: mov    $0x0,%eax
  0x000000011c316ee3: jmpq   0x000000011c316efd  ;*ireturn
                                                ; - java.util.BitSet::get@68 (line 628)

  0x000000011c316ee8: movabs $0x11257e400,%rax  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316ef2: incl   0x238(%rax)
  0x000000011c316ef8: mov    $0x1,%eax          ;*goto
                                                ; - java.util.BitSet::get@64 (line 628)

  0x000000011c316efd: and    $0x1,%eax
  0x000000011c316f00: add    $0xa0,%rsp
  0x000000011c316f07: pop    %rbp
  0x000000011c316f08: test   %eax,-0xf82fe0e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c316f0e: retq                      ;*ireturn
                                                ; - java.util.BitSet::get@68 (line 628)

  0x000000011c316f0f: nop
  0x000000011c316f10: jmpq   0x000000011c317491  ;   {no_reloc}
  0x000000011c316f15: add    %al,(%rax)
  0x000000011c316f17: add    %al,(%rax)
  0x000000011c316f19: add    %ch,%cl
  0x000000011c316f1b: jl     0x000000011c316f22
  0x000000011c316f1d: add    %al,(%rax)         ;*new  ; - java.util.BitSet::get@4 (line 623)

  0x000000011c316f1f: nop
  0x000000011c316f20: jmpq   0x000000011c3174b7  ;   {no_reloc}
  0x000000011c316f25: add    %al,(%rax)
  0x000000011c316f27: add    %al,(%rax)
  0x000000011c316f29: add    %cl,-0x77(%rax)
  0x000000011c316f2c: test   %ah,(%rax,%rax,4)
  0x000000011c316f2f: add    %al,(%rax)
  0x000000011c316f31: add    %cl,-0x75(%rcx)
  0x000000011c316f34: rex.RXB (bad) 
  0x000000011c316f36: lea    0x18(%rax),%rdi
  0x000000011c316f3a: cmp    0x70(%r15),%rdi
  0x000000011c316f3e: ja     0x000000011c3174c1
  0x000000011c316f44: mov    %rdi,0x60(%r15)
  0x000000011c316f48: mov    0xa8(%rdx),%rcx
  0x000000011c316f4f: mov    %rcx,(%rax)
  0x000000011c316f52: mov    %rdx,%rcx
  0x000000011c316f55: shr    $0x3,%rcx
  0x000000011c316f59: mov    %ecx,0x8(%rax)
  0x000000011c316f5c: xor    %rcx,%rcx
  0x000000011c316f5f: mov    %ecx,0xc(%rax)
  0x000000011c316f62: xor    %rcx,%rcx
  0x000000011c316f65: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.BitSet::get@8 (line 623)

  0x000000011c316f69: mov    %rax,%rbx
  0x000000011c316f6c: movabs $0x11257e400,%rdx  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c316f76: addq   $0x1,0x128(%rdx)
  0x000000011c316f7e: movabs $0x11257ece8,%rbx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c316f88: mov    0xdc(%rbx),%edx
  0x000000011c316f8e: add    $0x8,%edx
  0x000000011c316f91: mov    %edx,0xdc(%rbx)
  0x000000011c316f97: movabs $0x112338f30,%rbx  ;   {metadata({method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c316fa1: and    $0x7ffff8,%edx
  0x000000011c316fa7: cmp    $0x0,%edx
  0x000000011c316faa: je     0x000000011c3174ce
  0x000000011c316fb0: mov    %rax,%rbx
  0x000000011c316fb3: movabs $0x11257ece8,%rdx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c316fbd: addq   $0x1,0x108(%rdx)
  0x000000011c316fc5: movabs $0x11257f080,%rbx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c316fcf: mov    0xdc(%rbx),%edx
  0x000000011c316fd5: add    $0x8,%edx
  0x000000011c316fd8: mov    %edx,0xdc(%rbx)
  0x000000011c316fde: movabs $0x112335260,%rbx  ;   {metadata({method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c316fe8: and    $0x7ffff8,%edx
  0x000000011c316fee: cmp    $0x0,%edx
  0x000000011c316ff1: je     0x000000011c3174e5
  0x000000011c316ff7: mov    %rax,%rbx
  0x000000011c316ffa: movabs $0x11257f080,%rdx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c317004: addq   $0x1,0x108(%rdx)
  0x000000011c31700c: movabs $0x1124371c0,%rbx  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c317016: mov    0xdc(%rbx),%edx
  0x000000011c31701c: add    $0x8,%edx
  0x000000011c31701f: mov    %edx,0xdc(%rbx)
  0x000000011c317025: movabs $0x1122c0480,%rbx  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c31702f: and    $0x7ffff8,%edx
  0x000000011c317035: cmp    $0x0,%edx
  0x000000011c317038: je     0x000000011c3174fc
  0x000000011c31703e: mov    $0x10,%ebx
  0x000000011c317043: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c31704d: mov    %rax,%r11
  0x000000011c317050: movslq %ebx,%rbx
  0x000000011c317053: mov    %rbx,%rdi
  0x000000011c317056: cmp    $0xffffff,%rbx
  0x000000011c31705d: ja     0x000000011c317513
  0x000000011c317063: movabs $0x17,%rsi
  0x000000011c31706d: lea    (%rsi,%rbx,2),%rsi
  0x000000011c317071: and    $0xfffffffffffffff8,%rsi
  0x000000011c317075: mov    0x60(%r15),%rax
  0x000000011c317079: lea    (%rax,%rsi,1),%rsi
  0x000000011c31707d: cmp    0x70(%r15),%rsi
  0x000000011c317081: ja     0x000000011c317513
  0x000000011c317087: mov    %rsi,0x60(%r15)
  0x000000011c31708b: sub    %rax,%rsi
  0x000000011c31708e: movq   $0x1,(%rax)
  0x000000011c317095: mov    %rdx,%rcx
  0x000000011c317098: shr    $0x3,%rcx
  0x000000011c31709c: mov    %ecx,0x8(%rax)
  0x000000011c31709f: mov    %ebx,0xc(%rax)
  0x000000011c3170a2: sub    $0x10,%rsi
  0x000000011c3170a6: je     0x000000011c3170bd
  0x000000011c3170ac: xor    %rbx,%rbx
  0x000000011c3170af: shr    $0x3,%rsi
  0x000000011c3170b3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c3170b8: dec    %rsi
  0x000000011c3170bb: jne    0x000000011c3170b3  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)

  0x000000011c3170bd: mov    %rax,%r10
  0x000000011c3170c0: shr    $0x3,%r10
  0x000000011c3170c4: mov    %r10d,0x10(%r11)
  0x000000011c3170c8: mov    %r11,%rax
  0x000000011c3170cb: shr    $0x9,%rax
  0x000000011c3170cf: movabs $0x10c974000,%rdx
  0x000000011c3170d9: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)

  0x000000011c3170dd: mov    %r11,%rax
  0x000000011c3170e0: movabs $0x11257e400,%rdx  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c3170ea: mov    0x8(%rax),%eax
  0x000000011c3170ed: shl    $0x3,%rax
  0x000000011c3170f1: cmp    0x140(%rdx),%rax
  0x000000011c3170f8: jne    0x000000011c317107
  0x000000011c3170fa: addq   $0x1,0x148(%rdx)
  0x000000011c317102: jmpq   0x000000011c31716d
  0x000000011c317107: cmp    0x150(%rdx),%rax
  0x000000011c31710e: jne    0x000000011c31711d
  0x000000011c317110: addq   $0x1,0x158(%rdx)
  0x000000011c317118: jmpq   0x000000011c31716d
  0x000000011c31711d: cmpq   $0x0,0x140(%rdx)
  0x000000011c317128: jne    0x000000011c317141
  0x000000011c31712a: mov    %rax,0x140(%rdx)
  0x000000011c317131: movq   $0x1,0x148(%rdx)
  0x000000011c31713c: jmpq   0x000000011c31716d
  0x000000011c317141: cmpq   $0x0,0x150(%rdx)
  0x000000011c31714c: jne    0x000000011c317165
  0x000000011c31714e: mov    %rax,0x150(%rdx)
  0x000000011c317155: movq   $0x1,0x158(%rdx)
  0x000000011c317160: jmpq   0x000000011c31716d
  0x000000011c317165: addq   $0x1,0x138(%rdx)
  0x000000011c31716d: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c317177: mov    0xdc(%rdx),%esi
  0x000000011c31717d: add    $0x8,%esi
  0x000000011c317180: mov    %esi,0xdc(%rdx)
  0x000000011c317186: movabs $0x112339248,%rdx  ;   {metadata({method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c317190: and    $0x7ffff8,%esi
  0x000000011c317196: cmp    $0x0,%esi
  0x000000011c317199: je     0x000000011c31751d
  0x000000011c31719f: mov    %r11,%rax
  0x000000011c3171a2: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3171ac: addq   $0x1,0x108(%rdx)
  0x000000011c3171b4: movabs $0x715aa3d98,%rdx  ;   {oop(&quot;bitIndex &lt; 0: &quot;)}
  0x000000011c3171be: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.BitSet::get@17 (line 623)

  0x000000011c3171c1: mov    %r11,0x78(%rsp)
  0x000000011c3171c6: nop
  0x000000011c3171c7: callq  0x000000011c24c0a0  ; OopMap{[120]=Oop [128]=Oop off=1196}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.BitSet::get@17 (line 623)
                                                ;   {optimized virtual_call}
  0x000000011c3171cc: mov    0x78(%rsp),%rax
  0x000000011c3171d1: movabs $0x11257e400,%rdx  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c3171db: mov    0x8(%rax),%eax
  0x000000011c3171de: shl    $0x3,%rax
  0x000000011c3171e2: cmp    0x170(%rdx),%rax
  0x000000011c3171e9: jne    0x000000011c3171f8
  0x000000011c3171eb: addq   $0x1,0x178(%rdx)
  0x000000011c3171f3: jmpq   0x000000011c31725e
  0x000000011c3171f8: cmp    0x180(%rdx),%rax
  0x000000011c3171ff: jne    0x000000011c31720e
  0x000000011c317201: addq   $0x1,0x188(%rdx)
  0x000000011c317209: jmpq   0x000000011c31725e
  0x000000011c31720e: cmpq   $0x0,0x170(%rdx)
  0x000000011c317219: jne    0x000000011c317232
  0x000000011c31721b: mov    %rax,0x170(%rdx)
  0x000000011c317222: movq   $0x1,0x178(%rdx)
  0x000000011c31722d: jmpq   0x000000011c31725e
  0x000000011c317232: cmpq   $0x0,0x180(%rdx)
  0x000000011c31723d: jne    0x000000011c317256
  0x000000011c31723f: mov    %rax,0x180(%rdx)
  0x000000011c317246: movq   $0x1,0x188(%rdx)
  0x000000011c317251: jmpq   0x000000011c31725e
  0x000000011c317256: addq   $0x1,0x168(%rdx)
  0x000000011c31725e: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c317268: mov    0xdc(%rdx),%esi
  0x000000011c31726e: add    $0x8,%esi
  0x000000011c317271: mov    %esi,0xdc(%rdx)
  0x000000011c317277: movabs $0x112339708,%rdx  ;   {metadata({method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c317281: and    $0x7ffff8,%esi
  0x000000011c317287: cmp    $0x0,%esi
  0x000000011c31728a: je     0x000000011c317534
  0x000000011c317290: mov    0x78(%rsp),%rax
  0x000000011c317295: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31729f: addq   $0x1,0x108(%rdx)
  0x000000011c3172a7: mov    0x68(%rsp),%edx
  0x000000011c3172ab: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.BitSet::get@21 (line 623)

  0x000000011c3172b0: nop
  0x000000011c3172b1: nop
  0x000000011c3172b2: nop
  0x000000011c3172b3: nop
  0x000000011c3172b4: nop
  0x000000011c3172b5: nop
  0x000000011c3172b6: nop
  0x000000011c3172b7: callq  0x000000011c24c0a0  ; OopMap{[120]=Oop [128]=Oop off=1436}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.BitSet::get@21 (line 623)
                                                ;   {optimized virtual_call}
  0x000000011c3172bc: mov    0x78(%rsp),%rax
  0x000000011c3172c1: movabs $0x11257e400,%rdx  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c3172cb: mov    0x8(%rax),%eax
  0x000000011c3172ce: shl    $0x3,%rax
  0x000000011c3172d2: cmp    0x1a0(%rdx),%rax
  0x000000011c3172d9: jne    0x000000011c3172e8
  0x000000011c3172db: addq   $0x1,0x1a8(%rdx)
  0x000000011c3172e3: jmpq   0x000000011c31734e
  0x000000011c3172e8: cmp    0x1b0(%rdx),%rax
  0x000000011c3172ef: jne    0x000000011c3172fe
  0x000000011c3172f1: addq   $0x1,0x1b8(%rdx)
  0x000000011c3172f9: jmpq   0x000000011c31734e
  0x000000011c3172fe: cmpq   $0x0,0x1a0(%rdx)
  0x000000011c317309: jne    0x000000011c317322
  0x000000011c31730b: mov    %rax,0x1a0(%rdx)
  0x000000011c317312: movq   $0x1,0x1a8(%rdx)
  0x000000011c31731d: jmpq   0x000000011c31734e
  0x000000011c317322: cmpq   $0x0,0x1b0(%rdx)
  0x000000011c31732d: jne    0x000000011c317346
  0x000000011c31732f: mov    %rax,0x1b0(%rdx)
  0x000000011c317336: movq   $0x1,0x1b8(%rdx)
  0x000000011c317341: jmpq   0x000000011c31734e
  0x000000011c317346: addq   $0x1,0x198(%rdx)
  0x000000011c31734e: movabs $0x112581020,%rdx  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c317358: mov    0xdc(%rdx),%esi
  0x000000011c31735e: add    $0x8,%esi
  0x000000011c317361: mov    %esi,0xdc(%rdx)
  0x000000011c317367: movabs $0x11233a5f8,%rdx  ;   {metadata({method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c317371: and    $0x7ffff8,%esi
  0x000000011c317377: cmp    $0x0,%esi
  0x000000011c31737a: je     0x000000011c31754b
  0x000000011c317380: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c31738a: mov    0x60(%r15),%rax
  0x000000011c31738e: lea    0x18(%rax),%rdi
  0x000000011c317392: cmp    0x70(%r15),%rdi
  0x000000011c317396: ja     0x000000011c317562
  0x000000011c31739c: mov    %rdi,0x60(%r15)
  0x000000011c3173a0: mov    0xa8(%rdx),%rcx
  0x000000011c3173a7: mov    %rcx,(%rax)
  0x000000011c3173aa: mov    %rdx,%rcx
  0x000000011c3173ad: shr    $0x3,%rcx
  0x000000011c3173b1: mov    %ecx,0x8(%rax)
  0x000000011c3173b4: xor    %rcx,%rcx
  0x000000011c3173b7: mov    %ecx,0xc(%rax)
  0x000000011c3173ba: xor    %rcx,%rcx
  0x000000011c3173bd: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)

  0x000000011c3173c1: mov    0x78(%rsp),%rdx
  0x000000011c3173c6: mov    0x10(%rdx),%ecx
  0x000000011c3173c9: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)

  0x000000011c3173cd: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)

  0x000000011c3173d1: mov    %rax,%rdx
  0x000000011c3173d4: movabs $0x112581020,%rsi  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3173de: addq   $0x1,0x108(%rsi)
  0x000000011c3173e6: mov    %rcx,%rdx
  0x000000011c3173e9: mov    $0x0,%ecx
  0x000000011c3173ee: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)

  0x000000011c3173f1: mov    %rax,0x88(%rsp)
  0x000000011c3173f9: nop
  0x000000011c3173fa: nop
  0x000000011c3173fb: nop
  0x000000011c3173fc: nop
  0x000000011c3173fd: nop
  0x000000011c3173fe: nop
  0x000000011c3173ff: callq  0x000000011c24c0a0  ; OopMap{[128]=Oop [136]=Oop off=1764}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)
                                                ;   {optimized virtual_call}
  0x000000011c317404: mov    0x80(%rsp),%rax
  0x000000011c31740c: movabs $0x11257e400,%rdx  ;   {metadata(method data for {method} {0x000000011245e890} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x000000011c317416: addq   $0x1,0x1c8(%rdx)
  0x000000011c31741e: mov    0x88(%rsp),%rdx
  0x000000011c317426: mov    0x80(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.BitSet::get@27 (line 623)

  0x000000011c31742e: nop
  0x000000011c31742f: callq  0x000000011c24c0a0  ; OopMap{[128]=Oop off=1812}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.BitSet::get@27 (line 623)
                                                ;   {optimized virtual_call}
  0x000000011c317434: mov    0x80(%rsp),%rax
  0x000000011c31743c: jmpq   0x000000011c31759a
  0x000000011c317441: mov    %rdi,0x8(%rsp)
  0x000000011c317446: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31744e: callq  0x000000011c306120  ; OopMap{rsi=Oop off=1843}
                                                ;*synchronization entry
                                                ; - java.util.BitSet::get@-1 (line 622)
                                                ;   {runtime_call}
  0x000000011c317453: jmpq   0x000000011c316d85
  0x000000011c317458: mov    %rcx,0x8(%rsp)
  0x000000011c31745d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c317465: callq  0x000000011c306120  ; OopMap{[112]=Oop off=1866}
                                                ;*synchronization entry
                                                ; - java.util.BitSet::wordIndex@-1 (line 112)
                                                ; - java.util.BitSet::get@36 (line 627)
                                                ;   {runtime_call}
  0x000000011c31746a: jmpq   0x000000011c316e28
  0x000000011c31746f: callq  0x000000011c301ac0  ; OopMap{rcx=Oop off=1876}
                                                ;*laload
                                                ; - java.util.BitSet::get@53 (line 628)
                                                ;   {runtime_call}
  0x000000011c317474: callq  0x000000011c301ac0  ; OopMap{rcx=Oop off=1881}
                                                ;*laload
                                                ; - java.util.BitSet::get@53 (line 628)
                                                ;   {runtime_call}
  0x000000011c317479: mov    %rdx,(%rsp)
  0x000000011c31747d: callq  0x000000011c274080  ; OopMap{rcx=Oop off=1890}
                                                ;*laload
                                                ; - java.util.BitSet::get@53 (line 628)
                                                ;   {runtime_call}
  0x000000011c317482: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c31748c: mov    $0xa050f00,%eax
  0x000000011c317491: callq  0x000000011c305120  ; OopMap{off=1910}
                                                ;*new  ; - java.util.BitSet::get@4 (line 623)
                                                ;   {runtime_call}
  0x000000011c317496: jmpq   0x000000011c316f10
  0x000000011c31749b: mov    %rdx,%rdx
  0x000000011c31749e: callq  0x000000011c301f60  ; OopMap{off=1923}
                                                ;*new  ; - java.util.BitSet::get@4 (line 623)
                                                ;   {runtime_call}
  0x000000011c3174a3: jmpq   0x000000011c316f1f
  0x000000011c3174a8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c3174b2: mov    $0xa050f00,%eax
  0x000000011c3174b7: callq  0x000000011c305120  ; OopMap{rax=Oop off=1948}
                                                ;*new  ; - java.util.BitSet::get@8 (line 623)
                                                ;   {runtime_call}
  0x000000011c3174bc: jmpq   0x000000011c316f20
  0x000000011c3174c1: mov    %rdx,%rdx
  0x000000011c3174c4: callq  0x000000011c302220  ; OopMap{[128]=Oop off=1961}
                                                ;*new  ; - java.util.BitSet::get@8 (line 623)
                                                ;   {runtime_call}
  0x000000011c3174c9: jmpq   0x000000011c316f69
  0x000000011c3174ce: mov    %rbx,0x8(%rsp)
  0x000000011c3174d3: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3174db: callq  0x000000011c306120  ; OopMap{[128]=Oop rax=Oop off=1984}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)
                                                ;   {runtime_call}
  0x000000011c3174e0: jmpq   0x000000011c316fb0
  0x000000011c3174e5: mov    %rbx,0x8(%rsp)
  0x000000011c3174ea: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3174f2: callq  0x000000011c306120  ; OopMap{[128]=Oop rax=Oop off=2007}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)
                                                ;   {runtime_call}
  0x000000011c3174f7: jmpq   0x000000011c316ff7
  0x000000011c3174fc: mov    %rbx,0x8(%rsp)
  0x000000011c317501: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c317509: callq  0x000000011c306120  ; OopMap{[128]=Oop rax=Oop off=2030}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)
                                                ;   {runtime_call}
  0x000000011c31750e: jmpq   0x000000011c31703e
  0x000000011c317513: callq  0x000000011c302b20  ; OopMap{[128]=Oop r11=Oop off=2040}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)
                                                ;   {runtime_call}
  0x000000011c317518: jmpq   0x000000011c3170bd
  0x000000011c31751d: mov    %rdx,0x8(%rsp)
  0x000000011c317522: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31752a: callq  0x000000011c306120  ; OopMap{[128]=Oop r11=Oop off=2063}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.BitSet::get@17 (line 623)
                                                ;   {runtime_call}
  0x000000011c31752f: jmpq   0x000000011c31719f
  0x000000011c317534: mov    %rdx,0x8(%rsp)
  0x000000011c317539: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c317541: callq  0x000000011c306120  ; OopMap{[120]=Oop [128]=Oop off=2086}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.BitSet::get@21 (line 623)
                                                ;   {runtime_call}
  0x000000011c317546: jmpq   0x000000011c317290
  0x000000011c31754b: mov    %rdx,0x8(%rsp)
  0x000000011c317550: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c317558: callq  0x000000011c306120  ; OopMap{[120]=Oop [128]=Oop off=2109}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)
                                                ;   {runtime_call}
  0x000000011c31755d: jmpq   0x000000011c317380
  0x000000011c317562: mov    %rdx,%rdx
  0x000000011c317565: callq  0x000000011c302220  ; OopMap{[120]=Oop [128]=Oop off=2122}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)
                                                ;   {runtime_call}
  0x000000011c31756a: jmpq   0x000000011c3173c1
  0x000000011c31756f: nop
  0x000000011c317570: nop
  0x000000011c317571: mov    0x2a8(%r15),%rax
  0x000000011c317578: movabs $0x0,%r10
  0x000000011c317582: mov    %r10,0x2a8(%r15)
  0x000000011c317589: movabs $0x0,%r10
  0x000000011c317593: mov    %r10,0x2b0(%r15)
  0x000000011c31759a: add    $0xa0,%rsp
  0x000000011c3175a1: pop    %rbp
  0x000000011c3175a2: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c3175a7: hlt    
  0x000000011c3175a8: hlt    
  0x000000011c3175a9: hlt    
  0x000000011c3175aa: hlt    
  0x000000011c3175ab: hlt    
  0x000000011c3175ac: hlt    
  0x000000011c3175ad: hlt    
  0x000000011c3175ae: hlt    
  0x000000011c3175af: hlt    
  0x000000011c3175b0: hlt    
  0x000000011c3175b1: hlt    
  0x000000011c3175b2: hlt    
  0x000000011c3175b3: hlt    
  0x000000011c3175b4: hlt    
  0x000000011c3175b5: hlt    
  0x000000011c3175b6: hlt    
  0x000000011c3175b7: hlt    
  0x000000011c3175b8: hlt    
  0x000000011c3175b9: hlt    
  0x000000011c3175ba: hlt    
  0x000000011c3175bb: hlt    
  0x000000011c3175bc: hlt    
  0x000000011c3175bd: hlt    
  0x000000011c3175be: hlt    
  0x000000011c3175bf: hlt    
[Stub Code]
  0x000000011c3175c0: nop                       ;   {no_reloc}
  0x000000011c3175c1: nop
  0x000000011c3175c2: nop
  0x000000011c3175c3: nop
  0x000000011c3175c4: nop
  0x000000011c3175c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3175cf: jmpq   0x000000011c3175cf  ;   {runtime_call}
  0x000000011c3175d4: nop
  0x000000011c3175d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3175df: jmpq   0x000000011c3175df  ;   {runtime_call}
  0x000000011c3175e4: nop
  0x000000011c3175e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3175ef: jmpq   0x000000011c3175ef  ;   {runtime_call}
  0x000000011c3175f4: nop
  0x000000011c3175f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3175ff: jmpq   0x000000011c3175ff  ;   {runtime_call}
  0x000000011c317604: nop
  0x000000011c317605: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31760f: jmpq   0x000000011c31760f  ;   {runtime_call}
[Exception Handler]
  0x000000011c317614: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c317619: mov    %rsp,-0x28(%rsp)
  0x000000011c31761e: sub    $0x80,%rsp
  0x000000011c317625: mov    %rax,0x78(%rsp)
  0x000000011c31762a: mov    %rcx,0x70(%rsp)
  0x000000011c31762f: mov    %rdx,0x68(%rsp)
  0x000000011c317634: mov    %rbx,0x60(%rsp)
  0x000000011c317639: mov    %rbp,0x50(%rsp)
  0x000000011c31763e: mov    %rsi,0x48(%rsp)
  0x000000011c317643: mov    %rdi,0x40(%rsp)
  0x000000011c317648: mov    %r8,0x38(%rsp)
  0x000000011c31764d: mov    %r9,0x30(%rsp)
  0x000000011c317652: mov    %r10,0x28(%rsp)
  0x000000011c317657: mov    %r11,0x20(%rsp)
  0x000000011c31765c: mov    %r12,0x18(%rsp)
  0x000000011c317661: mov    %r13,0x10(%rsp)
  0x000000011c317666: mov    %r14,0x8(%rsp)
  0x000000011c31766b: mov    %r15,(%rsp)
  0x000000011c31766f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c317679: movabs $0x11c317619,%rsi  ;   {internal_word}
  0x000000011c317683: mov    %rsp,%rdx
  0x000000011c317686: and    $0xfffffffffffffff0,%rsp
  0x000000011c31768a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c31768f: hlt    
[Deopt Handler Code]
  0x000000011c317690: movabs $0x11c317690,%r10  ;   {section_word}
  0x000000011c31769a: push   %r10
  0x000000011c31769c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3176a1: hlt    
  0x000000011c3176a2: hlt    
  0x000000011c3176a3: hlt    
  0x000000011c3176a4: hlt    
  0x000000011c3176a5: hlt    
  0x000000011c3176a6: hlt    
  0x000000011c3176a7: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x000000011c316d20' size='4296' address='0x000000011c316b10' relocation_offset='296' insts_offset='528' stub_offset='2736' scopes_data_offset='3048' scopes_pcs_offset='3528' dependencies_offset='4264' nul_chk_table_offset='4272' oops_offset='2968' method='java/util/BitSet get (I)Z' bytes='69' count='384' iicount='384' stamp='0.230'/>
<writer thread='9475'/>
<task_queued compile_id='26' method='java/util/ArrayList size ()I' bytes='5' count='384' iicount='384' level='1' stamp='0.230' comment='tiered' hot_count='384'/>
<task_queued compile_id='27' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='1280' iicount='1280' level='3' stamp='0.230' comment='tiered' hot_count='1280'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c31ad90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c4e90} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c31af00: mov    0x8(%rsi),%r10d
  0x000000011c31af04: shl    $0x3,%r10
  0x000000011c31af08: cmp    %rax,%r10
  0x000000011c31af0b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c31af11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c31af1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c31af20: mov    %eax,-0x14000(%rsp)
  0x000000011c31af27: push   %rbp
  0x000000011c31af28: sub    $0x30,%rsp
  0x000000011c31af2c: movabs $0x112574808,%rcx  ;   {metadata(method data for {method} {0x00000001122c4e90} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31af36: mov    0xdc(%rcx),%edi
  0x000000011c31af3c: add    $0x8,%edi
  0x000000011c31af3f: mov    %edi,0xdc(%rcx)
  0x000000011c31af45: movabs $0x1122c4e90,%rcx  ;   {metadata({method} {0x00000001122c4e90} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31af4f: and    $0x1ff8,%edi
  0x000000011c31af55: cmp    $0x0,%edi
  0x000000011c31af58: je     0x000000011c31b00b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x000000011c31af5e: mov    %rsi,%rcx
  0x000000011c31af61: movabs $0x112574808,%rdi  ;   {metadata(method data for {method} {0x00000001122c4e90} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31af6b: mov    0x8(%rcx),%ecx
  0x000000011c31af6e: shl    $0x3,%rcx
  0x000000011c31af72: cmp    0x110(%rdi),%rcx
  0x000000011c31af79: jne    0x000000011c31af88
  0x000000011c31af7b: addq   $0x1,0x118(%rdi)
  0x000000011c31af83: jmpq   0x000000011c31afee
  0x000000011c31af88: cmp    0x120(%rdi),%rcx
  0x000000011c31af8f: jne    0x000000011c31af9e
  0x000000011c31af91: addq   $0x1,0x128(%rdi)
  0x000000011c31af99: jmpq   0x000000011c31afee
  0x000000011c31af9e: cmpq   $0x0,0x110(%rdi)
  0x000000011c31afa9: jne    0x000000011c31afc2
  0x000000011c31afab: mov    %rcx,0x110(%rdi)
  0x000000011c31afb2: movq   $0x1,0x118(%rdi)
  0x000000011c31afbd: jmpq   0x000000011c31afee
  0x000000011c31afc2: cmpq   $0x0,0x120(%rdi)
  0x000000011c31afcd: jne    0x000000011c31afe6
  0x000000011c31afcf: mov    %rcx,0x120(%rdi)
  0x000000011c31afd6: movq   $0x1,0x128(%rdi)
  0x000000011c31afe1: jmpq   0x000000011c31afee
  0x000000011c31afe6: addq   $0x1,0x108(%rdi)
  0x000000011c31afee: mov    $0x0,%ecx          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x000000011c31aff3: nop
  0x000000011c31aff4: nop
  0x000000011c31aff5: nop
  0x000000011c31aff6: nop
  0x000000011c31aff7: callq  0x000000011c24c0a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x000000011c31affc: and    $0x1,%eax
  0x000000011c31afff: add    $0x30,%rsp
  0x000000011c31b003: pop    %rbp
  0x000000011c31b004: test   %eax,-0xf833f0a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31b00a: retq   
  0x000000011c31b00b: mov    %rcx,0x8(%rsp)
  0x000000011c31b010: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31b018: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x000000011c31b01d: jmpq   0x000000011c31af5e
  0x000000011c31b022: nop
  0x000000011c31b023: nop
  0x000000011c31b024: mov    0x2a8(%r15),%rax
  0x000000011c31b02b: movabs $0x0,%r10
  0x000000011c31b035: mov    %r10,0x2a8(%r15)
  0x000000011c31b03c: movabs $0x0,%r10
  0x000000011c31b046: mov    %r10,0x2b0(%r15)
  0x000000011c31b04d: add    $0x30,%rsp
  0x000000011c31b051: pop    %rbp
  0x000000011c31b052: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c31b057: hlt    
  0x000000011c31b058: hlt    
  0x000000011c31b059: hlt    
  0x000000011c31b05a: hlt    
  0x000000011c31b05b: hlt    
  0x000000011c31b05c: hlt    
  0x000000011c31b05d: hlt    
  0x000000011c31b05e: hlt    
  0x000000011c31b05f: hlt    
[Stub Code]
  0x000000011c31b060: nop                       ;   {no_reloc}
  0x000000011c31b061: nop
  0x000000011c31b062: nop
  0x000000011c31b063: nop
  0x000000011c31b064: nop
  0x000000011c31b065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31b06f: jmpq   0x000000011c31b06f  ;   {runtime_call}
[Exception Handler]
  0x000000011c31b074: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c31b079: mov    %rsp,-0x28(%rsp)
  0x000000011c31b07e: sub    $0x80,%rsp
  0x000000011c31b085: mov    %rax,0x78(%rsp)
  0x000000011c31b08a: mov    %rcx,0x70(%rsp)
  0x000000011c31b08f: mov    %rdx,0x68(%rsp)
  0x000000011c31b094: mov    %rbx,0x60(%rsp)
  0x000000011c31b099: mov    %rbp,0x50(%rsp)
  0x000000011c31b09e: mov    %rsi,0x48(%rsp)
  0x000000011c31b0a3: mov    %rdi,0x40(%rsp)
  0x000000011c31b0a8: mov    %r8,0x38(%rsp)
  0x000000011c31b0ad: mov    %r9,0x30(%rsp)
  0x000000011c31b0b2: mov    %r10,0x28(%rsp)
  0x000000011c31b0b7: mov    %r11,0x20(%rsp)
  0x000000011c31b0bc: mov    %r12,0x18(%rsp)
  0x000000011c31b0c1: mov    %r13,0x10(%rsp)
  0x000000011c31b0c6: mov    %r14,0x8(%rsp)
  0x000000011c31b0cb: mov    %r15,(%rsp)
  0x000000011c31b0cf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c31b0d9: movabs $0x11c31b079,%rsi  ;   {internal_word}
  0x000000011c31b0e3: mov    %rsp,%rdx
  0x000000011c31b0e6: and    $0xfffffffffffffff0,%rsp
  0x000000011c31b0ea: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c31b0ef: hlt    
[Deopt Handler Code]
  0x000000011c31b0f0: movabs $0x11c31b0f0,%r10  ;   {section_word}
  0x000000011c31b0fa: push   %r10
  0x000000011c31b0fc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c31b101: hlt    
  0x000000011c31b102: hlt    
  0x000000011c31b103: hlt    
  0x000000011c31b104: hlt    
  0x000000011c31b105: hlt    
  0x000000011c31b106: hlt    
  0x000000011c31b107: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x000000011c31af00' size='1040' address='0x000000011c31ad90' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='663' iicount='663' stamp='0.233'/>
<writer thread='15107'/>
<task_queued compile_id='28' method='java/lang/String indexOf (I)I' bytes='7' count='896' iicount='896' level='3' stamp='0.233' comment='tiered' hot_count='896'/>
<writer thread='22531'/>
<task_queued compile_id='29' method='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo access$000 (Lcom/jep/github/interview/concurrency/threadDemo/VisibilityDemo;)Z' bytes='5' count='128' iicount='128' level='1' stamp='0.233' comment='tiered' hot_count='128'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c319f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000011c31a0a0: mov    0x8(%rsi),%r10d
  0x000000011c31a0a4: shl    $0x3,%r10
  0x000000011c31a0a8: cmp    %rax,%r10
  0x000000011c31a0ab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c31a0b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c31a0bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c31a0c0: mov    %eax,-0x14000(%rsp)
  0x000000011c31a0c7: push   %rbp
  0x000000011c31a0c8: sub    $0xa0,%rsp
  0x000000011c31a0cf: movabs $0x1124d7970,%rdi  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31a0d9: mov    0xdc(%rdi),%ebx
  0x000000011c31a0df: add    $0x8,%ebx
  0x000000011c31a0e2: mov    %ebx,0xdc(%rdi)
  0x000000011c31a0e8: movabs $0x1123354e0,%rdi  ;   {metadata({method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31a0f2: and    $0x1ff8,%ebx
  0x000000011c31a0f8: cmp    $0x0,%ebx
  0x000000011c31a0fb: je     0x000000011c31a3af  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x000000011c31a101: mov    0x10(%rsi),%edi
  0x000000011c31a104: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000011c31a108: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000011c31a3c6
  0x000000011c31a10b: mov    %rdx,%rax
  0x000000011c31a10e: sub    %ebx,%eax
  0x000000011c31a110: cmp    $0x0,%eax
  0x000000011c31a113: movabs $0x1124d7970,%rax  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31a11d: movabs $0x108,%rcx
  0x000000011c31a127: jle    0x000000011c31a137
  0x000000011c31a12d: movabs $0x118,%rcx
  0x000000011c31a137: mov    (%rax,%rcx,1),%r8
  0x000000011c31a13b: lea    0x1(%r8),%r8
  0x000000011c31a13f: mov    %r8,(%rax,%rcx,1)
  0x000000011c31a143: jle    0x000000011c31a3a0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000011c31a149: mov    %ebx,0x78(%rsp)
  0x000000011c31a14d: mov    %rdi,0x80(%rsp)
  0x000000011c31a155: mov    %rsi,%rax
  0x000000011c31a158: movabs $0x1124d7970,%rcx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31a162: addq   $0x1,0x128(%rcx)
  0x000000011c31a16a: mov    %rsi,%rax
  0x000000011c31a16d: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000011c31a170: mov    %rax,0x88(%rsp)
  0x000000011c31a178: nop
  0x000000011c31a179: nop
  0x000000011c31a17a: nop
  0x000000011c31a17b: nop
  0x000000011c31a17c: nop
  0x000000011c31a17d: nop
  0x000000011c31a17e: nop
  0x000000011c31a17f: callq  0x000000011c24c0a0  ; OopMap{[128]=Oop [136]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000011c31a184: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000011c31a187: movabs $0x1124d7970,%rbx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31a191: addq   $0x1,0x138(%rbx)
  0x000000011c31a199: movabs $0x11258f020,%rbx  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31a1a3: mov    0xdc(%rbx),%edx
  0x000000011c31a1a9: add    $0x8,%edx
  0x000000011c31a1ac: mov    %edx,0xdc(%rbx)
  0x000000011c31a1b2: movabs $0x1123dac50,%rbx  ;   {metadata({method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31a1bc: and    $0x7ffff8,%edx
  0x000000011c31a1c2: cmp    $0x0,%edx
  0x000000011c31a1c5: je     0x000000011c31a3cb
  0x000000011c31a1cb: mov    %r8,%rbx
  0x000000011c31a1ce: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c31a1d8: movslq %ebx,%rbx
  0x000000011c31a1db: mov    %rbx,%rdi
  0x000000011c31a1de: cmp    $0xffffff,%rbx
  0x000000011c31a1e5: ja     0x000000011c31a3e2
  0x000000011c31a1eb: movabs $0x17,%rsi
  0x000000011c31a1f5: lea    (%rsi,%rbx,2),%rsi
  0x000000011c31a1f9: and    $0xfffffffffffffff8,%rsi
  0x000000011c31a1fd: mov    0x60(%r15),%rax
  0x000000011c31a201: lea    (%rax,%rsi,1),%rsi
  0x000000011c31a205: cmp    0x70(%r15),%rsi
  0x000000011c31a209: ja     0x000000011c31a3e2
  0x000000011c31a20f: mov    %rsi,0x60(%r15)
  0x000000011c31a213: sub    %rax,%rsi
  0x000000011c31a216: movq   $0x1,(%rax)
  0x000000011c31a21d: mov    %rdx,%rcx
  0x000000011c31a220: shr    $0x3,%rcx
  0x000000011c31a224: mov    %ecx,0x8(%rax)
  0x000000011c31a227: mov    %ebx,0xc(%rax)
  0x000000011c31a22a: sub    $0x10,%rsi
  0x000000011c31a22e: je     0x000000011c31a245
  0x000000011c31a234: xor    %rbx,%rbx
  0x000000011c31a237: shr    $0x3,%rsi
  0x000000011c31a23b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c31a240: dec    %rsi
  0x000000011c31a243: jne    0x000000011c31a23b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011c31a245: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31a24f: addq   $0x1,0x108(%rsi)
  0x000000011c31a257: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31a261: mov    0xdc(%rsi),%edx
  0x000000011c31a267: add    $0x8,%edx
  0x000000011c31a26a: mov    %edx,0xdc(%rsi)
  0x000000011c31a270: movabs $0x1123b6508,%rsi  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31a27a: and    $0x7ffff8,%edx
  0x000000011c31a280: cmp    $0x0,%edx
  0x000000011c31a283: je     0x000000011c31a3ec
  0x000000011c31a289: mov    0x78(%rsp),%ebx
  0x000000011c31a28d: cmp    %r8d,%ebx
  0x000000011c31a290: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31a29a: movabs $0x108,%rdx
  0x000000011c31a2a4: jg     0x000000011c31a2b4
  0x000000011c31a2aa: movabs $0x118,%rdx
  0x000000011c31a2b4: mov    (%rsi,%rdx,1),%rcx
  0x000000011c31a2b8: lea    0x1(%rcx),%rcx
  0x000000011c31a2bc: mov    %rcx,(%rsi,%rdx,1)
  0x000000011c31a2c0: jg     0x000000011c31a2db  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011c31a2c6: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31a2d0: incl   0x128(%rsi)
  0x000000011c31a2d6: jmpq   0x000000011c31a2de  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011c31a2db: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011c31a2de: mov    0x80(%rsp),%rdi
  0x000000011c31a2e6: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31a2f0: addq   $0x1,0x118(%rsi)
  0x000000011c31a2f8: mov    %rdi,%rsi
  0x000000011c31a2fb: mov    $0x0,%edx
  0x000000011c31a300: mov    %rax,%rcx
  0x000000011c31a303: mov    $0x0,%r8d
  0x000000011c31a309: mov    %rbx,%r9
  0x000000011c31a30c: mov    %rax,0x90(%rsp)
  0x000000011c31a314: lea    (%rdx,%r9,1),%rdi
  0x000000011c31a318: cmp    0xc(%rsi),%edi
  0x000000011c31a31b: ja     0x000000011c31a403
  0x000000011c31a321: lea    (%r8,%r9,1),%rdi
  0x000000011c31a325: cmp    0xc(%rcx),%edi
  0x000000011c31a328: ja     0x000000011c31a403
  0x000000011c31a32e: test   %r9d,%r9d
  0x000000011c31a331: jl     0x000000011c31a403
  0x000000011c31a337: je     0x000000011c31a373
  0x000000011c31a33d: movslq %edx,%rdx
  0x000000011c31a340: movslq %r8d,%r8
  0x000000011c31a343: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011c31a348: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011c31a34d: mov    %r9,%rdx
  0x000000011c31a350: test   $0xf,%esp
  0x000000011c31a356: je     0x000000011c31a36e
  0x000000011c31a35c: sub    $0x8,%rsp
  0x000000011c31a360: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011c31a365: add    $0x8,%rsp
  0x000000011c31a369: jmpq   0x000000011c31a373
  0x000000011c31a36e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011c31a373: mov    0x90(%rsp),%rax
  0x000000011c31a37b: mov    0x88(%rsp),%rsi
  0x000000011c31a383: mov    %rax,%r10
  0x000000011c31a386: shr    $0x3,%r10
  0x000000011c31a38a: mov    %r10d,0x10(%rsi)
  0x000000011c31a38e: shr    $0x9,%rsi
  0x000000011c31a392: movabs $0x10c974000,%rdi
  0x000000011c31a39c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x000000011c31a3a0: add    $0xa0,%rsp
  0x000000011c31a3a7: pop    %rbp
  0x000000011c31a3a8: test   %eax,-0xf8332ae(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31a3ae: retq   
  0x000000011c31a3af: mov    %rdi,0x8(%rsp)
  0x000000011c31a3b4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31a3bc: callq  0x000000011c306120  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x000000011c31a3c1: jmpq   0x000000011c31a101
  0x000000011c31a3c6: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000011c31a3cb: mov    %rbx,0x8(%rsp)
  0x000000011c31a3d0: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31a3d8: callq  0x000000011c306120  ; OopMap{[128]=Oop [136]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011c31a3dd: jmpq   0x000000011c31a1cb
  0x000000011c31a3e2: callq  0x000000011c302b20  ; OopMap{[128]=Oop [136]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011c31a3e7: jmpq   0x000000011c31a245
  0x000000011c31a3ec: mov    %rsi,0x8(%rsp)
  0x000000011c31a3f1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31a3f9: callq  0x000000011c306120  ; OopMap{[128]=Oop [136]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011c31a3fe: jmpq   0x000000011c31a289
  0x000000011c31a403: nop
  0x000000011c31a404: nop
  0x000000011c31a405: nop
  0x000000011c31a406: nop
  0x000000011c31a407: callq  0x000000011c24c520  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x000000011c31a40c: jmpq   0x000000011c31a373
  0x000000011c31a411: nop
  0x000000011c31a412: nop
  0x000000011c31a413: mov    0x2a8(%r15),%rax
  0x000000011c31a41a: movabs $0x0,%r10
  0x000000011c31a424: mov    %r10,0x2a8(%r15)
  0x000000011c31a42b: movabs $0x0,%r10
  0x000000011c31a435: mov    %r10,0x2b0(%r15)
  0x000000011c31a43c: add    $0xa0,%rsp
  0x000000011c31a443: pop    %rbp
  0x000000011c31a444: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c31a449: hlt    
  0x000000011c31a44a: hlt    
  0x000000011c31a44b: hlt    
  0x000000011c31a44c: hlt    
  0x000000011c31a44d: hlt    
  0x000000011c31a44e: hlt    
  0x000000011c31a44f: hlt    
  0x000000011c31a450: hlt    
  0x000000011c31a451: hlt    
  0x000000011c31a452: hlt    
  0x000000011c31a453: hlt    
  0x000000011c31a454: hlt    
  0x000000011c31a455: hlt    
  0x000000011c31a456: hlt    
  0x000000011c31a457: hlt    
  0x000000011c31a458: hlt    
  0x000000011c31a459: hlt    
  0x000000011c31a45a: hlt    
  0x000000011c31a45b: hlt    
  0x000000011c31a45c: hlt    
  0x000000011c31a45d: hlt    
  0x000000011c31a45e: hlt    
  0x000000011c31a45f: hlt    
[Stub Code]
  0x000000011c31a460: nop                       ;   {no_reloc}
  0x000000011c31a461: nop
  0x000000011c31a462: nop
  0x000000011c31a463: nop
  0x000000011c31a464: nop
  0x000000011c31a465: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31a46f: jmpq   0x000000011c31a46f  ;   {runtime_call}
  0x000000011c31a474: nop
  0x000000011c31a475: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31a47f: jmpq   0x000000011c31a47f  ;   {runtime_call}
[Exception Handler]
  0x000000011c31a484: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c31a489: mov    %rsp,-0x28(%rsp)
  0x000000011c31a48e: sub    $0x80,%rsp
  0x000000011c31a495: mov    %rax,0x78(%rsp)
  0x000000011c31a49a: mov    %rcx,0x70(%rsp)
  0x000000011c31a49f: mov    %rdx,0x68(%rsp)
  0x000000011c31a4a4: mov    %rbx,0x60(%rsp)
  0x000000011c31a4a9: mov    %rbp,0x50(%rsp)
  0x000000011c31a4ae: mov    %rsi,0x48(%rsp)
  0x000000011c31a4b3: mov    %rdi,0x40(%rsp)
  0x000000011c31a4b8: mov    %r8,0x38(%rsp)
  0x000000011c31a4bd: mov    %r9,0x30(%rsp)
  0x000000011c31a4c2: mov    %r10,0x28(%rsp)
  0x000000011c31a4c7: mov    %r11,0x20(%rsp)
  0x000000011c31a4cc: mov    %r12,0x18(%rsp)
  0x000000011c31a4d1: mov    %r13,0x10(%rsp)
  0x000000011c31a4d6: mov    %r14,0x8(%rsp)
  0x000000011c31a4db: mov    %r15,(%rsp)
  0x000000011c31a4df: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c31a4e9: movabs $0x11c31a489,%rsi  ;   {internal_word}
  0x000000011c31a4f3: mov    %rsp,%rdx
  0x000000011c31a4f6: and    $0xfffffffffffffff0,%rsp
  0x000000011c31a4fa: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c31a4ff: hlt    
[Deopt Handler Code]
  0x000000011c31a500: movabs $0x11c31a500,%r10  ;   {section_word}
  0x000000011c31a50a: push   %r10
  0x000000011c31a50c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c31a511: hlt    
  0x000000011c31a512: hlt    
  0x000000011c31a513: hlt    
  0x000000011c31a514: hlt    
  0x000000011c31a515: hlt    
  0x000000011c31a516: hlt    
  0x000000011c31a517: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x000000011c31a0a0' size='2128' address='0x000000011c319f10' relocation_offset='296' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='1294' iicount='1294' stamp='0.241'/>
Decoding compiled method 0x000000011c319c10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001126c2ce8} &apos;access$000&apos; &apos;(Lcom/jep/github/interview/concurrency/threadDemo/VisibilityDemo;)Z&apos; in &apos;com/jep/github/interview/concurrency/threadDemo/VisibilityDemo&apos;
  # parm0:    rsi:rsi   = &apos;com/jep/github/interview/concurrency/threadDemo/VisibilityDemo&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c319d60: mov    %eax,-0x14000(%rsp)
  0x000000011c319d67: push   %rbp
  0x000000011c319d68: sub    $0x30,%rsp         ;*aload_0
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo::access$000@0 (line 10)

  0x000000011c319d6c: movsbl 0xc(%rsi),%eax     ;*getfield flag
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo::access$000@1 (line 10)
                                                ; implicit exception: dispatches to 0x000000011c319d7f
  0x000000011c319d70: and    $0x1,%eax
  0x000000011c319d73: add    $0x30,%rsp
  0x000000011c319d77: pop    %rbp
  0x000000011c319d78: test   %eax,-0xf832c7e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c319d7e: retq   
  0x000000011c319d7f: callq  0x000000011c301ac0  ; OopMap{off=36}
                                                ;*getfield flag
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo::access$000@1 (line 10)
                                                ;   {runtime_call}
  0x000000011c319d84: nop
  0x000000011c319d85: nop
  0x000000011c319d86: mov    0x2a8(%r15),%rax
  0x000000011c319d8d: movabs $0x0,%r10
  0x000000011c319d97: mov    %r10,0x2a8(%r15)
  0x000000011c319d9e: movabs $0x0,%r10
  0x000000011c319da8: mov    %r10,0x2b0(%r15)
  0x000000011c319daf: add    $0x30,%rsp
  0x000000011c319db3: pop    %rbp
  0x000000011c319db4: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c319db9: hlt    
  0x000000011c319dba: hlt    
  0x000000011c319dbb: hlt    
  0x000000011c319dbc: hlt    
  0x000000011c319dbd: hlt    
  0x000000011c319dbe: hlt    
  0x000000011c319dbf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c319dc0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c319dc5: mov    %rsp,-0x28(%rsp)
  0x000000011c319dca: sub    $0x80,%rsp
  0x000000011c319dd1: mov    %rax,0x78(%rsp)
  0x000000011c319dd6: mov    %rcx,0x70(%rsp)
  0x000000011c319ddb: mov    %rdx,0x68(%rsp)
  0x000000011c319de0: mov    %rbx,0x60(%rsp)
  0x000000011c319de5: mov    %rbp,0x50(%rsp)
  0x000000011c319dea: mov    %rsi,0x48(%rsp)
  0x000000011c319def: mov    %rdi,0x40(%rsp)
  0x000000011c319df4: mov    %r8,0x38(%rsp)
  0x000000011c319df9: mov    %r9,0x30(%rsp)
  0x000000011c319dfe: mov    %r10,0x28(%rsp)
  0x000000011c319e03: mov    %r11,0x20(%rsp)
  0x000000011c319e08: mov    %r12,0x18(%rsp)
  0x000000011c319e0d: mov    %r13,0x10(%rsp)
  0x000000011c319e12: mov    %r14,0x8(%rsp)
  0x000000011c319e17: mov    %r15,(%rsp)
  0x000000011c319e1b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c319e25: movabs $0x11c319dc5,%rsi  ;   {internal_word}
  0x000000011c319e2f: mov    %rsp,%rdx
  0x000000011c319e32: and    $0xfffffffffffffff0,%rsp
  0x000000011c319e36: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c319e3b: hlt    
[Deopt Handler Code]
  0x000000011c319e3c: movabs $0x11c319e3c,%r10  ;   {section_word}
  0x000000011c319e46: push   %r10
  0x000000011c319e48: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c319e4d: hlt    
  0x000000011c319e4e: hlt    
  0x000000011c319e4f: hlt    
<nmethod compile_id='29' compiler='C1' level='1' entry='0x000000011c319d60' size='720' address='0x000000011c319c10' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='592' scopes_pcs_offset='616' dependencies_offset='696' nul_chk_table_offset='704' oops_offset='576' method='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo access$000 (Lcom/jep/github/interview/concurrency/threadDemo/VisibilityDemo;)Z' bytes='5' count='161792' iicount='161792' stamp='0.244'/>
<writer thread='22531'/>
<task_queued compile_id='30' compile_kind='osr' method='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='161792' iicount='1' osr_bci='2' stamp='0.244' comment='tiered' hot_count='161792'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c3197d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c5098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011c319940: mov    0x8(%rsi),%r10d
  0x000000011c319944: shl    $0x3,%r10
  0x000000011c319948: cmp    %rax,%r10
  0x000000011c31994b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c319951: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c31995c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c319960: mov    %eax,-0x14000(%rsp)
  0x000000011c319967: push   %rbp
  0x000000011c319968: sub    $0x30,%rsp
  0x000000011c31996c: movabs $0x1124d7b00,%rcx  ;   {metadata(method data for {method} {0x00000001122c5098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c319976: mov    0xdc(%rcx),%edi
  0x000000011c31997c: add    $0x8,%edi
  0x000000011c31997f: mov    %edi,0xdc(%rcx)
  0x000000011c319985: movabs $0x1122c5098,%rcx  ;   {metadata({method} {0x00000001122c5098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31998f: and    $0x1ff8,%edi
  0x000000011c319995: cmp    $0x0,%edi
  0x000000011c319998: je     0x000000011c319a48  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x000000011c31999e: mov    %rsi,%rcx
  0x000000011c3199a1: movabs $0x1124d7b00,%rdi  ;   {metadata(method data for {method} {0x00000001122c5098} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c3199ab: mov    0x8(%rcx),%ecx
  0x000000011c3199ae: shl    $0x3,%rcx
  0x000000011c3199b2: cmp    0x110(%rdi),%rcx
  0x000000011c3199b9: jne    0x000000011c3199c8
  0x000000011c3199bb: addq   $0x1,0x118(%rdi)
  0x000000011c3199c3: jmpq   0x000000011c319a2e
  0x000000011c3199c8: cmp    0x120(%rdi),%rcx
  0x000000011c3199cf: jne    0x000000011c3199de
  0x000000011c3199d1: addq   $0x1,0x128(%rdi)
  0x000000011c3199d9: jmpq   0x000000011c319a2e
  0x000000011c3199de: cmpq   $0x0,0x110(%rdi)
  0x000000011c3199e9: jne    0x000000011c319a02
  0x000000011c3199eb: mov    %rcx,0x110(%rdi)
  0x000000011c3199f2: movq   $0x1,0x118(%rdi)
  0x000000011c3199fd: jmpq   0x000000011c319a2e
  0x000000011c319a02: cmpq   $0x0,0x120(%rdi)
  0x000000011c319a0d: jne    0x000000011c319a26
  0x000000011c319a0f: mov    %rcx,0x120(%rdi)
  0x000000011c319a16: movq   $0x1,0x128(%rdi)
  0x000000011c319a21: jmpq   0x000000011c319a2e
  0x000000011c319a26: addq   $0x1,0x108(%rdi)
  0x000000011c319a2e: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x000000011c319a33: nop
  0x000000011c319a34: nop
  0x000000011c319a35: nop
  0x000000011c319a36: nop
  0x000000011c319a37: callq  0x000000011c24c0a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x000000011c319a3c: add    $0x30,%rsp
  0x000000011c319a40: pop    %rbp
  0x000000011c319a41: test   %eax,-0xf832947(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c319a47: retq   
  0x000000011c319a48: mov    %rcx,0x8(%rsp)
  0x000000011c319a4d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c319a55: callq  0x000000011c306120  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x000000011c319a5a: jmpq   0x000000011c31999e
  0x000000011c319a5f: nop
  0x000000011c319a60: nop
  0x000000011c319a61: mov    0x2a8(%r15),%rax
  0x000000011c319a68: movabs $0x0,%r10
  0x000000011c319a72: mov    %r10,0x2a8(%r15)
  0x000000011c319a79: movabs $0x0,%r10
  0x000000011c319a83: mov    %r10,0x2b0(%r15)
  0x000000011c319a8a: add    $0x30,%rsp
  0x000000011c319a8e: pop    %rbp
  0x000000011c319a8f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c319a94: hlt    
  0x000000011c319a95: hlt    
  0x000000011c319a96: hlt    
  0x000000011c319a97: hlt    
  0x000000011c319a98: hlt    
  0x000000011c319a99: hlt    
  0x000000011c319a9a: hlt    
  0x000000011c319a9b: hlt    
  0x000000011c319a9c: hlt    
  0x000000011c319a9d: hlt    
  0x000000011c319a9e: hlt    
  0x000000011c319a9f: hlt    
[Stub Code]
  0x000000011c319aa0: nop                       ;   {no_reloc}
  0x000000011c319aa1: nop
  0x000000011c319aa2: nop
  0x000000011c319aa3: nop
  0x000000011c319aa4: nop
  0x000000011c319aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c319aaf: jmpq   0x000000011c319aaf  ;   {runtime_call}
[Exception Handler]
  0x000000011c319ab4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c319ab9: mov    %rsp,-0x28(%rsp)
  0x000000011c319abe: sub    $0x80,%rsp
  0x000000011c319ac5: mov    %rax,0x78(%rsp)
  0x000000011c319aca: mov    %rcx,0x70(%rsp)
  0x000000011c319acf: mov    %rdx,0x68(%rsp)
  0x000000011c319ad4: mov    %rbx,0x60(%rsp)
  0x000000011c319ad9: mov    %rbp,0x50(%rsp)
  0x000000011c319ade: mov    %rsi,0x48(%rsp)
  0x000000011c319ae3: mov    %rdi,0x40(%rsp)
  0x000000011c319ae8: mov    %r8,0x38(%rsp)
  0x000000011c319aed: mov    %r9,0x30(%rsp)
  0x000000011c319af2: mov    %r10,0x28(%rsp)
  0x000000011c319af7: mov    %r11,0x20(%rsp)
  0x000000011c319afc: mov    %r12,0x18(%rsp)
  0x000000011c319b01: mov    %r13,0x10(%rsp)
  0x000000011c319b06: mov    %r14,0x8(%rsp)
  0x000000011c319b0b: mov    %r15,(%rsp)
  0x000000011c319b0f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c319b19: movabs $0x11c319ab9,%rsi  ;   {internal_word}
  0x000000011c319b23: mov    %rsp,%rdx
  0x000000011c319b26: and    $0xfffffffffffffff0,%rsp
  0x000000011c319b2a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c319b2f: hlt    
[Deopt Handler Code]
  0x000000011c319b30: movabs $0x11c319b30,%r10  ;   {section_word}
  0x000000011c319b3a: push   %r10
  0x000000011c319b3c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c319b41: hlt    
  0x000000011c319b42: hlt    
  0x000000011c319b43: hlt    
  0x000000011c319b44: hlt    
  0x000000011c319b45: hlt    
  0x000000011c319b46: hlt    
  0x000000011c319b47: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x000000011c319940' size='1040' address='0x000000011c3197d0' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='944' iicount='944' stamp='0.247'/>
<writer thread='16387'/>
Decoding compiled method 0x000000011c319490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001126c3378} &apos;run&apos; &apos;()V&apos; in &apos;com/jep/github/interview/concurrency/threadDemo/VisibilityDemo$1&apos;
  0x000000011c3195e0: callq  0x000000010e88997c  ;   {runtime_call}
  0x000000011c3195e5: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c3195f0: mov    %eax,-0x14000(%rsp)
  0x000000011c3195f7: push   %rbp
  0x000000011c3195f8: sub    $0x20,%rsp
  0x000000011c3195fc: mov    (%rsi),%ebx
  0x000000011c3195fe: mov    0x8(%rsi),%rbp
  0x000000011c319602: mov    %rsi,%rdi
  0x000000011c319605: movabs $0x10e8e8b46,%r10
  0x000000011c31960f: callq  *%r10
  0x000000011c319612: test   %rbp,%rbp
  0x000000011c319615: je     0x000000011c31963d
  0x000000011c319617: mov    0x8(%rbp),%r11d
  0x000000011c31961b: cmp    $0xf800c143,%r11d  ;   {metadata(&apos;com/jep/github/interview/concurrency/threadDemo/VisibilityDemo$1&apos;)}
  0x000000011c319622: jne    0x000000011c319655  ;*aload_0
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo$1::run@2 (line 19)

  0x000000011c319624: mov    0xc(%rbp),%r11d    ;*getfield val$demo1
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo$1::run@3 (line 19)
                                                ; implicit exception: dispatches to 0x000000011c319641
  0x000000011c319628: movzbl 0xc(%r12,%r11,8),%r11d  ; implicit exception: dispatches to 0x000000011c319641
  0x000000011c31962e: test   %r11d,%r11d
  0x000000011c319631: je     0x000000011c319641  ;*goto
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo$1::run@15 (line 20)

  0x000000011c319633: inc    %ebx               ; OopMap{rbp=Oop off=85}
                                                ;*goto
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo$1::run@15 (line 20)

  0x000000011c319635: test   %eax,-0xf83263b(%rip)        # 0x000000010cae7000
                                                ;*goto
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo$1::run@15 (line 20)
                                                ;   {poll}
  0x000000011c31963b: jmp    0x000000011c319633
  0x000000011c31963d: xor    %ebp,%ebp
  0x000000011c31963f: jmp    0x000000011c319624
  0x000000011c319641: mov    $0xffffff86,%esi
  0x000000011c319646: mov    %ebx,(%rsp)
  0x000000011c319649: xchg   %ax,%ax
  0x000000011c31964b: callq  0x000000011c24b6a0  ; OopMap{rbp=Oop off=112}
                                                ;*aload_0
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo$1::run@2 (line 19)
                                                ;   {runtime_call}
  0x000000011c319650: callq  0x000000010e88997c  ;   {runtime_call}
  0x000000011c319655: mov    $0xffffff9d,%esi
  0x000000011c31965a: mov    %ebx,(%rsp)
  0x000000011c31965d: xchg   %ax,%ax
  0x000000011c31965f: callq  0x000000011c24b6a0  ; OopMap{rbp=Oop off=132}
                                                ;*aload_0
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo$1::run@2 (line 19)
                                                ;   {runtime_call}
  0x000000011c319664: callq  0x000000010e88997c  ;*aload_0
                                                ; - com.jep.github.interview.concurrency.threadDemo.VisibilityDemo$1::run@2 (line 19)
                                                ;   {runtime_call}
  0x000000011c319669: callq  0x000000010e88997c  ;   {runtime_call}
  0x000000011c31966e: hlt    
  0x000000011c31966f: hlt    
  0x000000011c319670: hlt    
  0x000000011c319671: hlt    
  0x000000011c319672: hlt    
  0x000000011c319673: hlt    
  0x000000011c319674: hlt    
  0x000000011c319675: hlt    
  0x000000011c319676: hlt    
  0x000000011c319677: hlt    
  0x000000011c319678: hlt    
  0x000000011c319679: hlt    
  0x000000011c31967a: hlt    
  0x000000011c31967b: hlt    
  0x000000011c31967c: hlt    
  0x000000011c31967d: hlt    
  0x000000011c31967e: hlt    
  0x000000011c31967f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c319680: jmpq   0x000000011c2747e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000011c319685: callq  0x000000011c31968a
  0x000000011c31968a: subq   $0x5,(%rsp)
  0x000000011c31968f: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c319694: hlt    
  0x000000011c319695: hlt    
  0x000000011c319696: hlt    
  0x000000011c319697: hlt    
<nmethod compile_id='30' compile_kind='osr' compiler='C2' level='4' entry='0x000000011c3195e0' size='784' address='0x000000011c319490' relocation_offset='296' insts_offset='336' stub_offset='496' scopes_data_offset='544' scopes_pcs_offset='592' dependencies_offset='752' nul_chk_table_offset='760' oops_offset='520' method='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='523676' iicount='1' stamp='0.250'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c319190:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112391068} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c3192e0: mov    0x8(%rsi),%r10d
  0x000000011c3192e4: shl    $0x3,%r10
  0x000000011c3192e8: cmp    %rax,%r10
  0x000000011c3192eb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3192f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c3192fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c319300: mov    %eax,-0x14000(%rsp)
  0x000000011c319307: push   %rbp
  0x000000011c319308: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 282)

  0x000000011c31930c: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 282)

  0x000000011c31930f: add    $0x30,%rsp
  0x000000011c319313: pop    %rbp
  0x000000011c319314: test   %eax,-0xf83221a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31931a: retq   
  0x000000011c31931b: nop
  0x000000011c31931c: nop
  0x000000011c31931d: mov    0x2a8(%r15),%rax
  0x000000011c319324: movabs $0x0,%r10
  0x000000011c31932e: mov    %r10,0x2a8(%r15)
  0x000000011c319335: movabs $0x0,%r10
  0x000000011c31933f: mov    %r10,0x2b0(%r15)
  0x000000011c319346: add    $0x30,%rsp
  0x000000011c31934a: pop    %rbp
  0x000000011c31934b: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c319350: hlt    
  0x000000011c319351: hlt    
  0x000000011c319352: hlt    
  0x000000011c319353: hlt    
  0x000000011c319354: hlt    
  0x000000011c319355: hlt    
  0x000000011c319356: hlt    
  0x000000011c319357: hlt    
  0x000000011c319358: hlt    
  0x000000011c319359: hlt    
  0x000000011c31935a: hlt    
  0x000000011c31935b: hlt    
  0x000000011c31935c: hlt    
  0x000000011c31935d: hlt    
  0x000000011c31935e: hlt    
  0x000000011c31935f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c319360: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c319365: mov    %rsp,-0x28(%rsp)
  0x000000011c31936a: sub    $0x80,%rsp
  0x000000011c319371: mov    %rax,0x78(%rsp)
  0x000000011c319376: mov    %rcx,0x70(%rsp)
  0x000000011c31937b: mov    %rdx,0x68(%rsp)
  0x000000011c319380: mov    %rbx,0x60(%rsp)
  0x000000011c319385: mov    %rbp,0x50(%rsp)
  0x000000011c31938a: mov    %rsi,0x48(%rsp)
  0x000000011c31938f: mov    %rdi,0x40(%rsp)
  0x000000011c319394: mov    %r8,0x38(%rsp)
  0x000000011c319399: mov    %r9,0x30(%rsp)
  0x000000011c31939e: mov    %r10,0x28(%rsp)
  0x000000011c3193a3: mov    %r11,0x20(%rsp)
  0x000000011c3193a8: mov    %r12,0x18(%rsp)
  0x000000011c3193ad: mov    %r13,0x10(%rsp)
  0x000000011c3193b2: mov    %r14,0x8(%rsp)
  0x000000011c3193b7: mov    %r15,(%rsp)
  0x000000011c3193bb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3193c5: movabs $0x11c319365,%rsi  ;   {internal_word}
  0x000000011c3193cf: mov    %rsp,%rdx
  0x000000011c3193d2: and    $0xfffffffffffffff0,%rsp
  0x000000011c3193d6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3193db: hlt    
[Deopt Handler Code]
  0x000000011c3193dc: movabs $0x11c3193dc,%r10  ;   {section_word}
  0x000000011c3193e6: push   %r10
  0x000000011c3193e8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3193ed: hlt    
  0x000000011c3193ee: hlt    
  0x000000011c3193ef: hlt    
<nmethod compile_id='26' compiler='C1' level='1' entry='0x000000011c3192e0' size='704' address='0x000000011c319190' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='392' iicount='392' stamp='0.252'/>
Decoding compiled method 0x000000011c31ddd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112335e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x000000011c31dfa0: mov    0x8(%rsi),%r10d
  0x000000011c31dfa4: shl    $0x3,%r10
  0x000000011c31dfa8: cmp    %rax,%r10
  0x000000011c31dfab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c31dfb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c31dfbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c31dfc0: mov    %eax,-0x14000(%rsp)
  0x000000011c31dfc7: push   %rbp
  0x000000011c31dfc8: sub    $0xe0,%rsp
  0x000000011c31dfcf: mov    %rsi,0xb8(%rsp)
  0x000000011c31dfd7: movabs $0x1124d8208,%rdi  ;   {metadata(method data for {method} {0x0000000112335e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31dfe1: mov    0xdc(%rdi),%ebx
  0x000000011c31dfe7: add    $0x8,%ebx
  0x000000011c31dfea: mov    %ebx,0xdc(%rdi)
  0x000000011c31dff0: movabs $0x112335e38,%rdi  ;   {metadata({method} {0x0000000112335e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31dffa: and    $0x1ff8,%ebx
  0x000000011c31e000: cmp    $0x0,%ebx
  0x000000011c31e003: je     0x000000011c31e533  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x000000011c31e009: cmp    $0x0,%rdx
  0x000000011c31e00d: movabs $0x1124d8208,%rdi  ;   {metadata(method data for {method} {0x0000000112335e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e017: movabs $0x108,%rbx
  0x000000011c31e021: jne    0x000000011c31e031
  0x000000011c31e027: movabs $0x118,%rbx
  0x000000011c31e031: mov    (%rdi,%rbx,1),%rax
  0x000000011c31e035: lea    0x1(%rax),%rax
  0x000000011c31e039: mov    %rax,(%rdi,%rbx,1)
  0x000000011c31e03d: je     0x000000011c31e503  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x000000011c31e043: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000011c31e54a
  0x000000011c31e046: mov    %rdx,%rdi
  0x000000011c31e049: movabs $0x1124d8208,%rbx  ;   {metadata(method data for {method} {0x0000000112335e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e053: mov    0x8(%rdi),%edi
  0x000000011c31e056: shl    $0x3,%rdi
  0x000000011c31e05a: cmp    0x140(%rbx),%rdi
  0x000000011c31e061: jne    0x000000011c31e070
  0x000000011c31e063: addq   $0x1,0x148(%rbx)
  0x000000011c31e06b: jmpq   0x000000011c31e0d6
  0x000000011c31e070: cmp    0x150(%rbx),%rdi
  0x000000011c31e077: jne    0x000000011c31e086
  0x000000011c31e079: addq   $0x1,0x158(%rbx)
  0x000000011c31e081: jmpq   0x000000011c31e0d6
  0x000000011c31e086: cmpq   $0x0,0x140(%rbx)
  0x000000011c31e091: jne    0x000000011c31e0aa
  0x000000011c31e093: mov    %rdi,0x140(%rbx)
  0x000000011c31e09a: movq   $0x1,0x148(%rbx)
  0x000000011c31e0a5: jmpq   0x000000011c31e0d6
  0x000000011c31e0aa: cmpq   $0x0,0x150(%rbx)
  0x000000011c31e0b5: jne    0x000000011c31e0ce
  0x000000011c31e0b7: mov    %rdi,0x150(%rbx)
  0x000000011c31e0be: movq   $0x1,0x158(%rbx)
  0x000000011c31e0c9: jmpq   0x000000011c31e0d6
  0x000000011c31e0ce: addq   $0x1,0x138(%rbx)
  0x000000011c31e0d6: movabs $0x112493fa0,%rdi  ;   {metadata(method data for {method} {0x00000001122c3c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31e0e0: mov    0xdc(%rdi),%ebx
  0x000000011c31e0e6: add    $0x8,%ebx
  0x000000011c31e0e9: mov    %ebx,0xdc(%rdi)
  0x000000011c31e0ef: movabs $0x1122c3c60,%rdi  ;   {metadata({method} {0x00000001122c3c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c31e0f9: and    $0x7ffff8,%ebx
  0x000000011c31e0ff: cmp    $0x0,%ebx
  0x000000011c31e102: je     0x000000011c31e54f
  0x000000011c31e108: mov    0xc(%rdx),%edi
  0x000000011c31e10b: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x000000011c31e10f: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000011c31e566
  0x000000011c31e112: mov    %edi,0xac(%rsp)
  0x000000011c31e119: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x000000011c31e11c: add    %edi,%ebx
  0x000000011c31e11e: mov    %rsi,%rax
  0x000000011c31e121: movabs $0x1124d8208,%rcx  ;   {metadata(method data for {method} {0x0000000112335e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e12b: addq   $0x1,0x168(%rcx)
  0x000000011c31e133: movabs $0x1124d7970,%rax  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e13d: mov    0xdc(%rax),%ecx
  0x000000011c31e143: add    $0x8,%ecx
  0x000000011c31e146: mov    %ecx,0xdc(%rax)
  0x000000011c31e14c: movabs $0x1123354e0,%rax  ;   {metadata({method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e156: and    $0x7ffff8,%ecx
  0x000000011c31e15c: cmp    $0x0,%ecx
  0x000000011c31e15f: je     0x000000011c31e56b
  0x000000011c31e165: mov    0x10(%rsi),%eax
  0x000000011c31e168: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e16c: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x000000011c31e582
  0x000000011c31e16f: mov    %rbx,%r8
  0x000000011c31e172: sub    %ecx,%r8d
  0x000000011c31e175: cmp    $0x0,%r8d
  0x000000011c31e179: movabs $0x1124d7970,%r8   ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e183: movabs $0x108,%r9
  0x000000011c31e18d: jle    0x000000011c31e19d
  0x000000011c31e193: movabs $0x118,%r9
  0x000000011c31e19d: mov    (%r8,%r9,1),%r11
  0x000000011c31e1a1: lea    0x1(%r11),%r11
  0x000000011c31e1a5: mov    %r11,(%r8,%r9,1)
  0x000000011c31e1a9: jg     0x000000011c31e1bc  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e1af: mov    %rdx,0xc0(%rsp)
  0x000000011c31e1b7: jmpq   0x000000011c31e41b  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e1bc: mov    %ecx,0xa8(%rsp)
  0x000000011c31e1c3: mov    %rax,0xb0(%rsp)
  0x000000011c31e1cb: mov    %rdx,0xc0(%rsp)
  0x000000011c31e1d3: mov    %rsi,%r8
  0x000000011c31e1d6: movabs $0x1124d7970,%r9   ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e1e0: addq   $0x1,0x128(%r9)
  0x000000011c31e1e8: mov    %rbx,%rdx
  0x000000011c31e1eb: mov    %rsi,%rbx
  0x000000011c31e1ee: mov    %rbx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e1f1: nop
  0x000000011c31e1f2: nop
  0x000000011c31e1f3: nop
  0x000000011c31e1f4: nop
  0x000000011c31e1f5: nop
  0x000000011c31e1f6: nop
  0x000000011c31e1f7: callq  0x000000011c24c0a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x000000011c31e1fc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e1ff: movabs $0x1124d7970,%rbx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e209: addq   $0x1,0x138(%rbx)
  0x000000011c31e211: movabs $0x11258f020,%rbx  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31e21b: mov    0xdc(%rbx),%edx
  0x000000011c31e221: add    $0x8,%edx
  0x000000011c31e224: mov    %edx,0xdc(%rbx)
  0x000000011c31e22a: movabs $0x1123dac50,%rbx  ;   {metadata({method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31e234: and    $0x7ffff8,%edx
  0x000000011c31e23a: cmp    $0x0,%edx
  0x000000011c31e23d: je     0x000000011c31e587
  0x000000011c31e243: mov    %r8,%rbx
  0x000000011c31e246: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c31e250: movslq %ebx,%rbx
  0x000000011c31e253: mov    %rbx,%rdi
  0x000000011c31e256: cmp    $0xffffff,%rbx
  0x000000011c31e25d: ja     0x000000011c31e59e
  0x000000011c31e263: movabs $0x17,%rsi
  0x000000011c31e26d: lea    (%rsi,%rbx,2),%rsi
  0x000000011c31e271: and    $0xfffffffffffffff8,%rsi
  0x000000011c31e275: mov    0x60(%r15),%rax
  0x000000011c31e279: lea    (%rax,%rsi,1),%rsi
  0x000000011c31e27d: cmp    0x70(%r15),%rsi
  0x000000011c31e281: ja     0x000000011c31e59e
  0x000000011c31e287: mov    %rsi,0x60(%r15)
  0x000000011c31e28b: sub    %rax,%rsi
  0x000000011c31e28e: movq   $0x1,(%rax)
  0x000000011c31e295: mov    %rdx,%rcx
  0x000000011c31e298: shr    $0x3,%rcx
  0x000000011c31e29c: mov    %ecx,0x8(%rax)
  0x000000011c31e29f: mov    %ebx,0xc(%rax)
  0x000000011c31e2a2: sub    $0x10,%rsi
  0x000000011c31e2a6: je     0x000000011c31e2bd
  0x000000011c31e2ac: xor    %rbx,%rbx
  0x000000011c31e2af: shr    $0x3,%rsi
  0x000000011c31e2b3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c31e2b8: dec    %rsi
  0x000000011c31e2bb: jne    0x000000011c31e2b3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e2bd: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31e2c7: addq   $0x1,0x108(%rsi)
  0x000000011c31e2cf: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31e2d9: mov    0xdc(%rsi),%edx
  0x000000011c31e2df: add    $0x8,%edx
  0x000000011c31e2e2: mov    %edx,0xdc(%rsi)
  0x000000011c31e2e8: movabs $0x1123b6508,%rsi  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31e2f2: and    $0x7ffff8,%edx
  0x000000011c31e2f8: cmp    $0x0,%edx
  0x000000011c31e2fb: je     0x000000011c31e5a8
  0x000000011c31e301: mov    0xa8(%rsp),%ecx
  0x000000011c31e308: cmp    %r8d,%ecx
  0x000000011c31e30b: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31e315: movabs $0x108,%rdx
  0x000000011c31e31f: jg     0x000000011c31e32f
  0x000000011c31e325: movabs $0x118,%rdx
  0x000000011c31e32f: mov    (%rsi,%rdx,1),%r9
  0x000000011c31e333: lea    0x1(%r9),%r9
  0x000000011c31e337: mov    %r9,(%rsi,%rdx,1)
  0x000000011c31e33b: jg     0x000000011c31e359  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e341: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31e34b: incl   0x128(%rsi)
  0x000000011c31e351: mov    %rcx,%r9
  0x000000011c31e354: jmpq   0x000000011c31e35c  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e359: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e35c: mov    0xb0(%rsp),%rsi
  0x000000011c31e364: movabs $0x11258f020,%rdx  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31e36e: addq   $0x1,0x118(%rdx)
  0x000000011c31e376: mov    $0x0,%edx
  0x000000011c31e37b: mov    %rax,%rcx
  0x000000011c31e37e: mov    $0x0,%r8d
  0x000000011c31e384: mov    %rax,0xc8(%rsp)
  0x000000011c31e38c: lea    (%rdx,%r9,1),%rdi
  0x000000011c31e390: cmp    0xc(%rsi),%edi
  0x000000011c31e393: ja     0x000000011c31e5bf
  0x000000011c31e399: lea    (%r8,%r9,1),%rdi
  0x000000011c31e39d: cmp    0xc(%rcx),%edi
  0x000000011c31e3a0: ja     0x000000011c31e5bf
  0x000000011c31e3a6: test   %r9d,%r9d
  0x000000011c31e3a9: jl     0x000000011c31e5bf
  0x000000011c31e3af: je     0x000000011c31e3eb
  0x000000011c31e3b5: movslq %edx,%rdx
  0x000000011c31e3b8: movslq %r8d,%r8
  0x000000011c31e3bb: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011c31e3c0: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011c31e3c5: mov    %r9,%rdx
  0x000000011c31e3c8: test   $0xf,%esp
  0x000000011c31e3ce: je     0x000000011c31e3e6
  0x000000011c31e3d4: sub    $0x8,%rsp
  0x000000011c31e3d8: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011c31e3dd: add    $0x8,%rsp
  0x000000011c31e3e1: jmpq   0x000000011c31e3eb
  0x000000011c31e3e6: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000011c31e3eb: mov    0xc8(%rsp),%rax
  0x000000011c31e3f3: mov    0xb8(%rsp),%rsi
  0x000000011c31e3fb: mov    %rax,%r10
  0x000000011c31e3fe: shr    $0x3,%r10
  0x000000011c31e402: mov    %r10d,0x10(%rsi)
  0x000000011c31e406: mov    %rsi,%rdx
  0x000000011c31e409: shr    $0x9,%rdx
  0x000000011c31e40d: movabs $0x10c974000,%rcx
  0x000000011c31e417: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000011c31e41b: mov    0xac(%rsp),%ebx
  0x000000011c31e422: mov    0xc0(%rsp),%rdi
  0x000000011c31e42a: mov    0x10(%rsi),%r8d
  0x000000011c31e42e: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x000000011c31e432: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x000000011c31e436: mov    %rdi,%rdx
  0x000000011c31e439: movabs $0x1124d8208,%rcx  ;   {metadata(method data for {method} {0x0000000112335e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e443: mov    0x8(%rdx),%edx
  0x000000011c31e446: shl    $0x3,%rdx
  0x000000011c31e44a: cmp    0x180(%rcx),%rdx
  0x000000011c31e451: jne    0x000000011c31e460
  0x000000011c31e453: addq   $0x1,0x188(%rcx)
  0x000000011c31e45b: jmpq   0x000000011c31e4c6
  0x000000011c31e460: cmp    0x190(%rcx),%rdx
  0x000000011c31e467: jne    0x000000011c31e476
  0x000000011c31e469: addq   $0x1,0x198(%rcx)
  0x000000011c31e471: jmpq   0x000000011c31e4c6
  0x000000011c31e476: cmpq   $0x0,0x180(%rcx)
  0x000000011c31e481: jne    0x000000011c31e49a
  0x000000011c31e483: mov    %rdx,0x180(%rcx)
  0x000000011c31e48a: movq   $0x1,0x188(%rcx)
  0x000000011c31e495: jmpq   0x000000011c31e4c6
  0x000000011c31e49a: cmpq   $0x0,0x190(%rcx)
  0x000000011c31e4a5: jne    0x000000011c31e4be
  0x000000011c31e4a7: mov    %rdx,0x190(%rcx)
  0x000000011c31e4ae: movq   $0x1,0x198(%rcx)
  0x000000011c31e4b9: jmpq   0x000000011c31e4c6
  0x000000011c31e4be: addq   $0x1,0x178(%rcx)
  0x000000011c31e4c6: mov    $0x0,%edx
  0x000000011c31e4cb: mov    %rbx,%rcx
  0x000000011c31e4ce: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000011c31e4d1: nop
  0x000000011c31e4d2: nop
  0x000000011c31e4d3: nop
  0x000000011c31e4d4: nop
  0x000000011c31e4d5: nop
  0x000000011c31e4d6: nop
  0x000000011c31e4d7: callq  0x000000011c24c0a0  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x000000011c31e4dc: mov    0xb8(%rsp),%rsi
  0x000000011c31e4e4: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x000000011c31e4e7: add    0xac(%rsp),%eax
  0x000000011c31e4ee: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x000000011c31e4f1: mov    %rsi,%rax
  0x000000011c31e4f4: add    $0xe0,%rsp
  0x000000011c31e4fb: pop    %rbp
  0x000000011c31e4fc: test   %eax,-0xf837402(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31e502: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x000000011c31e503: mov    %rsi,%rdi
  0x000000011c31e506: movabs $0x1124d8208,%rbx  ;   {metadata(method data for {method} {0x0000000112335e38} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31e510: addq   $0x1,0x128(%rbx)
  0x000000011c31e518: nop
  0x000000011c31e519: nop
  0x000000011c31e51a: nop
  0x000000011c31e51b: nop
  0x000000011c31e51c: nop
  0x000000011c31e51d: nop
  0x000000011c31e51e: nop
  0x000000011c31e51f: callq  0x000000011c24c0a0  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x000000011c31e524: add    $0xe0,%rsp
  0x000000011c31e52b: pop    %rbp
  0x000000011c31e52c: test   %eax,-0xf837432(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31e532: retq   
  0x000000011c31e533: mov    %rdi,0x8(%rsp)
  0x000000011c31e538: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31e540: callq  0x000000011c306120  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x000000011c31e545: jmpq   0x000000011c31e009
  0x000000011c31e54a: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000011c31e54f: mov    %rdi,0x8(%rsp)
  0x000000011c31e554: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31e55c: callq  0x000000011c306120  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000011c31e561: jmpq   0x000000011c31e108
  0x000000011c31e566: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000011c31e56b: mov    %rax,0x8(%rsp)
  0x000000011c31e570: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31e578: callq  0x000000011c306120  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000011c31e57d: jmpq   0x000000011c31e165
  0x000000011c31e582: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000011c31e587: mov    %rbx,0x8(%rsp)
  0x000000011c31e58c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31e594: callq  0x000000011c306120  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000011c31e599: jmpq   0x000000011c31e243
  0x000000011c31e59e: callq  0x000000011c302b20  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000011c31e5a3: jmpq   0x000000011c31e2bd
  0x000000011c31e5a8: mov    %rsi,0x8(%rsp)
  0x000000011c31e5ad: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31e5b5: callq  0x000000011c306120  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000011c31e5ba: jmpq   0x000000011c31e301
  0x000000011c31e5bf: callq  0x000000011c24c520  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x000000011c31e5c4: jmpq   0x000000011c31e3eb
  0x000000011c31e5c9: nop
  0x000000011c31e5ca: nop
  0x000000011c31e5cb: mov    0x2a8(%r15),%rax
  0x000000011c31e5d2: movabs $0x0,%r10
  0x000000011c31e5dc: mov    %r10,0x2a8(%r15)
  0x000000011c31e5e3: movabs $0x0,%r10
  0x000000011c31e5ed: mov    %r10,0x2b0(%r15)
  0x000000011c31e5f4: add    $0xe0,%rsp
  0x000000011c31e5fb: pop    %rbp
  0x000000011c31e5fc: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c31e601: hlt    
  0x000000011c31e602: hlt    
  0x000000011c31e603: hlt    
  0x000000011c31e604: hlt    
  0x000000011c31e605: hlt    
  0x000000011c31e606: hlt    
  0x000000011c31e607: hlt    
  0x000000011c31e608: hlt    
  0x000000011c31e609: hlt    
  0x000000011c31e60a: hlt    
  0x000000011c31e60b: hlt    
  0x000000011c31e60c: hlt    
  0x000000011c31e60d: hlt    
  0x000000011c31e60e: hlt    
  0x000000011c31e60f: hlt    
  0x000000011c31e610: hlt    
  0x000000011c31e611: hlt    
  0x000000011c31e612: hlt    
  0x000000011c31e613: hlt    
  0x000000011c31e614: hlt    
  0x000000011c31e615: hlt    
  0x000000011c31e616: hlt    
  0x000000011c31e617: hlt    
  0x000000011c31e618: hlt    
  0x000000011c31e619: hlt    
  0x000000011c31e61a: hlt    
  0x000000011c31e61b: hlt    
  0x000000011c31e61c: hlt    
  0x000000011c31e61d: hlt    
  0x000000011c31e61e: hlt    
  0x000000011c31e61f: hlt    
[Stub Code]
  0x000000011c31e620: nop                       ;   {no_reloc}
  0x000000011c31e621: nop
  0x000000011c31e622: nop
  0x000000011c31e623: nop
  0x000000011c31e624: nop
  0x000000011c31e625: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31e62f: jmpq   0x000000011c31e62f  ;   {runtime_call}
  0x000000011c31e634: nop
  0x000000011c31e635: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31e63f: jmpq   0x000000011c31e63f  ;   {runtime_call}
  0x000000011c31e644: nop
  0x000000011c31e645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31e64f: jmpq   0x000000011c31e64f  ;   {runtime_call}
  0x000000011c31e654: nop
  0x000000011c31e655: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31e65f: jmpq   0x000000011c31e65f  ;   {runtime_call}
[Exception Handler]
  0x000000011c31e664: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c31e669: mov    %rsp,-0x28(%rsp)
  0x000000011c31e66e: sub    $0x80,%rsp
  0x000000011c31e675: mov    %rax,0x78(%rsp)
  0x000000011c31e67a: mov    %rcx,0x70(%rsp)
  0x000000011c31e67f: mov    %rdx,0x68(%rsp)
  0x000000011c31e684: mov    %rbx,0x60(%rsp)
  0x000000011c31e689: mov    %rbp,0x50(%rsp)
  0x000000011c31e68e: mov    %rsi,0x48(%rsp)
  0x000000011c31e693: mov    %rdi,0x40(%rsp)
  0x000000011c31e698: mov    %r8,0x38(%rsp)
  0x000000011c31e69d: mov    %r9,0x30(%rsp)
  0x000000011c31e6a2: mov    %r10,0x28(%rsp)
  0x000000011c31e6a7: mov    %r11,0x20(%rsp)
  0x000000011c31e6ac: mov    %r12,0x18(%rsp)
  0x000000011c31e6b1: mov    %r13,0x10(%rsp)
  0x000000011c31e6b6: mov    %r14,0x8(%rsp)
  0x000000011c31e6bb: mov    %r15,(%rsp)
  0x000000011c31e6bf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c31e6c9: movabs $0x11c31e669,%rsi  ;   {internal_word}
  0x000000011c31e6d3: mov    %rsp,%rdx
  0x000000011c31e6d6: and    $0xfffffffffffffff0,%rsp
  0x000000011c31e6da: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c31e6df: hlt    
[Deopt Handler Code]
  0x000000011c31e6e0: movabs $0x11c31e6e0,%r10  ;   {section_word}
  0x000000011c31e6ea: push   %r10
  0x000000011c31e6ec: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c31e6f1: hlt    
  0x000000011c31e6f2: hlt    
  0x000000011c31e6f3: hlt    
  0x000000011c31e6f4: hlt    
  0x000000011c31e6f5: hlt    
  0x000000011c31e6f6: hlt    
  0x000000011c31e6f7: hlt    
<nmethod compile_id='24' compiler='C1' level='3' entry='0x000000011c31dfa0' size='3456' address='0x000000011c31ddd0' relocation_offset='296' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='916' iicount='916' stamp='0.266'/>
<writer thread='15107'/>
<task_queued compile_id='31' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1024' iicount='1024' level='3' stamp='0.266' comment='tiered' hot_count='1024'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c318890:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x000000011c318a40: mov    0x8(%rsi),%r10d
  0x000000011c318a44: shl    $0x3,%r10
  0x000000011c318a48: cmp    %rax,%r10
  0x000000011c318a4b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c318a51: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c318a5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c318a60: mov    %eax,-0x14000(%rsp)
  0x000000011c318a67: push   %rbp
  0x000000011c318a68: sub    $0x60,%rsp
  0x000000011c318a6c: mov    %rdx,%rdi
  0x000000011c318a6f: movabs $0x1124d83f8,%rdx  ;   {metadata(method data for {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318a79: mov    0xdc(%rdx),%ebx
  0x000000011c318a7f: add    $0x8,%ebx
  0x000000011c318a82: mov    %ebx,0xdc(%rdx)
  0x000000011c318a88: movabs $0x1122c4208,%rdx  ;   {metadata({method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318a92: and    $0x1ff8,%ebx
  0x000000011c318a98: cmp    $0x0,%ebx
  0x000000011c318a9b: je     0x000000011c318cc6  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x000000011c318aa1: cmp    $0x0,%edi
  0x000000011c318aa4: movabs $0x1124d83f8,%rdx  ;   {metadata(method data for {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318aae: movabs $0x108,%rbx
  0x000000011c318ab8: jge    0x000000011c318ac8
  0x000000011c318abe: movabs $0x118,%rbx
  0x000000011c318ac8: mov    (%rdx,%rbx,1),%rax
  0x000000011c318acc: lea    0x1(%rax),%rax
  0x000000011c318ad0: mov    %rax,(%rdx,%rbx,1)
  0x000000011c318ad4: jl     0x000000011c318c86  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x000000011c318ada: mov    0xc(%rsi),%esi
  0x000000011c318add: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000011c318ae1: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x000000011c318cdd
  0x000000011c318ae4: cmp    %edx,%ecx
  0x000000011c318ae6: movabs $0x1124d83f8,%rdx  ;   {metadata(method data for {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318af0: movabs $0x138,%rbx
  0x000000011c318afa: jle    0x000000011c318b0a
  0x000000011c318b00: movabs $0x148,%rbx
  0x000000011c318b0a: mov    (%rdx,%rbx,1),%rax
  0x000000011c318b0e: lea    0x1(%rax),%rax
  0x000000011c318b12: mov    %rax,(%rdx,%rbx,1)
  0x000000011c318b16: jg     0x000000011c318c46  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000011c318b1c: cmp    %ecx,%edi
  0x000000011c318b1e: movabs $0x1124d83f8,%rdx  ;   {metadata(method data for {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318b28: movabs $0x168,%rbx
  0x000000011c318b32: jle    0x000000011c318b42
  0x000000011c318b38: movabs $0x178,%rbx
  0x000000011c318b42: mov    (%rdx,%rbx,1),%rax
  0x000000011c318b46: lea    0x1(%rax),%rax
  0x000000011c318b4a: mov    %rax,(%rdx,%rbx,1)
  0x000000011c318b4e: jg     0x000000011c318bfc  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x000000011c318b54: movabs $0x1124d83f8,%rdx  ;   {metadata(method data for {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318b5e: addq   $0x1,0x198(%rdx)
  0x000000011c318b66: mov    %rcx,%rbx
  0x000000011c318b69: sub    %edi,%ebx
  0x000000011c318b6b: mov    %rdi,%rdx
  0x000000011c318b6e: mov    %r8,%rcx
  0x000000011c318b71: mov    %r9,%r8
  0x000000011c318b74: mov    %rbx,%r9
  0x000000011c318b77: test   %rcx,%rcx
  0x000000011c318b7a: je     0x000000011c318ce2
  0x000000011c318b80: test   %edx,%edx
  0x000000011c318b82: jl     0x000000011c318ce2
  0x000000011c318b88: test   %r8d,%r8d
  0x000000011c318b8b: jl     0x000000011c318ce2
  0x000000011c318b91: lea    (%rdx,%r9,1),%rdi
  0x000000011c318b95: cmp    0xc(%rsi),%edi
  0x000000011c318b98: ja     0x000000011c318ce2
  0x000000011c318b9e: lea    (%r8,%r9,1),%rdi
  0x000000011c318ba2: cmp    0xc(%rcx),%edi
  0x000000011c318ba5: ja     0x000000011c318ce2
  0x000000011c318bab: test   %r9d,%r9d
  0x000000011c318bae: jl     0x000000011c318ce2
  0x000000011c318bb4: je     0x000000011c318bf0
  0x000000011c318bba: movslq %edx,%rdx
  0x000000011c318bbd: movslq %r8d,%r8
  0x000000011c318bc0: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011c318bc5: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011c318bca: mov    %r9,%rdx
  0x000000011c318bcd: test   $0xf,%esp
  0x000000011c318bd3: je     0x000000011c318beb
  0x000000011c318bd9: sub    $0x8,%rsp
  0x000000011c318bdd: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x000000011c318be2: add    $0x8,%rsp
  0x000000011c318be6: jmpq   0x000000011c318bf0
  0x000000011c318beb: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000011c318bf0: add    $0x60,%rsp
  0x000000011c318bf4: pop    %rbp
  0x000000011c318bf5: test   %eax,-0xf831afb(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c318bfb: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x000000011c318bfc: nopl   0x0(%rax)
  0x000000011c318c00: jmpq   0x000000011c318d00  ;   {no_reloc}
  0x000000011c318c05: add    %al,(%rax)
  0x000000011c318c07: add    %al,(%rax)
  0x000000011c318c09: add    %ch,%cl
  0x000000011c318c0b: sti    
  0x000000011c318c0c: add    %al,(%rax)
  0x000000011c318c0e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x000000011c318c11: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318c14: clc    
  0x000000011c318c15: orl    $0x1,0x12(%rbp)
  0x000000011c318c19: add    %al,(%rax)
  0x000000011c318c1b: add    %cl,-0x7d(%rax)
  0x000000011c318c1e: xchg   %cl,0x1000001(%rax)
  0x000000011c318c24: sub    %edi,%ecx
  0x000000011c318c26: mov    %rcx,%rdx
  0x000000011c318c29: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x000000011c318c2c: mov    %rax,0x38(%rsp)
  0x000000011c318c31: nop
  0x000000011c318c32: nop
  0x000000011c318c33: nop
  0x000000011c318c34: nop
  0x000000011c318c35: nop
  0x000000011c318c36: nop
  0x000000011c318c37: callq  0x000000011c24c0a0  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x000000011c318c3c: mov    0x38(%rsp),%rax
  0x000000011c318c41: jmpq   0x000000011c318d8e  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000000011c318c46: xchg   %ax,%ax
  0x000000011c318c48: jmpq   0x000000011c318d26  ;   {no_reloc}
  0x000000011c318c4d: add    %al,(%rax)
  0x000000011c318c4f: add    %al,(%rax)
  0x000000011c318c51: add    %ch,%cl
  0x000000011c318c53: flds   (%rax)
  0x000000011c318c55: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x000000011c318c57: mov    %rax,%rdx
  0x000000011c318c5a: movabs $0x1124d83f8,%rsi  ;   {metadata(method data for {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318c64: addq   $0x1,0x158(%rsi)
  0x000000011c318c6c: mov    %rcx,%rdx
  0x000000011c318c6f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x000000011c318c72: mov    %rax,0x40(%rsp)
  0x000000011c318c77: callq  0x000000011c24c0a0  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x000000011c318c7c: mov    0x40(%rsp),%rax
  0x000000011c318c81: jmpq   0x000000011c318d8e  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000000011c318c86: xchg   %ax,%ax
  0x000000011c318c88: jmpq   0x000000011c318d4c  ;   {no_reloc}
  0x000000011c318c8d: add    %al,(%rax)
  0x000000011c318c8f: add    %al,(%rax)
  0x000000011c318c91: add    %ch,%cl
  0x000000011c318c93: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x000000011c318c98: mov    %eax,%edx
  0x000000011c318c9a: movabs $0x1124d83f8,%rsi  ;   {metadata(method data for {method} {0x00000001122c4208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x000000011c318ca4: addq   $0x1,0x128(%rsi)
  0x000000011c318cac: mov    %rdi,%rdx
  0x000000011c318caf: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x000000011c318cb2: mov    %rax,0x48(%rsp)
  0x000000011c318cb7: callq  0x000000011c24c0a0  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x000000011c318cbc: mov    0x48(%rsp),%rax
  0x000000011c318cc1: jmpq   0x000000011c318d8e
  0x000000011c318cc6: mov    %rdx,0x8(%rsp)
  0x000000011c318ccb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c318cd3: callq  0x000000011c306120  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x000000011c318cd8: jmpq   0x000000011c318aa1
  0x000000011c318cdd: callq  0x000000011c301ac0  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000011c318ce2: nop
  0x000000011c318ce3: nop
  0x000000011c318ce4: nop
  0x000000011c318ce5: nop
  0x000000011c318ce6: nop
  0x000000011c318ce7: callq  0x000000011c24c520  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x000000011c318cec: jmpq   0x000000011c318bf0
  0x000000011c318cf1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c318cfb: mov    $0xa050f00,%eax
  0x000000011c318d00: callq  0x000000011c305120  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000011c318d05: jmpq   0x000000011c318c00
  0x000000011c318d0a: mov    %rdx,%rdx
  0x000000011c318d0d: callq  0x000000011c301f60  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000011c318d12: jmpq   0x000000011c318c0f
  0x000000011c318d17: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c318d21: mov    $0xa050f00,%eax
  0x000000011c318d26: callq  0x000000011c305120  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000011c318d2b: jmpq   0x000000011c318c48
  0x000000011c318d30: mov    %rdx,%rdx
  0x000000011c318d33: callq  0x000000011c301f60  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000011c318d38: jmpq   0x000000011c318c57
  0x000000011c318d3d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c318d47: mov    $0xa050f00,%eax
  0x000000011c318d4c: callq  0x000000011c305120  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000011c318d51: jmpq   0x000000011c318c88
  0x000000011c318d56: mov    %rdx,%rdx
  0x000000011c318d59: callq  0x000000011c301f60  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000011c318d5e: jmpq   0x000000011c318c97
  0x000000011c318d63: nop
  0x000000011c318d64: nop
  0x000000011c318d65: mov    0x2a8(%r15),%rax
  0x000000011c318d6c: movabs $0x0,%r10
  0x000000011c318d76: mov    %r10,0x2a8(%r15)
  0x000000011c318d7d: movabs $0x0,%r10
  0x000000011c318d87: mov    %r10,0x2b0(%r15)
  0x000000011c318d8e: add    $0x60,%rsp
  0x000000011c318d92: pop    %rbp
  0x000000011c318d93: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c318d98: hlt    
  0x000000011c318d99: hlt    
  0x000000011c318d9a: hlt    
  0x000000011c318d9b: hlt    
  0x000000011c318d9c: hlt    
  0x000000011c318d9d: hlt    
  0x000000011c318d9e: hlt    
  0x000000011c318d9f: hlt    
[Stub Code]
  0x000000011c318da0: nop                       ;   {no_reloc}
  0x000000011c318da1: nop
  0x000000011c318da2: nop
  0x000000011c318da3: nop
  0x000000011c318da4: nop
  0x000000011c318da5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c318daf: jmpq   0x000000011c318daf  ;   {runtime_call}
  0x000000011c318db4: nop
  0x000000011c318db5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c318dbf: jmpq   0x000000011c318dbf  ;   {runtime_call}
  0x000000011c318dc4: nop
  0x000000011c318dc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c318dcf: jmpq   0x000000011c318dcf  ;   {runtime_call}
  0x000000011c318dd4: nop
  0x000000011c318dd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c318ddf: jmpq   0x000000011c318ddf  ;   {runtime_call}
[Exception Handler]
  0x000000011c318de4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c318de9: mov    %rsp,-0x28(%rsp)
  0x000000011c318dee: sub    $0x80,%rsp
  0x000000011c318df5: mov    %rax,0x78(%rsp)
  0x000000011c318dfa: mov    %rcx,0x70(%rsp)
  0x000000011c318dff: mov    %rdx,0x68(%rsp)
  0x000000011c318e04: mov    %rbx,0x60(%rsp)
  0x000000011c318e09: mov    %rbp,0x50(%rsp)
  0x000000011c318e0e: mov    %rsi,0x48(%rsp)
  0x000000011c318e13: mov    %rdi,0x40(%rsp)
  0x000000011c318e18: mov    %r8,0x38(%rsp)
  0x000000011c318e1d: mov    %r9,0x30(%rsp)
  0x000000011c318e22: mov    %r10,0x28(%rsp)
  0x000000011c318e27: mov    %r11,0x20(%rsp)
  0x000000011c318e2c: mov    %r12,0x18(%rsp)
  0x000000011c318e31: mov    %r13,0x10(%rsp)
  0x000000011c318e36: mov    %r14,0x8(%rsp)
  0x000000011c318e3b: mov    %r15,(%rsp)
  0x000000011c318e3f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c318e49: movabs $0x11c318de9,%rsi  ;   {internal_word}
  0x000000011c318e53: mov    %rsp,%rdx
  0x000000011c318e56: and    $0xfffffffffffffff0,%rsp
  0x000000011c318e5a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c318e5f: hlt    
[Deopt Handler Code]
  0x000000011c318e60: movabs $0x11c318e60,%r10  ;   {section_word}
  0x000000011c318e6a: push   %r10
  0x000000011c318e6c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c318e71: hlt    
  0x000000011c318e72: hlt    
  0x000000011c318e73: hlt    
  0x000000011c318e74: hlt    
  0x000000011c318e75: hlt    
  0x000000011c318e76: hlt    
  0x000000011c318e77: hlt    
<nmethod compile_id='25' compiler='C1' level='3' entry='0x000000011c318a40' size='2256' address='0x000000011c318890' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='918' iicount='918' stamp='0.273'/>
Decoding compiled method 0x000000011c31ca90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000011c31cca0: mov    %eax,-0x14000(%rsp)
  0x000000011c31cca7: push   %rbp
  0x000000011c31cca8: sub    $0xa0,%rsp
  0x000000011c31ccaf: mov    %rsi,%r8
  0x000000011c31ccb2: mov    %rdx,%r9
  0x000000011c31ccb5: movabs $0x1124d3c98,%rbx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31ccbf: mov    0xdc(%rbx),%edx
  0x000000011c31ccc5: add    $0x8,%edx
  0x000000011c31ccc8: mov    %edx,0xdc(%rbx)
  0x000000011c31ccce: movabs $0x1123db418,%rbx  ;   {metadata({method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31ccd8: and    $0x1ff8,%edx
  0x000000011c31ccde: cmp    $0x0,%edx
  0x000000011c31cce1: je     0x000000011c31d541  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x000000011c31cce7: mov    %rcx,%r11
  0x000000011c31ccea: sub    %r9d,%r11d
  0x000000011c31cced: cmp    $0x0,%r11d
  0x000000011c31ccf1: movabs $0x1124d3c98,%rbx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31ccfb: movabs $0x108,%rdx
  0x000000011c31cd05: jge    0x000000011c31cd15
  0x000000011c31cd0b: movabs $0x118,%rdx
  0x000000011c31cd15: mov    (%rbx,%rdx,1),%rsi
  0x000000011c31cd19: lea    0x1(%rsi),%rsi
  0x000000011c31cd1d: mov    %rsi,(%rbx,%rdx,1)
  0x000000011c31cd21: jl     0x000000011c31cee4  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x000000011c31cd27: mov    %r11,%rbx
  0x000000011c31cd2a: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c31cd34: movslq %ebx,%rbx
  0x000000011c31cd37: mov    %rbx,%rdi
  0x000000011c31cd3a: cmp    $0xffffff,%rbx
  0x000000011c31cd41: ja     0x000000011c31d558
  0x000000011c31cd47: movabs $0x17,%rsi
  0x000000011c31cd51: lea    (%rsi,%rbx,2),%rsi
  0x000000011c31cd55: and    $0xfffffffffffffff8,%rsi
  0x000000011c31cd59: mov    0x60(%r15),%rax
  0x000000011c31cd5d: lea    (%rax,%rsi,1),%rsi
  0x000000011c31cd61: cmp    0x70(%r15),%rsi
  0x000000011c31cd65: ja     0x000000011c31d558
  0x000000011c31cd6b: mov    %rsi,0x60(%r15)
  0x000000011c31cd6f: sub    %rax,%rsi
  0x000000011c31cd72: movq   $0x1,(%rax)
  0x000000011c31cd79: mov    %rdx,%rcx
  0x000000011c31cd7c: shr    $0x3,%rcx
  0x000000011c31cd80: mov    %ecx,0x8(%rax)
  0x000000011c31cd83: mov    %ebx,0xc(%rax)
  0x000000011c31cd86: sub    $0x10,%rsi
  0x000000011c31cd8a: je     0x000000011c31cda1
  0x000000011c31cd90: xor    %rbx,%rbx
  0x000000011c31cd93: shr    $0x3,%rsi
  0x000000011c31cd97: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c31cd9c: dec    %rsi
  0x000000011c31cd9f: jne    0x000000011c31cd97  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000011c31cda1: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000011c31d562
  0x000000011c31cda5: sub    %r9d,%esi
  0x000000011c31cda8: movabs $0x1124d3c98,%rdx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31cdb2: addq   $0x1,0x208(%rdx)
  0x000000011c31cdba: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31cdc4: mov    0xdc(%rdx),%ecx
  0x000000011c31cdca: add    $0x8,%ecx
  0x000000011c31cdcd: mov    %ecx,0xdc(%rdx)
  0x000000011c31cdd3: movabs $0x1123b6508,%rdx  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31cddd: and    $0x7ffff8,%ecx
  0x000000011c31cde3: cmp    $0x0,%ecx
  0x000000011c31cde6: je     0x000000011c31d567
  0x000000011c31cdec: cmp    %r11d,%esi
  0x000000011c31cdef: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31cdf9: movabs $0x108,%rcx
  0x000000011c31ce03: jg     0x000000011c31ce13
  0x000000011c31ce09: movabs $0x118,%rcx
  0x000000011c31ce13: mov    (%rdx,%rcx,1),%rdi
  0x000000011c31ce17: lea    0x1(%rdi),%rdi
  0x000000011c31ce1b: mov    %rdi,(%rdx,%rcx,1)
  0x000000011c31ce1f: jg     0x000000011c31ce3d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011c31ce25: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c31ce2f: incl   0x128(%rdx)
  0x000000011c31ce35: mov    %rsi,%rdi
  0x000000011c31ce38: jmpq   0x000000011c31ce40  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011c31ce3d: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000011c31ce40: movabs $0x1124d3c98,%rsi  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31ce4a: addq   $0x1,0x218(%rsi)
  0x000000011c31ce52: mov    %r8,%rsi
  0x000000011c31ce55: mov    %r9,%rdx
  0x000000011c31ce58: mov    %rax,%rcx
  0x000000011c31ce5b: mov    $0x0,%r8d
  0x000000011c31ce61: mov    %rdi,%r9
  0x000000011c31ce64: mov    %rax,0x70(%rsp)
  0x000000011c31ce69: test   %edx,%edx
  0x000000011c31ce6b: jl     0x000000011c31d57e
  0x000000011c31ce71: lea    (%rdx,%r9,1),%rdi
  0x000000011c31ce75: cmp    0xc(%rsi),%edi
  0x000000011c31ce78: ja     0x000000011c31d57e
  0x000000011c31ce7e: lea    (%r8,%r9,1),%rdi
  0x000000011c31ce82: cmp    0xc(%rcx),%edi
  0x000000011c31ce85: ja     0x000000011c31d57e
  0x000000011c31ce8b: test   %r9d,%r9d
  0x000000011c31ce8e: jl     0x000000011c31d57e
  0x000000011c31ce94: je     0x000000011c31ced0
  0x000000011c31ce9a: movslq %edx,%rdx
  0x000000011c31ce9d: movslq %r8d,%r8
  0x000000011c31cea0: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011c31cea5: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011c31ceaa: mov    %r9,%rdx
  0x000000011c31cead: test   $0xf,%esp
  0x000000011c31ceb3: je     0x000000011c31cecb
  0x000000011c31ceb9: sub    $0x8,%rsp
  0x000000011c31cebd: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011c31cec2: add    $0x8,%rsp
  0x000000011c31cec6: jmpq   0x000000011c31ced0
  0x000000011c31cecb: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x000000011c31ced0: mov    0x70(%rsp),%rax
  0x000000011c31ced5: add    $0xa0,%rsp
  0x000000011c31cedc: pop    %rbp
  0x000000011c31cedd: test   %eax,-0xf835de3(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31cee3: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x000000011c31cee4: mov    %ecx,0x80(%rsp)
  0x000000011c31ceeb: nopl   0x0(%rax,%rax,1)
  0x000000011c31cef0: jmpq   0x000000011c31d598  ;   {no_reloc}
  0x000000011c31cef5: add    %al,(%rax)
  0x000000011c31cef7: add    %al,(%rax)
  0x000000011c31cef9: add    %cl,-0x75(%rcx)
  0x000000011c31cefc: rex.RXB (bad) 
  0x000000011c31cefe: lea    0x20(%rax),%rdi
  0x000000011c31cf02: cmp    0x70(%r15),%rdi
  0x000000011c31cf06: ja     0x000000011c31d5a2
  0x000000011c31cf0c: mov    %rdi,0x60(%r15)
  0x000000011c31cf10: mov    0xa8(%rdx),%rcx
  0x000000011c31cf17: mov    %rcx,(%rax)
  0x000000011c31cf1a: mov    %rdx,%rcx
  0x000000011c31cf1d: shr    $0x3,%rcx
  0x000000011c31cf21: mov    %ecx,0x8(%rax)
  0x000000011c31cf24: xor    %rcx,%rcx
  0x000000011c31cf27: mov    %ecx,0xc(%rax)
  0x000000011c31cf2a: xor    %rcx,%rcx
  0x000000011c31cf2d: mov    %rcx,0x10(%rax)
  0x000000011c31cf31: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x000000011c31cf35: data32 xchg %ax,%ax
  0x000000011c31cf38: jmpq   0x000000011c31d5be  ;   {no_reloc}
  0x000000011c31cf3d: add    %al,(%rax)
  0x000000011c31cf3f: add    %al,(%rax)
  0x000000011c31cf41: add    %cl,-0x77(%rax)
  0x000000011c31cf44: test   %ah,(%rax,%rcx,4)
  0x000000011c31cf47: add    %al,(%rax)
  0x000000011c31cf49: add    %cl,-0x75(%rcx)
  0x000000011c31cf4c: rex.RXB (bad) 
  0x000000011c31cf4e: lea    0x18(%rax),%rdi
  0x000000011c31cf52: cmp    0x70(%r15),%rdi
  0x000000011c31cf56: ja     0x000000011c31d5c8
  0x000000011c31cf5c: mov    %rdi,0x60(%r15)
  0x000000011c31cf60: mov    0xa8(%rdx),%rcx
  0x000000011c31cf67: mov    %rcx,(%rax)
  0x000000011c31cf6a: mov    %rdx,%rcx
  0x000000011c31cf6d: shr    $0x3,%rcx
  0x000000011c31cf71: mov    %ecx,0x8(%rax)
  0x000000011c31cf74: xor    %rcx,%rcx
  0x000000011c31cf77: mov    %ecx,0xc(%rax)
  0x000000011c31cf7a: xor    %rcx,%rcx
  0x000000011c31cf7d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x000000011c31cf81: mov    %rax,%rbx
  0x000000011c31cf84: movabs $0x1124d3c98,%rdx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31cf8e: addq   $0x1,0x128(%rdx)
  0x000000011c31cf96: movabs $0x11257ece8,%rbx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31cfa0: mov    0xdc(%rbx),%edx
  0x000000011c31cfa6: add    $0x8,%edx
  0x000000011c31cfa9: mov    %edx,0xdc(%rbx)
  0x000000011c31cfaf: movabs $0x112338f30,%rbx  ;   {metadata({method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31cfb9: and    $0x7ffff8,%edx
  0x000000011c31cfbf: cmp    $0x0,%edx
  0x000000011c31cfc2: je     0x000000011c31d5d5
  0x000000011c31cfc8: mov    %rax,%rbx
  0x000000011c31cfcb: movabs $0x11257ece8,%rdx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31cfd5: addq   $0x1,0x108(%rdx)
  0x000000011c31cfdd: movabs $0x11257f080,%rbx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31cfe7: mov    0xdc(%rbx),%edx
  0x000000011c31cfed: add    $0x8,%edx
  0x000000011c31cff0: mov    %edx,0xdc(%rbx)
  0x000000011c31cff6: movabs $0x112335260,%rbx  ;   {metadata({method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31d000: and    $0x7ffff8,%edx
  0x000000011c31d006: cmp    $0x0,%edx
  0x000000011c31d009: je     0x000000011c31d5ec
  0x000000011c31d00f: mov    %rax,%rbx
  0x000000011c31d012: movabs $0x11257f080,%rdx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c31d01c: addq   $0x1,0x108(%rdx)
  0x000000011c31d024: movabs $0x1124371c0,%rbx  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c31d02e: mov    0xdc(%rbx),%edx
  0x000000011c31d034: add    $0x8,%edx
  0x000000011c31d037: mov    %edx,0xdc(%rbx)
  0x000000011c31d03d: movabs $0x1122c0480,%rbx  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c31d047: and    $0x7ffff8,%edx
  0x000000011c31d04d: cmp    $0x0,%edx
  0x000000011c31d050: je     0x000000011c31d603
  0x000000011c31d056: mov    $0x10,%ebx
  0x000000011c31d05b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c31d065: mov    %rax,%r13
  0x000000011c31d068: movslq %ebx,%rbx
  0x000000011c31d06b: mov    %rbx,%rdi
  0x000000011c31d06e: cmp    $0xffffff,%rbx
  0x000000011c31d075: ja     0x000000011c31d61a
  0x000000011c31d07b: movabs $0x17,%rsi
  0x000000011c31d085: lea    (%rsi,%rbx,2),%rsi
  0x000000011c31d089: and    $0xfffffffffffffff8,%rsi
  0x000000011c31d08d: mov    0x60(%r15),%rax
  0x000000011c31d091: lea    (%rax,%rsi,1),%rsi
  0x000000011c31d095: cmp    0x70(%r15),%rsi
  0x000000011c31d099: ja     0x000000011c31d61a
  0x000000011c31d09f: mov    %rsi,0x60(%r15)
  0x000000011c31d0a3: sub    %rax,%rsi
  0x000000011c31d0a6: movq   $0x1,(%rax)
  0x000000011c31d0ad: mov    %rdx,%rcx
  0x000000011c31d0b0: shr    $0x3,%rcx
  0x000000011c31d0b4: mov    %ecx,0x8(%rax)
  0x000000011c31d0b7: mov    %ebx,0xc(%rax)
  0x000000011c31d0ba: sub    $0x10,%rsi
  0x000000011c31d0be: je     0x000000011c31d0d5
  0x000000011c31d0c4: xor    %rbx,%rbx
  0x000000011c31d0c7: shr    $0x3,%rsi
  0x000000011c31d0cb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c31d0d0: dec    %rsi
  0x000000011c31d0d3: jne    0x000000011c31d0cb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000011c31d0d5: mov    %rax,%r10
  0x000000011c31d0d8: shr    $0x3,%r10
  0x000000011c31d0dc: mov    %r10d,0x10(%r13)
  0x000000011c31d0e0: mov    %r13,%rax
  0x000000011c31d0e3: shr    $0x9,%rax
  0x000000011c31d0e7: movabs $0x10c974000,%rdx
  0x000000011c31d0f1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x000000011c31d0f5: mov    %r13,%rax
  0x000000011c31d0f8: movabs $0x1124d3c98,%rdx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31d102: mov    0x8(%rax),%eax
  0x000000011c31d105: shl    $0x3,%rax
  0x000000011c31d109: cmp    0x140(%rdx),%rax
  0x000000011c31d110: jne    0x000000011c31d11f
  0x000000011c31d112: addq   $0x1,0x148(%rdx)
  0x000000011c31d11a: jmpq   0x000000011c31d185
  0x000000011c31d11f: cmp    0x150(%rdx),%rax
  0x000000011c31d126: jne    0x000000011c31d135
  0x000000011c31d128: addq   $0x1,0x158(%rdx)
  0x000000011c31d130: jmpq   0x000000011c31d185
  0x000000011c31d135: cmpq   $0x0,0x140(%rdx)
  0x000000011c31d140: jne    0x000000011c31d159
  0x000000011c31d142: mov    %rax,0x140(%rdx)
  0x000000011c31d149: movq   $0x1,0x148(%rdx)
  0x000000011c31d154: jmpq   0x000000011c31d185
  0x000000011c31d159: cmpq   $0x0,0x150(%rdx)
  0x000000011c31d164: jne    0x000000011c31d17d
  0x000000011c31d166: mov    %rax,0x150(%rdx)
  0x000000011c31d16d: movq   $0x1,0x158(%rdx)
  0x000000011c31d178: jmpq   0x000000011c31d185
  0x000000011c31d17d: addq   $0x1,0x138(%rdx)
  0x000000011c31d185: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d18f: mov    0xdc(%rdx),%esi
  0x000000011c31d195: add    $0x8,%esi
  0x000000011c31d198: mov    %esi,0xdc(%rdx)
  0x000000011c31d19e: movabs $0x112339708,%rdx  ;   {metadata({method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d1a8: and    $0x7ffff8,%esi
  0x000000011c31d1ae: cmp    $0x0,%esi
  0x000000011c31d1b1: je     0x000000011c31d624
  0x000000011c31d1b7: mov    %r13,%rax
  0x000000011c31d1ba: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d1c4: addq   $0x1,0x108(%rdx)
  0x000000011c31d1cc: mov    %r9,%rdx
  0x000000011c31d1cf: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x000000011c31d1d2: mov    %r13,0x78(%rsp)
  0x000000011c31d1d7: callq  0x000000011c24c0a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011c31d1dc: mov    0x78(%rsp),%rax
  0x000000011c31d1e1: movabs $0x1124d3c98,%rdx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31d1eb: mov    0x8(%rax),%eax
  0x000000011c31d1ee: shl    $0x3,%rax
  0x000000011c31d1f2: cmp    0x170(%rdx),%rax
  0x000000011c31d1f9: jne    0x000000011c31d208
  0x000000011c31d1fb: addq   $0x1,0x178(%rdx)
  0x000000011c31d203: jmpq   0x000000011c31d26e
  0x000000011c31d208: cmp    0x180(%rdx),%rax
  0x000000011c31d20f: jne    0x000000011c31d21e
  0x000000011c31d211: addq   $0x1,0x188(%rdx)
  0x000000011c31d219: jmpq   0x000000011c31d26e
  0x000000011c31d21e: cmpq   $0x0,0x170(%rdx)
  0x000000011c31d229: jne    0x000000011c31d242
  0x000000011c31d22b: mov    %rax,0x170(%rdx)
  0x000000011c31d232: movq   $0x1,0x178(%rdx)
  0x000000011c31d23d: jmpq   0x000000011c31d26e
  0x000000011c31d242: cmpq   $0x0,0x180(%rdx)
  0x000000011c31d24d: jne    0x000000011c31d266
  0x000000011c31d24f: mov    %rax,0x180(%rdx)
  0x000000011c31d256: movq   $0x1,0x188(%rdx)
  0x000000011c31d261: jmpq   0x000000011c31d26e
  0x000000011c31d266: addq   $0x1,0x168(%rdx)
  0x000000011c31d26e: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d278: mov    0xdc(%rdx),%esi
  0x000000011c31d27e: add    $0x8,%esi
  0x000000011c31d281: mov    %esi,0xdc(%rdx)
  0x000000011c31d287: movabs $0x112339248,%rdx  ;   {metadata({method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d291: and    $0x7ffff8,%esi
  0x000000011c31d297: cmp    $0x0,%esi
  0x000000011c31d29a: je     0x000000011c31d63b
  0x000000011c31d2a0: mov    0x78(%rsp),%rax
  0x000000011c31d2a5: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d2af: addq   $0x1,0x108(%rdx)
  0x000000011c31d2b7: movabs $0x715aa3de0,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x000000011c31d2c1: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x000000011c31d2c6: nop
  0x000000011c31d2c7: callq  0x000000011c24c0a0  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011c31d2cc: mov    0x78(%rsp),%rax
  0x000000011c31d2d1: movabs $0x1124d3c98,%rdx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31d2db: mov    0x8(%rax),%eax
  0x000000011c31d2de: shl    $0x3,%rax
  0x000000011c31d2e2: cmp    0x1a0(%rdx),%rax
  0x000000011c31d2e9: jne    0x000000011c31d2f8
  0x000000011c31d2eb: addq   $0x1,0x1a8(%rdx)
  0x000000011c31d2f3: jmpq   0x000000011c31d35e
  0x000000011c31d2f8: cmp    0x1b0(%rdx),%rax
  0x000000011c31d2ff: jne    0x000000011c31d30e
  0x000000011c31d301: addq   $0x1,0x1b8(%rdx)
  0x000000011c31d309: jmpq   0x000000011c31d35e
  0x000000011c31d30e: cmpq   $0x0,0x1a0(%rdx)
  0x000000011c31d319: jne    0x000000011c31d332
  0x000000011c31d31b: mov    %rax,0x1a0(%rdx)
  0x000000011c31d322: movq   $0x1,0x1a8(%rdx)
  0x000000011c31d32d: jmpq   0x000000011c31d35e
  0x000000011c31d332: cmpq   $0x0,0x1b0(%rdx)
  0x000000011c31d33d: jne    0x000000011c31d356
  0x000000011c31d33f: mov    %rax,0x1b0(%rdx)
  0x000000011c31d346: movq   $0x1,0x1b8(%rdx)
  0x000000011c31d351: jmpq   0x000000011c31d35e
  0x000000011c31d356: addq   $0x1,0x198(%rdx)
  0x000000011c31d35e: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d368: mov    0xdc(%rdx),%esi
  0x000000011c31d36e: add    $0x8,%esi
  0x000000011c31d371: mov    %esi,0xdc(%rdx)
  0x000000011c31d377: movabs $0x112339708,%rdx  ;   {metadata({method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d381: and    $0x7ffff8,%esi
  0x000000011c31d387: cmp    $0x0,%esi
  0x000000011c31d38a: je     0x000000011c31d652
  0x000000011c31d390: mov    0x78(%rsp),%rax
  0x000000011c31d395: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d39f: addq   $0x1,0x108(%rdx)
  0x000000011c31d3a7: mov    0x80(%rsp),%edx
  0x000000011c31d3ae: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000000011c31d3b3: nop
  0x000000011c31d3b4: nop
  0x000000011c31d3b5: nop
  0x000000011c31d3b6: nop
  0x000000011c31d3b7: callq  0x000000011c24c0a0  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011c31d3bc: mov    0x78(%rsp),%rax
  0x000000011c31d3c1: movabs $0x1124d3c98,%rdx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31d3cb: mov    0x8(%rax),%eax
  0x000000011c31d3ce: shl    $0x3,%rax
  0x000000011c31d3d2: cmp    0x1d0(%rdx),%rax
  0x000000011c31d3d9: jne    0x000000011c31d3e8
  0x000000011c31d3db: addq   $0x1,0x1d8(%rdx)
  0x000000011c31d3e3: jmpq   0x000000011c31d44e
  0x000000011c31d3e8: cmp    0x1e0(%rdx),%rax
  0x000000011c31d3ef: jne    0x000000011c31d3fe
  0x000000011c31d3f1: addq   $0x1,0x1e8(%rdx)
  0x000000011c31d3f9: jmpq   0x000000011c31d44e
  0x000000011c31d3fe: cmpq   $0x0,0x1d0(%rdx)
  0x000000011c31d409: jne    0x000000011c31d422
  0x000000011c31d40b: mov    %rax,0x1d0(%rdx)
  0x000000011c31d412: movq   $0x1,0x1d8(%rdx)
  0x000000011c31d41d: jmpq   0x000000011c31d44e
  0x000000011c31d422: cmpq   $0x0,0x1e0(%rdx)
  0x000000011c31d42d: jne    0x000000011c31d446
  0x000000011c31d42f: mov    %rax,0x1e0(%rdx)
  0x000000011c31d436: movq   $0x1,0x1e8(%rdx)
  0x000000011c31d441: jmpq   0x000000011c31d44e
  0x000000011c31d446: addq   $0x1,0x1c8(%rdx)
  0x000000011c31d44e: movabs $0x112581020,%rdx  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d458: mov    0xdc(%rdx),%esi
  0x000000011c31d45e: add    $0x8,%esi
  0x000000011c31d461: mov    %esi,0xdc(%rdx)
  0x000000011c31d467: movabs $0x11233a5f8,%rdx  ;   {metadata({method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d471: and    $0x7ffff8,%esi
  0x000000011c31d477: cmp    $0x0,%esi
  0x000000011c31d47a: je     0x000000011c31d669
  0x000000011c31d480: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c31d48a: mov    0x60(%r15),%rax
  0x000000011c31d48e: lea    0x18(%rax),%rdi
  0x000000011c31d492: cmp    0x70(%r15),%rdi
  0x000000011c31d496: ja     0x000000011c31d680
  0x000000011c31d49c: mov    %rdi,0x60(%r15)
  0x000000011c31d4a0: mov    0xa8(%rdx),%rcx
  0x000000011c31d4a7: mov    %rcx,(%rax)
  0x000000011c31d4aa: mov    %rdx,%rcx
  0x000000011c31d4ad: shr    $0x3,%rcx
  0x000000011c31d4b1: mov    %ecx,0x8(%rax)
  0x000000011c31d4b4: xor    %rcx,%rcx
  0x000000011c31d4b7: mov    %ecx,0xc(%rax)
  0x000000011c31d4ba: xor    %rcx,%rcx
  0x000000011c31d4bd: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011c31d4c1: mov    0x78(%rsp),%rdx
  0x000000011c31d4c6: mov    0x10(%rdx),%ecx
  0x000000011c31d4c9: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011c31d4cd: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011c31d4d1: mov    %rax,%rdx
  0x000000011c31d4d4: movabs $0x112581020,%rsi  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c31d4de: addq   $0x1,0x108(%rsi)
  0x000000011c31d4e6: mov    %rcx,%rdx
  0x000000011c31d4e9: mov    $0x0,%ecx
  0x000000011c31d4ee: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011c31d4f1: mov    %rax,0x90(%rsp)
  0x000000011c31d4f9: nop
  0x000000011c31d4fa: nop
  0x000000011c31d4fb: nop
  0x000000011c31d4fc: nop
  0x000000011c31d4fd: nop
  0x000000011c31d4fe: nop
  0x000000011c31d4ff: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011c31d504: mov    0x88(%rsp),%rax
  0x000000011c31d50c: movabs $0x1124d3c98,%rdx  ;   {metadata(method data for {method} {0x00000001123db418} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c31d516: addq   $0x1,0x1f8(%rdx)
  0x000000011c31d51e: mov    0x90(%rsp),%rdx
  0x000000011c31d526: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000011c31d52e: nop
  0x000000011c31d52f: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011c31d534: mov    0x88(%rsp),%rax
  0x000000011c31d53c: jmpq   0x000000011c31d6b8
  0x000000011c31d541: mov    %rbx,0x8(%rsp)
  0x000000011c31d546: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d54e: callq  0x000000011c306120  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000000011c31d553: jmpq   0x000000011c31cce7
  0x000000011c31d558: callq  0x000000011c302b20  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000011c31d55d: jmpq   0x000000011c31cda1
  0x000000011c31d562: callq  0x000000011c301ac0  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000011c31d567: mov    %rdx,0x8(%rsp)
  0x000000011c31d56c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d574: callq  0x000000011c306120  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000011c31d579: jmpq   0x000000011c31cdec
  0x000000011c31d57e: nop
  0x000000011c31d57f: callq  0x000000011c24c520  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000011c31d584: jmpq   0x000000011c31ced0
  0x000000011c31d589: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c31d593: mov    $0xa050f00,%eax
  0x000000011c31d598: callq  0x000000011c305120  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d59d: jmpq   0x000000011c31cef0
  0x000000011c31d5a2: mov    %rdx,%rdx
  0x000000011c31d5a5: callq  0x000000011c302220  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d5aa: jmpq   0x000000011c31cf35
  0x000000011c31d5af: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c31d5b9: mov    $0xa050f00,%eax
  0x000000011c31d5be: callq  0x000000011c305120  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d5c3: jmpq   0x000000011c31cf38
  0x000000011c31d5c8: mov    %rdx,%rdx
  0x000000011c31d5cb: callq  0x000000011c302220  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d5d0: jmpq   0x000000011c31cf81
  0x000000011c31d5d5: mov    %rbx,0x8(%rsp)
  0x000000011c31d5da: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d5e2: callq  0x000000011c306120  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d5e7: jmpq   0x000000011c31cfc8
  0x000000011c31d5ec: mov    %rbx,0x8(%rsp)
  0x000000011c31d5f1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d5f9: callq  0x000000011c306120  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d5fe: jmpq   0x000000011c31d00f
  0x000000011c31d603: mov    %rbx,0x8(%rsp)
  0x000000011c31d608: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d610: callq  0x000000011c306120  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d615: jmpq   0x000000011c31d056
  0x000000011c31d61a: callq  0x000000011c302b20  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d61f: jmpq   0x000000011c31d0d5
  0x000000011c31d624: mov    %rdx,0x8(%rsp)
  0x000000011c31d629: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d631: callq  0x000000011c306120  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d636: jmpq   0x000000011c31d1b7
  0x000000011c31d63b: mov    %rdx,0x8(%rsp)
  0x000000011c31d640: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d648: callq  0x000000011c306120  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d64d: jmpq   0x000000011c31d2a0
  0x000000011c31d652: mov    %rdx,0x8(%rsp)
  0x000000011c31d657: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d65f: callq  0x000000011c306120  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d664: jmpq   0x000000011c31d390
  0x000000011c31d669: mov    %rdx,0x8(%rsp)
  0x000000011c31d66e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c31d676: callq  0x000000011c306120  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d67b: jmpq   0x000000011c31d480
  0x000000011c31d680: mov    %rdx,%rdx
  0x000000011c31d683: callq  0x000000011c302220  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000011c31d688: jmpq   0x000000011c31d4c1
  0x000000011c31d68d: nop
  0x000000011c31d68e: nop
  0x000000011c31d68f: mov    0x2a8(%r15),%rax
  0x000000011c31d696: movabs $0x0,%r10
  0x000000011c31d6a0: mov    %r10,0x2a8(%r15)
  0x000000011c31d6a7: movabs $0x0,%r10
  0x000000011c31d6b1: mov    %r10,0x2b0(%r15)
  0x000000011c31d6b8: add    $0xa0,%rsp
  0x000000011c31d6bf: pop    %rbp
  0x000000011c31d6c0: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c31d6c5: hlt    
  0x000000011c31d6c6: hlt    
  0x000000011c31d6c7: hlt    
  0x000000011c31d6c8: hlt    
  0x000000011c31d6c9: hlt    
  0x000000011c31d6ca: hlt    
  0x000000011c31d6cb: hlt    
  0x000000011c31d6cc: hlt    
  0x000000011c31d6cd: hlt    
  0x000000011c31d6ce: hlt    
  0x000000011c31d6cf: hlt    
  0x000000011c31d6d0: hlt    
  0x000000011c31d6d1: hlt    
  0x000000011c31d6d2: hlt    
  0x000000011c31d6d3: hlt    
  0x000000011c31d6d4: hlt    
  0x000000011c31d6d5: hlt    
  0x000000011c31d6d6: hlt    
  0x000000011c31d6d7: hlt    
  0x000000011c31d6d8: hlt    
  0x000000011c31d6d9: hlt    
  0x000000011c31d6da: hlt    
  0x000000011c31d6db: hlt    
  0x000000011c31d6dc: hlt    
  0x000000011c31d6dd: hlt    
  0x000000011c31d6de: hlt    
  0x000000011c31d6df: hlt    
[Stub Code]
  0x000000011c31d6e0: nop                       ;   {no_reloc}
  0x000000011c31d6e1: nop
  0x000000011c31d6e2: nop
  0x000000011c31d6e3: nop
  0x000000011c31d6e4: nop
  0x000000011c31d6e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31d6ef: jmpq   0x000000011c31d6ef  ;   {runtime_call}
  0x000000011c31d6f4: nop
  0x000000011c31d6f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31d6ff: jmpq   0x000000011c31d6ff  ;   {runtime_call}
  0x000000011c31d704: nop
  0x000000011c31d705: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31d70f: jmpq   0x000000011c31d70f  ;   {runtime_call}
  0x000000011c31d714: nop
  0x000000011c31d715: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31d71f: jmpq   0x000000011c31d71f  ;   {runtime_call}
  0x000000011c31d724: nop
  0x000000011c31d725: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31d72f: jmpq   0x000000011c31d72f  ;   {runtime_call}
  0x000000011c31d734: nop
  0x000000011c31d735: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c31d73f: jmpq   0x000000011c31d73f  ;   {runtime_call}
[Exception Handler]
  0x000000011c31d744: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c31d749: mov    %rsp,-0x28(%rsp)
  0x000000011c31d74e: sub    $0x80,%rsp
  0x000000011c31d755: mov    %rax,0x78(%rsp)
  0x000000011c31d75a: mov    %rcx,0x70(%rsp)
  0x000000011c31d75f: mov    %rdx,0x68(%rsp)
  0x000000011c31d764: mov    %rbx,0x60(%rsp)
  0x000000011c31d769: mov    %rbp,0x50(%rsp)
  0x000000011c31d76e: mov    %rsi,0x48(%rsp)
  0x000000011c31d773: mov    %rdi,0x40(%rsp)
  0x000000011c31d778: mov    %r8,0x38(%rsp)
  0x000000011c31d77d: mov    %r9,0x30(%rsp)
  0x000000011c31d782: mov    %r10,0x28(%rsp)
  0x000000011c31d787: mov    %r11,0x20(%rsp)
  0x000000011c31d78c: mov    %r12,0x18(%rsp)
  0x000000011c31d791: mov    %r13,0x10(%rsp)
  0x000000011c31d796: mov    %r14,0x8(%rsp)
  0x000000011c31d79b: mov    %r15,(%rsp)
  0x000000011c31d79f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c31d7a9: movabs $0x11c31d749,%rsi  ;   {internal_word}
  0x000000011c31d7b3: mov    %rsp,%rdx
  0x000000011c31d7b6: and    $0xfffffffffffffff0,%rsp
  0x000000011c31d7ba: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c31d7bf: hlt    
[Deopt Handler Code]
  0x000000011c31d7c0: movabs $0x11c31d7c0,%r10  ;   {section_word}
  0x000000011c31d7ca: push   %r10
  0x000000011c31d7cc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c31d7d1: hlt    
  0x000000011c31d7d2: hlt    
  0x000000011c31d7d3: hlt    
  0x000000011c31d7d4: hlt    
  0x000000011c31d7d5: hlt    
  0x000000011c31d7d6: hlt    
  0x000000011c31d7d7: hlt    
<nmethod compile_id='31' compiler='C1' level='3' entry='0x000000011c31cca0' size='4856' address='0x000000011c31ca90' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1024' iicount='1024' stamp='0.289'/>
Decoding compiled method 0x000000011c31eb90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  # parm1:    rdx:rdx   = &apos;[C&apos;
  # parm2:    rcx       = int
  # parm3:    r8        = int
  #           [sp+0x130]  (sp of caller)
  0x000000011c31eee0: mov    %eax,-0x14000(%rsp)
  0x000000011c31eee7: push   %rbp
  0x000000011c31eee8: sub    $0x120,%rsp
  0x000000011c31eeef: movabs $0x11256cfa8,%rdi  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31eef9: mov    0xdc(%rdi),%ebx
  0x000000011c31eeff: add    $0x8,%ebx
  0x000000011c31ef02: mov    %ebx,0xdc(%rdi)
  0x000000011c31ef08: movabs $0x1123e5e80,%rdi  ;   {metadata({method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31ef12: and    $0x1ff8,%ebx
  0x000000011c31ef18: cmp    $0x0,%ebx
  0x000000011c31ef1b: je     0x000000011c320371  ;*getstatic encoder
                                                ; - java.lang.StringCoding::encode@0 (line 330)

  0x000000011c31ef21: mov    %r8d,0xbc(%rsp)
  0x000000011c31ef29: mov    %ecx,0xb8(%rsp)
  0x000000011c31ef30: mov    %rdx,0xb0(%rsp)
  0x000000011c31ef38: mov    %rsi,0xa8(%rsp)
  0x000000011c31ef40: movabs $0x11256cfa8,%rdi  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31ef4a: addq   $0x1,0x108(%rdi)
  0x000000011c31ef52: movabs $0x11259eee8,%rdi  ;   {metadata(method data for {method} {0x00000001123e55c8} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31ef5c: mov    0xdc(%rdi),%ebx
  0x000000011c31ef62: add    $0x8,%ebx
  0x000000011c31ef65: mov    %ebx,0xdc(%rdi)
  0x000000011c31ef6b: movabs $0x1123e55c8,%rdi  ;   {metadata({method} {0x00000001123e55c8} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31ef75: and    $0x7ffff8,%ebx
  0x000000011c31ef7b: cmp    $0x0,%ebx
  0x000000011c31ef7e: je     0x000000011c320388
  0x000000011c31ef84: movabs $0x715596200,%rdi  ;   {oop(a &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c31ef8e: mov    %rdi,%rbx
  0x000000011c31ef91: movabs $0x11259eee8,%rax  ;   {metadata(method data for {method} {0x00000001123e55c8} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31ef9b: movabs $0x7c001eaf8,%r10  ;   {metadata(&apos;java/lang/ThreadLocal&apos;)}
  0x000000011c31efa5: mov    %r10,0x110(%rax)
  0x000000011c31efac: addq   $0x1,0x118(%rax)
  0x000000011c31efb4: mov    %rdi,%rsi          ;*invokevirtual get
                                                ; - java.lang.StringCoding::deref@1 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31efb7: callq  0x000000011c24c0a0  ; OopMap{[168]=Oop [176]=Oop off=220}
                                                ;*invokevirtual get
                                                ; - java.lang.StringCoding::deref@1 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {optimized virtual_call}
  0x000000011c31efbc: cmp    $0x0,%rax
  0x000000011c31efc0: jne    0x000000011c31efdb
  0x000000011c31efc2: movabs $0x11259eee8,%rdi  ;   {metadata(method data for {method} {0x00000001123e55c8} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31efcc: orl    $0x100,0x130(%rdi)
  0x000000011c31efd6: jmpq   0x000000011c31f09c
  0x000000011c31efdb: movabs $0x7c0005b10,%rbx  ;   {metadata(&apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31efe5: mov    0x8(%rax),%edi
  0x000000011c31efe8: shl    $0x3,%rdi
  0x000000011c31efec: cmp    0x38(%rdi),%rbx
  0x000000011c31eff0: jne    0x000000011c31f080
  0x000000011c31eff6: movabs $0x11259eee8,%rdi  ;   {metadata(method data for {method} {0x00000001123e55c8} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f000: mov    0x8(%rax),%ebx
  0x000000011c31f003: shl    $0x3,%rbx
  0x000000011c31f007: cmp    0x140(%rdi),%rbx
  0x000000011c31f00e: jne    0x000000011c31f01d
  0x000000011c31f010: addq   $0x1,0x148(%rdi)
  0x000000011c31f018: jmpq   0x000000011c31f09c
  0x000000011c31f01d: cmp    0x150(%rdi),%rbx
  0x000000011c31f024: jne    0x000000011c31f033
  0x000000011c31f026: addq   $0x1,0x158(%rdi)
  0x000000011c31f02e: jmpq   0x000000011c31f09c
  0x000000011c31f033: cmpq   $0x0,0x140(%rdi)
  0x000000011c31f03e: jne    0x000000011c31f057
  0x000000011c31f040: mov    %rbx,0x140(%rdi)
  0x000000011c31f047: movq   $0x1,0x148(%rdi)
  0x000000011c31f052: jmpq   0x000000011c31f09c
  0x000000011c31f057: cmpq   $0x0,0x150(%rdi)
  0x000000011c31f062: jne    0x000000011c31f07b
  0x000000011c31f064: mov    %rbx,0x150(%rdi)
  0x000000011c31f06b: movq   $0x1,0x158(%rdi)
  0x000000011c31f076: jmpq   0x000000011c31f09c
  0x000000011c31f07b: jmpq   0x000000011c31f09c
  0x000000011c31f080: movabs $0x11259eee8,%rdi  ;   {metadata(method data for {method} {0x00000001123e55c8} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f08a: subq   $0x1,0x138(%rdi)
  0x000000011c31f092: jmpq   0x000000011c32039f
  0x000000011c31f097: jmpq   0x000000011c31f09c
  0x000000011c31f09c: mov    %rax,%rdx          ;*checkcast
                                                ; - java.lang.StringCoding::deref@4 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31f09f: cmp    $0x0,%rdx
  0x000000011c31f0a3: movabs $0x11259eee8,%rsi  ;   {metadata(method data for {method} {0x00000001123e55c8} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f0ad: movabs $0x168,%rdi
  0x000000011c31f0b7: jne    0x000000011c31f0c7
  0x000000011c31f0bd: movabs $0x178,%rdi
  0x000000011c31f0c7: mov    (%rsi,%rdi,1),%rbx
  0x000000011c31f0cb: lea    0x1(%rbx),%rbx
  0x000000011c31f0cf: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c31f0d3: jne    0x000000011c31f0e8  ;*ifnonnull
                                                ; - java.lang.StringCoding::deref@9 (line 64)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31f0d9: movabs $0x0,%rdx          ;   {oop(NULL)}
  0x000000011c31f0e3: jmpq   0x000000011c31f255  ;*checkcast
                                                ; - java.lang.StringCoding::encode@6 (line 330)

  0x000000011c31f0e8: cmp    (%rdx),%rax        ;*invokevirtual get
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ; implicit exception: dispatches to 0x000000011c3203a8
  0x000000011c31f0eb: mov    %rdx,%rsi
  0x000000011c31f0ee: movabs $0x11259eee8,%rdi  ;   {metadata(method data for {method} {0x00000001123e55c8} &apos;deref&apos; &apos;(Ljava/lang/ThreadLocal;)Ljava/lang/Object;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f0f8: mov    0x8(%rsi),%esi
  0x000000011c31f0fb: shl    $0x3,%rsi
  0x000000011c31f0ff: cmp    0x190(%rdi),%rsi
  0x000000011c31f106: jne    0x000000011c31f115
  0x000000011c31f108: addq   $0x1,0x198(%rdi)
  0x000000011c31f110: jmpq   0x000000011c31f17b
  0x000000011c31f115: cmp    0x1a0(%rdi),%rsi
  0x000000011c31f11c: jne    0x000000011c31f12b
  0x000000011c31f11e: addq   $0x1,0x1a8(%rdi)
  0x000000011c31f126: jmpq   0x000000011c31f17b
  0x000000011c31f12b: cmpq   $0x0,0x190(%rdi)
  0x000000011c31f136: jne    0x000000011c31f14f
  0x000000011c31f138: mov    %rsi,0x190(%rdi)
  0x000000011c31f13f: movq   $0x1,0x198(%rdi)
  0x000000011c31f14a: jmpq   0x000000011c31f17b
  0x000000011c31f14f: cmpq   $0x0,0x1a0(%rdi)
  0x000000011c31f15a: jne    0x000000011c31f173
  0x000000011c31f15c: mov    %rsi,0x1a0(%rdi)
  0x000000011c31f163: movq   $0x1,0x1a8(%rdi)
  0x000000011c31f16e: jmpq   0x000000011c31f17b
  0x000000011c31f173: addq   $0x1,0x188(%rdi)
  0x000000011c31f17b: movabs $0x11259f750,%rsi  ;   {metadata(method data for {method} {0x00000001122e8c78} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31f185: mov    0xdc(%rsi),%edi
  0x000000011c31f18b: add    $0x8,%edi
  0x000000011c31f18e: mov    %edi,0xdc(%rsi)
  0x000000011c31f194: movabs $0x1122e8c78,%rsi  ;   {metadata({method} {0x00000001122e8c78} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31f19e: and    $0x7ffff8,%edi
  0x000000011c31f1a4: cmp    $0x0,%edi
  0x000000011c31f1a7: je     0x000000011c3203ad
  0x000000011c31f1ad: mov    %rdx,%rsi
  0x000000011c31f1b0: movabs $0x11259f750,%rdi  ;   {metadata(method data for {method} {0x00000001122e8c78} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31f1ba: addq   $0x1,0x108(%rdi)
  0x000000011c31f1c2: mov    0xc(%rdx),%esi
  0x000000011c31f1c5: shl    $0x3,%rsi          ;*invokespecial get
                                                ; - java.lang.ref.SoftReference::get@1 (line 112)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31f1c9: cmp    $0x0,%rsi
  0x000000011c31f1cd: movabs $0x11259f750,%rdi  ;   {metadata(method data for {method} {0x00000001122e8c78} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31f1d7: movabs $0x118,%rbx
  0x000000011c31f1e1: je     0x000000011c31f1f1
  0x000000011c31f1e7: movabs $0x128,%rbx
  0x000000011c31f1f1: mov    (%rdi,%rbx,1),%rax
  0x000000011c31f1f5: lea    0x1(%rax),%rax
  0x000000011c31f1f9: mov    %rax,(%rdi,%rbx,1)
  0x000000011c31f1fd: je     0x000000011c31f252  ;*ifnull
                                                ; - java.lang.ref.SoftReference::get@6 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31f203: mov    0x20(%rdx),%rdi    ;*getfield timestamp
                                                ; - java.lang.ref.SoftReference::get@10 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31f207: movabs $0x7155818a0,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31f211: mov    0x68(%rbx),%rax    ;*getstatic clock
                                                ; - java.lang.ref.SoftReference::get@13 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31f215: cmp    %rax,%rdi
  0x000000011c31f218: movabs $0x11259f750,%rdi  ;   {metadata(method data for {method} {0x00000001122e8c78} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31f222: movabs $0x148,%rbx
  0x000000011c31f22c: jne    0x000000011c31f23c
  0x000000011c31f232: movabs $0x138,%rbx
  0x000000011c31f23c: mov    (%rdi,%rbx,1),%rcx
  0x000000011c31f240: lea    0x1(%rcx),%rcx
  0x000000011c31f244: mov    %rcx,(%rdi,%rbx,1)
  0x000000011c31f248: je     0x000000011c31f252  ;*lcmp
                                                ; - java.lang.ref.SoftReference::get@16 (line 113)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31f24e: mov    %rax,0x20(%rdx)    ;*putfield timestamp
                                                ; - java.lang.ref.SoftReference::get@24 (line 114)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)

  0x000000011c31f252: mov    %rsi,%rdx
  0x000000011c31f255: mov    0xa8(%rsp),%rsi
  0x000000011c31f25d: cmp    $0x0,%rdx
  0x000000011c31f261: jne    0x000000011c31f27c
  0x000000011c31f263: movabs $0x11256cfa8,%rbx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f26d: orl    $0x100,0x110(%rbx)
  0x000000011c31f277: jmpq   0x000000011c31f33c
  0x000000011c31f27c: movabs $0x7c002c028,%rax  ;   {metadata(&apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f286: mov    0x8(%rdx),%edi
  0x000000011c31f289: shl    $0x3,%rdi
  0x000000011c31f28d: cmp    %rdi,%rax
  0x000000011c31f290: jne    0x000000011c31f320
  0x000000011c31f296: movabs $0x11256cfa8,%rbx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f2a0: mov    0x8(%rdx),%eax
  0x000000011c31f2a3: shl    $0x3,%rax
  0x000000011c31f2a7: cmp    0x120(%rbx),%rax
  0x000000011c31f2ae: jne    0x000000011c31f2bd
  0x000000011c31f2b0: addq   $0x1,0x128(%rbx)
  0x000000011c31f2b8: jmpq   0x000000011c31f33c
  0x000000011c31f2bd: cmp    0x130(%rbx),%rax
  0x000000011c31f2c4: jne    0x000000011c31f2d3
  0x000000011c31f2c6: addq   $0x1,0x138(%rbx)
  0x000000011c31f2ce: jmpq   0x000000011c31f33c
  0x000000011c31f2d3: cmpq   $0x0,0x120(%rbx)
  0x000000011c31f2de: jne    0x000000011c31f2f7
  0x000000011c31f2e0: mov    %rax,0x120(%rbx)
  0x000000011c31f2e7: movq   $0x1,0x128(%rbx)
  0x000000011c31f2f2: jmpq   0x000000011c31f33c
  0x000000011c31f2f7: cmpq   $0x0,0x130(%rbx)
  0x000000011c31f302: jne    0x000000011c31f31b
  0x000000011c31f304: mov    %rax,0x130(%rbx)
  0x000000011c31f30b: movq   $0x1,0x138(%rbx)
  0x000000011c31f316: jmpq   0x000000011c31f33c
  0x000000011c31f31b: jmpq   0x000000011c31f33c
  0x000000011c31f320: movabs $0x11256cfa8,%rbx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f32a: subq   $0x1,0x118(%rbx)
  0x000000011c31f332: jmpq   0x000000011c3203c4
  0x000000011c31f337: jmpq   0x000000011c31f33c
  0x000000011c31f33c: mov    %rdx,%rdi          ;*checkcast
                                                ; - java.lang.StringCoding::encode@6 (line 330)

  0x000000011c31f33f: mov    %rdi,0xc0(%rsp)
  0x000000011c31f347: cmp    $0x0,%rsi
  0x000000011c31f34b: movabs $0x11256cfa8,%rdx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f355: movabs $0x148,%rbx
  0x000000011c31f35f: jne    0x000000011c31f36f
  0x000000011c31f365: movabs $0x158,%rbx
  0x000000011c31f36f: mov    (%rdx,%rbx,1),%rax
  0x000000011c31f373: lea    0x1(%rax),%rax
  0x000000011c31f377: mov    %rax,(%rdx,%rbx,1)
  0x000000011c31f37b: jne    0x000000011c31f39b  ;*ifnonnull
                                                ; - java.lang.StringCoding::encode@12 (line 331)

  0x000000011c31f381: movabs $0x11256cfa8,%rdx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f38b: incl   0x168(%rdx)
  0x000000011c31f391: movabs $0x71560c208,%rsi  ;*goto
                                                ; - java.lang.StringCoding::encode@17 (line 331)
                                                ;   {oop(&quot;ISO-8859-1&quot;)}
  0x000000011c31f39b: cmp    $0x0,%rdi
  0x000000011c31f39f: movabs $0x11256cfa8,%rdx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f3a9: movabs $0x180,%rbx
  0x000000011c31f3b3: je     0x000000011c31f3c3
  0x000000011c31f3b9: movabs $0x190,%rbx
  0x000000011c31f3c3: mov    (%rdx,%rbx,1),%rax
  0x000000011c31f3c7: lea    0x1(%rax),%rax
  0x000000011c31f3cb: mov    %rax,(%rdx,%rbx,1)
  0x000000011c31f3cf: jne    0x000000011c31f3e2  ;*ifnull
                                                ; - java.lang.StringCoding::encode@25 (line 332)

  0x000000011c31f3d5: mov    %rsi,0xc8(%rsp)
  0x000000011c31f3dd: jmpq   0x000000011c31fa32  ;*aconst_null
                                                ; - java.lang.StringCoding::encode@54 (line 334)

  0x000000011c31f3e2: cmp    (%rdi),%rax        ;*invokevirtual requestedCharsetName
                                                ; - java.lang.StringCoding::encode@32 (line 332)
                                                ; implicit exception: dispatches to 0x000000011c3203cd
  0x000000011c31f3e5: mov    %rdi,%rdx
  0x000000011c31f3e8: movabs $0x11256cfa8,%rbx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f3f2: mov    0x8(%rdx),%edx
  0x000000011c31f3f5: shl    $0x3,%rdx
  0x000000011c31f3f9: cmp    0x1a8(%rbx),%rdx
  0x000000011c31f400: jne    0x000000011c31f40f
  0x000000011c31f402: addq   $0x1,0x1b0(%rbx)
  0x000000011c31f40a: jmpq   0x000000011c31f475
  0x000000011c31f40f: cmp    0x1b8(%rbx),%rdx
  0x000000011c31f416: jne    0x000000011c31f425
  0x000000011c31f418: addq   $0x1,0x1c0(%rbx)
  0x000000011c31f420: jmpq   0x000000011c31f475
  0x000000011c31f425: cmpq   $0x0,0x1a8(%rbx)
  0x000000011c31f430: jne    0x000000011c31f449
  0x000000011c31f432: mov    %rdx,0x1a8(%rbx)
  0x000000011c31f439: movq   $0x1,0x1b0(%rbx)
  0x000000011c31f444: jmpq   0x000000011c31f475
  0x000000011c31f449: cmpq   $0x0,0x1b8(%rbx)
  0x000000011c31f454: jne    0x000000011c31f46d
  0x000000011c31f456: mov    %rdx,0x1b8(%rbx)
  0x000000011c31f45d: movq   $0x1,0x1c0(%rbx)
  0x000000011c31f468: jmpq   0x000000011c31f475
  0x000000011c31f46d: addq   $0x1,0x1a0(%rbx)
  0x000000011c31f475: mov    0x18(%rdi),%edx
  0x000000011c31f478: shl    $0x3,%rdx          ;*getfield requestedCharsetName
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)
                                                ; - java.lang.StringCoding::encode@32 (line 332)

  0x000000011c31f47c: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011c3203d2
  0x000000011c31f47f: mov    %rsi,%rbx
  0x000000011c31f482: movabs $0x11256cfa8,%rax  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f48c: mov    0x8(%rbx),%ebx
  0x000000011c31f48f: shl    $0x3,%rbx
  0x000000011c31f493: cmp    0x1d8(%rax),%rbx
  0x000000011c31f49a: jne    0x000000011c31f4a9
  0x000000011c31f49c: addq   $0x1,0x1e0(%rax)
  0x000000011c31f4a4: jmpq   0x000000011c31f50f
  0x000000011c31f4a9: cmp    0x1e8(%rax),%rbx
  0x000000011c31f4b0: jne    0x000000011c31f4bf
  0x000000011c31f4b2: addq   $0x1,0x1f0(%rax)
  0x000000011c31f4ba: jmpq   0x000000011c31f50f
  0x000000011c31f4bf: cmpq   $0x0,0x1d8(%rax)
  0x000000011c31f4ca: jne    0x000000011c31f4e3
  0x000000011c31f4cc: mov    %rbx,0x1d8(%rax)
  0x000000011c31f4d3: movq   $0x1,0x1e0(%rax)
  0x000000011c31f4de: jmpq   0x000000011c31f50f
  0x000000011c31f4e3: cmpq   $0x0,0x1e8(%rax)
  0x000000011c31f4ee: jne    0x000000011c31f507
  0x000000011c31f4f0: mov    %rbx,0x1e8(%rax)
  0x000000011c31f4f7: movq   $0x1,0x1f0(%rax)
  0x000000011c31f502: jmpq   0x000000011c31f50f
  0x000000011c31f507: addq   $0x1,0x1d0(%rax)
  0x000000011c31f50f: mov    %rsi,%rbx
  0x000000011c31f512: mov    %rbx,%rsi          ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@35 (line 332)

  0x000000011c31f515: mov    %rbx,0xc8(%rsp)
  0x000000011c31f51d: nop
  0x000000011c31f51e: nop
  0x000000011c31f51f: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [192]=Oop [200]=Oop off=1604}
                                                ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@35 (line 332)
                                                ;   {optimized virtual_call}
  0x000000011c31f524: cmp    $0x0,%eax
  0x000000011c31f527: movabs $0x11256cfa8,%rsi  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f531: movabs $0x200,%rdi
  0x000000011c31f53b: jne    0x000000011c31f54b
  0x000000011c31f541: movabs $0x210,%rdi
  0x000000011c31f54b: mov    (%rsi,%rdi,1),%rbx
  0x000000011c31f54f: lea    0x1(%rbx),%rbx
  0x000000011c31f553: mov    %rbx,(%rsi,%rdi,1)  ;*ifne
                                                ; - java.lang.StringCoding::encode@38 (line 332)

  0x000000011c31f557: mov    0xc0(%rsp),%rdi    ;*aload
                                                ; - java.lang.StringCoding::encode@111 (line 344)

  0x000000011c31f55f: jne    0x000000011c3202d5  ;*ifne
                                                ; - java.lang.StringCoding::encode@38 (line 332)

  0x000000011c31f565: mov    %rdi,%rsi
  0x000000011c31f568: movabs $0x11256cfa8,%rbx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f572: movabs $0x7c002c028,%r10  ;   {metadata(&apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f57c: mov    %r10,0x228(%rbx)
  0x000000011c31f583: addq   $0x1,0x230(%rbx)
  0x000000011c31f58b: movabs $0x11259f8c0,%rsi  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f595: mov    0xdc(%rsi),%ebx
  0x000000011c31f59b: add    $0x8,%ebx
  0x000000011c31f59e: mov    %ebx,0xdc(%rsi)
  0x000000011c31f5a4: movabs $0x112431340,%rsi  ;   {metadata({method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f5ae: and    $0x7ffff8,%ebx
  0x000000011c31f5b4: cmp    $0x0,%ebx
  0x000000011c31f5b7: je     0x000000011c3203d7
  0x000000011c31f5bd: mov    0x10(%rdi),%esi
  0x000000011c31f5c0: shl    $0x3,%rsi          ;*getfield cs
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@1 (line 289)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x000000011c31f5c4: cmp    $0x0,%rsi
  0x000000011c31f5c8: jne    0x000000011c31f5e3
  0x000000011c31f5ca: movabs $0x11259f8c0,%rdx  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f5d4: orl    $0x100,0x100(%rdx)
  0x000000011c31f5de: jmpq   0x000000011c31f6bf
  0x000000011c31f5e3: movabs $0x7c0021640,%rcx  ;   {metadata(&apos;sun/nio/cs/HistoricallyNamedCharset&apos;)}
  0x000000011c31f5ed: mov    0x8(%rsi),%edx
  0x000000011c31f5f0: shl    $0x3,%rdx
  0x000000011c31f5f4: cmp    0x18(%rdx),%rcx
  0x000000011c31f5f8: je     0x000000011c31f619
  0x000000011c31f5fe: cmp    %rcx,%rdx
  0x000000011c31f601: je     0x000000011c31f619
  0x000000011c31f607: push   %rdx
  0x000000011c31f608: push   %rcx
  0x000000011c31f609: callq  0x000000011c304120  ;   {runtime_call}
  0x000000011c31f60e: pop    %rdx
  0x000000011c31f60f: pop    %rdx
  0x000000011c31f610: cmp    $0x0,%edx
  0x000000011c31f613: je     0x000000011c31f6a3
  0x000000011c31f619: movabs $0x11259f8c0,%rdx  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f623: mov    0x8(%rsi),%ecx
  0x000000011c31f626: shl    $0x3,%rcx
  0x000000011c31f62a: cmp    0x110(%rdx),%rcx
  0x000000011c31f631: jne    0x000000011c31f640
  0x000000011c31f633: addq   $0x1,0x118(%rdx)
  0x000000011c31f63b: jmpq   0x000000011c31f6c4
  0x000000011c31f640: cmp    0x120(%rdx),%rcx
  0x000000011c31f647: jne    0x000000011c31f656
  0x000000011c31f649: addq   $0x1,0x128(%rdx)
  0x000000011c31f651: jmpq   0x000000011c31f6c4
  0x000000011c31f656: cmpq   $0x0,0x110(%rdx)
  0x000000011c31f661: jne    0x000000011c31f67a
  0x000000011c31f663: mov    %rcx,0x110(%rdx)
  0x000000011c31f66a: movq   $0x1,0x118(%rdx)
  0x000000011c31f675: jmpq   0x000000011c31f6c4
  0x000000011c31f67a: cmpq   $0x0,0x120(%rdx)
  0x000000011c31f685: jne    0x000000011c31f69e
  0x000000011c31f687: mov    %rcx,0x120(%rdx)
  0x000000011c31f68e: movq   $0x1,0x128(%rdx)
  0x000000011c31f699: jmpq   0x000000011c31f6c4
  0x000000011c31f69e: jmpq   0x000000011c31f6c4
  0x000000011c31f6a3: movabs $0x11259f8c0,%rdx  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f6ad: subq   $0x1,0x108(%rdx)
  0x000000011c31f6b5: jmpq   0x000000011c31f6bf
  0x000000011c31f6ba: jmpq   0x000000011c31f6c4
  0x000000011c31f6bf: xor    %rbx,%rbx
  0x000000011c31f6c2: jmp    0x000000011c31f6ce
  0x000000011c31f6c4: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@4 (line 289)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x000000011c31f6ce: cmp    $0x0,%ebx
  0x000000011c31f6d1: movabs $0x11259f8c0,%rbx  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f6db: movabs $0x138,%rax
  0x000000011c31f6e5: je     0x000000011c31f6f5
  0x000000011c31f6eb: movabs $0x148,%rax
  0x000000011c31f6f5: mov    (%rbx,%rax,1),%rdx
  0x000000011c31f6f9: lea    0x1(%rdx),%rdx
  0x000000011c31f6fd: mov    %rdx,(%rbx,%rax,1)
  0x000000011c31f701: je     0x000000011c31f8a9  ;*ifeq
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@7 (line 289)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x000000011c31f707: cmp    $0x0,%rsi
  0x000000011c31f70b: jne    0x000000011c31f726
  0x000000011c31f70d: movabs $0x11259f8c0,%rax  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f717: orl    $0x100,0x150(%rax)
  0x000000011c31f721: jmpq   0x000000011c31f802
  0x000000011c31f726: movabs $0x7c0021640,%rdx  ;   {metadata(&apos;sun/nio/cs/HistoricallyNamedCharset&apos;)}
  0x000000011c31f730: mov    0x8(%rsi),%eax
  0x000000011c31f733: shl    $0x3,%rax
  0x000000011c31f737: cmp    0x18(%rax),%rdx
  0x000000011c31f73b: je     0x000000011c31f75c
  0x000000011c31f741: cmp    %rdx,%rax
  0x000000011c31f744: je     0x000000011c31f75c
  0x000000011c31f74a: push   %rax
  0x000000011c31f74b: push   %rdx
  0x000000011c31f74c: callq  0x000000011c304120  ;   {runtime_call}
  0x000000011c31f751: pop    %rax
  0x000000011c31f752: pop    %rax
  0x000000011c31f753: cmp    $0x0,%eax
  0x000000011c31f756: je     0x000000011c31f7e6
  0x000000011c31f75c: movabs $0x11259f8c0,%rax  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f766: mov    0x8(%rsi),%edx
  0x000000011c31f769: shl    $0x3,%rdx
  0x000000011c31f76d: cmp    0x160(%rax),%rdx
  0x000000011c31f774: jne    0x000000011c31f783
  0x000000011c31f776: addq   $0x1,0x168(%rax)
  0x000000011c31f77e: jmpq   0x000000011c31f802
  0x000000011c31f783: cmp    0x170(%rax),%rdx
  0x000000011c31f78a: jne    0x000000011c31f799
  0x000000011c31f78c: addq   $0x1,0x178(%rax)
  0x000000011c31f794: jmpq   0x000000011c31f802
  0x000000011c31f799: cmpq   $0x0,0x160(%rax)
  0x000000011c31f7a4: jne    0x000000011c31f7bd
  0x000000011c31f7a6: mov    %rdx,0x160(%rax)
  0x000000011c31f7ad: movq   $0x1,0x168(%rax)
  0x000000011c31f7b8: jmpq   0x000000011c31f802
  0x000000011c31f7bd: cmpq   $0x0,0x170(%rax)
  0x000000011c31f7c8: jne    0x000000011c31f7e1
  0x000000011c31f7ca: mov    %rdx,0x170(%rax)
  0x000000011c31f7d1: movq   $0x1,0x178(%rax)
  0x000000011c31f7dc: jmpq   0x000000011c31f802
  0x000000011c31f7e1: jmpq   0x000000011c31f802
  0x000000011c31f7e6: movabs $0x11259f8c0,%rax  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f7f0: subq   $0x1,0x158(%rax)
  0x000000011c31f7f8: jmpq   0x000000011c3203ee
  0x000000011c31f7fd: jmpq   0x000000011c31f802  ;*checkcast
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@14 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x000000011c31f802: cmp    (%rsi),%rax        ;*invokeinterface historicalName
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@17 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ; implicit exception: dispatches to 0x000000011c3203f7
  0x000000011c31f805: mov    %rsi,%rbx
  0x000000011c31f808: movabs $0x11259f8c0,%rax  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f812: mov    0x8(%rbx),%ebx
  0x000000011c31f815: shl    $0x3,%rbx
  0x000000011c31f819: cmp    0x190(%rax),%rbx
  0x000000011c31f820: jne    0x000000011c31f82f
  0x000000011c31f822: addq   $0x1,0x198(%rax)
  0x000000011c31f82a: jmpq   0x000000011c31f895
  0x000000011c31f82f: cmp    0x1a0(%rax),%rbx
  0x000000011c31f836: jne    0x000000011c31f845
  0x000000011c31f838: addq   $0x1,0x1a8(%rax)
  0x000000011c31f840: jmpq   0x000000011c31f895
  0x000000011c31f845: cmpq   $0x0,0x190(%rax)
  0x000000011c31f850: jne    0x000000011c31f869
  0x000000011c31f852: mov    %rbx,0x190(%rax)
  0x000000011c31f859: movq   $0x1,0x198(%rax)
  0x000000011c31f864: jmpq   0x000000011c31f895
  0x000000011c31f869: cmpq   $0x0,0x1a0(%rax)
  0x000000011c31f874: jne    0x000000011c31f88d
  0x000000011c31f876: mov    %rbx,0x1a0(%rax)
  0x000000011c31f87d: movq   $0x1,0x1a8(%rax)
  0x000000011c31f888: jmpq   0x000000011c31f895
  0x000000011c31f88d: addq   $0x1,0x188(%rax)
  0x000000011c31f895: movabs $0xffffffffffffffff,%rax
  0x000000011c31f89f: callq  0x000000011c24c2e0  ; OopMap{[176]=Oop [200]=Oop [192]=Oop off=2500}
                                                ;*invokeinterface historicalName
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@17 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {virtual_call}
  0x000000011c31f8a4: jmpq   0x000000011c31f946  ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@48 (line 333)

  0x000000011c31f8a9: cmp    (%rsi),%rax        ;*invokevirtual name
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@27 (line 291)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ; implicit exception: dispatches to 0x000000011c3203fc
  0x000000011c31f8ac: mov    %rsi,%rdx
  0x000000011c31f8af: movabs $0x11259f8c0,%rdi  ;   {metadata(method data for {method} {0x0000000112431340} &apos;charsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31f8b9: mov    0x8(%rdx),%edx
  0x000000011c31f8bc: shl    $0x3,%rdx
  0x000000011c31f8c0: cmp    0x1c0(%rdi),%rdx
  0x000000011c31f8c7: jne    0x000000011c31f8d6
  0x000000011c31f8c9: addq   $0x1,0x1c8(%rdi)
  0x000000011c31f8d1: jmpq   0x000000011c31f93c
  0x000000011c31f8d6: cmp    0x1d0(%rdi),%rdx
  0x000000011c31f8dd: jne    0x000000011c31f8ec
  0x000000011c31f8df: addq   $0x1,0x1d8(%rdi)
  0x000000011c31f8e7: jmpq   0x000000011c31f93c
  0x000000011c31f8ec: cmpq   $0x0,0x1c0(%rdi)
  0x000000011c31f8f7: jne    0x000000011c31f910
  0x000000011c31f8f9: mov    %rdx,0x1c0(%rdi)
  0x000000011c31f900: movq   $0x1,0x1c8(%rdi)
  0x000000011c31f90b: jmpq   0x000000011c31f93c
  0x000000011c31f910: cmpq   $0x0,0x1d0(%rdi)
  0x000000011c31f91b: jne    0x000000011c31f934
  0x000000011c31f91d: mov    %rdx,0x1d0(%rdi)
  0x000000011c31f924: movq   $0x1,0x1d8(%rdi)
  0x000000011c31f92f: jmpq   0x000000011c31f93c
  0x000000011c31f934: addq   $0x1,0x1b8(%rdi)
  0x000000011c31f93c: mov    0xc(%rsi),%edx
  0x000000011c31f93f: shl    $0x3,%rdx          ;*getfield name
                                                ; - java.nio.charset.Charset::name@1 (line 654)
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@27 (line 291)
                                                ; - java.lang.StringCoding::encode@45 (line 333)

  0x000000011c31f943: mov    %rdx,%rax
  0x000000011c31f946: mov    0xc8(%rsp),%rsi
  0x000000011c31f94e: movabs $0x11256cfa8,%rdx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f958: mov    0x8(%rsi),%esi
  0x000000011c31f95b: shl    $0x3,%rsi
  0x000000011c31f95f: cmp    0x258(%rdx),%rsi
  0x000000011c31f966: jne    0x000000011c31f975
  0x000000011c31f968: addq   $0x1,0x260(%rdx)
  0x000000011c31f970: jmpq   0x000000011c31f9db
  0x000000011c31f975: cmp    0x268(%rdx),%rsi
  0x000000011c31f97c: jne    0x000000011c31f98b
  0x000000011c31f97e: addq   $0x1,0x270(%rdx)
  0x000000011c31f986: jmpq   0x000000011c31f9db
  0x000000011c31f98b: cmpq   $0x0,0x258(%rdx)
  0x000000011c31f996: jne    0x000000011c31f9af
  0x000000011c31f998: mov    %rsi,0x258(%rdx)
  0x000000011c31f99f: movq   $0x1,0x260(%rdx)
  0x000000011c31f9aa: jmpq   0x000000011c31f9db
  0x000000011c31f9af: cmpq   $0x0,0x268(%rdx)
  0x000000011c31f9ba: jne    0x000000011c31f9d3
  0x000000011c31f9bc: mov    %rsi,0x268(%rdx)
  0x000000011c31f9c3: movq   $0x1,0x270(%rdx)
  0x000000011c31f9ce: jmpq   0x000000011c31f9db
  0x000000011c31f9d3: addq   $0x1,0x250(%rdx)
  0x000000011c31f9db: mov    %rax,%rdx
  0x000000011c31f9de: mov    0xc8(%rsp),%rsi    ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@48 (line 333)

  0x000000011c31f9e6: nop
  0x000000011c31f9e7: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [200]=Oop [192]=Oop off=2828}
                                                ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@48 (line 333)
                                                ;   {optimized virtual_call}
  0x000000011c31f9ec: cmp    $0x0,%eax
  0x000000011c31f9ef: movabs $0x11256cfa8,%rsi  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31f9f9: movabs $0x280,%rdi
  0x000000011c31fa03: jne    0x000000011c31fa13
  0x000000011c31fa09: movabs $0x290,%rdi
  0x000000011c31fa13: mov    (%rsi,%rdi,1),%rbx
  0x000000011c31fa17: lea    0x1(%rbx),%rbx
  0x000000011c31fa1b: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c31fa1f: je     0x000000011c31fa32  ;*ifne
                                                ; - java.lang.StringCoding::encode@51 (line 333)

  0x000000011c31fa25: mov    0xc0(%rsp),%rdi
  0x000000011c31fa2d: jmpq   0x000000011c3202d5  ;*aload
                                                ; - java.lang.StringCoding::encode@111 (line 344)

  0x000000011c31fa32: movabs $0x11256cfa8,%rsi  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fa3c: addq   $0x1,0x2a0(%rsi)
  0x000000011c31fa44: movabs $0x11259fae8,%rsi  ;   {metadata(method data for {method} {0x00000001123e5908} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fa4e: mov    0xdc(%rsi),%edi
  0x000000011c31fa54: add    $0x8,%edi
  0x000000011c31fa57: mov    %edi,0xdc(%rsi)
  0x000000011c31fa5d: movabs $0x1123e5908,%rsi  ;   {metadata({method} {0x00000001123e5908} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fa67: and    $0x7ffff8,%edi
  0x000000011c31fa6d: cmp    $0x0,%edi
  0x000000011c31fa70: je     0x000000011c320401
  0x000000011c31fa76: movabs $0x11259fae8,%rsi  ;   {metadata(method data for {method} {0x00000001123e5908} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fa80: addq   $0x1,0x108(%rsi)
  0x000000011c31fa88: movabs $0x11259fc80,%rsi  ;   {metadata(method data for {method} {0x00000001123ba468} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31fa92: mov    0xdc(%rsi),%edi
  0x000000011c31fa98: add    $0x8,%edi
  0x000000011c31fa9b: mov    %edi,0xdc(%rsi)
  0x000000011c31faa1: movabs $0x1123ba468,%rsi  ;   {metadata({method} {0x00000001123ba468} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31faab: and    $0x7ffff8,%edi
  0x000000011c31fab1: cmp    $0x0,%edi
  0x000000011c31fab4: je     0x000000011c320418
  0x000000011c31faba: movabs $0x11259fc80,%rsi  ;   {metadata(method data for {method} {0x00000001123ba468} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31fac4: addq   $0x1,0x108(%rsi)
  0x000000011c31facc: mov    0xc8(%rsp),%rsi    ;*invokestatic lookup
                                                ; - java.nio.charset.Charset::isSupported@1 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fad4: nop
  0x000000011c31fad5: nop
  0x000000011c31fad6: nop
  0x000000011c31fad7: callq  0x000000011c24c520  ; OopMap{[176]=Oop [200]=Oop off=3068}
                                                ;*invokestatic lookup
                                                ; - java.nio.charset.Charset::isSupported@1 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {static_call}
  0x000000011c31fadc: cmp    $0x0,%rax
  0x000000011c31fae0: movabs $0x11259fc80,%rsi  ;   {metadata(method data for {method} {0x00000001123ba468} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31faea: movabs $0x118,%rdi
  0x000000011c31faf4: je     0x000000011c31fb04
  0x000000011c31fafa: movabs $0x128,%rdi
  0x000000011c31fb04: mov    (%rsi,%rdi,1),%rbx
  0x000000011c31fb08: lea    0x1(%rbx),%rbx
  0x000000011c31fb0c: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c31fb10: je     0x000000011c31fb30  ;*ifnull
                                                ; - java.nio.charset.Charset::isSupported@4 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fb16: movabs $0x11259fc80,%rsi  ;   {metadata(method data for {method} {0x00000001123ba468} &apos;isSupported&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31fb20: incl   0x138(%rsi)
  0x000000011c31fb26: mov    $0x1,%esi
  0x000000011c31fb2b: jmpq   0x000000011c31fb35  ;*goto
                                                ; - java.nio.charset.Charset::isSupported@8 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fb30: mov    $0x0,%esi          ;*ireturn
                                                ; - java.nio.charset.Charset::isSupported@12 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fb35: and    $0x1,%esi
  0x000000011c31fb38: cmp    $0x0,%esi
  0x000000011c31fb3b: movabs $0x11259fae8,%rsi  ;   {metadata(method data for {method} {0x00000001123e5908} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fb45: movabs $0x118,%rdi
  0x000000011c31fb4f: je     0x000000011c31fb5f
  0x000000011c31fb55: movabs $0x128,%rdi
  0x000000011c31fb5f: mov    (%rsi,%rdi,1),%rbx
  0x000000011c31fb63: lea    0x1(%rbx),%rbx
  0x000000011c31fb67: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c31fb6b: je     0x000000011c31fc16  ;*ifeq
                                                ; - java.lang.StringCoding::lookupCharset@4 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fb71: movabs $0x11259fae8,%rsi  ;   {metadata(method data for {method} {0x00000001123e5908} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fb7b: addq   $0x1,0x138(%rsi)
  0x000000011c31fb83: movabs $0x1125a0038,%rsi  ;   {metadata(method data for {method} {0x00000001123ba510} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31fb8d: mov    0xdc(%rsi),%edi
  0x000000011c31fb93: add    $0x8,%edi
  0x000000011c31fb96: mov    %edi,0xdc(%rsi)
  0x000000011c31fb9c: movabs $0x1123ba510,%rsi  ;   {metadata({method} {0x00000001123ba510} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31fba6: and    $0x7ffff8,%edi
  0x000000011c31fbac: cmp    $0x0,%edi
  0x000000011c31fbaf: je     0x000000011c32042f
  0x000000011c31fbb5: movabs $0x1125a0038,%rsi  ;   {metadata(method data for {method} {0x00000001123ba510} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31fbbf: addq   $0x1,0x108(%rsi)
  0x000000011c31fbc7: mov    0xc8(%rsp),%rsi    ;*invokestatic lookup
                                                ; - java.nio.charset.Charset::forName@1 (line 528)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fbcf: callq  0x000000011c24c520  ; OopMap{[176]=Oop [200]=Oop off=3316}
                                                ;*invokestatic lookup
                                                ; - java.nio.charset.Charset::forName@1 (line 528)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {static_call}
  0x000000011c31fbd4: cmp    $0x0,%rax
  0x000000011c31fbd8: movabs $0x1125a0038,%rdx  ;   {metadata(method data for {method} {0x00000001123ba510} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31fbe2: movabs $0x118,%rsi
  0x000000011c31fbec: je     0x000000011c31fbfc
  0x000000011c31fbf2: movabs $0x128,%rsi
  0x000000011c31fbfc: mov    (%rdx,%rsi,1),%rdi
  0x000000011c31fc00: lea    0x1(%rdi),%rdi
  0x000000011c31fc04: mov    %rdi,(%rdx,%rsi,1)
  0x000000011c31fc08: je     0x000000011c31fd49  ;*ifnull
                                                ; - java.nio.charset.Charset::forName@6 (line 529)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fc0e: mov    %rax,%rbx
  0x000000011c31fc11: jmpq   0x000000011c31fc20
  0x000000011c31fc16: movabs $0x0,%rbx          ;*astore
                                                ; - java.lang.StringCoding::encode@62 (line 336)
                                                ;   {oop(NULL)}
  0x000000011c31fc20: cmp    $0x0,%rbx
  0x000000011c31fc24: movabs $0x11256cfa8,%rdx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fc2e: movabs $0x2b0,%rsi
  0x000000011c31fc38: je     0x000000011c31fc48
  0x000000011c31fc3e: movabs $0x2c0,%rsi
  0x000000011c31fc48: mov    (%rdx,%rsi,1),%rdi
  0x000000011c31fc4c: lea    0x1(%rdi),%rdi
  0x000000011c31fc50: mov    %rdi,(%rdx,%rsi,1)
  0x000000011c31fc54: jne    0x000000011c31fc69  ;*ifnull
                                                ; - java.lang.StringCoding::encode@66 (line 337)

  0x000000011c31fc5a: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x000000011c31fc64: jmpq   0x000000011c31fd34  ;*goto
                                                ; - java.lang.StringCoding::encode@83 (line 339)

  0x000000011c31fc69: movabs $0x7c002c028,%rdx  ;   {metadata(&apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31fc73: mov    0x60(%r15),%rax
  0x000000011c31fc77: lea    0x20(%rax),%rdi
  0x000000011c31fc7b: cmp    0x70(%r15),%rdi
  0x000000011c31fc7f: ja     0x000000011c320446
  0x000000011c31fc85: mov    %rdi,0x60(%r15)
  0x000000011c31fc89: mov    0xa8(%rdx),%rcx
  0x000000011c31fc90: mov    %rcx,(%rax)
  0x000000011c31fc93: mov    %rdx,%rcx
  0x000000011c31fc96: shr    $0x3,%rcx
  0x000000011c31fc9a: mov    %ecx,0x8(%rax)
  0x000000011c31fc9d: xor    %rcx,%rcx
  0x000000011c31fca0: mov    %ecx,0xc(%rax)
  0x000000011c31fca3: xor    %rcx,%rcx
  0x000000011c31fca6: mov    %rcx,0x10(%rax)
  0x000000011c31fcaa: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.StringCoding::encode@69 (line 338)

  0x000000011c31fcae: mov    %rax,%rdx
  0x000000011c31fcb1: movabs $0x11256cfa8,%rcx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fcbb: addq   $0x1,0x2d0(%rcx)
  0x000000011c31fcc3: movabs $0x1125a02f8,%rdx  ;   {metadata(method data for {method} {0x00000001124315d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;Ljava/lang/String;Ljava/lang/StringCoding$1;)V&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31fccd: mov    0xdc(%rdx),%ecx
  0x000000011c31fcd3: add    $0x8,%ecx
  0x000000011c31fcd6: mov    %ecx,0xdc(%rdx)
  0x000000011c31fcdc: movabs $0x1124315d0,%rdx  ;   {metadata({method} {0x00000001124315d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;Ljava/lang/String;Ljava/lang/StringCoding$1;)V&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31fce6: and    $0x7ffff8,%ecx
  0x000000011c31fcec: cmp    $0x0,%ecx
  0x000000011c31fcef: je     0x000000011c320453
  0x000000011c31fcf5: mov    %rax,%rdx
  0x000000011c31fcf8: movabs $0x1125a02f8,%rcx  ;   {metadata(method data for {method} {0x00000001124315d0} &apos;&lt;init&gt;&apos; &apos;(Ljava/nio/charset/Charset;Ljava/lang/String;Ljava/lang/StringCoding$1;)V&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;)}
  0x000000011c31fd02: addq   $0x1,0x108(%rcx)
  0x000000011c31fd0a: mov    %rbx,%rdx
  0x000000011c31fd0d: mov    0xc8(%rsp),%rcx
  0x000000011c31fd15: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding$StringEncoder::&lt;init&gt;@3 (line 273)
                                                ; - java.lang.StringCoding::encode@78 (line 338)

  0x000000011c31fd18: mov    %rax,0xd0(%rsp)
  0x000000011c31fd20: nop
  0x000000011c31fd21: nop
  0x000000011c31fd22: nop
  0x000000011c31fd23: nop
  0x000000011c31fd24: nop
  0x000000011c31fd25: nop
  0x000000011c31fd26: nop
  0x000000011c31fd27: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [200]=Oop [208]=Oop off=3660}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding$StringEncoder::&lt;init&gt;@3 (line 273)
                                                ; - java.lang.StringCoding::encode@78 (line 338)
                                                ;   {optimized virtual_call}
  0x000000011c31fd2c: mov    0xd0(%rsp),%rsi
  0x000000011c31fd34: movabs $0x11256cfa8,%rdx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fd3e: incl   0x2e0(%rdx)
  0x000000011c31fd44: jmpq   0x000000011c31fe79  ;*goto
                                                ; - java.lang.StringCoding::encode@83 (line 339)

  0x000000011c31fd49: nopl   0x0(%rax)
  0x000000011c31fd50: jmpq   0x000000011c320479  ;   {no_reloc}
  0x000000011c31fd55: add    %al,(%rax)
  0x000000011c31fd57: add    %al,(%rax)
  0x000000011c31fd59: add    %ch,%cl
  0x000000011c31fd5b: and    $0x7,%al
  0x000000011c31fd5d: add    %al,(%rax)         ;*new  ; - java.nio.charset.Charset::forName@11 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fd5f: mov    %rax,%rdx
  0x000000011c31fd62: movabs $0x1125a0038,%rsi  ;   {metadata(method data for {method} {0x00000001123ba510} &apos;forName&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/nio/charset/Charset&apos;)}
  0x000000011c31fd6c: addq   $0x1,0x138(%rsi)
  0x000000011c31fd74: mov    0xc8(%rsp),%rdx
  0x000000011c31fd7c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.Charset::forName@16 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fd7f: mov    %rax,0xd8(%rsp)
  0x000000011c31fd87: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [200]=Oop [216]=Oop off=3756}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.charset.Charset::forName@16 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {optimized virtual_call}
  0x000000011c31fd8c: mov    0xd8(%rsp),%rax    ; OopMap{[176]=Oop [200]=Oop rax=Oop off=3764}
                                                ;*athrow
                                                ; - java.nio.charset.Charset::forName@19 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fd94: movabs $0x11c31fd94,%rdx  ;   {section_word}
  0x000000011c31fd9e: callq  0x000000011c273e60  ;   {runtime_call}
  0x000000011c31fda3: nop                       ;*athrow
                                                ; - java.nio.charset.Charset::forName@19 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fda4: mov    0x2a8(%r15),%rax
  0x000000011c31fdab: xor    %r10,%r10
  0x000000011c31fdae: mov    %r10,0x2a8(%r15)
  0x000000011c31fdb5: xor    %r10,%r10
  0x000000011c31fdb8: mov    %r10,0x2b0(%r15)
  0x000000011c31fdbf: mov    %rax,%rbx
  0x000000011c31fdc2: nopw   0x0(%rax,%rax,1)
  0x000000011c31fdc8: jmpq   0x000000011c32049f  ;   {no_reloc}
  0x000000011c31fdcd: add    %al,(%rax)
  0x000000011c31fdcf: add    %al,(%rax)
  0x000000011c31fdd1: add    %cl,-0x75(%rcx)
  0x000000011c31fdd4: rex.RXB (bad) 
  0x000000011c31fdd6: lea    0x20(%rax),%rdi
  0x000000011c31fdda: cmp    0x70(%r15),%rdi
  0x000000011c31fdde: ja     0x000000011c3204a9
  0x000000011c31fde4: mov    %rdi,0x60(%r15)
  0x000000011c31fde8: mov    0xa8(%rdx),%rcx
  0x000000011c31fdef: mov    %rcx,(%rax)
  0x000000011c31fdf2: mov    %rdx,%rcx
  0x000000011c31fdf5: shr    $0x3,%rcx
  0x000000011c31fdf9: mov    %ecx,0x8(%rax)
  0x000000011c31fdfc: xor    %rcx,%rcx
  0x000000011c31fdff: mov    %ecx,0xc(%rax)
  0x000000011c31fe02: xor    %rcx,%rcx
  0x000000011c31fe05: mov    %rcx,0x10(%rax)
  0x000000011c31fe09: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.StringCoding::lookupCharset@13 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fe0d: mov    %rax,%rdx
  0x000000011c31fe10: movabs $0x11259fae8,%rsi  ;   {metadata(method data for {method} {0x00000001123e5908} &apos;lookupCharset&apos; &apos;(Ljava/lang/String;)Ljava/nio/charset/Charset;&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fe1a: addq   $0x1,0x148(%rsi)
  0x000000011c31fe22: mov    %rbx,%rdx
  0x000000011c31fe25: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding::lookupCharset@18 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fe28: mov    %rax,0xe0(%rsp)
  0x000000011c31fe30: nop
  0x000000011c31fe31: nop
  0x000000011c31fe32: nop
  0x000000011c31fe33: nop
  0x000000011c31fe34: nop
  0x000000011c31fe35: nop
  0x000000011c31fe36: nop
  0x000000011c31fe37: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [200]=Oop [224]=Oop off=3932}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding::lookupCharset@18 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {optimized virtual_call}
  0x000000011c31fe3c: mov    0xe0(%rsp),%rax    ; OopMap{[176]=Oop [200]=Oop rax=Oop off=3940}
                                                ;*athrow
                                                ; - java.lang.StringCoding::lookupCharset@21 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fe44: movabs $0x11c31fe44,%rdx  ;   {section_word}
  0x000000011c31fe4e: callq  0x000000011c273e60  ;   {runtime_call}
  0x000000011c31fe53: nop                       ;*athrow
                                                ; - java.lang.StringCoding::lookupCharset@21 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)

  0x000000011c31fe54: mov    0x2a8(%r15),%rax
  0x000000011c31fe5b: xor    %r10,%r10
  0x000000011c31fe5e: mov    %r10,0x2a8(%r15)
  0x000000011c31fe65: xor    %r10,%r10
  0x000000011c31fe68: mov    %r10,0x2b0(%r15)
  0x000000011c31fe6f: movabs $0x0,%rsi          ;*aload
                                                ; - java.lang.StringCoding::encode@88 (line 340)
                                                ;   {oop(NULL)}
  0x000000011c31fe79: cmp    $0x0,%rsi
  0x000000011c31fe7d: movabs $0x11256cfa8,%rdx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fe87: movabs $0x2f8,%rdi
  0x000000011c31fe91: jne    0x000000011c31fea1
  0x000000011c31fe97: movabs $0x308,%rdi
  0x000000011c31fea1: mov    (%rdx,%rdi,1),%rax
  0x000000011c31fea5: lea    0x1(%rax),%rax
  0x000000011c31fea9: mov    %rax,(%rdx,%rdi,1)
  0x000000011c31fead: je     0x000000011c32031b  ;*ifnonnull
                                                ; - java.lang.StringCoding::encode@90 (line 340)

  0x000000011c31feb3: movabs $0x11256cfa8,%rdx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31febd: addq   $0x1,0x328(%rdx)
  0x000000011c31fec5: movabs $0x1125a06d0,%rdx  ;   {metadata(method data for {method} {0x00000001123e5668} &apos;set&apos; &apos;(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fecf: mov    0xdc(%rdx),%edi
  0x000000011c31fed5: add    $0x8,%edi
  0x000000011c31fed8: mov    %edi,0xdc(%rdx)
  0x000000011c31fede: movabs $0x1123e5668,%rdx  ;   {metadata({method} {0x00000001123e5668} &apos;set&apos; &apos;(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31fee8: and    $0x7ffff8,%edi
  0x000000011c31feee: cmp    $0x0,%edi
  0x000000011c31fef1: je     0x000000011c3204b6
  0x000000011c31fef7: movabs $0x7c0005b10,%rdx  ;   {metadata(&apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31ff01: mov    %rsi,%rbx
  0x000000011c31ff04: mov    0x60(%r15),%rax
  0x000000011c31ff08: lea    0x28(%rax),%rdi
  0x000000011c31ff0c: cmp    0x70(%r15),%rdi
  0x000000011c31ff10: ja     0x000000011c3204cd
  0x000000011c31ff16: mov    %rdi,0x60(%r15)
  0x000000011c31ff1a: mov    0xa8(%rdx),%rcx
  0x000000011c31ff21: mov    %rcx,(%rax)
  0x000000011c31ff24: mov    %rdx,%rcx
  0x000000011c31ff27: shr    $0x3,%rcx
  0x000000011c31ff2b: mov    %ecx,0x8(%rax)
  0x000000011c31ff2e: xor    %rcx,%rcx
  0x000000011c31ff31: mov    %ecx,0xc(%rax)
  0x000000011c31ff34: xor    %rcx,%rcx
  0x000000011c31ff37: mov    %rcx,0x10(%rax)
  0x000000011c31ff3b: mov    %rcx,0x18(%rax)
  0x000000011c31ff3f: mov    %rcx,0x20(%rax)    ;*new  ; - java.lang.StringCoding::set@1 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c31ff43: mov    %rax,%rdx
  0x000000011c31ff46: movabs $0x1125a06d0,%rcx  ;   {metadata(method data for {method} {0x00000001123e5668} &apos;set&apos; &apos;(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c31ff50: addq   $0x1,0x108(%rcx)
  0x000000011c31ff58: movabs $0x1125a0860,%rdx  ;   {metadata(method data for {method} {0x00000001122e8b28} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31ff62: mov    0xdc(%rdx),%ecx
  0x000000011c31ff68: add    $0x8,%ecx
  0x000000011c31ff6b: mov    %ecx,0xdc(%rdx)
  0x000000011c31ff71: movabs $0x1122e8b28,%rdx  ;   {metadata({method} {0x00000001122e8b28} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31ff7b: and    $0x7ffff8,%ecx
  0x000000011c31ff81: cmp    $0x0,%ecx
  0x000000011c31ff84: je     0x000000011c3204da
  0x000000011c31ff8a: mov    %rax,%rdx
  0x000000011c31ff8d: movabs $0x1125a0860,%rcx  ;   {metadata(method data for {method} {0x00000001122e8b28} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c31ff97: addq   $0x1,0x108(%rcx)
  0x000000011c31ff9f: movabs $0x1125a0998,%rdx  ;   {metadata(method data for {method} {0x00000001122e86f0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000011c31ffa9: mov    0xdc(%rdx),%ecx
  0x000000011c31ffaf: add    $0x8,%ecx
  0x000000011c31ffb2: mov    %ecx,0xdc(%rdx)
  0x000000011c31ffb8: movabs $0x1122e86f0,%rdx  ;   {metadata({method} {0x00000001122e86f0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000011c31ffc2: and    $0x7ffff8,%ecx
  0x000000011c31ffc8: cmp    $0x0,%ecx
  0x000000011c31ffcb: je     0x000000011c3204f1
  0x000000011c31ffd1: mov    %rax,%rdx
  0x000000011c31ffd4: movabs $0x1125a0998,%rcx  ;   {metadata(method data for {method} {0x00000001122e86f0} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x000000011c31ffde: addq   $0x1,0x108(%rcx)
  0x000000011c31ffe6: mov    %rbx,%rdx
  0x000000011c31ffe9: movabs $0x0,%rcx          ;   {oop(NULL)}
  0x000000011c31fff3: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@2 (line 85)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c31fff6: mov    %rbx,0xf0(%rsp)
  0x000000011c31fffe: mov    %rax,0xe8(%rsp)
  0x000000011c320006: nop
  0x000000011c320007: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [232]=Oop [240]=Oop off=4396}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.ref.Reference::&lt;init&gt;@3 (line 303)
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@2 (line 85)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {optimized virtual_call}
  0x000000011c32000c: movabs $0x7155818a0,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/SoftReference&apos;)}
  0x000000011c320016: mov    0x68(%rdx),%rcx    ;*getstatic clock
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@6 (line 86)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c32001a: mov    0xe8(%rsp),%rbx
  0x000000011c320022: mov    %rcx,0x20(%rbx)    ;*putfield timestamp
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@9 (line 86)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c320026: movabs $0x715596200,%rdx  ;   {oop(a &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c320030: mov    %rdx,%rcx
  0x000000011c320033: movabs $0x1125a06d0,%rsi  ;   {metadata(method data for {method} {0x00000001123e5668} &apos;set&apos; &apos;(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c32003d: movabs $0x7c001eaf8,%r10  ;   {metadata(&apos;java/lang/ThreadLocal&apos;)}
  0x000000011c320047: mov    %r10,0x120(%rsi)
  0x000000011c32004e: addq   $0x1,0x128(%rsi)
  0x000000011c320056: movabs $0x1125a0c48,%rcx  ;   {metadata(method data for {method} {0x00000001123c50c8} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c320060: mov    0xdc(%rcx),%esi
  0x000000011c320066: add    $0x8,%esi
  0x000000011c320069: mov    %esi,0xdc(%rcx)
  0x000000011c32006f: movabs $0x1123c50c8,%rcx  ;   {metadata({method} {0x00000001123c50c8} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c320079: and    $0x7ffff8,%esi
  0x000000011c32007f: cmp    $0x0,%esi
  0x000000011c320082: je     0x000000011c320508
  0x000000011c320088: movabs $0x1125a0c48,%rcx  ;   {metadata(method data for {method} {0x00000001123c50c8} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c320092: addq   $0x1,0x108(%rcx)
  0x000000011c32009a: mov    0x1d0(%r15),%r8    ;*invokestatic currentThread
                                                ; - java.lang.ThreadLocal::set@0 (line 200)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c3200a1: movabs $0x1125a0c48,%rcx  ;   {metadata(method data for {method} {0x00000001123c50c8} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c3200ab: movabs $0x7c001eaf8,%r10  ;   {metadata(&apos;java/lang/ThreadLocal&apos;)}
  0x000000011c3200b5: mov    %r10,0x120(%rcx)
  0x000000011c3200bc: addq   $0x1,0x128(%rcx)
  0x000000011c3200c4: movabs $0x1125a0e50,%rdx  ;   {metadata(method data for {method} {0x00000001123c5208} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c3200ce: mov    0xdc(%rdx),%ecx
  0x000000011c3200d4: add    $0x8,%ecx
  0x000000011c3200d7: mov    %ecx,0xdc(%rdx)
  0x000000011c3200dd: movabs $0x1123c5208,%rdx  ;   {metadata({method} {0x00000001123c5208} &apos;getMap&apos; &apos;(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c3200e7: and    $0x7ffff8,%ecx
  0x000000011c3200ed: cmp    $0x0,%ecx
  0x000000011c3200f0: je     0x000000011c32051f
  0x000000011c3200f6: mov    0x50(%r8),%esi     ; implicit exception: dispatches to 0x000000011c320536
  0x000000011c3200fa: shl    $0x3,%rsi          ;*getfield threadLocals
                                                ; - java.lang.ThreadLocal::getMap@1 (line 233)
                                                ; - java.lang.ThreadLocal::set@6 (line 201)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c3200fe: cmp    $0x0,%rsi
  0x000000011c320102: movabs $0x1125a0c48,%rdx  ;   {metadata(method data for {method} {0x00000001123c50c8} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c32010c: movabs $0x148,%rcx
  0x000000011c320116: je     0x000000011c320126
  0x000000011c32011c: movabs $0x158,%rcx
  0x000000011c320126: mov    (%rdx,%rcx,1),%rdi
  0x000000011c32012a: lea    0x1(%rdi),%rdi
  0x000000011c32012e: mov    %rdi,(%rdx,%rcx,1)
  0x000000011c320132: je     0x000000011c3201c1  ;*ifnull
                                                ; - java.lang.ThreadLocal::set@11 (line 202)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c320138: movabs $0x1125a0c48,%rdx  ;   {metadata(method data for {method} {0x00000001123c50c8} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c320142: addq   $0x1,0x168(%rdx)
  0x000000011c32014a: movabs $0x1125a0f78,%rdx  ;   {metadata(method data for {method} {0x00000001123e8240} &apos;access$100&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x000000011c320154: mov    0xdc(%rdx),%ecx
  0x000000011c32015a: add    $0x8,%ecx
  0x000000011c32015d: mov    %ecx,0xdc(%rdx)
  0x000000011c320163: movabs $0x1123e8240,%rdx  ;   {metadata({method} {0x00000001123e8240} &apos;access$100&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x000000011c32016d: and    $0x7ffff8,%ecx
  0x000000011c320173: cmp    $0x0,%ecx
  0x000000011c320176: je     0x000000011c32053b
  0x000000011c32017c: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011c320552
  0x000000011c32017f: mov    %rsi,%rdx
  0x000000011c320182: movabs $0x1125a0f78,%rcx  ;   {metadata(method data for {method} {0x00000001123e8240} &apos;access$100&apos; &apos;(Ljava/lang/ThreadLocal$ThreadLocalMap;Ljava/lang/ThreadLocal;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x000000011c32018c: addq   $0x1,0x108(%rcx)
  0x000000011c320194: movabs $0x715596200,%rdx  ;   {oop(a &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c32019e: mov    %rbx,%rcx          ;*invokespecial set
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$100@3 (line 298)
                                                ; - java.lang.ThreadLocal::set@17 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c3201a1: nop
  0x000000011c3201a2: nop
  0x000000011c3201a3: nop
  0x000000011c3201a4: nop
  0x000000011c3201a5: nop
  0x000000011c3201a6: nop
  0x000000011c3201a7: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [240]=Oop off=4812}
                                                ;*invokespecial set
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$100@3 (line 298)
                                                ; - java.lang.ThreadLocal::set@17 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {optimized virtual_call}
  0x000000011c3201ac: movabs $0x1125a0c48,%rdx  ;   {metadata(method data for {method} {0x00000001123c50c8} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c3201b6: incl   0x178(%rdx)
  0x000000011c3201bc: jmpq   0x000000011c3202ca  ;*goto
                                                ; - java.lang.ThreadLocal::set@20 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c3201c1: mov    %r8,0x100(%rsp)
  0x000000011c3201c9: movabs $0x715596200,%r9   ;   {oop(a &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c3201d3: mov    %r9,%rdx
  0x000000011c3201d6: movabs $0x1125a0c48,%rsi  ;   {metadata(method data for {method} {0x00000001123c50c8} &apos;set&apos; &apos;(Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c3201e0: movabs $0x7c001eaf8,%r10  ;   {metadata(&apos;java/lang/ThreadLocal&apos;)}
  0x000000011c3201ea: mov    %r10,0x198(%rsi)
  0x000000011c3201f1: addq   $0x1,0x1a0(%rsi)
  0x000000011c3201f9: movabs $0x1125a13b8,%rdx  ;   {metadata(method data for {method} {0x00000001123c52a8} &apos;createMap&apos; &apos;(Ljava/lang/Thread;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c320203: mov    0xdc(%rdx),%esi
  0x000000011c320209: add    $0x8,%esi
  0x000000011c32020c: mov    %esi,0xdc(%rdx)
  0x000000011c320212: movabs $0x1123c52a8,%rdx  ;   {metadata({method} {0x00000001123c52a8} &apos;createMap&apos; &apos;(Ljava/lang/Thread;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c32021c: and    $0x7ffff8,%esi
  0x000000011c320222: cmp    $0x0,%esi
  0x000000011c320225: je     0x000000011c320557
  0x000000011c32022b: movabs $0x7c0022b10,%rdx  ;   {metadata(&apos;java/lang/ThreadLocal$ThreadLocalMap&apos;)}
  0x000000011c320235: mov    0x60(%r15),%rax
  0x000000011c320239: lea    0x18(%rax),%rdi
  0x000000011c32023d: cmp    0x70(%r15),%rdi
  0x000000011c320241: ja     0x000000011c32056e
  0x000000011c320247: mov    %rdi,0x60(%r15)
  0x000000011c32024b: mov    0xa8(%rdx),%rcx
  0x000000011c320252: mov    %rcx,(%rax)
  0x000000011c320255: mov    %rdx,%rcx
  0x000000011c320258: shr    $0x3,%rcx
  0x000000011c32025c: mov    %ecx,0x8(%rax)
  0x000000011c32025f: xor    %rcx,%rcx
  0x000000011c320262: mov    %ecx,0xc(%rax)
  0x000000011c320265: xor    %rcx,%rcx
  0x000000011c320268: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.ThreadLocal::createMap@1 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c32026c: mov    %rax,%rdx
  0x000000011c32026f: movabs $0x1125a13b8,%rcx  ;   {metadata(method data for {method} {0x00000001123c52a8} &apos;createMap&apos; &apos;(Ljava/lang/Thread;Ljava/lang/Object;)V&apos; in &apos;java/lang/ThreadLocal&apos;)}
  0x000000011c320279: addq   $0x1,0x108(%rcx)
  0x000000011c320281: mov    %r9,%rdx
  0x000000011c320284: mov    %rbx,%rcx
  0x000000011c320287: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.ThreadLocal::createMap@7 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c32028a: mov    %rax,0xf8(%rsp)
  0x000000011c320292: nop
  0x000000011c320293: nop
  0x000000011c320294: nop
  0x000000011c320295: nop
  0x000000011c320296: nop
  0x000000011c320297: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [240]=Oop [256]=Oop [248]=Oop off=5052}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.ThreadLocal::createMap@7 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {optimized virtual_call}
  0x000000011c32029c: mov    0xf8(%rsp),%rax
  0x000000011c3202a4: mov    0x100(%rsp),%r8
  0x000000011c3202ac: mov    %rax,%r10
  0x000000011c3202af: shr    $0x3,%r10
  0x000000011c3202b3: mov    %r10d,0x50(%r8)
  0x000000011c3202b7: shr    $0x9,%r8
  0x000000011c3202bb: movabs $0x10c974000,%rdx
  0x000000011c3202c5: movb   $0x0,(%r8,%rdx,1)  ;*putfield threadLocals
                                                ; - java.lang.ThreadLocal::createMap@10 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)

  0x000000011c3202ca: mov    0xf0(%rsp),%rsi
  0x000000011c3202d2: mov    %rsi,%rdi          ;*aload
                                                ; - java.lang.StringCoding::encode@111 (line 344)

  0x000000011c3202d5: mov    0xbc(%rsp),%r8d
  0x000000011c3202dd: mov    0xb8(%rsp),%ecx
  0x000000011c3202e4: mov    0xb0(%rsp),%rdx
  0x000000011c3202ec: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011c32057b
  0x000000011c3202ef: mov    %rdi,%rsi
  0x000000011c3202f2: movabs $0x11256cfa8,%rbx  ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c3202fc: addq   $0x1,0x348(%rbx)
  0x000000011c320304: mov    %rdi,%rsi          ;*invokevirtual encode
                                                ; - java.lang.StringCoding::encode@116 (line 344)

  0x000000011c320307: callq  0x000000011c24c0a0  ; OopMap{off=5164}
                                                ;*invokevirtual encode
                                                ; - java.lang.StringCoding::encode@116 (line 344)
                                                ;   {optimized virtual_call}
  0x000000011c32030c: add    $0x120,%rsp
  0x000000011c320313: pop    %rbp
  0x000000011c320314: test   %eax,-0xf83921a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32031a: retq                      ;*areturn
                                                ; - java.lang.StringCoding::encode@119 (line 344)

  0x000000011c32031b: mov    0xc8(%rsp),%rsi
  0x000000011c320323: nopl   0x0(%rax,%rax,1)
  0x000000011c320328: jmpq   0x000000011c32058f  ;   {no_reloc}
  0x000000011c32032d: add    %al,(%rax)
  0x000000011c32032f: add    %al,(%rax)
  0x000000011c320331: add    %ch,%cl
  0x000000011c320333: (bad)  
  0x000000011c320334: add    (%rax),%al
  0x000000011c320336: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.StringCoding::encode@93 (line 341)

  0x000000011c320339: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x00000001123e5e80} &apos;encode&apos; &apos;(Ljava/lang/String;[CII)[B&apos; in &apos;java/lang/StringCoding&apos;)}
  0x000000011c32033c: test   $0xcf,%al
  0x000000011c32033e: push   %rsi
  0x000000011c32033f: adc    (%rcx),%al
  0x000000011c320341: add    %al,(%rax)
  0x000000011c320343: add    %cl,-0x7d(%rax)
  0x000000011c320346: xchg   %ebx,(%rax)
  0x000000011c320348: add    (%rax),%eax
  0x000000011c32034a: add    %al,(%rcx)
  0x000000011c32034c: mov    %rsi,%rdx
  0x000000011c32034f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding::encode@99 (line 341)

  0x000000011c320352: mov    %rax,0x108(%rsp)
  0x000000011c32035a: nop
  0x000000011c32035b: nop
  0x000000011c32035c: nop
  0x000000011c32035d: nop
  0x000000011c32035e: nop
  0x000000011c32035f: callq  0x000000011c24c0a0  ; OopMap{[264]=Oop off=5252}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringCoding::encode@99 (line 341)
                                                ;   {optimized virtual_call}
  0x000000011c320364: mov    0x108(%rsp),%rax
  0x000000011c32036c: jmpq   0x000000011c3205d1
  0x000000011c320371: mov    %rdi,0x8(%rsp)
  0x000000011c320376: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32037e: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=5283}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::encode@-1 (line 330)
                                                ;   {runtime_call}
  0x000000011c320383: jmpq   0x000000011c31ef21
  0x000000011c320388: mov    %rdi,0x8(%rsp)
  0x000000011c32038d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c320395: callq  0x000000011c306120  ; OopMap{[176]=Oop [168]=Oop off=5306}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::deref@-1 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {runtime_call}
  0x000000011c32039a: jmpq   0x000000011c31ef84
  0x000000011c32039f: mov    %rax,(%rsp)
  0x000000011c3203a3: callq  0x000000011c303cc0  ; OopMap{[168]=Oop [176]=Oop off=5320}
                                                ;*checkcast
                                                ; - java.lang.StringCoding::deref@4 (line 63)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {runtime_call}
  0x000000011c3203a8: callq  0x000000011c301ac0  ; OopMap{[168]=Oop [176]=Oop rdx=Oop off=5325}
                                                ;*invokevirtual get
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {runtime_call}
  0x000000011c3203ad: mov    %rsi,0x8(%rsp)
  0x000000011c3203b2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3203ba: callq  0x000000011c306120  ; OopMap{[168]=Oop [176]=Oop rdx=Oop off=5343}
                                                ;*synchronization entry
                                                ; - java.lang.ref.SoftReference::get@-1 (line 112)
                                                ; - java.lang.StringCoding::deref@15 (line 66)
                                                ; - java.lang.StringCoding::encode@3 (line 330)
                                                ;   {runtime_call}
  0x000000011c3203bf: jmpq   0x000000011c31f1ad
  0x000000011c3203c4: mov    %rdx,(%rsp)
  0x000000011c3203c8: callq  0x000000011c303cc0  ; OopMap{[176]=Oop rsi=Oop off=5357}
                                                ;*checkcast
                                                ; - java.lang.StringCoding::encode@6 (line 330)
                                                ;   {runtime_call}
  0x000000011c3203cd: callq  0x000000011c301ac0  ; OopMap{[176]=Oop rsi=Oop rdi=Oop [192]=Oop off=5362}
                                                ;*invokevirtual requestedCharsetName
                                                ; - java.lang.StringCoding::encode@32 (line 332)
                                                ;   {runtime_call}
  0x000000011c3203d2: callq  0x000000011c301ac0  ; OopMap{[176]=Oop rsi=Oop rdi=Oop [192]=Oop rdx=Oop off=5367}
                                                ;*invokevirtual equals
                                                ; - java.lang.StringCoding::encode@35 (line 332)
                                                ;   {runtime_call}
  0x000000011c3203d7: mov    %rsi,0x8(%rsp)
  0x000000011c3203dc: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3203e4: callq  0x000000011c306120  ; OopMap{[176]=Oop rdi=Oop [192]=Oop [200]=Oop off=5385}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@-1 (line 289)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {runtime_call}
  0x000000011c3203e9: jmpq   0x000000011c31f5bd
  0x000000011c3203ee: mov    %rsi,(%rsp)
  0x000000011c3203f2: callq  0x000000011c303cc0  ; OopMap{[176]=Oop [200]=Oop [192]=Oop off=5399}
                                                ;*checkcast
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@14 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {runtime_call}
  0x000000011c3203f7: callq  0x000000011c301ac0  ; OopMap{[176]=Oop [200]=Oop [192]=Oop rsi=Oop off=5404}
                                                ;*invokeinterface historicalName
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@17 (line 290)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {runtime_call}
  0x000000011c3203fc: callq  0x000000011c301ac0  ; OopMap{[176]=Oop [200]=Oop [192]=Oop rsi=Oop off=5409}
                                                ;*invokevirtual name
                                                ; - java.lang.StringCoding$StringEncoder::charsetName@27 (line 291)
                                                ; - java.lang.StringCoding::encode@45 (line 333)
                                                ;   {runtime_call}
  0x000000011c320401: mov    %rsi,0x8(%rsp)
  0x000000011c320406: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32040e: callq  0x000000011c306120  ; OopMap{[176]=Oop [200]=Oop off=5427}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::lookupCharset@-1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x000000011c320413: jmpq   0x000000011c31fa76
  0x000000011c320418: mov    %rsi,0x8(%rsp)
  0x000000011c32041d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c320425: callq  0x000000011c306120  ; OopMap{[176]=Oop [200]=Oop off=5450}
                                                ;*synchronization entry
                                                ; - java.nio.charset.Charset::isSupported@-1 (line 505)
                                                ; - java.lang.StringCoding::lookupCharset@1 (line 99)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x000000011c32042a: jmpq   0x000000011c31faba
  0x000000011c32042f: mov    %rsi,0x8(%rsp)
  0x000000011c320434: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32043c: callq  0x000000011c306120  ; OopMap{[176]=Oop [200]=Oop off=5473}
                                                ;*synchronization entry
                                                ; - java.nio.charset.Charset::forName@-1 (line 528)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x000000011c320441: jmpq   0x000000011c31fbb5
  0x000000011c320446: mov    %rdx,%rdx
  0x000000011c320449: callq  0x000000011c302220  ; OopMap{[176]=Oop [200]=Oop rbx=Oop off=5486}
                                                ;*new  ; - java.lang.StringCoding::encode@69 (line 338)
                                                ;   {runtime_call}
  0x000000011c32044e: jmpq   0x000000011c31fcae
  0x000000011c320453: mov    %rdx,0x8(%rsp)
  0x000000011c320458: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c320460: callq  0x000000011c306120  ; OopMap{[176]=Oop [200]=Oop rbx=Oop rax=Oop off=5509}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding$StringEncoder::&lt;init&gt;@-1 (line 273)
                                                ; - java.lang.StringCoding::encode@78 (line 338)
                                                ;   {runtime_call}
  0x000000011c320465: jmpq   0x000000011c31fcf5
  0x000000011c32046a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c320474: mov    $0xa050f00,%eax
  0x000000011c320479: callq  0x000000011c305120  ; OopMap{[176]=Oop [200]=Oop off=5534}
                                                ;*new  ; - java.nio.charset.Charset::forName@11 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x000000011c32047e: jmpq   0x000000011c31fd50
  0x000000011c320483: mov    %rdx,%rdx
  0x000000011c320486: callq  0x000000011c301f60  ; OopMap{[176]=Oop [200]=Oop off=5547}
                                                ;*new  ; - java.nio.charset.Charset::forName@11 (line 531)
                                                ; - java.lang.StringCoding::lookupCharset@8 (line 101)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x000000011c32048b: jmpq   0x000000011c31fd5f
  0x000000011c320490: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c32049a: mov    $0xa050f00,%eax
  0x000000011c32049f: callq  0x000000011c305120  ; OopMap{[176]=Oop [200]=Oop rbx=Oop off=5572}
                                                ;*new  ; - java.lang.StringCoding::lookupCharset@13 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x000000011c3204a4: jmpq   0x000000011c31fdc8
  0x000000011c3204a9: mov    %rdx,%rdx
  0x000000011c3204ac: callq  0x000000011c302220  ; OopMap{[176]=Oop [200]=Oop rbx=Oop off=5585}
                                                ;*new  ; - java.lang.StringCoding::lookupCharset@13 (line 103)
                                                ; - java.lang.StringCoding::encode@59 (line 336)
                                                ;   {runtime_call}
  0x000000011c3204b1: jmpq   0x000000011c31fe0d
  0x000000011c3204b6: mov    %rdx,0x8(%rsp)
  0x000000011c3204bb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3204c3: callq  0x000000011c306120  ; OopMap{[176]=Oop rsi=Oop off=5608}
                                                ;*synchronization entry
                                                ; - java.lang.StringCoding::set@-1 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c3204c8: jmpq   0x000000011c31fef7
  0x000000011c3204cd: mov    %rdx,%rdx
  0x000000011c3204d0: callq  0x000000011c302220  ; OopMap{[176]=Oop rbx=Oop off=5621}
                                                ;*new  ; - java.lang.StringCoding::set@1 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c3204d5: jmpq   0x000000011c31ff43
  0x000000011c3204da: mov    %rdx,0x8(%rsp)
  0x000000011c3204df: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3204e7: callq  0x000000011c306120  ; OopMap{[176]=Oop rbx=Oop rax=Oop off=5644}
                                                ;*synchronization entry
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@-1 (line 85)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c3204ec: jmpq   0x000000011c31ff8a
  0x000000011c3204f1: mov    %rdx,0x8(%rsp)
  0x000000011c3204f6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3204fe: callq  0x000000011c306120  ; OopMap{[176]=Oop rbx=Oop rax=Oop off=5667}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 303)
                                                ; - java.lang.ref.SoftReference::&lt;init&gt;@2 (line 85)
                                                ; - java.lang.StringCoding::set@6 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c320503: jmpq   0x000000011c31ffd1
  0x000000011c320508: mov    %rcx,0x8(%rsp)
  0x000000011c32050d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c320515: callq  0x000000011c306120  ; OopMap{[176]=Oop [240]=Oop rbx=Oop rdx=Oop off=5690}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::set@-1 (line 200)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c32051a: jmpq   0x000000011c320088
  0x000000011c32051f: mov    %rdx,0x8(%rsp)
  0x000000011c320524: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32052c: callq  0x000000011c306120  ; OopMap{[176]=Oop [240]=Oop rbx=Oop r8=Oop off=5713}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::getMap@-1 (line 233)
                                                ; - java.lang.ThreadLocal::set@6 (line 201)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c320531: jmpq   0x000000011c3200f6
  0x000000011c320536: callq  0x000000011c301ac0  ; OopMap{[176]=Oop [240]=Oop rbx=Oop r8=Oop off=5723}
                                                ;*getfield threadLocals
                                                ; - java.lang.ThreadLocal::getMap@1 (line 233)
                                                ; - java.lang.ThreadLocal::set@6 (line 201)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c32053b: mov    %rdx,0x8(%rsp)
  0x000000011c320540: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c320548: callq  0x000000011c306120  ; OopMap{[176]=Oop [240]=Oop rbx=Oop rsi=Oop off=5741}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$100@-1 (line 298)
                                                ; - java.lang.ThreadLocal::set@17 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c32054d: jmpq   0x000000011c32017c
  0x000000011c320552: callq  0x000000011c301ac0  ; OopMap{[176]=Oop [240]=Oop rbx=Oop rsi=Oop off=5751}
                                                ;*invokespecial set
                                                ; - java.lang.ThreadLocal$ThreadLocalMap::access$100@3 (line 298)
                                                ; - java.lang.ThreadLocal::set@17 (line 203)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c320557: mov    %rdx,0x8(%rsp)
  0x000000011c32055c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c320564: callq  0x000000011c306120  ; OopMap{[176]=Oop [240]=Oop [256]=Oop rbx=Oop r9=Oop off=5769}
                                                ;*synchronization entry
                                                ; - java.lang.ThreadLocal::createMap@-1 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c320569: jmpq   0x000000011c32022b
  0x000000011c32056e: mov    %rdx,%rdx
  0x000000011c320571: callq  0x000000011c302220  ; OopMap{[176]=Oop [240]=Oop [256]=Oop rbx=Oop r9=Oop off=5782}
                                                ;*new  ; - java.lang.ThreadLocal::createMap@1 (line 244)
                                                ; - java.lang.ThreadLocal::set@26 (line 205)
                                                ; - java.lang.StringCoding::set@9 (line 70)
                                                ; - java.lang.StringCoding::encode@108 (line 342)
                                                ;   {runtime_call}
  0x000000011c320576: jmpq   0x000000011c32026c
  0x000000011c32057b: callq  0x000000011c301ac0  ; OopMap{rdi=Oop rdx=Oop off=5792}
                                                ;*invokevirtual encode
                                                ; - java.lang.StringCoding::encode@116 (line 344)
                                                ;   {runtime_call}
  0x000000011c320580: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c32058a: mov    $0xa050f00,%eax
  0x000000011c32058f: callq  0x000000011c305120  ; OopMap{rsi=Oop off=5812}
                                                ;*new  ; - java.lang.StringCoding::encode@93 (line 341)
                                                ;   {runtime_call}
  0x000000011c320594: jmpq   0x000000011c320328
  0x000000011c320599: mov    %rdx,%rdx
  0x000000011c32059c: callq  0x000000011c301f60  ; OopMap{rsi=Oop off=5825}
                                                ;*new  ; - java.lang.StringCoding::encode@93 (line 341)
                                                ;   {runtime_call}
  0x000000011c3205a1: jmpq   0x000000011c320337
  0x000000011c3205a6: nop
  0x000000011c3205a7: nop
  0x000000011c3205a8: mov    0x2a8(%r15),%rax
  0x000000011c3205af: movabs $0x0,%r10
  0x000000011c3205b9: mov    %r10,0x2a8(%r15)
  0x000000011c3205c0: movabs $0x0,%r10
  0x000000011c3205ca: mov    %r10,0x2b0(%r15)
  0x000000011c3205d1: add    $0x120,%rsp
  0x000000011c3205d8: pop    %rbp
  0x000000011c3205d9: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c3205de: hlt    
  0x000000011c3205df: hlt    
[Stub Code]
  0x000000011c3205e0: nop                       ;   {no_reloc}
  0x000000011c3205e1: nop
  0x000000011c3205e2: nop
  0x000000011c3205e3: nop
  0x000000011c3205e4: nop
  0x000000011c3205e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3205ef: jmpq   0x000000011c3205ef  ;   {runtime_call}
  0x000000011c3205f4: nop
  0x000000011c3205f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3205ff: jmpq   0x000000011c3205ff  ;   {runtime_call}
  0x000000011c320604: nop
  0x000000011c320605: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32060f: jmpq   0x000000011c32060f  ;   {runtime_call}
  0x000000011c320614: nop
  0x000000011c320615: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32061f: jmpq   0x000000011c32061f  ;   {runtime_call}
  0x000000011c320624: nop
  0x000000011c320625: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32062f: jmpq   0x000000011c32062f  ;   {runtime_call}
  0x000000011c320634: nop
  0x000000011c320635: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32063f: jmpq   0x000000011c32063f  ;   {runtime_call}
  0x000000011c320644: nop
  0x000000011c320645: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32064f: jmpq   0x000000011c32064f  ;   {runtime_call}
  0x000000011c320654: nop
  0x000000011c320655: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32065f: jmpq   0x000000011c32065f  ;   {runtime_call}
  0x000000011c320664: nop
  0x000000011c320665: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32066f: jmpq   0x000000011c32066f  ;   {runtime_call}
  0x000000011c320674: nop
  0x000000011c320675: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32067f: jmpq   0x000000011c32067f  ;   {runtime_call}
  0x000000011c320684: nop
  0x000000011c320685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32068f: jmpq   0x000000011c32068f  ;   {runtime_call}
  0x000000011c320694: nop
  0x000000011c320695: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32069f: jmpq   0x000000011c32069f  ;   {runtime_call}
  0x000000011c3206a4: nop
  0x000000011c3206a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3206af: jmpq   0x000000011c3206af  ;   {runtime_call}
  0x000000011c3206b4: nop
  0x000000011c3206b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3206bf: jmpq   0x000000011c3206bf  ;   {runtime_call}
[Exception Handler]
  0x000000011c3206c4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c3206c9: mov    %rsp,-0x28(%rsp)
  0x000000011c3206ce: sub    $0x80,%rsp
  0x000000011c3206d5: mov    %rax,0x78(%rsp)
  0x000000011c3206da: mov    %rcx,0x70(%rsp)
  0x000000011c3206df: mov    %rdx,0x68(%rsp)
  0x000000011c3206e4: mov    %rbx,0x60(%rsp)
  0x000000011c3206e9: mov    %rbp,0x50(%rsp)
  0x000000011c3206ee: mov    %rsi,0x48(%rsp)
  0x000000011c3206f3: mov    %rdi,0x40(%rsp)
  0x000000011c3206f8: mov    %r8,0x38(%rsp)
  0x000000011c3206fd: mov    %r9,0x30(%rsp)
  0x000000011c320702: mov    %r10,0x28(%rsp)
  0x000000011c320707: mov    %r11,0x20(%rsp)
  0x000000011c32070c: mov    %r12,0x18(%rsp)
  0x000000011c320711: mov    %r13,0x10(%rsp)
  0x000000011c320716: mov    %r14,0x8(%rsp)
  0x000000011c32071b: mov    %r15,(%rsp)
  0x000000011c32071f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c320729: movabs $0x11c3206c9,%rsi  ;   {internal_word}
  0x000000011c320733: mov    %rsp,%rdx
  0x000000011c320736: and    $0xfffffffffffffff0,%rsp
  0x000000011c32073a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32073f: hlt    
[Deopt Handler Code]
  0x000000011c320740: movabs $0x11c320740,%r10  ;   {section_word}
  0x000000011c32074a: push   %r10
  0x000000011c32074c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c320751: hlt    
  0x000000011c320752: hlt    
  0x000000011c320753: hlt    
  0x000000011c320754: hlt    
  0x000000011c320755: hlt    
  0x000000011c320756: hlt    
  0x000000011c320757: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x000000011c31eee0' size='11272' address='0x000000011c31eb90' relocation_offset='296' insts_offset='848' stub_offset='6736' scopes_data_offset='7288' scopes_pcs_offset='8832' dependencies_offset='10832' handler_table_offset='10848' nul_chk_table_offset='11200' oops_offset='7112' method='java/lang/StringCoding encode (Ljava/lang/String;[CII)[B' bytes='120' count='272' iicount='272' stamp='0.334'/>
Decoding compiled method 0x000000011c31c790:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001124313d8} &apos;requestedCharsetName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringCoding$StringEncoder&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c31c8e0: mov    0x8(%rsi),%r10d
  0x000000011c31c8e4: shl    $0x3,%r10
  0x000000011c31c8e8: cmp    %rax,%r10
  0x000000011c31c8eb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c31c8f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c31c8fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c31c900: mov    %eax,-0x14000(%rsp)
  0x000000011c31c907: push   %rbp
  0x000000011c31c908: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@0 (line 295)

  0x000000011c31c90c: mov    0x18(%rsi),%eax
  0x000000011c31c90f: shl    $0x3,%rax          ;*getfield requestedCharsetName
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)

  0x000000011c31c913: add    $0x30,%rsp
  0x000000011c31c917: pop    %rbp
  0x000000011c31c918: test   %eax,-0xf83581e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c31c91e: retq   
  0x000000011c31c91f: nop
  0x000000011c31c920: nop
  0x000000011c31c921: mov    0x2a8(%r15),%rax
  0x000000011c31c928: movabs $0x0,%r10
  0x000000011c31c932: mov    %r10,0x2a8(%r15)
  0x000000011c31c939: movabs $0x0,%r10
  0x000000011c31c943: mov    %r10,0x2b0(%r15)
  0x000000011c31c94a: add    $0x30,%rsp
  0x000000011c31c94e: pop    %rbp
  0x000000011c31c94f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c31c954: hlt    
  0x000000011c31c955: hlt    
  0x000000011c31c956: hlt    
  0x000000011c31c957: hlt    
  0x000000011c31c958: hlt    
  0x000000011c31c959: hlt    
  0x000000011c31c95a: hlt    
  0x000000011c31c95b: hlt    
  0x000000011c31c95c: hlt    
  0x000000011c31c95d: hlt    
  0x000000011c31c95e: hlt    
  0x000000011c31c95f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c31c960: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c31c965: mov    %rsp,-0x28(%rsp)
  0x000000011c31c96a: sub    $0x80,%rsp
  0x000000011c31c971: mov    %rax,0x78(%rsp)
  0x000000011c31c976: mov    %rcx,0x70(%rsp)
  0x000000011c31c97b: mov    %rdx,0x68(%rsp)
  0x000000011c31c980: mov    %rbx,0x60(%rsp)
  0x000000011c31c985: mov    %rbp,0x50(%rsp)
  0x000000011c31c98a: mov    %rsi,0x48(%rsp)
  0x000000011c31c98f: mov    %rdi,0x40(%rsp)
  0x000000011c31c994: mov    %r8,0x38(%rsp)
  0x000000011c31c999: mov    %r9,0x30(%rsp)
  0x000000011c31c99e: mov    %r10,0x28(%rsp)
  0x000000011c31c9a3: mov    %r11,0x20(%rsp)
  0x000000011c31c9a8: mov    %r12,0x18(%rsp)
  0x000000011c31c9ad: mov    %r13,0x10(%rsp)
  0x000000011c31c9b2: mov    %r14,0x8(%rsp)
  0x000000011c31c9b7: mov    %r15,(%rsp)
  0x000000011c31c9bb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c31c9c5: movabs $0x11c31c965,%rsi  ;   {internal_word}
  0x000000011c31c9cf: mov    %rsp,%rdx
  0x000000011c31c9d2: and    $0xfffffffffffffff0,%rsp
  0x000000011c31c9d6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c31c9db: hlt    
[Deopt Handler Code]
  0x000000011c31c9dc: movabs $0x11c31c9dc,%r10  ;   {section_word}
  0x000000011c31c9e6: push   %r10
  0x000000011c31c9e8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c31c9ed: hlt    
  0x000000011c31c9ee: hlt    
  0x000000011c31c9ef: hlt    
<nmethod compile_id='14' compiler='C1' level='1' entry='0x000000011c31c8e0' size='704' address='0x000000011c31c790' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='270' iicount='270' stamp='0.337'/>
<writer thread='42243'/>
Decoding compiled method 0x000000011c3217d0:
Code:
[Entry Point]
  # {method} {0x00000001122ed7d8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011c321940: mov    0x8(%rsi),%r10d
  0x000000011c321944: shl    $0x3,%r10
  0x000000011c321948: cmp    %r10,%rax
  0x000000011c32194b: je     0x000000011c321958
  0x000000011c321951: jmpq   0x000000011c24be60  ;   {runtime_call}
  0x000000011c321956: xchg   %ax,%ax
[Verified Entry Point]
  0x000000011c321958: mov    %eax,-0x14000(%rsp)
  0x000000011c32195f: push   %rbp
  0x000000011c321960: mov    %rsp,%rbp
  0x000000011c321963: sub    $0x40,%rsp
  0x000000011c321967: movabs $0x715581c90,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Thread&apos;)}
  0x000000011c321971: mov    %r14,0x30(%rsp)
  0x000000011c321976: lea    0x30(%rsp),%r14
  0x000000011c32197b: mov    %r14,%rsi          ; OopMap{[48]=Oop off=62}
  0x000000011c32197e: movabs $0x11c32197e,%r10  ;   {section_word}
  0x000000011c321988: mov    %r10,0x1e0(%r15)
  0x000000011c32198f: mov    %rsp,0x1d8(%r15)
  0x000000011c321996: cmpb   $0x0,-0xd631753(%rip)        # 0x000000010ecf024a
                                                ;   {external_word}
  0x000000011c32199d: je     0x000000011c3219d5
  0x000000011c3219a3: push   %rsi
  0x000000011c3219a4: movabs $0x1122ed7d8,%rsi  ;   {metadata({method} {0x00000001122ed7d8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x000000011c3219ae: mov    %r15,%rdi
  0x000000011c3219b1: test   $0xf,%esp
  0x000000011c3219b7: je     0x000000011c3219cf
  0x000000011c3219bd: sub    $0x8,%rsp
  0x000000011c3219c1: callq  0x000000010e8ebfca  ;   {runtime_call}
  0x000000011c3219c6: add    $0x8,%rsp
  0x000000011c3219ca: jmpq   0x000000011c3219d4
  0x000000011c3219cf: callq  0x000000010e8ebfca  ;   {runtime_call}
  0x000000011c3219d4: pop    %rsi
  0x000000011c3219d5: lea    0x1f8(%r15),%rdi
  0x000000011c3219dc: movl   $0x4,0x270(%r15)
  0x000000011c3219e7: callq  0x000000010e745f1e  ;   {runtime_call}
  0x000000011c3219ec: vzeroupper 
  0x000000011c3219ef: movl   $0x5,0x270(%r15)
  0x000000011c3219fa: lock addl $0x0,(%rsp)
  0x000000011c3219ff: cmpl   $0x0,-0xd626e09(%rip)        # 0x000000010ecfac00
                                                ;   {external_word}
  0x000000011c321a09: jne    0x000000011c321a1d
  0x000000011c321a0f: cmpl   $0x0,0x30(%r15)
  0x000000011c321a17: je     0x000000011c321a3e
  0x000000011c321a1d: mov    %rax,-0x8(%rbp)
  0x000000011c321a21: mov    %r15,%rdi
  0x000000011c321a24: mov    %rsp,%r12
  0x000000011c321a27: sub    $0x0,%rsp
  0x000000011c321a2b: and    $0xfffffffffffffff0,%rsp
  0x000000011c321a2f: callq  0x000000010e96ed0a  ;   {runtime_call}
  0x000000011c321a34: mov    %r12,%rsp
  0x000000011c321a37: xor    %r12,%r12
  0x000000011c321a3a: mov    -0x8(%rbp),%rax
  0x000000011c321a3e: movl   $0x8,0x270(%r15)
  0x000000011c321a49: cmpl   $0x1,0x29c(%r15)
  0x000000011c321a54: je     0x000000011c321af0
  0x000000011c321a5a: cmpb   $0x0,-0xd631817(%rip)        # 0x000000010ecf024a
                                                ;   {external_word}
  0x000000011c321a61: je     0x000000011c321a9f
  0x000000011c321a67: mov    %rax,-0x8(%rbp)
  0x000000011c321a6b: movabs $0x1122ed7d8,%rsi  ;   {metadata({method} {0x00000001122ed7d8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x000000011c321a75: mov    %r15,%rdi
  0x000000011c321a78: test   $0xf,%esp
  0x000000011c321a7e: je     0x000000011c321a96
  0x000000011c321a84: sub    $0x8,%rsp
  0x000000011c321a88: callq  0x000000010e8ebf3c  ;   {runtime_call}
  0x000000011c321a8d: add    $0x8,%rsp
  0x000000011c321a91: jmpq   0x000000011c321a9b
  0x000000011c321a96: callq  0x000000010e8ebf3c  ;   {runtime_call}
  0x000000011c321a9b: mov    -0x8(%rbp),%rax
  0x000000011c321a9f: movabs $0x0,%r10
  0x000000011c321aa9: mov    %r10,0x1d8(%r15)
  0x000000011c321ab0: movabs $0x0,%r10
  0x000000011c321aba: mov    %r10,0x1e0(%r15)
  0x000000011c321ac1: test   %rax,%rax
  0x000000011c321ac4: je     0x000000011c321acd
  0x000000011c321aca: mov    (%rax),%rax
  0x000000011c321acd: mov    0x38(%r15),%rcx
  0x000000011c321ad1: movl   $0x0,0x100(%rcx)
  0x000000011c321adb: leaveq 
  0x000000011c321adc: cmpq   $0x0,0x8(%r15)
  0x000000011c321ae4: jne    0x000000011c321aeb
  0x000000011c321aea: retq   
  0x000000011c321aeb: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000011c321af0: mov    %rax,-0x8(%rbp)
  0x000000011c321af4: mov    %rsp,%r12
  0x000000011c321af7: sub    $0x0,%rsp
  0x000000011c321afb: and    $0xfffffffffffffff0,%rsp
  0x000000011c321aff: callq  0x000000010e8e9d10  ;   {runtime_call}
  0x000000011c321b04: mov    %r12,%rsp
  0x000000011c321b07: xor    %r12,%r12
  0x000000011c321b0a: mov    -0x8(%rbp),%rax
  0x000000011c321b0e: jmpq   0x000000011c321a5a
  0x000000011c321b13: hlt    
  0x000000011c321b14: hlt    
  0x000000011c321b15: hlt    
  0x000000011c321b16: hlt    
  0x000000011c321b17: hlt    
<nmethod compile_id='32' compile_kind='c2n' level='0' entry='0x000000011c321940' size='840' address='0x000000011c3217d0' relocation_offset='296' consts_offset='840' insts_offset='368' method='java/lang/Thread currentThread ()Ljava/lang/Thread;' bytes='0' count='384' iicount='384' stamp='1.117'/>
<task_queued compile_id='33' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='256' iicount='256' level='3' stamp='1.119' comment='tiered' hot_count='256'/>
<task_queued compile_id='34' method='java/io/BufferedInputStream read ()I' bytes='49' count='256' iicount='256' level='3' stamp='1.119' comment='tiered' hot_count='256'/>
<task_queued compile_id='35' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='183' backedge_count='3072' iicount='183' level='3' stamp='1.119' comment='tiered' hot_count='183'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c321d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c321ec0: mov    0x8(%rsi),%r10d
  0x000000011c321ec4: shl    $0x3,%r10
  0x000000011c321ec8: cmp    %rax,%r10
  0x000000011c321ecb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c321ed1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c321edc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c321ee0: mov    %eax,-0x14000(%rsp)
  0x000000011c321ee7: push   %rbp
  0x000000011c321ee8: sub    $0x30,%rsp
  0x000000011c321eec: movabs $0x1125c20d8,%rax  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c321ef6: mov    0xdc(%rax),%edx
  0x000000011c321efc: add    $0x8,%edx
  0x000000011c321eff: mov    %edx,0xdc(%rax)
  0x000000011c321f05: movabs $0x1123fe680,%rax  ;   {metadata({method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c321f0f: and    $0x1ff8,%edx
  0x000000011c321f15: cmp    $0x0,%edx
  0x000000011c321f18: je     0x000000011c321fee  ;*aload_0
                                                ; - java.io.BufferedInputStream::getBufIfOpen@0 (line 168)

  0x000000011c321f1e: mov    0x20(%rsi),%eax
  0x000000011c321f21: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000011c321f25: cmp    $0x0,%rax
  0x000000011c321f29: movabs $0x1125c20d8,%rdx  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c321f33: movabs $0x108,%rsi
  0x000000011c321f3d: jne    0x000000011c321f4d
  0x000000011c321f43: movabs $0x118,%rsi
  0x000000011c321f4d: mov    (%rdx,%rsi,1),%rdi
  0x000000011c321f51: lea    0x1(%rdi),%rdi
  0x000000011c321f55: mov    %rdi,(%rdx,%rsi,1)
  0x000000011c321f59: je     0x000000011c321f6b  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000000011c321f5f: add    $0x30,%rsp
  0x000000011c321f63: pop    %rbp
  0x000000011c321f64: test   %eax,-0xf83ae6a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c321f6a: retq                      ;*areturn
                                                ; - java.io.BufferedInputStream::getBufIfOpen@20 (line 171)

  0x000000011c321f6b: nopl   0x0(%rax,%rax,1)
  0x000000011c321f70: jmpq   0x000000011c322014  ;   {no_reloc}
  0x000000011c321f75: add    %al,(%rax)
  0x000000011c321f77: add    %al,(%rax)
  0x000000011c321f79: add    %cl,-0x75(%rcx)
  0x000000011c321f7c: rex.RXB (bad) 
  0x000000011c321f7e: lea    0x20(%rax),%rdi
  0x000000011c321f82: cmp    0x70(%r15),%rdi
  0x000000011c321f86: ja     0x000000011c32201e
  0x000000011c321f8c: mov    %rdi,0x60(%r15)
  0x000000011c321f90: mov    0xa8(%rdx),%rcx
  0x000000011c321f97: mov    %rcx,(%rax)
  0x000000011c321f9a: mov    %rdx,%rcx
  0x000000011c321f9d: shr    $0x3,%rcx
  0x000000011c321fa1: mov    %ecx,0x8(%rax)
  0x000000011c321fa4: xor    %rcx,%rcx
  0x000000011c321fa7: mov    %ecx,0xc(%rax)
  0x000000011c321faa: xor    %rcx,%rcx
  0x000000011c321fad: mov    %rcx,0x10(%rax)
  0x000000011c321fb1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)

  0x000000011c321fb5: mov    %rax,%rdx
  0x000000011c321fb8: movabs $0x1125c20d8,%rsi  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c321fc2: addq   $0x1,0x128(%rsi)
  0x000000011c321fca: movabs $0x715aa3e10,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011c321fd4: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)

  0x000000011c321fd7: mov    %rax,0x20(%rsp)
  0x000000011c321fdc: nop
  0x000000011c321fdd: nop
  0x000000011c321fde: nop
  0x000000011c321fdf: callq  0x000000011c24c0a0  ; OopMap{[32]=Oop off=292}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ;   {optimized virtual_call}
  0x000000011c321fe4: mov    0x20(%rsp),%rax
  0x000000011c321fe9: jmpq   0x000000011c322053
  0x000000011c321fee: mov    %rax,0x8(%rsp)
  0x000000011c321ff3: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c321ffb: callq  0x000000011c306120  ; OopMap{rsi=Oop off=320}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ;   {runtime_call}
  0x000000011c322000: jmpq   0x000000011c321f1e
  0x000000011c322005: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c32200f: mov    $0xa050f00,%eax
  0x000000011c322014: callq  0x000000011c305120  ; OopMap{off=345}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000000011c322019: jmpq   0x000000011c321f70
  0x000000011c32201e: mov    %rdx,%rdx
  0x000000011c322021: callq  0x000000011c302220  ; OopMap{off=358}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x000000011c322026: jmp    0x000000011c321fb5
  0x000000011c322028: nop
  0x000000011c322029: nop
  0x000000011c32202a: mov    0x2a8(%r15),%rax
  0x000000011c322031: movabs $0x0,%r10
  0x000000011c32203b: mov    %r10,0x2a8(%r15)
  0x000000011c322042: movabs $0x0,%r10
  0x000000011c32204c: mov    %r10,0x2b0(%r15)
  0x000000011c322053: add    $0x30,%rsp
  0x000000011c322057: pop    %rbp
  0x000000011c322058: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32205d: hlt    
  0x000000011c32205e: hlt    
  0x000000011c32205f: hlt    
[Stub Code]
  0x000000011c322060: nop                       ;   {no_reloc}
  0x000000011c322061: nop
  0x000000011c322062: nop
  0x000000011c322063: nop
  0x000000011c322064: nop
  0x000000011c322065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32206f: jmpq   0x000000011c32206f  ;   {runtime_call}
[Exception Handler]
  0x000000011c322074: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c322079: mov    %rsp,-0x28(%rsp)
  0x000000011c32207e: sub    $0x80,%rsp
  0x000000011c322085: mov    %rax,0x78(%rsp)
  0x000000011c32208a: mov    %rcx,0x70(%rsp)
  0x000000011c32208f: mov    %rdx,0x68(%rsp)
  0x000000011c322094: mov    %rbx,0x60(%rsp)
  0x000000011c322099: mov    %rbp,0x50(%rsp)
  0x000000011c32209e: mov    %rsi,0x48(%rsp)
  0x000000011c3220a3: mov    %rdi,0x40(%rsp)
  0x000000011c3220a8: mov    %r8,0x38(%rsp)
  0x000000011c3220ad: mov    %r9,0x30(%rsp)
  0x000000011c3220b2: mov    %r10,0x28(%rsp)
  0x000000011c3220b7: mov    %r11,0x20(%rsp)
  0x000000011c3220bc: mov    %r12,0x18(%rsp)
  0x000000011c3220c1: mov    %r13,0x10(%rsp)
  0x000000011c3220c6: mov    %r14,0x8(%rsp)
  0x000000011c3220cb: mov    %r15,(%rsp)
  0x000000011c3220cf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3220d9: movabs $0x11c322079,%rsi  ;   {internal_word}
  0x000000011c3220e3: mov    %rsp,%rdx
  0x000000011c3220e6: and    $0xfffffffffffffff0,%rsp
  0x000000011c3220ea: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3220ef: hlt    
[Deopt Handler Code]
  0x000000011c3220f0: movabs $0x11c3220f0,%r10  ;   {section_word}
  0x000000011c3220fa: push   %r10
  0x000000011c3220fc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c322101: hlt    
  0x000000011c322102: hlt    
  0x000000011c322103: hlt    
  0x000000011c322104: hlt    
  0x000000011c322105: hlt    
  0x000000011c322106: hlt    
  0x000000011c322107: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x000000011c321ec0' size='1232' address='0x000000011c321d50' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1032' dependencies_offset='1224' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='1520' iicount='1520' stamp='1.122'/>
<writer thread='42243'/>
<task_queued compile_id='36' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='384' iicount='384' level='3' stamp='1.122' comment='tiered' hot_count='384'/>
<task_queued compile_id='37' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='384' iicount='384' level='3' stamp='1.122' comment='tiered' hot_count='384'/>
<task_queued compile_id='38' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='384' iicount='384' level='3' stamp='1.122' comment='tiered' hot_count='384'/>
<task_queued compile_id='39' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='384' backedge_count='383' iicount='384' level='3' stamp='1.122' comment='tiered' hot_count='384'/>
<task_queued compile_id='40' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='502' iicount='502' level='3' stamp='1.122' comment='tiered' hot_count='502'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c322250:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  # parm0:    rsi:rsi   = &apos;java/io/DataInput&apos;
  #           [sp+0x110]  (sp of caller)
  0x000000011c322640: mov    %eax,-0x14000(%rsp)
  0x000000011c322647: push   %rbp
  0x000000011c322648: sub    $0x100,%rsp
  0x000000011c32264f: movabs $0x1125c2360,%rdi  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322659: mov    0xdc(%rdi),%ebx
  0x000000011c32265f: add    $0x8,%ebx
  0x000000011c322662: mov    %ebx,0xdc(%rdi)
  0x000000011c322668: movabs $0x1125c1b20,%rdi  ;   {metadata({method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322672: and    $0x1ff8,%ebx
  0x000000011c322678: cmp    $0x0,%ebx
  0x000000011c32267b: je     0x000000011c3241d1  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 589)

  0x000000011c322681: cmp    $0x0,%rsi
  0x000000011c322685: je     0x000000011c3226ab
  0x000000011c32268b: movabs $0x7c005e520,%rdx  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000000011c322695: mov    0x8(%rsi),%eax
  0x000000011c322698: shl    $0x3,%rax
  0x000000011c32269c: cmp    0x40(%rax),%rdx
  0x000000011c3226a0: jne    0x000000011c3241e8
  0x000000011c3226a6: jmpq   0x000000011c3226ab
  0x000000011c3226ab: mov    %rsi,%rdi
  0x000000011c3226ae: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011c3241ed
  0x000000011c3226b1: mov    %rsi,%rdi
  0x000000011c3226b4: movabs $0x1125c2360,%rbx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3226be: addq   $0x1,0x118(%rbx)
  0x000000011c3226c6: mov    %rsi,%rdi
  0x000000011c3226c9: mov    %rdi,%rsi          ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)

  0x000000011c3226cc: mov    %rdi,0x68(%rsp)
  0x000000011c3226d1: nop
  0x000000011c3226d2: nop
  0x000000011c3226d3: nop
  0x000000011c3226d4: nop
  0x000000011c3226d5: nop
  0x000000011c3226d6: nop
  0x000000011c3226d7: callq  0x000000011c24c0a0  ; OopMap{[104]=Oop off=156}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {optimized virtual_call}
  0x000000011c3226dc: mov    0x68(%rsp),%r9
  0x000000011c3226e1: cmp    $0x0,%r9
  0x000000011c3226e5: jne    0x000000011c322700
  0x000000011c3226e7: movabs $0x1125c2360,%rsi  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3226f1: orl    $0x100,0x130(%rsi)
  0x000000011c3226fb: jmpq   0x000000011c3227c2
  0x000000011c322700: movabs $0x7c005e520,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000000011c32270a: mov    0x8(%r9),%edx
  0x000000011c32270e: shl    $0x3,%rdx
  0x000000011c322712: cmp    %rdx,%rdi
  0x000000011c322715: jne    0x000000011c3227a6
  0x000000011c32271b: movabs $0x1125c2360,%rsi  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322725: mov    0x8(%r9),%edi
  0x000000011c322729: shl    $0x3,%rdi
  0x000000011c32272d: cmp    0x140(%rsi),%rdi
  0x000000011c322734: jne    0x000000011c322743
  0x000000011c322736: addq   $0x1,0x148(%rsi)
  0x000000011c32273e: jmpq   0x000000011c3227c7
  0x000000011c322743: cmp    0x150(%rsi),%rdi
  0x000000011c32274a: jne    0x000000011c322759
  0x000000011c32274c: addq   $0x1,0x158(%rsi)
  0x000000011c322754: jmpq   0x000000011c3227c7
  0x000000011c322759: cmpq   $0x0,0x140(%rsi)
  0x000000011c322764: jne    0x000000011c32277d
  0x000000011c322766: mov    %rdi,0x140(%rsi)
  0x000000011c32276d: movq   $0x1,0x148(%rsi)
  0x000000011c322778: jmpq   0x000000011c3227c7
  0x000000011c32277d: cmpq   $0x0,0x150(%rsi)
  0x000000011c322788: jne    0x000000011c3227a1
  0x000000011c32278a: mov    %rdi,0x150(%rsi)
  0x000000011c322791: movq   $0x1,0x158(%rsi)
  0x000000011c32279c: jmpq   0x000000011c3227c7
  0x000000011c3227a1: jmpq   0x000000011c3227c7
  0x000000011c3227a6: movabs $0x1125c2360,%rsi  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3227b0: subq   $0x1,0x138(%rsi)
  0x000000011c3227b8: jmpq   0x000000011c3227c2
  0x000000011c3227bd: jmpq   0x000000011c3227c7
  0x000000011c3227c2: xor    %rbx,%rbx
  0x000000011c3227c5: jmp    0x000000011c3227d1
  0x000000011c3227c7: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.io.DataInputStream::readUTF@12 (line 592)

  0x000000011c3227d1: cmp    $0x0,%ebx
  0x000000011c3227d4: movabs $0x1125c2360,%rbx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3227de: movabs $0x168,%rdx
  0x000000011c3227e8: je     0x000000011c3227f8
  0x000000011c3227ee: movabs $0x178,%rdx
  0x000000011c3227f8: mov    (%rbx,%rdx,1),%rsi
  0x000000011c3227fc: lea    0x1(%rsi),%rsi
  0x000000011c322800: mov    %rsi,(%rbx,%rdx,1)
  0x000000011c322804: je     0x000000011c322a93  ;*ifeq
                                                ; - java.io.DataInputStream::readUTF@15 (line 592)

  0x000000011c32280a: cmp    $0x0,%r9
  0x000000011c32280e: jne    0x000000011c322829
  0x000000011c322810: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32281a: orl    $0x100,0x180(%rdx)
  0x000000011c322824: jmpq   0x000000011c3228eb
  0x000000011c322829: movabs $0x7c005e520,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000000011c322833: mov    0x8(%r9),%ebx
  0x000000011c322837: shl    $0x3,%rbx
  0x000000011c32283b: cmp    %rbx,%rsi
  0x000000011c32283e: jne    0x000000011c3228cf
  0x000000011c322844: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32284e: mov    0x8(%r9),%esi
  0x000000011c322852: shl    $0x3,%rsi
  0x000000011c322856: cmp    0x190(%rdx),%rsi
  0x000000011c32285d: jne    0x000000011c32286c
  0x000000011c32285f: addq   $0x1,0x198(%rdx)
  0x000000011c322867: jmpq   0x000000011c3228eb
  0x000000011c32286c: cmp    0x1a0(%rdx),%rsi
  0x000000011c322873: jne    0x000000011c322882
  0x000000011c322875: addq   $0x1,0x1a8(%rdx)
  0x000000011c32287d: jmpq   0x000000011c3228eb
  0x000000011c322882: cmpq   $0x0,0x190(%rdx)
  0x000000011c32288d: jne    0x000000011c3228a6
  0x000000011c32288f: mov    %rsi,0x190(%rdx)
  0x000000011c322896: movq   $0x1,0x198(%rdx)
  0x000000011c3228a1: jmpq   0x000000011c3228eb
  0x000000011c3228a6: cmpq   $0x0,0x1a0(%rdx)
  0x000000011c3228b1: jne    0x000000011c3228ca
  0x000000011c3228b3: mov    %rsi,0x1a0(%rdx)
  0x000000011c3228ba: movq   $0x1,0x1a8(%rdx)
  0x000000011c3228c5: jmpq   0x000000011c3228eb
  0x000000011c3228ca: jmpq   0x000000011c3228eb
  0x000000011c3228cf: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3228d9: subq   $0x1,0x188(%rdx)
  0x000000011c3228e1: jmpq   0x000000011c3241f2
  0x000000011c3228e6: jmpq   0x000000011c3228eb
  0x000000011c3228eb: mov    %r9,%r8            ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)

  0x000000011c3228ee: mov    0x10(%r8),%ebx     ; implicit exception: dispatches to 0x000000011c3241fb
  0x000000011c3228f2: shl    $0x3,%rbx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)

  0x000000011c3228f6: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ; implicit exception: dispatches to 0x000000011c324200
  0x000000011c3228f9: cmp    %eax,%ebx
  0x000000011c3228fb: movabs $0x1125c2360,%rbx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322905: movabs $0x1b8,%rdx
  0x000000011c32290f: jge    0x000000011c32291f
  0x000000011c322915: movabs $0x1c8,%rdx
  0x000000011c32291f: mov    (%rbx,%rdx,1),%rsi
  0x000000011c322923: lea    0x1(%rsi),%rsi
  0x000000011c322927: mov    %rsi,(%rbx,%rdx,1)
  0x000000011c32292b: jl     0x000000011c322939  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@31 (line 594)

  0x000000011c322931: mov    %rax,%r13
  0x000000011c322934: jmpq   0x000000011c322a6e  ;*aload
                                                ; - java.io.DataInputStream::readUTF@54 (line 598)

  0x000000011c322939: mov    %rax,%r11
  0x000000011c32293c: shl    %r11d
  0x000000011c32293f: mov    %r11,%rbx
  0x000000011c322942: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000000011c32294c: mov    %rax,%r13
  0x000000011c32294f: movslq %ebx,%rbx
  0x000000011c322952: mov    %rbx,%rdi
  0x000000011c322955: cmp    $0xffffff,%rbx
  0x000000011c32295c: ja     0x000000011c324205
  0x000000011c322962: movabs $0x17,%rsi
  0x000000011c32296c: lea    (%rsi,%rbx,1),%rsi
  0x000000011c322970: and    $0xfffffffffffffff8,%rsi
  0x000000011c322974: mov    0x60(%r15),%rax
  0x000000011c322978: lea    (%rax,%rsi,1),%rsi
  0x000000011c32297c: cmp    0x70(%r15),%rsi
  0x000000011c322980: ja     0x000000011c324205
  0x000000011c322986: mov    %rsi,0x60(%r15)
  0x000000011c32298a: sub    %rax,%rsi
  0x000000011c32298d: movq   $0x1,(%rax)
  0x000000011c322994: mov    %rdx,%rcx
  0x000000011c322997: shr    $0x3,%rcx
  0x000000011c32299b: mov    %ecx,0x8(%rax)
  0x000000011c32299e: mov    %ebx,0xc(%rax)
  0x000000011c3229a1: sub    $0x10,%rsi
  0x000000011c3229a5: je     0x000000011c3229bc
  0x000000011c3229ab: xor    %rbx,%rbx
  0x000000011c3229ae: shr    $0x3,%rsi
  0x000000011c3229b2: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c3229b7: dec    %rsi
  0x000000011c3229ba: jne    0x000000011c3229b2  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)

  0x000000011c3229bc: mov    %rax,%r10
  0x000000011c3229bf: shr    $0x3,%r10
  0x000000011c3229c3: mov    %r10d,0x10(%r8)
  0x000000011c3229c7: mov    %r8,%rbx
  0x000000011c3229ca: shr    $0x9,%rbx
  0x000000011c3229ce: movabs $0x10c974000,%r14
  0x000000011c3229d8: movb   $0x0,(%rbx,%r14,1)  ;*putfield bytearr
                                                ; - java.io.DataInputStream::readUTF@41 (line 595)

  0x000000011c3229dd: mov    %r11,%rbx
  0x000000011c3229e0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c3229ea: movslq %ebx,%rbx
  0x000000011c3229ed: mov    %rbx,%rdi
  0x000000011c3229f0: cmp    $0xffffff,%rbx
  0x000000011c3229f7: ja     0x000000011c32420f
  0x000000011c3229fd: movabs $0x17,%rsi
  0x000000011c322a07: lea    (%rsi,%rbx,2),%rsi
  0x000000011c322a0b: and    $0xfffffffffffffff8,%rsi
  0x000000011c322a0f: mov    0x60(%r15),%rax
  0x000000011c322a13: lea    (%rax,%rsi,1),%rsi
  0x000000011c322a17: cmp    0x70(%r15),%rsi
  0x000000011c322a1b: ja     0x000000011c32420f
  0x000000011c322a21: mov    %rsi,0x60(%r15)
  0x000000011c322a25: sub    %rax,%rsi
  0x000000011c322a28: movq   $0x1,(%rax)
  0x000000011c322a2f: mov    %rdx,%rcx
  0x000000011c322a32: shr    $0x3,%rcx
  0x000000011c322a36: mov    %ecx,0x8(%rax)
  0x000000011c322a39: mov    %ebx,0xc(%rax)
  0x000000011c322a3c: sub    $0x10,%rsi
  0x000000011c322a40: je     0x000000011c322a57
  0x000000011c322a46: xor    %rbx,%rbx
  0x000000011c322a49: shr    $0x3,%rsi
  0x000000011c322a4d: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c322a52: dec    %rsi
  0x000000011c322a55: jne    0x000000011c322a4d  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)

  0x000000011c322a57: mov    %rax,%r10
  0x000000011c322a5a: shr    $0x3,%r10
  0x000000011c322a5e: mov    %r10d,0x14(%r8)
  0x000000011c322a62: mov    %r8,%rbx
  0x000000011c322a65: shr    $0x9,%rbx
  0x000000011c322a69: movb   $0x0,(%rbx,%r14,1)  ;*putfield chararr
                                                ; - java.io.DataInputStream::readUTF@51 (line 596)

  0x000000011c322a6e: mov    0x14(%r8),%ebx
  0x000000011c322a72: shl    $0x3,%rbx          ;*getfield chararr
                                                ; - java.io.DataInputStream::readUTF@56 (line 598)

  0x000000011c322a76: mov    0x10(%r8),%edx
  0x000000011c322a7a: shl    $0x3,%rdx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@62 (line 599)

  0x000000011c322a7e: movabs $0x1125c2360,%rsi  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322a88: incl   0x1d8(%rsi)
  0x000000011c322a8e: jmpq   0x000000011c322b93  ;*goto
                                                ; - java.io.DataInputStream::readUTF@66 (line 600)

  0x000000011c322a93: mov    %rax,%r13
  0x000000011c322a96: mov    %r13,%rbx
  0x000000011c322a99: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000000011c322aa3: movslq %ebx,%rbx
  0x000000011c322aa6: mov    %rbx,%rdi
  0x000000011c322aa9: cmp    $0xffffff,%rbx
  0x000000011c322ab0: ja     0x000000011c324219
  0x000000011c322ab6: movabs $0x17,%rsi
  0x000000011c322ac0: lea    (%rsi,%rbx,1),%rsi
  0x000000011c322ac4: and    $0xfffffffffffffff8,%rsi
  0x000000011c322ac8: mov    0x60(%r15),%rax
  0x000000011c322acc: lea    (%rax,%rsi,1),%rsi
  0x000000011c322ad0: cmp    0x70(%r15),%rsi
  0x000000011c322ad4: ja     0x000000011c324219
  0x000000011c322ada: mov    %rsi,0x60(%r15)
  0x000000011c322ade: sub    %rax,%rsi
  0x000000011c322ae1: movq   $0x1,(%rax)
  0x000000011c322ae8: mov    %rdx,%rcx
  0x000000011c322aeb: shr    $0x3,%rcx
  0x000000011c322aef: mov    %ecx,0x8(%rax)
  0x000000011c322af2: mov    %ebx,0xc(%rax)
  0x000000011c322af5: sub    $0x10,%rsi
  0x000000011c322af9: je     0x000000011c322b10
  0x000000011c322aff: xor    %rbx,%rbx
  0x000000011c322b02: shr    $0x3,%rsi
  0x000000011c322b06: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c322b0b: dec    %rsi
  0x000000011c322b0e: jne    0x000000011c322b06
  0x000000011c322b10: mov    %rax,%r8           ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)

  0x000000011c322b13: mov    %r13,%rbx
  0x000000011c322b16: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c322b20: movslq %ebx,%rbx
  0x000000011c322b23: mov    %rbx,%rdi
  0x000000011c322b26: cmp    $0xffffff,%rbx
  0x000000011c322b2d: ja     0x000000011c324223
  0x000000011c322b33: movabs $0x17,%rsi
  0x000000011c322b3d: lea    (%rsi,%rbx,2),%rsi
  0x000000011c322b41: and    $0xfffffffffffffff8,%rsi
  0x000000011c322b45: mov    0x60(%r15),%rax
  0x000000011c322b49: lea    (%rax,%rsi,1),%rsi
  0x000000011c322b4d: cmp    0x70(%r15),%rsi
  0x000000011c322b51: ja     0x000000011c324223
  0x000000011c322b57: mov    %rsi,0x60(%r15)
  0x000000011c322b5b: sub    %rax,%rsi
  0x000000011c322b5e: movq   $0x1,(%rax)
  0x000000011c322b65: mov    %rdx,%rcx
  0x000000011c322b68: shr    $0x3,%rcx
  0x000000011c322b6c: mov    %ecx,0x8(%rax)
  0x000000011c322b6f: mov    %ebx,0xc(%rax)
  0x000000011c322b72: sub    $0x10,%rsi
  0x000000011c322b76: je     0x000000011c322b8d
  0x000000011c322b7c: xor    %rbx,%rbx
  0x000000011c322b7f: shr    $0x3,%rsi
  0x000000011c322b83: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c322b88: dec    %rsi
  0x000000011c322b8b: jne    0x000000011c322b83  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)

  0x000000011c322b8d: mov    %rax,%rbx
  0x000000011c322b90: mov    %r8,%rdx           ;*iconst_0
                                                ; - java.io.DataInputStream::readUTF@77 (line 606)

  0x000000011c322b93: mov    %rbx,0x80(%rsp)
  0x000000011c322b9b: cmp    $0x0,%r9
  0x000000011c322b9f: je     0x000000011c322bc6
  0x000000011c322ba5: movabs $0x7c005e520,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x000000011c322baf: mov    0x8(%r9),%esi
  0x000000011c322bb3: shl    $0x3,%rsi
  0x000000011c322bb7: cmp    0x40(%rsi),%rdi
  0x000000011c322bbb: jne    0x000000011c32422d
  0x000000011c322bc1: jmpq   0x000000011c322bc6
  0x000000011c322bc6: mov    %r9,%rcx
  0x000000011c322bc9: mov    %r9,%rsi
  0x000000011c322bcc: movabs $0x1125c2360,%rcx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322bd6: addq   $0x1,0x200(%rcx)
  0x000000011c322bde: mov    %rdx,%rdi
  0x000000011c322be1: mov    %rdi,%rdx
  0x000000011c322be4: mov    $0x0,%ecx
  0x000000011c322be9: mov    %r13,%r8
  0x000000011c322bec: mov    %r9,%rsi           ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)

  0x000000011c322bef: mov    %rdi,0x78(%rsp)
  0x000000011c322bf4: mov    %r13d,0x70(%rsp)
  0x000000011c322bf9: nop
  0x000000011c322bfa: nop
  0x000000011c322bfb: nop
  0x000000011c322bfc: nop
  0x000000011c322bfd: nop
  0x000000011c322bfe: nop
  0x000000011c322bff: callq  0x000000011c24c0a0  ; OopMap{[120]=Oop [128]=Oop off=1476}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {optimized virtual_call}
  0x000000011c322c04: mov    $0x0,%edx
  0x000000011c322c09: mov    $0x0,%esi
  0x000000011c322c0e: mov    0x80(%rsp),%rbx
  0x000000011c322c16: mov    0x78(%rsp),%rdi
  0x000000011c322c1b: mov    0x70(%rsp),%eax
  0x000000011c322c1f: jmpq   0x000000011c322cdd  ;*iload
                                                ; - java.io.DataInputStream::readUTF@92 (line 611)

  0x000000011c322c24: nopl   0x0(%rax)
  0x000000011c322c28: movslq %esi,%rcx
  0x000000011c322c2b: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x000000011c324232
  0x000000011c322c2e: jae    0x000000011c32423c
  0x000000011c322c34: movsbl 0x10(%rdi,%rcx,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)

  0x000000011c322c39: and    $0xff,%ecx
  0x000000011c322c3f: cmp    $0x7f,%ecx
  0x000000011c322c42: movabs $0x1125c2360,%r8   ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322c4c: movabs $0x240,%r9
  0x000000011c322c56: jle    0x000000011c322c66
  0x000000011c322c5c: movabs $0x250,%r9
  0x000000011c322c66: mov    (%r8,%r9,1),%r11
  0x000000011c322c6a: lea    0x1(%r11),%r11
  0x000000011c322c6e: mov    %r11,(%r8,%r9,1)
  0x000000011c322c72: jg     0x000000011c322d1d  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@112 (line 613)

  0x000000011c322c78: inc    %esi
  0x000000011c322c7a: mov    %rdx,%r8
  0x000000011c322c7d: inc    %r8d
  0x000000011c322c80: movslq %edx,%r9
  0x000000011c322c83: cmp    0xc(%rbx),%edx     ; implicit exception: dispatches to 0x000000011c324245
  0x000000011c322c86: jae    0x000000011c32424f
  0x000000011c322c8c: mov    %cx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)

  0x000000011c322c92: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322c9c: mov    0xe0(%rdx),%ecx
  0x000000011c322ca2: add    $0x8,%ecx
  0x000000011c322ca5: mov    %ecx,0xe0(%rdx)
  0x000000011c322cab: movabs $0x1125c1b20,%rdx  ;   {metadata({method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322cb5: and    $0xfff8,%ecx
  0x000000011c322cbb: cmp    $0x0,%ecx
  0x000000011c322cbe: je     0x000000011c324258  ; OopMap{rbx=Oop rdi=Oop off=1668}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x000000011c322cc4: test   %eax,-0xf83bbca(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c322cca: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322cd4: incl   0x278(%rdx)
  0x000000011c322cda: mov    %r8,%rdx           ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x000000011c322cdd: cmp    %eax,%esi
  0x000000011c322cdf: movabs $0x1125c2360,%rcx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322ce9: movabs $0x220,%r8
  0x000000011c322cf3: jge    0x000000011c322d03
  0x000000011c322cf9: movabs $0x230,%r8
  0x000000011c322d03: mov    (%rcx,%r8,1),%r9
  0x000000011c322d07: lea    0x1(%r9),%r9
  0x000000011c322d0b: mov    %r9,(%rcx,%r8,1)
  0x000000011c322d0f: jl     0x000000011c322c28  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@95 (line 611)

  0x000000011c322d15: mov    %rdx,%r8
  0x000000011c322d18: jmpq   0x000000011c322d30  ;*iload
                                                ; - java.io.DataInputStream::readUTF@134 (line 618)

  0x000000011c322d1d: movabs $0x1125c2360,%rcx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322d27: incl   0x260(%rcx)
  0x000000011c322d2d: mov    %rdx,%r8           ;*goto
                                                ; - java.io.DataInputStream::readUTF@115 (line 613)

  0x000000011c322d30: cmp    %eax,%esi
  0x000000011c322d32: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322d3c: movabs $0x290,%rcx
  0x000000011c322d46: jge    0x000000011c322d56
  0x000000011c322d4c: movabs $0x2a0,%rcx
  0x000000011c322d56: mov    (%rdx,%rcx,1),%r9
  0x000000011c322d5a: lea    0x1(%r9),%r9
  0x000000011c322d5e: mov    %r9,(%rdx,%rcx,1)
  0x000000011c322d62: jge    0x000000011c3230c3  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@137 (line 618)

  0x000000011c322d68: movslq %esi,%rdx
  0x000000011c322d6b: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x000000011c32426f
  0x000000011c322d6e: jae    0x000000011c324279
  0x000000011c322d74: movsbl 0x10(%rdi,%rdx,1),%edx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)

  0x000000011c322d79: and    $0xff,%edx
  0x000000011c322d7f: mov    %rdx,%rcx
  0x000000011c322d82: sar    $0x4,%ecx
  0x000000011c322d85: cmp    $0x0,%ecx
  0x000000011c322d88: jl     0x000000011c322d97
  0x000000011c322d8e: cmp    $0x7,%ecx
  0x000000011c322d91: jle    0x000000011c323048
  0x000000011c322d97: cmp    $0xc,%ecx
  0x000000011c322d9a: je     0x000000011c322db7
  0x000000011c322da0: cmp    $0xd,%ecx
  0x000000011c322da3: je     0x000000011c322db7
  0x000000011c322da9: cmp    $0xe,%ecx
  0x000000011c322dac: je     0x000000011c322e55
  0x000000011c322db2: jmpq   0x000000011c3230b7  ;*tableswitch
                                                ; - java.io.DataInputStream::readUTF@154 (line 620)

  0x000000011c322db7: add    $0x2,%esi
  0x000000011c322dba: cmp    %eax,%esi
  0x000000011c322dbc: movabs $0x1125c2360,%rcx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322dc6: movabs $0x3d8,%r9
  0x000000011c322dd0: jle    0x000000011c322de0
  0x000000011c322dd6: movabs $0x3e8,%r9
  0x000000011c322de0: mov    (%rcx,%r9,1),%r11
  0x000000011c322de4: lea    0x1(%r11),%r11
  0x000000011c322de8: mov    %r11,(%rcx,%r9,1)
  0x000000011c322dec: jg     0x000000011c324179  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@250 (line 629)

  0x000000011c322df2: mov    %rsi,%rcx
  0x000000011c322df5: dec    %ecx
  0x000000011c322df7: movslq %ecx,%r9
  0x000000011c322dfa: cmp    0xc(%rdi),%ecx
  0x000000011c322dfd: jae    0x000000011c324282
  0x000000011c322e03: movsbl 0x10(%rdi,%r9,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)

  0x000000011c322e09: mov    %rcx,%r9
  0x000000011c322e0c: and    $0xc0,%r9d
  0x000000011c322e13: cmp    $0x80,%r9d
  0x000000011c322e1a: movabs $0x1125c2360,%r9   ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322e24: movabs $0x408,%r11
  0x000000011c322e2e: je     0x000000011c322e3e
  0x000000011c322e34: movabs $0x418,%r11
  0x000000011c322e3e: mov    (%r9,%r11,1),%r13
  0x000000011c322e42: lea    0x1(%r13),%r13
  0x000000011c322e46: mov    %r13,(%r9,%r11,1)
  0x000000011c322e4a: je     0x000000011c322fd4
  0x000000011c322e50: jmpq   0x000000011c323c31  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@280 (line 633)

  0x000000011c322e55: add    $0x3,%esi
  0x000000011c322e58: cmp    %eax,%esi
  0x000000011c322e5a: movabs $0x1125c2360,%rcx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322e64: movabs $0x4f0,%r9
  0x000000011c322e6e: jle    0x000000011c322e7e
  0x000000011c322e74: movabs $0x500,%r9
  0x000000011c322e7e: mov    (%rcx,%r9,1),%r11
  0x000000011c322e82: lea    0x1(%r11),%r11
  0x000000011c322e86: mov    %r11,(%rcx,%r9,1)
  0x000000011c322e8a: jg     0x000000011c323bd9  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@342 (line 642)

  0x000000011c322e90: mov    %rsi,%rcx
  0x000000011c322e93: sub    $0x2,%ecx
  0x000000011c322e96: movslq %ecx,%r9
  0x000000011c322e99: cmp    0xc(%rdi),%ecx
  0x000000011c322e9c: jae    0x000000011c32428b
  0x000000011c322ea2: movsbl 0x10(%rdi,%r9,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)

  0x000000011c322ea8: mov    %rsi,%r9
  0x000000011c322eab: dec    %r9d
  0x000000011c322eae: mov    %r9d,0x74(%rsp)
  0x000000011c322eb3: movslq %r9d,%r11
  0x000000011c322eb6: cmp    0xc(%rdi),%r9d
  0x000000011c322eba: jae    0x000000011c324294
  0x000000011c322ec0: movsbl 0x10(%rdi,%r11,1),%r11d  ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)

  0x000000011c322ec6: mov    %rcx,%r13
  0x000000011c322ec9: and    $0xc0,%r13d
  0x000000011c322ed0: cmp    $0x80,%r13d
  0x000000011c322ed7: movabs $0x1125c2360,%r13  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322ee1: movabs $0x520,%r14
  0x000000011c322eeb: jne    0x000000011c322efb
  0x000000011c322ef1: movabs $0x530,%r14
  0x000000011c322efb: mov    0x0(%r13,%r14,1),%r9
  0x000000011c322f00: lea    0x1(%r9),%r9
  0x000000011c322f04: mov    %r9,0x0(%r13,%r14,1)
  0x000000011c322f09: jne    0x000000011c323691  ;*if_icmpne
                                                ; - java.io.DataInputStream::readUTF@380 (line 647)

  0x000000011c322f0f: mov    %r11,%r9
  0x000000011c322f12: and    $0xc0,%r9d
  0x000000011c322f19: cmp    $0x80,%r9d
  0x000000011c322f20: movabs $0x1125c2360,%r9   ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322f2a: movabs $0x540,%r13
  0x000000011c322f34: je     0x000000011c322f44
  0x000000011c322f3a: movabs $0x550,%r13
  0x000000011c322f44: mov    (%r9,%r13,1),%r14
  0x000000011c322f48: lea    0x1(%r14),%r14
  0x000000011c322f4c: mov    %r14,(%r9,%r13,1)
  0x000000011c322f50: jne    0x000000011c323691  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@392 (line 647)

  0x000000011c322f56: mov    %r8,%r9
  0x000000011c322f59: inc    %r9d
  0x000000011c322f5c: and    $0xf,%edx
  0x000000011c322f5f: shl    $0xc,%edx
  0x000000011c322f62: and    $0x3f,%ecx
  0x000000011c322f65: shl    $0x6,%ecx
  0x000000011c322f68: or     %rcx,%rdx
  0x000000011c322f6b: and    $0x3f,%r11d
  0x000000011c322f6f: or     %r11,%rdx
  0x000000011c322f72: movslq %r8d,%rcx
  0x000000011c322f75: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x000000011c32429d
  0x000000011c322f79: jae    0x000000011c3242a7
  0x000000011c322f7f: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)

  0x000000011c322f84: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322f8e: mov    0xe0(%rdx),%ecx
  0x000000011c322f94: add    $0x8,%ecx
  0x000000011c322f97: mov    %ecx,0xe0(%rdx)
  0x000000011c322f9d: movabs $0x1125c1b20,%rdx  ;   {metadata({method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322fa7: and    $0xfff8,%ecx
  0x000000011c322fad: cmp    $0x0,%ecx
  0x000000011c322fb0: je     0x000000011c3242b0  ; OopMap{rbx=Oop rdi=Oop off=2422}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x000000011c322fb6: test   %eax,-0xf83bebc(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c322fbc: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c322fc6: incl   0x610(%rdx)
  0x000000011c322fcc: mov    %r9,%r8
  0x000000011c322fcf: jmpq   0x000000011c322d30  ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x000000011c322fd4: mov    %r8,%r9
  0x000000011c322fd7: inc    %r9d
  0x000000011c322fda: and    $0x1f,%edx
  0x000000011c322fdd: shl    $0x6,%edx
  0x000000011c322fe0: and    $0x3f,%ecx
  0x000000011c322fe3: or     %rcx,%rdx
  0x000000011c322fe6: movslq %r8d,%rcx
  0x000000011c322fe9: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x000000011c3242c7
  0x000000011c322fed: jae    0x000000011c3242d1
  0x000000011c322ff3: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)

  0x000000011c322ff8: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323002: mov    0xe0(%rdx),%ecx
  0x000000011c323008: add    $0x8,%ecx
  0x000000011c32300b: mov    %ecx,0xe0(%rdx)
  0x000000011c323011: movabs $0x1125c1b20,%rdx  ;   {metadata({method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32301b: and    $0xfff8,%ecx
  0x000000011c323021: cmp    $0x0,%ecx
  0x000000011c323024: je     0x000000011c3242da  ; OopMap{rbx=Oop rdi=Oop off=2538}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x000000011c32302a: test   %eax,-0xf83bf30(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c323030: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32303a: incl   0x4d8(%rdx)
  0x000000011c323040: mov    %r9,%r8
  0x000000011c323043: jmpq   0x000000011c322d30  ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x000000011c323048: inc    %esi
  0x000000011c32304a: mov    %r8,%rcx
  0x000000011c32304d: inc    %ecx
  0x000000011c32304f: movslq %r8d,%r9
  0x000000011c323052: cmp    0xc(%rbx),%r8d     ; implicit exception: dispatches to 0x000000011c3242f1
  0x000000011c323056: jae    0x000000011c3242fb
  0x000000011c32305c: mov    %dx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)

  0x000000011c323062: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32306c: mov    0xe0(%rdx),%r8d
  0x000000011c323073: add    $0x8,%r8d
  0x000000011c323077: mov    %r8d,0xe0(%rdx)
  0x000000011c32307e: movabs $0x1125c1b20,%rdx  ;   {metadata({method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323088: and    $0xfff8,%r8d
  0x000000011c32308f: cmp    $0x0,%r8d
  0x000000011c323093: je     0x000000011c324304  ; OopMap{rbx=Oop rdi=Oop off=2649}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x000000011c323099: test   %eax,-0xf83bf9f(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c32309f: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3230a9: incl   0x3c0(%rdx)
  0x000000011c3230af: mov    %rcx,%r8
  0x000000011c3230b2: jmpq   0x000000011c322d30  ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x000000011c3230b7: mov    %esi,0x98(%rsp)
  0x000000011c3230be: jmpq   0x000000011c32314b  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x000000011c3230c3: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c3230cd: mov    0x60(%r15),%rax
  0x000000011c3230d1: lea    0x18(%rax),%rdi
  0x000000011c3230d5: cmp    0x70(%r15),%rdi
  0x000000011c3230d9: ja     0x000000011c32431b
  0x000000011c3230df: mov    %rdi,0x60(%r15)
  0x000000011c3230e3: mov    0xa8(%rdx),%rcx
  0x000000011c3230ea: mov    %rcx,(%rax)
  0x000000011c3230ed: mov    %rdx,%rcx
  0x000000011c3230f0: shr    $0x3,%rcx
  0x000000011c3230f4: mov    %ecx,0x8(%rax)
  0x000000011c3230f7: xor    %rcx,%rcx
  0x000000011c3230fa: mov    %ecx,0xc(%rax)
  0x000000011c3230fd: xor    %rcx,%rcx
  0x000000011c323100: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)

  0x000000011c323104: mov    %rax,%rdx
  0x000000011c323107: movabs $0x1125c2360,%rcx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323111: addq   $0x1,0x6d8(%rcx)
  0x000000011c323119: mov    %rbx,%rdx
  0x000000011c32311c: mov    $0x0,%ecx
  0x000000011c323121: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)

  0x000000011c323124: mov    %rax,0x88(%rsp)
  0x000000011c32312c: nop
  0x000000011c32312d: nop
  0x000000011c32312e: nop
  0x000000011c32312f: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop off=2804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)
                                                ;   {optimized virtual_call}
  0x000000011c323134: mov    0x88(%rsp),%rax
  0x000000011c32313c: add    $0x100,%rsp
  0x000000011c323143: pop    %rbp
  0x000000011c323144: test   %eax,-0xf83c04a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32314a: retq                      ;*areturn
                                                ; - java.io.DataInputStream::readUTF@500 (line 661)

  0x000000011c32314b: nopl   0x0(%rax,%rax,1)
  0x000000011c323150: jmpq   0x000000011c324337  ;   {no_reloc}
  0x000000011c323155: add    %al,(%rax)
  0x000000011c323157: add    %al,(%rax)
  0x000000011c323159: add    %ch,%cl
  0x000000011c32315b: loop   0x000000011c32316e
  0x000000011c32315d: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x000000011c32315f: nop
  0x000000011c323160: jmpq   0x000000011c32435d  ;   {no_reloc}
  0x000000011c323165: add    %al,(%rax)
  0x000000011c323167: add    %al,(%rax)
  0x000000011c323169: add    %cl,-0x77(%rax)
  0x000000011c32316c: test   %ah,(%rax,%riz,4)
  0x000000011c32316f: add    %al,(%rax)
  0x000000011c323171: add    %cl,-0x75(%rcx)
  0x000000011c323174: rex.RXB (bad) 
  0x000000011c323176: lea    0x18(%rax),%rdi
  0x000000011c32317a: cmp    0x70(%r15),%rdi
  0x000000011c32317e: ja     0x000000011c324367
  0x000000011c323184: mov    %rdi,0x60(%r15)
  0x000000011c323188: mov    0xa8(%rdx),%rcx
  0x000000011c32318f: mov    %rcx,(%rax)
  0x000000011c323192: mov    %rdx,%rcx
  0x000000011c323195: shr    $0x3,%rcx
  0x000000011c323199: mov    %ecx,0x8(%rax)
  0x000000011c32319c: xor    %rcx,%rcx
  0x000000011c32319f: mov    %ecx,0xc(%rax)
  0x000000011c3231a2: xor    %rcx,%rcx
  0x000000011c3231a5: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)

  0x000000011c3231a9: mov    %rax,%rbx
  0x000000011c3231ac: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3231b6: addq   $0x1,0x628(%rdx)
  0x000000011c3231be: movabs $0x11257ece8,%rbx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3231c8: mov    0xdc(%rbx),%edx
  0x000000011c3231ce: add    $0x8,%edx
  0x000000011c3231d1: mov    %edx,0xdc(%rbx)
  0x000000011c3231d7: movabs $0x112338f30,%rbx  ;   {metadata({method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3231e1: and    $0x7ffff8,%edx
  0x000000011c3231e7: cmp    $0x0,%edx
  0x000000011c3231ea: je     0x000000011c324374
  0x000000011c3231f0: mov    %rax,%rbx
  0x000000011c3231f3: movabs $0x11257ece8,%rdx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3231fd: addq   $0x1,0x108(%rdx)
  0x000000011c323205: movabs $0x11257f080,%rbx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32320f: mov    0xdc(%rbx),%edx
  0x000000011c323215: add    $0x8,%edx
  0x000000011c323218: mov    %edx,0xdc(%rbx)
  0x000000011c32321e: movabs $0x112335260,%rbx  ;   {metadata({method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c323228: and    $0x7ffff8,%edx
  0x000000011c32322e: cmp    $0x0,%edx
  0x000000011c323231: je     0x000000011c32438b
  0x000000011c323237: mov    %rax,%rbx
  0x000000011c32323a: movabs $0x11257f080,%rdx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c323244: addq   $0x1,0x108(%rdx)
  0x000000011c32324c: movabs $0x1124371c0,%rbx  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c323256: mov    0xdc(%rbx),%edx
  0x000000011c32325c: add    $0x8,%edx
  0x000000011c32325f: mov    %edx,0xdc(%rbx)
  0x000000011c323265: movabs $0x1122c0480,%rbx  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c32326f: and    $0x7ffff8,%edx
  0x000000011c323275: cmp    $0x0,%edx
  0x000000011c323278: je     0x000000011c3243a2
  0x000000011c32327e: mov    $0x10,%ebx
  0x000000011c323283: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c32328d: mov    %rax,%r11
  0x000000011c323290: movslq %ebx,%rbx
  0x000000011c323293: mov    %rbx,%rdi
  0x000000011c323296: cmp    $0xffffff,%rbx
  0x000000011c32329d: ja     0x000000011c3243b9
  0x000000011c3232a3: movabs $0x17,%rsi
  0x000000011c3232ad: lea    (%rsi,%rbx,2),%rsi
  0x000000011c3232b1: and    $0xfffffffffffffff8,%rsi
  0x000000011c3232b5: mov    0x60(%r15),%rax
  0x000000011c3232b9: lea    (%rax,%rsi,1),%rsi
  0x000000011c3232bd: cmp    0x70(%r15),%rsi
  0x000000011c3232c1: ja     0x000000011c3243b9
  0x000000011c3232c7: mov    %rsi,0x60(%r15)
  0x000000011c3232cb: sub    %rax,%rsi
  0x000000011c3232ce: movq   $0x1,(%rax)
  0x000000011c3232d5: mov    %rdx,%rcx
  0x000000011c3232d8: shr    $0x3,%rcx
  0x000000011c3232dc: mov    %ecx,0x8(%rax)
  0x000000011c3232df: mov    %ebx,0xc(%rax)
  0x000000011c3232e2: sub    $0x10,%rsi
  0x000000011c3232e6: je     0x000000011c3232fd
  0x000000011c3232ec: xor    %rbx,%rbx
  0x000000011c3232ef: shr    $0x3,%rsi
  0x000000011c3232f3: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c3232f8: dec    %rsi
  0x000000011c3232fb: jne    0x000000011c3232f3  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x000000011c3232fd: mov    %rax,%r10
  0x000000011c323300: shr    $0x3,%r10
  0x000000011c323304: mov    %r10d,0x10(%r11)
  0x000000011c323308: mov    %r11,%rax
  0x000000011c32330b: shr    $0x9,%rax
  0x000000011c32330f: movabs $0x10c974000,%rdx
  0x000000011c323319: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x000000011c32331d: mov    %r11,%rax
  0x000000011c323320: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32332a: mov    0x8(%rax),%eax
  0x000000011c32332d: shl    $0x3,%rax
  0x000000011c323331: cmp    0x640(%rdx),%rax
  0x000000011c323338: jne    0x000000011c323347
  0x000000011c32333a: addq   $0x1,0x648(%rdx)
  0x000000011c323342: jmpq   0x000000011c3233ad
  0x000000011c323347: cmp    0x650(%rdx),%rax
  0x000000011c32334e: jne    0x000000011c32335d
  0x000000011c323350: addq   $0x1,0x658(%rdx)
  0x000000011c323358: jmpq   0x000000011c3233ad
  0x000000011c32335d: cmpq   $0x0,0x640(%rdx)
  0x000000011c323368: jne    0x000000011c323381
  0x000000011c32336a: mov    %rax,0x640(%rdx)
  0x000000011c323371: movq   $0x1,0x648(%rdx)
  0x000000011c32337c: jmpq   0x000000011c3233ad
  0x000000011c323381: cmpq   $0x0,0x650(%rdx)
  0x000000011c32338c: jne    0x000000011c3233a5
  0x000000011c32338e: mov    %rax,0x650(%rdx)
  0x000000011c323395: movq   $0x1,0x658(%rdx)
  0x000000011c3233a0: jmpq   0x000000011c3233ad
  0x000000011c3233a5: addq   $0x1,0x638(%rdx)
  0x000000011c3233ad: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3233b7: mov    0xdc(%rdx),%esi
  0x000000011c3233bd: add    $0x8,%esi
  0x000000011c3233c0: mov    %esi,0xdc(%rdx)
  0x000000011c3233c6: movabs $0x112339248,%rdx  ;   {metadata({method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3233d0: and    $0x7ffff8,%esi
  0x000000011c3233d6: cmp    $0x0,%esi
  0x000000011c3233d9: je     0x000000011c3243c3
  0x000000011c3233df: mov    %r11,%rax
  0x000000011c3233e2: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3233ec: addq   $0x1,0x108(%rdx)
  0x000000011c3233f4: movabs $0x715aa3ed8,%rdx  ;   {oop(&quot;malformed input around byte &quot;)}
  0x000000011c3233fe: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)

  0x000000011c323401: mov    %r11,0x90(%rsp)
  0x000000011c323409: nop
  0x000000011c32340a: nop
  0x000000011c32340b: nop
  0x000000011c32340c: nop
  0x000000011c32340d: nop
  0x000000011c32340e: nop
  0x000000011c32340f: callq  0x000000011c24c0a0  ; OopMap{[144]=Oop [160]=Oop off=3540}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {optimized virtual_call}
  0x000000011c323414: mov    0x90(%rsp),%rax
  0x000000011c32341c: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323426: mov    0x8(%rax),%eax
  0x000000011c323429: shl    $0x3,%rax
  0x000000011c32342d: cmp    0x670(%rdx),%rax
  0x000000011c323434: jne    0x000000011c323443
  0x000000011c323436: addq   $0x1,0x678(%rdx)
  0x000000011c32343e: jmpq   0x000000011c3234a9
  0x000000011c323443: cmp    0x680(%rdx),%rax
  0x000000011c32344a: jne    0x000000011c323459
  0x000000011c32344c: addq   $0x1,0x688(%rdx)
  0x000000011c323454: jmpq   0x000000011c3234a9
  0x000000011c323459: cmpq   $0x0,0x670(%rdx)
  0x000000011c323464: jne    0x000000011c32347d
  0x000000011c323466: mov    %rax,0x670(%rdx)
  0x000000011c32346d: movq   $0x1,0x678(%rdx)
  0x000000011c323478: jmpq   0x000000011c3234a9
  0x000000011c32347d: cmpq   $0x0,0x680(%rdx)
  0x000000011c323488: jne    0x000000011c3234a1
  0x000000011c32348a: mov    %rax,0x680(%rdx)
  0x000000011c323491: movq   $0x1,0x688(%rdx)
  0x000000011c32349c: jmpq   0x000000011c3234a9
  0x000000011c3234a1: addq   $0x1,0x668(%rdx)
  0x000000011c3234a9: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3234b3: mov    0xdc(%rdx),%esi
  0x000000011c3234b9: add    $0x8,%esi
  0x000000011c3234bc: mov    %esi,0xdc(%rdx)
  0x000000011c3234c2: movabs $0x112339708,%rdx  ;   {metadata({method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3234cc: and    $0x7ffff8,%esi
  0x000000011c3234d2: cmp    $0x0,%esi
  0x000000011c3234d5: je     0x000000011c3243da
  0x000000011c3234db: mov    0x90(%rsp),%rax
  0x000000011c3234e3: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3234ed: addq   $0x1,0x108(%rdx)
  0x000000011c3234f5: mov    0x98(%rsp),%edx
  0x000000011c3234fc: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)

  0x000000011c323504: nop
  0x000000011c323505: nop
  0x000000011c323506: nop
  0x000000011c323507: callq  0x000000011c24c0a0  ; OopMap{[144]=Oop [160]=Oop off=3788}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {optimized virtual_call}
  0x000000011c32350c: mov    0x90(%rsp),%rax
  0x000000011c323514: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32351e: mov    0x8(%rax),%eax
  0x000000011c323521: shl    $0x3,%rax
  0x000000011c323525: cmp    0x6a0(%rdx),%rax
  0x000000011c32352c: jne    0x000000011c32353b
  0x000000011c32352e: addq   $0x1,0x6a8(%rdx)
  0x000000011c323536: jmpq   0x000000011c3235a1
  0x000000011c32353b: cmp    0x6b0(%rdx),%rax
  0x000000011c323542: jne    0x000000011c323551
  0x000000011c323544: addq   $0x1,0x6b8(%rdx)
  0x000000011c32354c: jmpq   0x000000011c3235a1
  0x000000011c323551: cmpq   $0x0,0x6a0(%rdx)
  0x000000011c32355c: jne    0x000000011c323575
  0x000000011c32355e: mov    %rax,0x6a0(%rdx)
  0x000000011c323565: movq   $0x1,0x6a8(%rdx)
  0x000000011c323570: jmpq   0x000000011c3235a1
  0x000000011c323575: cmpq   $0x0,0x6b0(%rdx)
  0x000000011c323580: jne    0x000000011c323599
  0x000000011c323582: mov    %rax,0x6b0(%rdx)
  0x000000011c323589: movq   $0x1,0x6b8(%rdx)
  0x000000011c323594: jmpq   0x000000011c3235a1
  0x000000011c323599: addq   $0x1,0x698(%rdx)
  0x000000011c3235a1: movabs $0x112581020,%rdx  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3235ab: mov    0xdc(%rdx),%esi
  0x000000011c3235b1: add    $0x8,%esi
  0x000000011c3235b4: mov    %esi,0xdc(%rdx)
  0x000000011c3235ba: movabs $0x11233a5f8,%rdx  ;   {metadata({method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3235c4: and    $0x7ffff8,%esi
  0x000000011c3235ca: cmp    $0x0,%esi
  0x000000011c3235cd: je     0x000000011c3243f1
  0x000000011c3235d3: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c3235dd: mov    0x60(%r15),%rax
  0x000000011c3235e1: lea    0x18(%rax),%rdi
  0x000000011c3235e5: cmp    0x70(%r15),%rdi
  0x000000011c3235e9: ja     0x000000011c324408
  0x000000011c3235ef: mov    %rdi,0x60(%r15)
  0x000000011c3235f3: mov    0xa8(%rdx),%rcx
  0x000000011c3235fa: mov    %rcx,(%rax)
  0x000000011c3235fd: mov    %rdx,%rcx
  0x000000011c323600: shr    $0x3,%rcx
  0x000000011c323604: mov    %ecx,0x8(%rax)
  0x000000011c323607: xor    %rcx,%rcx
  0x000000011c32360a: mov    %ecx,0xc(%rax)
  0x000000011c32360d: xor    %rcx,%rcx
  0x000000011c323610: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000011c323614: mov    0x90(%rsp),%rdx
  0x000000011c32361c: mov    0x10(%rdx),%ecx
  0x000000011c32361f: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000011c323623: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000011c323627: mov    %rax,%rdx
  0x000000011c32362a: movabs $0x112581020,%rsi  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323634: addq   $0x1,0x108(%rsi)
  0x000000011c32363c: mov    %rcx,%rdx
  0x000000011c32363f: mov    $0x0,%ecx
  0x000000011c323644: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x000000011c323647: mov    %rax,0xa8(%rsp)
  0x000000011c32364f: callq  0x000000011c24c0a0  ; OopMap{[160]=Oop [168]=Oop off=4116}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {optimized virtual_call}
  0x000000011c323654: mov    0xa0(%rsp),%rax
  0x000000011c32365c: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323666: addq   $0x1,0x6c8(%rdx)
  0x000000011c32366e: mov    0xa8(%rsp),%rdx
  0x000000011c323676: mov    0xa0(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)

  0x000000011c32367e: nop
  0x000000011c32367f: callq  0x000000011c24c0a0  ; OopMap{[160]=Oop off=4164}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)
                                                ;   {optimized virtual_call}
  0x000000011c323684: mov    0xa0(%rsp),%rax
  0x000000011c32368c: jmpq   0x000000011c324666  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@488 (line 656)

  0x000000011c323691: mov    %esi,0x9c(%rsp)
  0x000000011c323698: jmpq   0x000000011c324424  ;   {no_reloc}
  0x000000011c32369d: add    %al,(%rax)
  0x000000011c32369f: add    %al,(%rax)
  0x000000011c3236a1: add    %ch,%cl
  0x000000011c3236a3: xchg   %ecx,-0x16700000(%rip)        # 0x0000000105c236a9
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {no_reloc}
  0x000000011c3236a9: popfq  
  0x000000011c3236aa: or     $0x0,%eax
  0x000000011c3236af: add    %al,(%rax)
  0x000000011c3236b1: add    %cl,-0x77(%rax)
  0x000000011c3236b4: test   %ah,(%rax,%rdi,4)
  0x000000011c3236b7: add    %al,(%rax)
  0x000000011c3236b9: add    %cl,-0x75(%rcx)
  0x000000011c3236bc: rex.RXB (bad) 
  0x000000011c3236be: lea    0x18(%rax),%rdi
  0x000000011c3236c2: cmp    0x70(%r15),%rdi
  0x000000011c3236c6: ja     0x000000011c324454
  0x000000011c3236cc: mov    %rdi,0x60(%r15)
  0x000000011c3236d0: mov    0xa8(%rdx),%rcx
  0x000000011c3236d7: mov    %rcx,(%rax)
  0x000000011c3236da: mov    %rdx,%rcx
  0x000000011c3236dd: shr    $0x3,%rcx
  0x000000011c3236e1: mov    %ecx,0x8(%rax)
  0x000000011c3236e4: xor    %rcx,%rcx
  0x000000011c3236e7: mov    %ecx,0xc(%rax)
  0x000000011c3236ea: xor    %rcx,%rcx
  0x000000011c3236ed: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)

  0x000000011c3236f1: mov    %rax,%rbx
  0x000000011c3236f4: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3236fe: addq   $0x1,0x560(%rdx)
  0x000000011c323706: movabs $0x11257ece8,%rbx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323710: mov    0xdc(%rbx),%edx
  0x000000011c323716: add    $0x8,%edx
  0x000000011c323719: mov    %edx,0xdc(%rbx)
  0x000000011c32371f: movabs $0x112338f30,%rbx  ;   {metadata({method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323729: and    $0x7ffff8,%edx
  0x000000011c32372f: cmp    $0x0,%edx
  0x000000011c323732: je     0x000000011c324461
  0x000000011c323738: mov    %rax,%rbx
  0x000000011c32373b: movabs $0x11257ece8,%rdx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323745: addq   $0x1,0x108(%rdx)
  0x000000011c32374d: movabs $0x11257f080,%rbx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c323757: mov    0xdc(%rbx),%edx
  0x000000011c32375d: add    $0x8,%edx
  0x000000011c323760: mov    %edx,0xdc(%rbx)
  0x000000011c323766: movabs $0x112335260,%rbx  ;   {metadata({method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c323770: and    $0x7ffff8,%edx
  0x000000011c323776: cmp    $0x0,%edx
  0x000000011c323779: je     0x000000011c324478
  0x000000011c32377f: mov    %rax,%rbx
  0x000000011c323782: movabs $0x11257f080,%rdx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32378c: addq   $0x1,0x108(%rdx)
  0x000000011c323794: movabs $0x1124371c0,%rbx  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c32379e: mov    0xdc(%rbx),%edx
  0x000000011c3237a4: add    $0x8,%edx
  0x000000011c3237a7: mov    %edx,0xdc(%rbx)
  0x000000011c3237ad: movabs $0x1122c0480,%rbx  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c3237b7: and    $0x7ffff8,%edx
  0x000000011c3237bd: cmp    $0x0,%edx
  0x000000011c3237c0: je     0x000000011c32448f
  0x000000011c3237c6: mov    $0x10,%ebx
  0x000000011c3237cb: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c3237d5: mov    %rax,%r13
  0x000000011c3237d8: movslq %ebx,%rbx
  0x000000011c3237db: mov    %rbx,%rdi
  0x000000011c3237de: cmp    $0xffffff,%rbx
  0x000000011c3237e5: ja     0x000000011c3244a6
  0x000000011c3237eb: movabs $0x17,%rsi
  0x000000011c3237f5: lea    (%rsi,%rbx,2),%rsi
  0x000000011c3237f9: and    $0xfffffffffffffff8,%rsi
  0x000000011c3237fd: mov    0x60(%r15),%rax
  0x000000011c323801: lea    (%rax,%rsi,1),%rsi
  0x000000011c323805: cmp    0x70(%r15),%rsi
  0x000000011c323809: ja     0x000000011c3244a6
  0x000000011c32380f: mov    %rsi,0x60(%r15)
  0x000000011c323813: sub    %rax,%rsi
  0x000000011c323816: movq   $0x1,(%rax)
  0x000000011c32381d: mov    %rdx,%rcx
  0x000000011c323820: shr    $0x3,%rcx
  0x000000011c323824: mov    %ecx,0x8(%rax)
  0x000000011c323827: mov    %ebx,0xc(%rax)
  0x000000011c32382a: sub    $0x10,%rsi
  0x000000011c32382e: je     0x000000011c323845
  0x000000011c323834: xor    %rbx,%rbx
  0x000000011c323837: shr    $0x3,%rsi
  0x000000011c32383b: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c323840: dec    %rsi
  0x000000011c323843: jne    0x000000011c32383b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x000000011c323845: mov    %rax,%r10
  0x000000011c323848: shr    $0x3,%r10
  0x000000011c32384c: mov    %r10d,0x10(%r13)
  0x000000011c323850: mov    %r13,%rax
  0x000000011c323853: shr    $0x9,%rax
  0x000000011c323857: movabs $0x10c974000,%rdx
  0x000000011c323861: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x000000011c323865: mov    %r13,%rax
  0x000000011c323868: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323872: mov    0x8(%rax),%eax
  0x000000011c323875: shl    $0x3,%rax
  0x000000011c323879: cmp    0x578(%rdx),%rax
  0x000000011c323880: jne    0x000000011c32388f
  0x000000011c323882: addq   $0x1,0x580(%rdx)
  0x000000011c32388a: jmpq   0x000000011c3238f5
  0x000000011c32388f: cmp    0x588(%rdx),%rax
  0x000000011c323896: jne    0x000000011c3238a5
  0x000000011c323898: addq   $0x1,0x590(%rdx)
  0x000000011c3238a0: jmpq   0x000000011c3238f5
  0x000000011c3238a5: cmpq   $0x0,0x578(%rdx)
  0x000000011c3238b0: jne    0x000000011c3238c9
  0x000000011c3238b2: mov    %rax,0x578(%rdx)
  0x000000011c3238b9: movq   $0x1,0x580(%rdx)
  0x000000011c3238c4: jmpq   0x000000011c3238f5
  0x000000011c3238c9: cmpq   $0x0,0x588(%rdx)
  0x000000011c3238d4: jne    0x000000011c3238ed
  0x000000011c3238d6: mov    %rax,0x588(%rdx)
  0x000000011c3238dd: movq   $0x1,0x590(%rdx)
  0x000000011c3238e8: jmpq   0x000000011c3238f5
  0x000000011c3238ed: addq   $0x1,0x570(%rdx)
  0x000000011c3238f5: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3238ff: mov    0xdc(%rdx),%esi
  0x000000011c323905: add    $0x8,%esi
  0x000000011c323908: mov    %esi,0xdc(%rdx)
  0x000000011c32390e: movabs $0x112339248,%rdx  ;   {metadata({method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323918: and    $0x7ffff8,%esi
  0x000000011c32391e: cmp    $0x0,%esi
  0x000000011c323921: je     0x000000011c3244b0
  0x000000011c323927: mov    %r13,%rax
  0x000000011c32392a: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323934: addq   $0x1,0x108(%rdx)
  0x000000011c32393c: movabs $0x715aa3ed8,%rdx  ;   {oop(&quot;malformed input around byte &quot;)}
  0x000000011c323946: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)

  0x000000011c323949: mov    %r13,0xb0(%rsp)
  0x000000011c323951: nop
  0x000000011c323952: nop
  0x000000011c323953: nop
  0x000000011c323954: nop
  0x000000011c323955: nop
  0x000000011c323956: nop
  0x000000011c323957: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [184]=Oop off=4892}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {optimized virtual_call}
  0x000000011c32395c: mov    0xb0(%rsp),%rax
  0x000000011c323964: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32396e: mov    0x8(%rax),%eax
  0x000000011c323971: shl    $0x3,%rax
  0x000000011c323975: cmp    0x5a8(%rdx),%rax
  0x000000011c32397c: jne    0x000000011c32398b
  0x000000011c32397e: addq   $0x1,0x5b0(%rdx)
  0x000000011c323986: jmpq   0x000000011c3239f1
  0x000000011c32398b: cmp    0x5b8(%rdx),%rax
  0x000000011c323992: jne    0x000000011c3239a1
  0x000000011c323994: addq   $0x1,0x5c0(%rdx)
  0x000000011c32399c: jmpq   0x000000011c3239f1
  0x000000011c3239a1: cmpq   $0x0,0x5a8(%rdx)
  0x000000011c3239ac: jne    0x000000011c3239c5
  0x000000011c3239ae: mov    %rax,0x5a8(%rdx)
  0x000000011c3239b5: movq   $0x1,0x5b0(%rdx)
  0x000000011c3239c0: jmpq   0x000000011c3239f1
  0x000000011c3239c5: cmpq   $0x0,0x5b8(%rdx)
  0x000000011c3239d0: jne    0x000000011c3239e9
  0x000000011c3239d2: mov    %rax,0x5b8(%rdx)
  0x000000011c3239d9: movq   $0x1,0x5c0(%rdx)
  0x000000011c3239e4: jmpq   0x000000011c3239f1
  0x000000011c3239e9: addq   $0x1,0x5a0(%rdx)
  0x000000011c3239f1: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3239fb: mov    0xdc(%rdx),%esi
  0x000000011c323a01: add    $0x8,%esi
  0x000000011c323a04: mov    %esi,0xdc(%rdx)
  0x000000011c323a0a: movabs $0x112339708,%rdx  ;   {metadata({method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323a14: and    $0x7ffff8,%esi
  0x000000011c323a1a: cmp    $0x0,%esi
  0x000000011c323a1d: je     0x000000011c3244c7
  0x000000011c323a23: mov    0xb0(%rsp),%rax
  0x000000011c323a2b: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323a35: addq   $0x1,0x108(%rdx)
  0x000000011c323a3d: mov    0x74(%rsp),%edx
  0x000000011c323a41: mov    0xb0(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)

  0x000000011c323a49: nop
  0x000000011c323a4a: nop
  0x000000011c323a4b: nop
  0x000000011c323a4c: nop
  0x000000011c323a4d: nop
  0x000000011c323a4e: nop
  0x000000011c323a4f: callq  0x000000011c24c0a0  ; OopMap{[176]=Oop [184]=Oop off=5140}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {optimized virtual_call}
  0x000000011c323a54: mov    0xb0(%rsp),%rax
  0x000000011c323a5c: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323a66: mov    0x8(%rax),%eax
  0x000000011c323a69: shl    $0x3,%rax
  0x000000011c323a6d: cmp    0x5d8(%rdx),%rax
  0x000000011c323a74: jne    0x000000011c323a83
  0x000000011c323a76: addq   $0x1,0x5e0(%rdx)
  0x000000011c323a7e: jmpq   0x000000011c323ae9
  0x000000011c323a83: cmp    0x5e8(%rdx),%rax
  0x000000011c323a8a: jne    0x000000011c323a99
  0x000000011c323a8c: addq   $0x1,0x5f0(%rdx)
  0x000000011c323a94: jmpq   0x000000011c323ae9
  0x000000011c323a99: cmpq   $0x0,0x5d8(%rdx)
  0x000000011c323aa4: jne    0x000000011c323abd
  0x000000011c323aa6: mov    %rax,0x5d8(%rdx)
  0x000000011c323aad: movq   $0x1,0x5e0(%rdx)
  0x000000011c323ab8: jmpq   0x000000011c323ae9
  0x000000011c323abd: cmpq   $0x0,0x5e8(%rdx)
  0x000000011c323ac8: jne    0x000000011c323ae1
  0x000000011c323aca: mov    %rax,0x5e8(%rdx)
  0x000000011c323ad1: movq   $0x1,0x5f0(%rdx)
  0x000000011c323adc: jmpq   0x000000011c323ae9
  0x000000011c323ae1: addq   $0x1,0x5d0(%rdx)
  0x000000011c323ae9: movabs $0x112581020,%rdx  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323af3: mov    0xdc(%rdx),%esi
  0x000000011c323af9: add    $0x8,%esi
  0x000000011c323afc: mov    %esi,0xdc(%rdx)
  0x000000011c323b02: movabs $0x11233a5f8,%rdx  ;   {metadata({method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323b0c: and    $0x7ffff8,%esi
  0x000000011c323b12: cmp    $0x0,%esi
  0x000000011c323b15: je     0x000000011c3244de
  0x000000011c323b1b: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c323b25: mov    0x60(%r15),%rax
  0x000000011c323b29: lea    0x18(%rax),%rdi
  0x000000011c323b2d: cmp    0x70(%r15),%rdi
  0x000000011c323b31: ja     0x000000011c3244f5
  0x000000011c323b37: mov    %rdi,0x60(%r15)
  0x000000011c323b3b: mov    0xa8(%rdx),%rcx
  0x000000011c323b42: mov    %rcx,(%rax)
  0x000000011c323b45: mov    %rdx,%rcx
  0x000000011c323b48: shr    $0x3,%rcx
  0x000000011c323b4c: mov    %ecx,0x8(%rax)
  0x000000011c323b4f: xor    %rcx,%rcx
  0x000000011c323b52: mov    %ecx,0xc(%rax)
  0x000000011c323b55: xor    %rcx,%rcx
  0x000000011c323b58: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000011c323b5c: mov    0xb0(%rsp),%rdx
  0x000000011c323b64: mov    0x10(%rdx),%ecx
  0x000000011c323b67: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000011c323b6b: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000011c323b6f: mov    %rax,%rdx
  0x000000011c323b72: movabs $0x112581020,%rsi  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323b7c: addq   $0x1,0x108(%rsi)
  0x000000011c323b84: mov    %rcx,%rdx
  0x000000011c323b87: mov    $0x0,%ecx
  0x000000011c323b8c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x000000011c323b8f: mov    %rax,0xc0(%rsp)
  0x000000011c323b97: callq  0x000000011c24c0a0  ; OopMap{[184]=Oop [192]=Oop off=5468}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {optimized virtual_call}
  0x000000011c323b9c: mov    0xb8(%rsp),%rax
  0x000000011c323ba4: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323bae: addq   $0x1,0x600(%rdx)
  0x000000011c323bb6: mov    0xc0(%rsp),%rdx
  0x000000011c323bbe: mov    0xb8(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)

  0x000000011c323bc6: nop
  0x000000011c323bc7: callq  0x000000011c24c0a0  ; OopMap{[184]=Oop off=5516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)
                                                ;   {optimized virtual_call}
  0x000000011c323bcc: mov    0xb8(%rsp),%rax
  0x000000011c323bd4: jmpq   0x000000011c324666  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@424 (line 648)

  0x000000011c323bd9: nopl   0x0(%rax)
  0x000000011c323be0: jmpq   0x000000011c324511  ;   {no_reloc}
  0x000000011c323be5: add    %al,(%rax)
  0x000000011c323be7: add    %al,(%rax)
  0x000000011c323be9: add    %ch,%cl
  0x000000011c323beb: sub    $0x9,%al
  0x000000011c323bed: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)

  0x000000011c323bef: mov    %rax,%rdx
  0x000000011c323bf2: movabs $0x1125c2360,%rsi  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323bfc: addq   $0x1,0x510(%rsi)
  0x000000011c323c04: movabs $0x715aa3e58,%rdx  ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x000000011c323c0e: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)

  0x000000011c323c11: mov    %rax,0xc8(%rsp)
  0x000000011c323c19: nop
  0x000000011c323c1a: nop
  0x000000011c323c1b: nop
  0x000000011c323c1c: nop
  0x000000011c323c1d: nop
  0x000000011c323c1e: nop
  0x000000011c323c1f: callq  0x000000011c24c0a0  ; OopMap{[200]=Oop off=5604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)
                                                ;   {optimized virtual_call}
  0x000000011c323c24: mov    0xc8(%rsp),%rax
  0x000000011c323c2c: jmpq   0x000000011c324666  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@354 (line 643)

  0x000000011c323c31: mov    %esi,0xd8(%rsp)
  0x000000011c323c38: jmpq   0x000000011c324537  ;   {no_reloc}
  0x000000011c323c3d: add    %al,(%rax)
  0x000000011c323c3f: add    %al,(%rax)
  0x000000011c323c41: add    %ch,%cl
  0x000000011c323c43: cli    
  0x000000011c323c44: or     %al,(%rax)
  0x000000011c323c46: add    %dl,0x910e9(%rax)  ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {no_reloc}
  0x000000011c323c4c: add    %al,(%rax)
  0x000000011c323c4e: add    %al,(%rax)
  0x000000011c323c50: add    %al,(%rax)
  0x000000011c323c52: mov    %rax,0xe0(%rsp)
  0x000000011c323c5a: mov    0x60(%r15),%rax
  0x000000011c323c5e: lea    0x18(%rax),%rdi
  0x000000011c323c62: cmp    0x70(%r15),%rdi
  0x000000011c323c66: ja     0x000000011c324567
  0x000000011c323c6c: mov    %rdi,0x60(%r15)
  0x000000011c323c70: mov    0xa8(%rdx),%rcx
  0x000000011c323c77: mov    %rcx,(%rax)
  0x000000011c323c7a: mov    %rdx,%rcx
  0x000000011c323c7d: shr    $0x3,%rcx
  0x000000011c323c81: mov    %ecx,0x8(%rax)
  0x000000011c323c84: xor    %rcx,%rcx
  0x000000011c323c87: mov    %ecx,0xc(%rax)
  0x000000011c323c8a: xor    %rcx,%rcx
  0x000000011c323c8d: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)

  0x000000011c323c91: mov    %rax,%rbx
  0x000000011c323c94: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323c9e: addq   $0x1,0x428(%rdx)
  0x000000011c323ca6: movabs $0x11257ece8,%rbx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323cb0: mov    0xdc(%rbx),%edx
  0x000000011c323cb6: add    $0x8,%edx
  0x000000011c323cb9: mov    %edx,0xdc(%rbx)
  0x000000011c323cbf: movabs $0x112338f30,%rbx  ;   {metadata({method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323cc9: and    $0x7ffff8,%edx
  0x000000011c323ccf: cmp    $0x0,%edx
  0x000000011c323cd2: je     0x000000011c324574
  0x000000011c323cd8: mov    %rax,%rbx
  0x000000011c323cdb: movabs $0x11257ece8,%rdx  ;   {metadata(method data for {method} {0x0000000112338f30} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323ce5: addq   $0x1,0x108(%rdx)
  0x000000011c323ced: movabs $0x11257f080,%rbx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c323cf7: mov    0xdc(%rbx),%edx
  0x000000011c323cfd: add    $0x8,%edx
  0x000000011c323d00: mov    %edx,0xdc(%rbx)
  0x000000011c323d06: movabs $0x112335260,%rbx  ;   {metadata({method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c323d10: and    $0x7ffff8,%edx
  0x000000011c323d16: cmp    $0x0,%edx
  0x000000011c323d19: je     0x000000011c32458b
  0x000000011c323d1f: mov    %rax,%rbx
  0x000000011c323d22: movabs $0x11257f080,%rdx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c323d2c: addq   $0x1,0x108(%rdx)
  0x000000011c323d34: movabs $0x1124371c0,%rbx  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c323d3e: mov    0xdc(%rbx),%edx
  0x000000011c323d44: add    $0x8,%edx
  0x000000011c323d47: mov    %edx,0xdc(%rbx)
  0x000000011c323d4d: movabs $0x1122c0480,%rbx  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c323d57: and    $0x7ffff8,%edx
  0x000000011c323d5d: cmp    $0x0,%edx
  0x000000011c323d60: je     0x000000011c3245a2
  0x000000011c323d66: mov    $0x10,%ebx
  0x000000011c323d6b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c323d75: mov    %rax,%r11
  0x000000011c323d78: movslq %ebx,%rbx
  0x000000011c323d7b: mov    %rbx,%rdi
  0x000000011c323d7e: cmp    $0xffffff,%rbx
  0x000000011c323d85: ja     0x000000011c3245b9
  0x000000011c323d8b: movabs $0x17,%rsi
  0x000000011c323d95: lea    (%rsi,%rbx,2),%rsi
  0x000000011c323d99: and    $0xfffffffffffffff8,%rsi
  0x000000011c323d9d: mov    0x60(%r15),%rax
  0x000000011c323da1: lea    (%rax,%rsi,1),%rsi
  0x000000011c323da5: cmp    0x70(%r15),%rsi
  0x000000011c323da9: ja     0x000000011c3245b9
  0x000000011c323daf: mov    %rsi,0x60(%r15)
  0x000000011c323db3: sub    %rax,%rsi
  0x000000011c323db6: movq   $0x1,(%rax)
  0x000000011c323dbd: mov    %rdx,%rcx
  0x000000011c323dc0: shr    $0x3,%rcx
  0x000000011c323dc4: mov    %ecx,0x8(%rax)
  0x000000011c323dc7: mov    %ebx,0xc(%rax)
  0x000000011c323dca: sub    $0x10,%rsi
  0x000000011c323dce: je     0x000000011c323de5
  0x000000011c323dd4: xor    %rbx,%rbx
  0x000000011c323dd7: shr    $0x3,%rsi
  0x000000011c323ddb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c323de0: dec    %rsi
  0x000000011c323de3: jne    0x000000011c323ddb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x000000011c323de5: mov    %rax,%r10
  0x000000011c323de8: shr    $0x3,%r10
  0x000000011c323dec: mov    %r10d,0x10(%r11)
  0x000000011c323df0: mov    %r11,%rax
  0x000000011c323df3: shr    $0x9,%rax
  0x000000011c323df7: movabs $0x10c974000,%rdx
  0x000000011c323e01: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x000000011c323e05: mov    %r11,%rax
  0x000000011c323e08: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323e12: mov    0x8(%rax),%eax
  0x000000011c323e15: shl    $0x3,%rax
  0x000000011c323e19: cmp    0x440(%rdx),%rax
  0x000000011c323e20: jne    0x000000011c323e2f
  0x000000011c323e22: addq   $0x1,0x448(%rdx)
  0x000000011c323e2a: jmpq   0x000000011c323e95
  0x000000011c323e2f: cmp    0x450(%rdx),%rax
  0x000000011c323e36: jne    0x000000011c323e45
  0x000000011c323e38: addq   $0x1,0x458(%rdx)
  0x000000011c323e40: jmpq   0x000000011c323e95
  0x000000011c323e45: cmpq   $0x0,0x440(%rdx)
  0x000000011c323e50: jne    0x000000011c323e69
  0x000000011c323e52: mov    %rax,0x440(%rdx)
  0x000000011c323e59: movq   $0x1,0x448(%rdx)
  0x000000011c323e64: jmpq   0x000000011c323e95
  0x000000011c323e69: cmpq   $0x0,0x450(%rdx)
  0x000000011c323e74: jne    0x000000011c323e8d
  0x000000011c323e76: mov    %rax,0x450(%rdx)
  0x000000011c323e7d: movq   $0x1,0x458(%rdx)
  0x000000011c323e88: jmpq   0x000000011c323e95
  0x000000011c323e8d: addq   $0x1,0x438(%rdx)
  0x000000011c323e95: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323e9f: mov    0xdc(%rdx),%esi
  0x000000011c323ea5: add    $0x8,%esi
  0x000000011c323ea8: mov    %esi,0xdc(%rdx)
  0x000000011c323eae: movabs $0x112339248,%rdx  ;   {metadata({method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323eb8: and    $0x7ffff8,%esi
  0x000000011c323ebe: cmp    $0x0,%esi
  0x000000011c323ec1: je     0x000000011c3245c3
  0x000000011c323ec7: mov    %r11,%rax
  0x000000011c323eca: movabs $0x1124d9bd8,%rdx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323ed4: addq   $0x1,0x108(%rdx)
  0x000000011c323edc: movabs $0x715aa3ed8,%rdx  ;   {oop(&quot;malformed input around byte &quot;)}
  0x000000011c323ee6: mov    %r11,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)

  0x000000011c323ee9: mov    %r11,0xd0(%rsp)
  0x000000011c323ef1: nop
  0x000000011c323ef2: nop
  0x000000011c323ef3: nop
  0x000000011c323ef4: nop
  0x000000011c323ef5: nop
  0x000000011c323ef6: nop
  0x000000011c323ef7: callq  0x000000011c24c0a0  ; OopMap{[208]=Oop [224]=Oop off=6332}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {optimized virtual_call}
  0x000000011c323efc: mov    0xd0(%rsp),%rax
  0x000000011c323f04: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c323f0e: mov    0x8(%rax),%eax
  0x000000011c323f11: shl    $0x3,%rax
  0x000000011c323f15: cmp    0x470(%rdx),%rax
  0x000000011c323f1c: jne    0x000000011c323f2b
  0x000000011c323f1e: addq   $0x1,0x478(%rdx)
  0x000000011c323f26: jmpq   0x000000011c323f91
  0x000000011c323f2b: cmp    0x480(%rdx),%rax
  0x000000011c323f32: jne    0x000000011c323f41
  0x000000011c323f34: addq   $0x1,0x488(%rdx)
  0x000000011c323f3c: jmpq   0x000000011c323f91
  0x000000011c323f41: cmpq   $0x0,0x470(%rdx)
  0x000000011c323f4c: jne    0x000000011c323f65
  0x000000011c323f4e: mov    %rax,0x470(%rdx)
  0x000000011c323f55: movq   $0x1,0x478(%rdx)
  0x000000011c323f60: jmpq   0x000000011c323f91
  0x000000011c323f65: cmpq   $0x0,0x480(%rdx)
  0x000000011c323f70: jne    0x000000011c323f89
  0x000000011c323f72: mov    %rax,0x480(%rdx)
  0x000000011c323f79: movq   $0x1,0x488(%rdx)
  0x000000011c323f84: jmpq   0x000000011c323f91
  0x000000011c323f89: addq   $0x1,0x468(%rdx)
  0x000000011c323f91: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323f9b: mov    0xdc(%rdx),%esi
  0x000000011c323fa1: add    $0x8,%esi
  0x000000011c323fa4: mov    %esi,0xdc(%rdx)
  0x000000011c323faa: movabs $0x112339708,%rdx  ;   {metadata({method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323fb4: and    $0x7ffff8,%esi
  0x000000011c323fba: cmp    $0x0,%esi
  0x000000011c323fbd: je     0x000000011c3245da
  0x000000011c323fc3: mov    0xd0(%rsp),%rax
  0x000000011c323fcb: movabs $0x11257fe50,%rdx  ;   {metadata(method data for {method} {0x0000000112339708} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c323fd5: addq   $0x1,0x108(%rdx)
  0x000000011c323fdd: mov    0xd8(%rsp),%edx
  0x000000011c323fe4: mov    0xd0(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)

  0x000000011c323fec: nop
  0x000000011c323fed: nop
  0x000000011c323fee: nop
  0x000000011c323fef: callq  0x000000011c24c0a0  ; OopMap{[208]=Oop [224]=Oop off=6580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {optimized virtual_call}
  0x000000011c323ff4: mov    0xd0(%rsp),%rax
  0x000000011c323ffc: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c324006: mov    0x8(%rax),%eax
  0x000000011c324009: shl    $0x3,%rax
  0x000000011c32400d: cmp    0x4a0(%rdx),%rax
  0x000000011c324014: jne    0x000000011c324023
  0x000000011c324016: addq   $0x1,0x4a8(%rdx)
  0x000000011c32401e: jmpq   0x000000011c324089
  0x000000011c324023: cmp    0x4b0(%rdx),%rax
  0x000000011c32402a: jne    0x000000011c324039
  0x000000011c32402c: addq   $0x1,0x4b8(%rdx)
  0x000000011c324034: jmpq   0x000000011c324089
  0x000000011c324039: cmpq   $0x0,0x4a0(%rdx)
  0x000000011c324044: jne    0x000000011c32405d
  0x000000011c324046: mov    %rax,0x4a0(%rdx)
  0x000000011c32404d: movq   $0x1,0x4a8(%rdx)
  0x000000011c324058: jmpq   0x000000011c324089
  0x000000011c32405d: cmpq   $0x0,0x4b0(%rdx)
  0x000000011c324068: jne    0x000000011c324081
  0x000000011c32406a: mov    %rax,0x4b0(%rdx)
  0x000000011c324071: movq   $0x1,0x4b8(%rdx)
  0x000000011c32407c: jmpq   0x000000011c324089
  0x000000011c324081: addq   $0x1,0x498(%rdx)
  0x000000011c324089: movabs $0x112581020,%rdx  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c324093: mov    0xdc(%rdx),%esi
  0x000000011c324099: add    $0x8,%esi
  0x000000011c32409c: mov    %esi,0xdc(%rdx)
  0x000000011c3240a2: movabs $0x11233a5f8,%rdx  ;   {metadata({method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3240ac: and    $0x7ffff8,%esi
  0x000000011c3240b2: cmp    $0x0,%esi
  0x000000011c3240b5: je     0x000000011c3245f1
  0x000000011c3240bb: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c3240c5: mov    0x60(%r15),%rax
  0x000000011c3240c9: lea    0x18(%rax),%rdi
  0x000000011c3240cd: cmp    0x70(%r15),%rdi
  0x000000011c3240d1: ja     0x000000011c324608
  0x000000011c3240d7: mov    %rdi,0x60(%r15)
  0x000000011c3240db: mov    0xa8(%rdx),%rcx
  0x000000011c3240e2: mov    %rcx,(%rax)
  0x000000011c3240e5: mov    %rdx,%rcx
  0x000000011c3240e8: shr    $0x3,%rcx
  0x000000011c3240ec: mov    %ecx,0x8(%rax)
  0x000000011c3240ef: xor    %rcx,%rcx
  0x000000011c3240f2: mov    %ecx,0xc(%rax)
  0x000000011c3240f5: xor    %rcx,%rcx
  0x000000011c3240f8: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000000011c3240fc: mov    0xd0(%rsp),%rdx
  0x000000011c324104: mov    0x10(%rdx),%ecx
  0x000000011c324107: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000000011c32410b: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000000011c32410f: mov    %rax,%rdx
  0x000000011c324112: movabs $0x112581020,%rsi  ;   {metadata(method data for {method} {0x000000011233a5f8} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c32411c: addq   $0x1,0x108(%rsi)
  0x000000011c324124: mov    %rcx,%rdx
  0x000000011c324127: mov    $0x0,%ecx
  0x000000011c32412c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x000000011c32412f: mov    %rax,0xe8(%rsp)
  0x000000011c324137: callq  0x000000011c24c0a0  ; OopMap{[224]=Oop [232]=Oop off=6908}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {optimized virtual_call}
  0x000000011c32413c: mov    0xe0(%rsp),%rax
  0x000000011c324144: movabs $0x1125c2360,%rdx  ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32414e: addq   $0x1,0x4c8(%rdx)
  0x000000011c324156: mov    0xe8(%rsp),%rdx
  0x000000011c32415e: mov    0xe0(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)

  0x000000011c324166: nop
  0x000000011c324167: callq  0x000000011c24c0a0  ; OopMap{[224]=Oop off=6956}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)
                                                ;   {optimized virtual_call}
  0x000000011c32416c: mov    0xe0(%rsp),%rax
  0x000000011c324174: jmpq   0x000000011c324666  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@310 (line 634)

  0x000000011c324179: nopl   0x0(%rax)
  0x000000011c324180: jmpq   0x000000011c324624  ;   {no_reloc}
  0x000000011c324185: add    %al,(%rax)
  0x000000011c324187: add    %al,(%rax)
  0x000000011c324189: add    %ch,%cl
  0x000000011c32418b: lahf   
  0x000000011c32418c: add    $0x0,%al
  0x000000011c32418e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)

  0x000000011c324191: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000001125c1b20} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c324194: (bad)  
  0x000000011c324195: and    0x1(%rdx,%rdx,1),%ebx
  0x000000011c324199: add    %al,(%rax)
  0x000000011c32419b: add    %cl,-0x7d(%rax)
  0x000000011c32419e: xchg   %bh,%al
  0x000000011c3241a0: add    (%rax),%eax
  0x000000011c3241a2: add    %al,(%rcx)
  0x000000011c3241a4: movabs $0x715aa3e58,%rdx  ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x000000011c3241ae: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)

  0x000000011c3241b1: mov    %rax,0xf0(%rsp)
  0x000000011c3241b9: nop
  0x000000011c3241ba: nop
  0x000000011c3241bb: nop
  0x000000011c3241bc: nop
  0x000000011c3241bd: nop
  0x000000011c3241be: nop
  0x000000011c3241bf: callq  0x000000011c24c0a0  ; OopMap{[240]=Oop off=7044}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)
                                                ;   {optimized virtual_call}
  0x000000011c3241c4: mov    0xf0(%rsp),%rax
  0x000000011c3241cc: jmpq   0x000000011c324666
  0x000000011c3241d1: mov    %rdi,0x8(%rsp)
  0x000000011c3241d6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3241de: callq  0x000000011c306120  ; OopMap{rsi=Oop off=7075}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 589)
                                                ;   {runtime_call}
  0x000000011c3241e3: jmpq   0x000000011c322681
  0x000000011c3241e8: callq  0x000000011c303f00  ; OopMap{rsi=Oop off=7085}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x000000011c3241ed: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=7090}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x000000011c3241f2: mov    %r9,(%rsp)
  0x000000011c3241f6: callq  0x000000011c303cc0  ; OopMap{r9=Oop off=7099}
                                                ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)
                                                ;   {runtime_call}
  0x000000011c3241fb: callq  0x000000011c301ac0  ; OopMap{r9=Oop r8=Oop off=7104}
                                                ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)
                                                ;   {runtime_call}
  0x000000011c324200: callq  0x000000011c301ac0  ; OopMap{r9=Oop r8=Oop off=7109}
                                                ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ;   {runtime_call}
  0x000000011c324205: callq  0x000000011c302b20  ; OopMap{r9=Oop r8=Oop off=7114}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)
                                                ;   {runtime_call}
  0x000000011c32420a: jmpq   0x000000011c3229bc
  0x000000011c32420f: callq  0x000000011c302b20  ; OopMap{r9=Oop r8=Oop off=7124}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)
                                                ;   {runtime_call}
  0x000000011c324214: jmpq   0x000000011c322a57
  0x000000011c324219: callq  0x000000011c302b20  ; OopMap{r9=Oop off=7134}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)
                                                ;   {runtime_call}
  0x000000011c32421e: jmpq   0x000000011c322b10
  0x000000011c324223: callq  0x000000011c302b20  ; OopMap{r9=Oop r8=Oop off=7144}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)
                                                ;   {runtime_call}
  0x000000011c324228: jmpq   0x000000011c322b8d
  0x000000011c32422d: callq  0x000000011c303f00  ; OopMap{r9=Oop rdx=Oop [128]=Oop off=7154}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {runtime_call}
  0x000000011c324232: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7159}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x000000011c324237: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7164}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x000000011c32423c: mov    %rsi,(%rsp)
  0x000000011c324240: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7173}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x000000011c324245: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7178}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x000000011c32424a: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7183}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x000000011c32424f: mov    %rdx,(%rsp)
  0x000000011c324253: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7192}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x000000011c324258: mov    %rdx,0x8(%rsp)
  0x000000011c32425d: movq   $0x83,(%rsp)
  0x000000011c324265: callq  0x000000011c306120  ; OopMap{rbx=Oop rdi=Oop off=7210}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)
                                                ;   {runtime_call}
  0x000000011c32426a: jmpq   0x000000011c322cc4
  0x000000011c32426f: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7220}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x000000011c324274: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7225}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x000000011c324279: mov    %rsi,(%rsp)
  0x000000011c32427d: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7234}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x000000011c324282: mov    %rcx,(%rsp)
  0x000000011c324286: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7243}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)
                                                ;   {runtime_call}
  0x000000011c32428b: mov    %rcx,(%rsp)
  0x000000011c32428f: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7252}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)
                                                ;   {runtime_call}
  0x000000011c324294: mov    %r9,(%rsp)
  0x000000011c324298: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7261}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)
                                                ;   {runtime_call}
  0x000000011c32429d: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7266}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x000000011c3242a2: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7271}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x000000011c3242a7: mov    %r8,(%rsp)
  0x000000011c3242ab: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7280}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x000000011c3242b0: mov    %rdx,0x8(%rsp)
  0x000000011c3242b5: movq   $0x1ca,(%rsp)
  0x000000011c3242bd: callq  0x000000011c306120  ; OopMap{rbx=Oop rdi=Oop off=7298}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)
                                                ;   {runtime_call}
  0x000000011c3242c2: jmpq   0x000000011c322fb6
  0x000000011c3242c7: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7308}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x000000011c3242cc: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7313}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x000000011c3242d1: mov    %r8,(%rsp)
  0x000000011c3242d5: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7322}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x000000011c3242da: mov    %rdx,0x8(%rsp)
  0x000000011c3242df: movq   $0x14d,(%rsp)
  0x000000011c3242e7: callq  0x000000011c306120  ; OopMap{rbx=Oop rdi=Oop off=7340}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)
                                                ;   {runtime_call}
  0x000000011c3242ec: jmpq   0x000000011c32302a
  0x000000011c3242f1: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7350}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x000000011c3242f6: callq  0x000000011c301ac0  ; OopMap{rbx=Oop rdi=Oop off=7355}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x000000011c3242fb: mov    %r8,(%rsp)
  0x000000011c3242ff: callq  0x000000011c274080  ; OopMap{rbx=Oop rdi=Oop off=7364}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x000000011c324304: mov    %rdx,0x8(%rsp)
  0x000000011c324309: movq   $0xf1,(%rsp)
  0x000000011c324311: callq  0x000000011c306120  ; OopMap{rbx=Oop rdi=Oop off=7382}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)
                                                ;   {runtime_call}
  0x000000011c324316: jmpq   0x000000011c323099
  0x000000011c32431b: mov    %rdx,%rdx
  0x000000011c32431e: callq  0x000000011c302220  ; OopMap{rbx=Oop off=7395}
                                                ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)
                                                ;   {runtime_call}
  0x000000011c324323: jmpq   0x000000011c323104
  0x000000011c324328: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c324332: mov    $0xa050f00,%eax
  0x000000011c324337: callq  0x000000011c305120  ; OopMap{off=7420}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x000000011c32433c: jmpq   0x000000011c323150
  0x000000011c324341: mov    %rdx,%rdx
  0x000000011c324344: callq  0x000000011c301f60  ; OopMap{off=7433}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x000000011c324349: jmpq   0x000000011c32315f
  0x000000011c32434e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c324358: mov    $0xa050f00,%eax
  0x000000011c32435d: callq  0x000000011c305120  ; OopMap{rax=Oop off=7458}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x000000011c324362: jmpq   0x000000011c323160
  0x000000011c324367: mov    %rdx,%rdx
  0x000000011c32436a: callq  0x000000011c302220  ; OopMap{[160]=Oop off=7471}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x000000011c32436f: jmpq   0x000000011c3231a9
  0x000000011c324374: mov    %rbx,0x8(%rsp)
  0x000000011c324379: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c324381: callq  0x000000011c306120  ; OopMap{[160]=Oop rax=Oop off=7494}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000011c324386: jmpq   0x000000011c3231f0
  0x000000011c32438b: mov    %rbx,0x8(%rsp)
  0x000000011c324390: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c324398: callq  0x000000011c306120  ; OopMap{[160]=Oop rax=Oop off=7517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000011c32439d: jmpq   0x000000011c323237
  0x000000011c3243a2: mov    %rbx,0x8(%rsp)
  0x000000011c3243a7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3243af: callq  0x000000011c306120  ; OopMap{[160]=Oop rax=Oop off=7540}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000011c3243b4: jmpq   0x000000011c32327e
  0x000000011c3243b9: callq  0x000000011c302b20  ; OopMap{[160]=Oop r11=Oop off=7550}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x000000011c3243be: jmpq   0x000000011c3232fd
  0x000000011c3243c3: mov    %rdx,0x8(%rsp)
  0x000000011c3243c8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3243d0: callq  0x000000011c306120  ; OopMap{[160]=Oop r11=Oop off=7573}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {runtime_call}
  0x000000011c3243d5: jmpq   0x000000011c3233df
  0x000000011c3243da: mov    %rdx,0x8(%rsp)
  0x000000011c3243df: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3243e7: callq  0x000000011c306120  ; OopMap{[144]=Oop [160]=Oop off=7596}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {runtime_call}
  0x000000011c3243ec: jmpq   0x000000011c3234db
  0x000000011c3243f1: mov    %rdx,0x8(%rsp)
  0x000000011c3243f6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3243fe: callq  0x000000011c306120  ; OopMap{[144]=Oop [160]=Oop off=7619}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x000000011c324403: jmpq   0x000000011c3235d3
  0x000000011c324408: mov    %rdx,%rdx
  0x000000011c32440b: callq  0x000000011c302220  ; OopMap{[144]=Oop [160]=Oop off=7632}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x000000011c324410: jmpq   0x000000011c323614
  0x000000011c324415: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c32441f: mov    $0xa050f00,%eax
  0x000000011c324424: callq  0x000000011c305120  ; OopMap{off=7657}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x000000011c324429: jmpq   0x000000011c323698
  0x000000011c32442e: mov    %rdx,%rdx
  0x000000011c324431: callq  0x000000011c301f60  ; OopMap{off=7670}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x000000011c324436: jmpq   0x000000011c3236a7
  0x000000011c32443b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c324445: mov    $0xa050f00,%eax
  0x000000011c32444a: callq  0x000000011c305120  ; OopMap{rax=Oop off=7695}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x000000011c32444f: jmpq   0x000000011c3236a8
  0x000000011c324454: mov    %rdx,%rdx
  0x000000011c324457: callq  0x000000011c302220  ; OopMap{[184]=Oop off=7708}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x000000011c32445c: jmpq   0x000000011c3236f1
  0x000000011c324461: mov    %rbx,0x8(%rsp)
  0x000000011c324466: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32446e: callq  0x000000011c306120  ; OopMap{[184]=Oop rax=Oop off=7731}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000011c324473: jmpq   0x000000011c323738
  0x000000011c324478: mov    %rbx,0x8(%rsp)
  0x000000011c32447d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c324485: callq  0x000000011c306120  ; OopMap{[184]=Oop rax=Oop off=7754}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000011c32448a: jmpq   0x000000011c32377f
  0x000000011c32448f: mov    %rbx,0x8(%rsp)
  0x000000011c324494: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32449c: callq  0x000000011c306120  ; OopMap{[184]=Oop rax=Oop off=7777}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000011c3244a1: jmpq   0x000000011c3237c6
  0x000000011c3244a6: callq  0x000000011c302b20  ; OopMap{[184]=Oop r13=Oop off=7787}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x000000011c3244ab: jmpq   0x000000011c323845
  0x000000011c3244b0: mov    %rdx,0x8(%rsp)
  0x000000011c3244b5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3244bd: callq  0x000000011c306120  ; OopMap{[184]=Oop r13=Oop off=7810}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {runtime_call}
  0x000000011c3244c2: jmpq   0x000000011c323927
  0x000000011c3244c7: mov    %rdx,0x8(%rsp)
  0x000000011c3244cc: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3244d4: callq  0x000000011c306120  ; OopMap{[176]=Oop [184]=Oop off=7833}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {runtime_call}
  0x000000011c3244d9: jmpq   0x000000011c323a23
  0x000000011c3244de: mov    %rdx,0x8(%rsp)
  0x000000011c3244e3: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3244eb: callq  0x000000011c306120  ; OopMap{[176]=Oop [184]=Oop off=7856}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x000000011c3244f0: jmpq   0x000000011c323b1b
  0x000000011c3244f5: mov    %rdx,%rdx
  0x000000011c3244f8: callq  0x000000011c302220  ; OopMap{[176]=Oop [184]=Oop off=7869}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x000000011c3244fd: jmpq   0x000000011c323b5c
  0x000000011c324502: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c32450c: mov    $0xa050f00,%eax
  0x000000011c324511: callq  0x000000011c305120  ; OopMap{off=7894}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x000000011c324516: jmpq   0x000000011c323be0
  0x000000011c32451b: mov    %rdx,%rdx
  0x000000011c32451e: callq  0x000000011c301f60  ; OopMap{off=7907}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x000000011c324523: jmpq   0x000000011c323bef
  0x000000011c324528: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c324532: mov    $0xa050f00,%eax
  0x000000011c324537: callq  0x000000011c305120  ; OopMap{off=7932}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x000000011c32453c: jmpq   0x000000011c323c38
  0x000000011c324541: mov    %rdx,%rdx
  0x000000011c324544: callq  0x000000011c301f60  ; OopMap{off=7945}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x000000011c324549: jmpq   0x000000011c323c47
  0x000000011c32454e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c324558: mov    $0xa050f00,%eax
  0x000000011c32455d: callq  0x000000011c305120  ; OopMap{rax=Oop off=7970}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x000000011c324562: jmpq   0x000000011c323c48
  0x000000011c324567: mov    %rdx,%rdx
  0x000000011c32456a: callq  0x000000011c302220  ; OopMap{[224]=Oop off=7983}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x000000011c32456f: jmpq   0x000000011c323c91
  0x000000011c324574: mov    %rbx,0x8(%rsp)
  0x000000011c324579: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c324581: callq  0x000000011c306120  ; OopMap{[224]=Oop rax=Oop off=8006}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000011c324586: jmpq   0x000000011c323cd8
  0x000000011c32458b: mov    %rbx,0x8(%rsp)
  0x000000011c324590: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c324598: callq  0x000000011c306120  ; OopMap{[224]=Oop rax=Oop off=8029}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000011c32459d: jmpq   0x000000011c323d1f
  0x000000011c3245a2: mov    %rbx,0x8(%rsp)
  0x000000011c3245a7: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3245af: callq  0x000000011c306120  ; OopMap{[224]=Oop rax=Oop off=8052}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000011c3245b4: jmpq   0x000000011c323d66
  0x000000011c3245b9: callq  0x000000011c302b20  ; OopMap{[224]=Oop r11=Oop off=8062}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x000000011c3245be: jmpq   0x000000011c323de5
  0x000000011c3245c3: mov    %rdx,0x8(%rsp)
  0x000000011c3245c8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3245d0: callq  0x000000011c306120  ; OopMap{[224]=Oop r11=Oop off=8085}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {runtime_call}
  0x000000011c3245d5: jmpq   0x000000011c323ec7
  0x000000011c3245da: mov    %rdx,0x8(%rsp)
  0x000000011c3245df: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3245e7: callq  0x000000011c306120  ; OopMap{[208]=Oop [224]=Oop off=8108}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {runtime_call}
  0x000000011c3245ec: jmpq   0x000000011c323fc3
  0x000000011c3245f1: mov    %rdx,0x8(%rsp)
  0x000000011c3245f6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3245fe: callq  0x000000011c306120  ; OopMap{[208]=Oop [224]=Oop off=8131}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x000000011c324603: jmpq   0x000000011c3240bb
  0x000000011c324608: mov    %rdx,%rdx
  0x000000011c32460b: callq  0x000000011c302220  ; OopMap{[208]=Oop [224]=Oop off=8144}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x000000011c324610: jmpq   0x000000011c3240fc
  0x000000011c324615: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c32461f: mov    $0xa050f00,%eax
  0x000000011c324624: callq  0x000000011c305120  ; OopMap{off=8169}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x000000011c324629: jmpq   0x000000011c324180
  0x000000011c32462e: mov    %rdx,%rdx
  0x000000011c324631: callq  0x000000011c301f60  ; OopMap{off=8182}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x000000011c324636: jmpq   0x000000011c32418f
  0x000000011c32463b: nop
  0x000000011c32463c: nop
  0x000000011c32463d: mov    0x2a8(%r15),%rax
  0x000000011c324644: movabs $0x0,%r10
  0x000000011c32464e: mov    %r10,0x2a8(%r15)
  0x000000011c324655: movabs $0x0,%r10
  0x000000011c32465f: mov    %r10,0x2b0(%r15)
  0x000000011c324666: add    $0x100,%rsp
  0x000000011c32466d: pop    %rbp
  0x000000011c32466e: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c324673: hlt    
  0x000000011c324674: hlt    
  0x000000011c324675: hlt    
  0x000000011c324676: hlt    
  0x000000011c324677: hlt    
  0x000000011c324678: hlt    
  0x000000011c324679: hlt    
  0x000000011c32467a: hlt    
  0x000000011c32467b: hlt    
  0x000000011c32467c: hlt    
  0x000000011c32467d: hlt    
  0x000000011c32467e: hlt    
  0x000000011c32467f: hlt    
[Stub Code]
  0x000000011c324680: nop                       ;   {no_reloc}
  0x000000011c324681: nop
  0x000000011c324682: nop
  0x000000011c324683: nop
  0x000000011c324684: nop
  0x000000011c324685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32468f: jmpq   0x000000011c32468f  ;   {runtime_call}
  0x000000011c324694: nop
  0x000000011c324695: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32469f: jmpq   0x000000011c32469f  ;   {runtime_call}
  0x000000011c3246a4: nop
  0x000000011c3246a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3246af: jmpq   0x000000011c3246af  ;   {runtime_call}
  0x000000011c3246b4: nop
  0x000000011c3246b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3246bf: jmpq   0x000000011c3246bf  ;   {runtime_call}
  0x000000011c3246c4: nop
  0x000000011c3246c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3246cf: jmpq   0x000000011c3246cf  ;   {runtime_call}
  0x000000011c3246d4: nop
  0x000000011c3246d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3246df: jmpq   0x000000011c3246df  ;   {runtime_call}
  0x000000011c3246e4: nop
  0x000000011c3246e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3246ef: jmpq   0x000000011c3246ef  ;   {runtime_call}
  0x000000011c3246f4: nop
  0x000000011c3246f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3246ff: jmpq   0x000000011c3246ff  ;   {runtime_call}
  0x000000011c324704: nop
  0x000000011c324705: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32470f: jmpq   0x000000011c32470f  ;   {runtime_call}
  0x000000011c324714: nop
  0x000000011c324715: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32471f: jmpq   0x000000011c32471f  ;   {runtime_call}
  0x000000011c324724: nop
  0x000000011c324725: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32472f: jmpq   0x000000011c32472f  ;   {runtime_call}
  0x000000011c324734: nop
  0x000000011c324735: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32473f: jmpq   0x000000011c32473f  ;   {runtime_call}
  0x000000011c324744: nop
  0x000000011c324745: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32474f: jmpq   0x000000011c32474f  ;   {runtime_call}
  0x000000011c324754: nop
  0x000000011c324755: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32475f: jmpq   0x000000011c32475f  ;   {runtime_call}
  0x000000011c324764: nop
  0x000000011c324765: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32476f: jmpq   0x000000011c32476f  ;   {runtime_call}
  0x000000011c324774: nop
  0x000000011c324775: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32477f: jmpq   0x000000011c32477f  ;   {runtime_call}
  0x000000011c324784: nop
  0x000000011c324785: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32478f: jmpq   0x000000011c32478f  ;   {runtime_call}
[Exception Handler]
  0x000000011c324794: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c324799: mov    %rsp,-0x28(%rsp)
  0x000000011c32479e: sub    $0x80,%rsp
  0x000000011c3247a5: mov    %rax,0x78(%rsp)
  0x000000011c3247aa: mov    %rcx,0x70(%rsp)
  0x000000011c3247af: mov    %rdx,0x68(%rsp)
  0x000000011c3247b4: mov    %rbx,0x60(%rsp)
  0x000000011c3247b9: mov    %rbp,0x50(%rsp)
  0x000000011c3247be: mov    %rsi,0x48(%rsp)
  0x000000011c3247c3: mov    %rdi,0x40(%rsp)
  0x000000011c3247c8: mov    %r8,0x38(%rsp)
  0x000000011c3247cd: mov    %r9,0x30(%rsp)
  0x000000011c3247d2: mov    %r10,0x28(%rsp)
  0x000000011c3247d7: mov    %r11,0x20(%rsp)
  0x000000011c3247dc: mov    %r12,0x18(%rsp)
  0x000000011c3247e1: mov    %r13,0x10(%rsp)
  0x000000011c3247e6: mov    %r14,0x8(%rsp)
  0x000000011c3247eb: mov    %r15,(%rsp)
  0x000000011c3247ef: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3247f9: movabs $0x11c324799,%rsi  ;   {internal_word}
  0x000000011c324803: mov    %rsp,%rdx
  0x000000011c324806: and    $0xfffffffffffffff0,%rsp
  0x000000011c32480a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32480f: hlt    
[Deopt Handler Code]
  0x000000011c324810: movabs $0x11c324810,%r10  ;   {section_word}
  0x000000011c32481a: push   %r10
  0x000000011c32481c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c324821: hlt    
  0x000000011c324822: hlt    
  0x000000011c324823: hlt    
  0x000000011c324824: hlt    
  0x000000011c324825: hlt    
  0x000000011c324826: hlt    
  0x000000011c324827: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x000000011c322640' size='15216' address='0x000000011c322250' relocation_offset='296' insts_offset='1008' stub_offset='9264' scopes_data_offset='9784' scopes_pcs_offset='12032' dependencies_offset='15072' nul_chk_table_offset='15088' oops_offset='9688' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='601' backedge_count='8585' iicount='601' stamp='1.163'/>
<writer thread='42243'/>
<task_queued compile_id='41' method='java/io/DataInputStream readShort ()S' bytes='40' count='512' iicount='512' level='3' stamp='1.163' comment='tiered' hot_count='512'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c325dd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;
  # this:     rsi:rsi   = &apos;java/io/DataInputStream&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x000000011c325f80: mov    0x8(%rsi),%r10d
  0x000000011c325f84: shl    $0x3,%r10
  0x000000011c325f88: cmp    %rax,%r10
  0x000000011c325f8b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c325f91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c325f9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c325fa0: mov    %eax,-0x14000(%rsp)
  0x000000011c325fa7: push   %rbp
  0x000000011c325fa8: sub    $0x70,%rsp
  0x000000011c325fac: mov    %rsi,0x38(%rsp)
  0x000000011c325fb1: mov    %rdx,0x48(%rsp)
  0x000000011c325fb6: mov    %ecx,0x40(%rsp)
  0x000000011c325fba: mov    %r8d,0x34(%rsp)
  0x000000011c325fbf: movabs $0x1125c2de0,%rdi  ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c325fc9: mov    0xdc(%rdi),%ebx
  0x000000011c325fcf: add    $0x8,%ebx
  0x000000011c325fd2: mov    %ebx,0xdc(%rdi)
  0x000000011c325fd8: movabs $0x1125c0df0,%rdi  ;   {metadata({method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c325fe2: and    $0x1ff8,%ebx
  0x000000011c325fe8: cmp    $0x0,%ebx
  0x000000011c325feb: je     0x000000011c326266  ;*iload_3
                                                ; - java.io.DataInputStream::readFully@0 (line 191)

  0x000000011c325ff1: cmp    $0x0,%r8d
  0x000000011c325ff5: movabs $0x1125c2de0,%rdi  ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c325fff: movabs $0x108,%rbx
  0x000000011c326009: jge    0x000000011c326019
  0x000000011c32600f: movabs $0x118,%rbx
  0x000000011c326019: mov    (%rdi,%rbx,1),%rax
  0x000000011c32601d: lea    0x1(%rax),%rax
  0x000000011c326021: mov    %rax,(%rdi,%rbx,1)
  0x000000011c326025: jl     0x000000011c326226  ;*ifge
                                                ; - java.io.DataInputStream::readFully@1 (line 191)

  0x000000011c32602b: mov    $0x0,%edi
  0x000000011c326030: jmpq   0x000000011c32619f  ;*iload
                                                ; - java.io.DataInputStream::readFully@15 (line 194)

  0x000000011c326035: data32 xchg %ax,%ax
  0x000000011c326038: mov    0xc(%rsi),%ebx
  0x000000011c32603b: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.DataInputStream::readFully@22 (line 195)

  0x000000011c32603f: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x000000011c32627d
  0x000000011c326042: mov    %rbx,%rax
  0x000000011c326045: movabs $0x1125c2de0,%r9   ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32604f: mov    0x8(%rax),%eax
  0x000000011c326052: shl    $0x3,%rax
  0x000000011c326056: cmp    0x160(%r9),%rax
  0x000000011c32605d: jne    0x000000011c32606c
  0x000000011c32605f: addq   $0x1,0x168(%r9)
  0x000000011c326067: jmpq   0x000000011c3260d2
  0x000000011c32606c: cmp    0x170(%r9),%rax
  0x000000011c326073: jne    0x000000011c326082
  0x000000011c326075: addq   $0x1,0x178(%r9)
  0x000000011c32607d: jmpq   0x000000011c3260d2
  0x000000011c326082: cmpq   $0x0,0x160(%r9)
  0x000000011c32608d: jne    0x000000011c3260a6
  0x000000011c32608f: mov    %rax,0x160(%r9)
  0x000000011c326096: movq   $0x1,0x168(%r9)
  0x000000011c3260a1: jmpq   0x000000011c3260d2
  0x000000011c3260a6: cmpq   $0x0,0x170(%r9)
  0x000000011c3260b1: jne    0x000000011c3260ca
  0x000000011c3260b3: mov    %rax,0x170(%r9)
  0x000000011c3260ba: movq   $0x1,0x178(%r9)
  0x000000011c3260c5: jmpq   0x000000011c3260d2
  0x000000011c3260ca: addq   $0x1,0x158(%r9)
  0x000000011c3260d2: mov    %rdi,%rax
  0x000000011c3260d5: add    %ecx,%eax
  0x000000011c3260d7: mov    %r8,%r9
  0x000000011c3260da: sub    %edi,%r9d
  0x000000011c3260dd: mov    %rdx,%r11
  0x000000011c3260e0: mov    %r11,%rdx
  0x000000011c3260e3: mov    %rax,%rcx
  0x000000011c3260e6: mov    %r9,%r8
  0x000000011c3260e9: mov    %rbx,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)

  0x000000011c3260ec: mov    %edi,0x30(%rsp)
  0x000000011c3260f0: nop
  0x000000011c3260f1: nop
  0x000000011c3260f2: nop
  0x000000011c3260f3: nop
  0x000000011c3260f4: nop
  0x000000011c3260f5: movabs $0xffffffffffffffff,%rax
  0x000000011c3260ff: callq  0x000000011c24c2e0  ; OopMap{[72]=Oop [56]=Oop off=388}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {virtual_call}
  0x000000011c326104: cmp    $0x0,%eax
  0x000000011c326107: movabs $0x1125c2de0,%rdx  ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c326111: movabs $0x188,%rsi
  0x000000011c32611b: jge    0x000000011c32612b
  0x000000011c326121: movabs $0x198,%rsi
  0x000000011c32612b: mov    (%rdx,%rsi,1),%rdi
  0x000000011c32612f: lea    0x1(%rdi),%rdi
  0x000000011c326133: mov    %rdi,(%rdx,%rsi,1)
  0x000000011c326137: jl     0x000000011c3261e4  ;*ifge
                                                ; - java.io.DataInputStream::readFully@41 (line 196)

  0x000000011c32613d: add    0x30(%rsp),%eax
  0x000000011c326141: movabs $0x1125c2de0,%rdx  ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32614b: mov    0xe0(%rdx),%esi
  0x000000011c326151: add    $0x8,%esi
  0x000000011c326154: mov    %esi,0xe0(%rdx)
  0x000000011c32615a: movabs $0x1125c0df0,%rdx  ;   {metadata({method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c326164: and    $0xfff8,%esi
  0x000000011c32616a: cmp    $0x0,%esi
  0x000000011c32616d: je     0x000000011c326282  ; OopMap{[72]=Oop [56]=Oop off=499}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x000000011c326173: test   %eax,-0xf83f079(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c326179: movabs $0x1125c2de0,%rdx  ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c326183: incl   0x1b8(%rdx)
  0x000000011c326189: mov    %rax,%rdi          ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x000000011c32618c: mov    0x34(%rsp),%r8d
  0x000000011c326191: mov    0x40(%rsp),%ecx
  0x000000011c326195: mov    0x48(%rsp),%rdx
  0x000000011c32619a: mov    0x38(%rsp),%rsi
  0x000000011c32619f: cmp    %r8d,%edi
  0x000000011c3261a2: movabs $0x1125c2de0,%rbx  ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3261ac: movabs $0x138,%rax
  0x000000011c3261b6: jge    0x000000011c3261c6
  0x000000011c3261bc: movabs $0x148,%rax
  0x000000011c3261c6: mov    (%rbx,%rax,1),%r9
  0x000000011c3261ca: lea    0x1(%r9),%r9
  0x000000011c3261ce: mov    %r9,(%rbx,%rax,1)
  0x000000011c3261d2: jl     0x000000011c326038  ;*if_icmpge
                                                ; - java.io.DataInputStream::readFully@18 (line 194)

  0x000000011c3261d8: add    $0x70,%rsp
  0x000000011c3261dc: pop    %rbp
  0x000000011c3261dd: test   %eax,-0xf83f0e3(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c3261e3: retq                      ;*return
                                                ; - java.io.DataInputStream::readFully@62 (line 200)

  0x000000011c3261e4: nopl   0x0(%rax)
  0x000000011c3261e8: jmpq   0x000000011c3262a8  ;   {no_reloc}
  0x000000011c3261ed: add    %al,(%rax)
  0x000000011c3261ef: add    %al,(%rax)
  0x000000011c3261f1: add    %ch,%cl
  0x000000011c3261f3: mov    $0x48000000,%ebx   ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)

  0x000000011c3261f8: mov    %eax,%esi
  0x000000011c3261fa: movabs $0x1125c2de0,%rdi  ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c326204: addq   $0x1,0x1a8(%rdi)
  0x000000011c32620c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)

  0x000000011c32620f: mov    %rax,0x50(%rsp)
  0x000000011c326214: nop
  0x000000011c326215: nop
  0x000000011c326216: nop
  0x000000011c326217: callq  0x000000011c24c0a0  ; OopMap{[80]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)
                                                ;   {optimized virtual_call}
  0x000000011c32621c: mov    0x50(%rsp),%rax
  0x000000011c326221: jmpq   0x000000011c326310  ;*athrow
                                                ; - java.io.DataInputStream::readFully@51 (line 197)

  0x000000011c326226: xchg   %ax,%ax
  0x000000011c326228: jmpq   0x000000011c3262ce  ;   {no_reloc}
  0x000000011c32622d: add    %al,(%rax)
  0x000000011c32622f: add    %al,(%rax)
  0x000000011c326231: add    %ch,%cl
  0x000000011c326233: movabs 0xbf48f08b48000000,%eax  ;*new
                                                ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {metadata(method data for {method} {0x00000001125c0df0} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32623c: loopne 0x000000011c32626b
  0x000000011c32623e: pop    %rsp
  0x000000011c32623f: adc    (%rcx),%al
  0x000000011c326241: add    %al,(%rax)
  0x000000011c326243: add    %cl,-0x7d(%rax)
  0x000000011c326246: xchg   %ebp,(%rax)
  0x000000011c326248: add    %eax,(%rax)
  0x000000011c32624a: add    %al,(%rcx)
  0x000000011c32624c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)

  0x000000011c32624f: mov    %rax,0x58(%rsp)
  0x000000011c326254: nop
  0x000000011c326255: nop
  0x000000011c326256: nop
  0x000000011c326257: callq  0x000000011c24c0a0  ; OopMap{[88]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)
                                                ;   {optimized virtual_call}
  0x000000011c32625c: mov    0x58(%rsp),%rax
  0x000000011c326261: jmpq   0x000000011c326310
  0x000000011c326266: mov    %rdi,0x8(%rsp)
  0x000000011c32626b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c326273: callq  0x000000011c306120  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=760}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readFully@-1 (line 191)
                                                ;   {runtime_call}
  0x000000011c326278: jmpq   0x000000011c325ff1
  0x000000011c32627d: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop rbx=Oop off=770}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {runtime_call}
  0x000000011c326282: mov    %rdx,0x8(%rsp)
  0x000000011c326287: movq   $0x3b,(%rsp)
  0x000000011c32628f: callq  0x000000011c306120  ; OopMap{[72]=Oop [56]=Oop off=788}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)
                                                ;   {runtime_call}
  0x000000011c326294: jmpq   0x000000011c326173
  0x000000011c326299: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c3262a3: mov    $0xa050f00,%eax
  0x000000011c3262a8: callq  0x000000011c305120  ; OopMap{off=813}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x000000011c3262ad: jmpq   0x000000011c3261e8
  0x000000011c3262b2: mov    %rdx,%rdx
  0x000000011c3262b5: callq  0x000000011c301f60  ; OopMap{off=826}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x000000011c3262ba: jmpq   0x000000011c3261f7
  0x000000011c3262bf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c3262c9: mov    $0xa050f00,%eax
  0x000000011c3262ce: callq  0x000000011c305120  ; OopMap{off=851}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x000000011c3262d3: jmpq   0x000000011c326228
  0x000000011c3262d8: mov    %rdx,%rdx
  0x000000011c3262db: callq  0x000000011c301f60  ; OopMap{off=864}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x000000011c3262e0: jmpq   0x000000011c326237
  0x000000011c3262e5: nop
  0x000000011c3262e6: nop
  0x000000011c3262e7: mov    0x2a8(%r15),%rax
  0x000000011c3262ee: movabs $0x0,%r10
  0x000000011c3262f8: mov    %r10,0x2a8(%r15)
  0x000000011c3262ff: movabs $0x0,%r10
  0x000000011c326309: mov    %r10,0x2b0(%r15)
  0x000000011c326310: add    $0x70,%rsp
  0x000000011c326314: pop    %rbp
  0x000000011c326315: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32631a: hlt    
  0x000000011c32631b: hlt    
  0x000000011c32631c: hlt    
  0x000000011c32631d: hlt    
  0x000000011c32631e: hlt    
  0x000000011c32631f: hlt    
[Stub Code]
  0x000000011c326320: nop                       ;   {no_reloc}
  0x000000011c326321: nop
  0x000000011c326322: nop
  0x000000011c326323: nop
  0x000000011c326324: nop
  0x000000011c326325: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32632f: jmpq   0x000000011c32632f  ;   {runtime_call}
  0x000000011c326334: nop
  0x000000011c326335: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32633f: jmpq   0x000000011c32633f  ;   {runtime_call}
  0x000000011c326344: nop
  0x000000011c326345: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32634f: jmpq   0x000000011c32634f  ;   {runtime_call}
[Exception Handler]
  0x000000011c326354: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c326359: mov    %rsp,-0x28(%rsp)
  0x000000011c32635e: sub    $0x80,%rsp
  0x000000011c326365: mov    %rax,0x78(%rsp)
  0x000000011c32636a: mov    %rcx,0x70(%rsp)
  0x000000011c32636f: mov    %rdx,0x68(%rsp)
  0x000000011c326374: mov    %rbx,0x60(%rsp)
  0x000000011c326379: mov    %rbp,0x50(%rsp)
  0x000000011c32637e: mov    %rsi,0x48(%rsp)
  0x000000011c326383: mov    %rdi,0x40(%rsp)
  0x000000011c326388: mov    %r8,0x38(%rsp)
  0x000000011c32638d: mov    %r9,0x30(%rsp)
  0x000000011c326392: mov    %r10,0x28(%rsp)
  0x000000011c326397: mov    %r11,0x20(%rsp)
  0x000000011c32639c: mov    %r12,0x18(%rsp)
  0x000000011c3263a1: mov    %r13,0x10(%rsp)
  0x000000011c3263a6: mov    %r14,0x8(%rsp)
  0x000000011c3263ab: mov    %r15,(%rsp)
  0x000000011c3263af: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3263b9: movabs $0x11c326359,%rsi  ;   {internal_word}
  0x000000011c3263c3: mov    %rsp,%rdx
  0x000000011c3263c6: and    $0xfffffffffffffff0,%rsp
  0x000000011c3263ca: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3263cf: hlt    
[Deopt Handler Code]
  0x000000011c3263d0: movabs $0x11c3263d0,%r10  ;   {section_word}
  0x000000011c3263da: push   %r10
  0x000000011c3263dc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3263e1: hlt    
  0x000000011c3263e2: hlt    
  0x000000011c3263e3: hlt    
  0x000000011c3263e4: hlt    
  0x000000011c3263e5: hlt    
  0x000000011c3263e6: hlt    
  0x000000011c3263e7: hlt    
<nmethod compile_id='39' compiler='C1' level='3' entry='0x000000011c325f80' size='2232' address='0x000000011c325dd0' relocation_offset='296' insts_offset='432' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1776' dependencies_offset='2208' nul_chk_table_offset='2216' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='988' backedge_count='988' iicount='988' stamp='1.169'/>
<writer thread='42243'/>
<task_queued compile_id='42' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='5604' iicount='5604' stamp='1.169' comment='tiered' hot_count='5604'/>
<writer thread='15619'/>
Decoding compiled method 0x000000011c329350:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000011c3294a0: mov    0x8(%rsi),%r10d
  0x000000011c3294a4: shl    $0x3,%r10
  0x000000011c3294a8: cmp    %r10,%rax
  0x000000011c3294ab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3294b1: data32 xchg %ax,%ax
  0x000000011c3294b4: nopl   0x0(%rax,%rax,1)
  0x000000011c3294bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3294c0: mov    %eax,-0x14000(%rsp)
  0x000000011c3294c7: push   %rbp
  0x000000011c3294c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)

  0x000000011c3294cc: mov    0x20(%rsi),%r10d   ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000011c3294d0: test   %r10d,%r10d
  0x000000011c3294d3: je     0x000000011c3294e5  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x000000011c3294d5: lea    (%r12,%r10,8),%rax  ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x000000011c3294d9: add    $0x20,%rsp
  0x000000011c3294dd: pop    %rbp
  0x000000011c3294de: test   %eax,-0xf8424e4(%rip)        # 0x000000010cae7000
                                                ;   {poll_return}
  0x000000011c3294e4: retq   
  0x000000011c3294e5: mov    $0xffffff65,%esi
  0x000000011c3294ea: mov    %r10d,(%rsp)
  0x000000011c3294ee: nop
  0x000000011c3294ef: callq  0x000000011c24b6a0  ; OopMap{[0]=NarrowOop off=84}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x000000011c3294f4: callq  0x000000010e88997c  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x000000011c3294f9: hlt    
  0x000000011c3294fa: hlt    
  0x000000011c3294fb: hlt    
  0x000000011c3294fc: hlt    
  0x000000011c3294fd: hlt    
  0x000000011c3294fe: hlt    
  0x000000011c3294ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c329500: jmpq   0x000000011c2747e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000011c329505: callq  0x000000011c32950a
  0x000000011c32950a: subq   $0x5,(%rsp)
  0x000000011c32950f: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c329514: hlt    
  0x000000011c329515: hlt    
  0x000000011c329516: hlt    
  0x000000011c329517: hlt    
<nmethod compile_id='42' compiler='C2' level='4' entry='0x000000011c3294a0' size='640' address='0x000000011c329350' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='504' dependencies_offset='632' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='6696' iicount='6696' stamp='1.170'/>
<make_not_entrant thread='15619' compile_id='33' compiler='C1' level='3' stamp='1.170'/>
<writer thread='42243'/>
<task_queued compile_id='43' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='640' iicount='640' level='3' stamp='1.171' comment='tiered' hot_count='640'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c328950:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123fea30} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000011c328b00: mov    0x8(%rsi),%r10d
  0x000000011c328b04: shl    $0x3,%r10
  0x000000011c328b08: cmp    %rax,%r10
  0x000000011c328b0b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c328b11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c328b1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c328b20: mov    %eax,-0x14000(%rsp)
  0x000000011c328b27: push   %rbp
  0x000000011c328b28: sub    $0x80,%rsp
  0x000000011c328b2f: mov    %rsi,0x50(%rsp)
  0x000000011c328b34: lea    0x60(%rsp),%rdi
  0x000000011c328b39: mov    %rsi,0x8(%rdi)
  0x000000011c328b3d: mov    (%rsi),%rax
  0x000000011c328b40: mov    %rax,%rbx
  0x000000011c328b43: and    $0x7,%rbx
  0x000000011c328b47: cmp    $0x5,%rbx
  0x000000011c328b4b: jne    0x000000011c328bd2
  0x000000011c328b51: mov    0x8(%rsi),%ebx
  0x000000011c328b54: shl    $0x3,%rbx
  0x000000011c328b58: mov    0xa8(%rbx),%rbx
  0x000000011c328b5f: or     %r15,%rbx
  0x000000011c328b62: xor    %rax,%rbx
  0x000000011c328b65: and    $0xffffffffffffff87,%rbx
  0x000000011c328b69: je     0x000000011c328bfa
  0x000000011c328b6f: test   $0x7,%rbx
  0x000000011c328b76: jne    0x000000011c328bbf
  0x000000011c328b78: test   $0x300,%rbx
  0x000000011c328b7f: jne    0x000000011c328b9e
  0x000000011c328b81: and    $0x37f,%rax
  0x000000011c328b88: mov    %rax,%rbx
  0x000000011c328b8b: or     %r15,%rbx
  0x000000011c328b8e: lock cmpxchg %rbx,(%rsi)
  0x000000011c328b93: jne    0x000000011c328e86
  0x000000011c328b99: jmpq   0x000000011c328bfa
  0x000000011c328b9e: mov    0x8(%rsi),%ebx
  0x000000011c328ba1: shl    $0x3,%rbx
  0x000000011c328ba5: mov    0xa8(%rbx),%rbx
  0x000000011c328bac: or     %r15,%rbx
  0x000000011c328baf: lock cmpxchg %rbx,(%rsi)
  0x000000011c328bb4: jne    0x000000011c328e86
  0x000000011c328bba: jmpq   0x000000011c328bfa
  0x000000011c328bbf: mov    0x8(%rsi),%ebx
  0x000000011c328bc2: shl    $0x3,%rbx
  0x000000011c328bc6: mov    0xa8(%rbx),%rbx
  0x000000011c328bcd: lock cmpxchg %rbx,(%rsi)
  0x000000011c328bd2: mov    (%rsi),%rax
  0x000000011c328bd5: or     $0x1,%rax
  0x000000011c328bd9: mov    %rax,(%rdi)
  0x000000011c328bdc: lock cmpxchg %rdi,(%rsi)
  0x000000011c328be1: je     0x000000011c328bfa
  0x000000011c328be7: sub    %rsp,%rax
  0x000000011c328bea: and    $0xfffffffffffff007,%rax
  0x000000011c328bf1: mov    %rax,(%rdi)
  0x000000011c328bf4: jne    0x000000011c328e86
  0x000000011c328bfa: movabs $0x1125c2a88,%rdi  ;   {metadata(method data for {method} {0x00000001123fea30} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328c04: mov    0xdc(%rdi),%ebx
  0x000000011c328c0a: add    $0x8,%ebx
  0x000000011c328c0d: mov    %ebx,0xdc(%rdi)
  0x000000011c328c13: movabs $0x1123fea30,%rdi  ;   {metadata({method} {0x00000001123fea30} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328c1d: and    $0x1ff8,%ebx
  0x000000011c328c23: cmp    $0x0,%ebx
  0x000000011c328c26: je     0x000000011c328e99  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 264)

  0x000000011c328c2c: mov    0x14(%rsi),%edi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@1 (line 264)

  0x000000011c328c2f: mov    0x10(%rsi),%ebx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@5 (line 264)

  0x000000011c328c32: cmp    %ebx,%edi
  0x000000011c328c34: movabs $0x1125c2a88,%rdi  ;   {metadata(method data for {method} {0x00000001123fea30} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328c3e: movabs $0x108,%rbx
  0x000000011c328c48: jl     0x000000011c328c58
  0x000000011c328c4e: movabs $0x118,%rbx
  0x000000011c328c58: mov    (%rdi,%rbx,1),%rax
  0x000000011c328c5c: lea    0x1(%rax),%rax
  0x000000011c328c60: mov    %rax,(%rdi,%rbx,1)
  0x000000011c328c64: jl     0x000000011c328ccf  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@8 (line 264)

  0x000000011c328c6a: mov    %rsi,%rdi
  0x000000011c328c6d: movabs $0x1125c2a88,%rbx  ;   {metadata(method data for {method} {0x00000001123fea30} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328c77: addq   $0x1,0x128(%rbx)
  0x000000011c328c7f: mov    %rsi,%rdi
  0x000000011c328c82: mov    %rdi,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)

  0x000000011c328c85: nop
  0x000000011c328c86: nop
  0x000000011c328c87: callq  0x000000011c24c0a0  ; OopMap{[80]=Oop [104]=Oop off=396}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x000000011c328c8c: mov    0x50(%rsp),%rsi
  0x000000011c328c91: mov    0x14(%rsi),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@16 (line 266)

  0x000000011c328c94: mov    0x10(%rsi),%edx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@20 (line 266)

  0x000000011c328c97: cmp    %edx,%eax
  0x000000011c328c99: movabs $0x1125c2a88,%rax  ;   {metadata(method data for {method} {0x00000001123fea30} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328ca3: movabs $0x138,%rdx
  0x000000011c328cad: jl     0x000000011c328cbd
  0x000000011c328cb3: movabs $0x148,%rdx
  0x000000011c328cbd: mov    (%rax,%rdx,1),%rdi
  0x000000011c328cc1: lea    0x1(%rdi),%rdi
  0x000000011c328cc5: mov    %rdi,(%rax,%rdx,1)
  0x000000011c328cc9: jge    0x000000011c328dbc  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x000000011c328ccf: mov    %rsi,%rax
  0x000000011c328cd2: movabs $0x1125c2a88,%rdx  ;   {metadata(method data for {method} {0x00000001123fea30} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328cdc: addq   $0x1,0x158(%rdx)
  0x000000011c328ce4: movabs $0x1125c20d8,%rax  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328cee: mov    0xdc(%rax),%edx
  0x000000011c328cf4: add    $0x8,%edx
  0x000000011c328cf7: mov    %edx,0xdc(%rax)
  0x000000011c328cfd: movabs $0x1123fe680,%rax  ;   {metadata({method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328d07: and    $0x7ffff8,%edx
  0x000000011c328d0d: cmp    $0x0,%edx
  0x000000011c328d10: je     0x000000011c328eb0
  0x000000011c328d16: mov    0x20(%rsi),%eax
  0x000000011c328d19: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000011c328d1d: cmp    $0x0,%rax
  0x000000011c328d21: movabs $0x1125c20d8,%rdx  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328d2b: movabs $0x108,%rdi
  0x000000011c328d35: jne    0x000000011c328d45
  0x000000011c328d3b: movabs $0x118,%rdi
  0x000000011c328d45: mov    (%rdx,%rdi,1),%rcx
  0x000000011c328d49: lea    0x1(%rcx),%rcx
  0x000000011c328d4d: mov    %rcx,(%rdx,%rdi,1)
  0x000000011c328d51: je     0x000000011c328e01  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000011c328d57: mov    0x14(%rsi),%edx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x000000011c328d5a: mov    %rdx,%rdi
  0x000000011c328d5d: inc    %edi
  0x000000011c328d5f: mov    %edi,0x14(%rsi)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x000000011c328d62: movslq %edx,%rsi
  0x000000011c328d65: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000011c328ec7
  0x000000011c328d68: jae    0x000000011c328ed1
  0x000000011c328d6e: movsbl 0x10(%rax,%rsi,1),%edx  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)

  0x000000011c328d73: lea    0x60(%rsp),%rax
  0x000000011c328d78: mov    0x8(%rax),%rdi
  0x000000011c328d7c: mov    (%rdi),%rsi
  0x000000011c328d7f: and    $0x7,%rsi
  0x000000011c328d83: cmp    $0x5,%rsi
  0x000000011c328d87: je     0x000000011c328da4
  0x000000011c328d8d: mov    (%rax),%rsi
  0x000000011c328d90: test   %rsi,%rsi
  0x000000011c328d93: je     0x000000011c328da4
  0x000000011c328d99: lock cmpxchg %rsi,(%rdi)
  0x000000011c328d9e: jne    0x000000011c328eda
  0x000000011c328da4: and    $0xff,%edx
  0x000000011c328daa: mov    %rdx,%rax
  0x000000011c328dad: add    $0x80,%rsp
  0x000000011c328db4: pop    %rbp
  0x000000011c328db5: test   %eax,-0xf841cbb(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c328dbb: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x000000011c328dbc: lea    0x60(%rsp),%rax
  0x000000011c328dc1: mov    0x8(%rax),%rsi
  0x000000011c328dc5: mov    (%rsi),%rdx
  0x000000011c328dc8: and    $0x7,%rdx
  0x000000011c328dcc: cmp    $0x5,%rdx
  0x000000011c328dd0: je     0x000000011c328ded
  0x000000011c328dd6: mov    (%rax),%rdx
  0x000000011c328dd9: test   %rdx,%rdx
  0x000000011c328ddc: je     0x000000011c328ded
  0x000000011c328de2: lock cmpxchg %rdx,(%rsi)
  0x000000011c328de7: jne    0x000000011c328eed
  0x000000011c328ded: mov    $0xffffffff,%eax
  0x000000011c328df2: add    $0x80,%rsp
  0x000000011c328df9: pop    %rbp
  0x000000011c328dfa: test   %eax,-0xf841d00(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c328e00: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x000000011c328e01: nopl   0x0(%rax)
  0x000000011c328e08: jmpq   0x000000011c328f0f  ;   {no_reloc}
  0x000000011c328e0d: add    %al,(%rax)
  0x000000011c328e0f: add    %al,(%rax)
  0x000000011c328e11: add    %cl,-0x75(%rcx)
  0x000000011c328e14: rex.RXB (bad) 
  0x000000011c328e16: lea    0x20(%rax),%rdi
  0x000000011c328e1a: cmp    0x70(%r15),%rdi
  0x000000011c328e1e: ja     0x000000011c328f19
  0x000000011c328e24: mov    %rdi,0x60(%r15)
  0x000000011c328e28: mov    0xa8(%rdx),%rcx
  0x000000011c328e2f: mov    %rcx,(%rax)
  0x000000011c328e32: mov    %rdx,%rcx
  0x000000011c328e35: shr    $0x3,%rcx
  0x000000011c328e39: mov    %ecx,0x8(%rax)
  0x000000011c328e3c: xor    %rcx,%rcx
  0x000000011c328e3f: mov    %ecx,0xc(%rax)
  0x000000011c328e42: xor    %rcx,%rcx
  0x000000011c328e45: mov    %rcx,0x10(%rax)
  0x000000011c328e49: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000011c328e4d: mov    %rax,%rdx
  0x000000011c328e50: movabs $0x1125c20d8,%rsi  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c328e5a: addq   $0x1,0x128(%rsi)
  0x000000011c328e62: movabs $0x715aa3e10,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011c328e6c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x000000011c328e6f: mov    %rax,0x58(%rsp)
  0x000000011c328e74: nop
  0x000000011c328e75: nop
  0x000000011c328e76: nop
  0x000000011c328e77: callq  0x000000011c24c0a0  ; OopMap{[88]=Oop [80]=Oop [104]=Oop off=892}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {optimized virtual_call}
  0x000000011c328e7c: mov    0x58(%rsp),%rax
  0x000000011c328e81: jmpq   0x000000011c328f51
  0x000000011c328e86: mov    %rsi,0x8(%rsp)
  0x000000011c328e8b: mov    %rdi,(%rsp)
  0x000000011c328e8f: callq  0x000000011c3044a0  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=916}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000011c328e94: jmpq   0x000000011c328bfa
  0x000000011c328e99: mov    %rdi,0x8(%rsp)
  0x000000011c328e9e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c328ea6: callq  0x000000011c306120  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=939}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x000000011c328eab: jmpq   0x000000011c328c2c
  0x000000011c328eb0: mov    %rax,0x8(%rsp)
  0x000000011c328eb5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c328ebd: callq  0x000000011c306120  ; OopMap{rsi=Oop [80]=Oop [104]=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000011c328ec2: jmpq   0x000000011c328d16
  0x000000011c328ec7: callq  0x000000011c301ac0  ; OopMap{rax=Oop [104]=Oop off=972}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000011c328ecc: callq  0x000000011c301ac0  ; OopMap{rax=Oop [104]=Oop off=977}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000011c328ed1: mov    %rdx,(%rsp)
  0x000000011c328ed5: callq  0x000000011c274080  ; OopMap{rax=Oop [104]=Oop off=986}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x000000011c328eda: lea    0x60(%rsp),%rax
  0x000000011c328edf: mov    %rax,(%rsp)
  0x000000011c328ee3: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c328ee8: jmpq   0x000000011c328da4
  0x000000011c328eed: lea    0x60(%rsp),%rax
  0x000000011c328ef2: mov    %rax,(%rsp)
  0x000000011c328ef6: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c328efb: jmpq   0x000000011c328ded
  0x000000011c328f00: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c328f0a: mov    $0xa050f00,%eax
  0x000000011c328f0f: callq  0x000000011c305120  ; OopMap{[80]=Oop [104]=Oop off=1044}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000011c328f14: jmpq   0x000000011c328e08
  0x000000011c328f19: mov    %rdx,%rdx
  0x000000011c328f1c: callq  0x000000011c302220  ; OopMap{[80]=Oop [104]=Oop off=1057}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x000000011c328f21: jmpq   0x000000011c328e4d
  0x000000011c328f26: nop
  0x000000011c328f27: nop
  0x000000011c328f28: mov    0x2a8(%r15),%rax
  0x000000011c328f2f: movabs $0x0,%r10
  0x000000011c328f39: mov    %r10,0x2a8(%r15)
  0x000000011c328f40: movabs $0x0,%r10
  0x000000011c328f4a: mov    %r10,0x2b0(%r15)
  0x000000011c328f51: mov    %rax,%rbx
  0x000000011c328f54: lea    0x60(%rsp),%rax
  0x000000011c328f59: mov    0x8(%rax),%rsi
  0x000000011c328f5d: mov    (%rsi),%rdi
  0x000000011c328f60: and    $0x7,%rdi
  0x000000011c328f64: cmp    $0x5,%rdi
  0x000000011c328f68: je     0x000000011c328f85
  0x000000011c328f6e: mov    (%rax),%rdi
  0x000000011c328f71: test   %rdi,%rdi
  0x000000011c328f74: je     0x000000011c328f85
  0x000000011c328f7a: lock cmpxchg %rdi,(%rsi)
  0x000000011c328f7f: jne    0x000000011c328f95
  0x000000011c328f85: mov    %rbx,%rax
  0x000000011c328f88: add    $0x80,%rsp
  0x000000011c328f8f: pop    %rbp
  0x000000011c328f90: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c328f95: lea    0x60(%rsp),%rax
  0x000000011c328f9a: mov    %rax,(%rsp)
  0x000000011c328f9e: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c328fa3: jmp    0x000000011c328f85
  0x000000011c328fa5: hlt    
  0x000000011c328fa6: hlt    
  0x000000011c328fa7: hlt    
  0x000000011c328fa8: hlt    
  0x000000011c328fa9: hlt    
  0x000000011c328faa: hlt    
  0x000000011c328fab: hlt    
  0x000000011c328fac: hlt    
  0x000000011c328fad: hlt    
  0x000000011c328fae: hlt    
  0x000000011c328faf: hlt    
  0x000000011c328fb0: hlt    
  0x000000011c328fb1: hlt    
  0x000000011c328fb2: hlt    
  0x000000011c328fb3: hlt    
  0x000000011c328fb4: hlt    
  0x000000011c328fb5: hlt    
  0x000000011c328fb6: hlt    
  0x000000011c328fb7: hlt    
  0x000000011c328fb8: hlt    
  0x000000011c328fb9: hlt    
  0x000000011c328fba: hlt    
  0x000000011c328fbb: hlt    
  0x000000011c328fbc: hlt    
  0x000000011c328fbd: hlt    
  0x000000011c328fbe: hlt    
  0x000000011c328fbf: hlt    
[Stub Code]
  0x000000011c328fc0: nop                       ;   {no_reloc}
  0x000000011c328fc1: nop
  0x000000011c328fc2: nop
  0x000000011c328fc3: nop
  0x000000011c328fc4: nop
  0x000000011c328fc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c328fcf: jmpq   0x000000011c328fcf  ;   {runtime_call}
  0x000000011c328fd4: nop
  0x000000011c328fd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c328fdf: jmpq   0x000000011c328fdf  ;   {runtime_call}
[Exception Handler]
  0x000000011c328fe4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c328fe9: mov    %rsp,-0x28(%rsp)
  0x000000011c328fee: sub    $0x80,%rsp
  0x000000011c328ff5: mov    %rax,0x78(%rsp)
  0x000000011c328ffa: mov    %rcx,0x70(%rsp)
  0x000000011c328fff: mov    %rdx,0x68(%rsp)
  0x000000011c329004: mov    %rbx,0x60(%rsp)
  0x000000011c329009: mov    %rbp,0x50(%rsp)
  0x000000011c32900e: mov    %rsi,0x48(%rsp)
  0x000000011c329013: mov    %rdi,0x40(%rsp)
  0x000000011c329018: mov    %r8,0x38(%rsp)
  0x000000011c32901d: mov    %r9,0x30(%rsp)
  0x000000011c329022: mov    %r10,0x28(%rsp)
  0x000000011c329027: mov    %r11,0x20(%rsp)
  0x000000011c32902c: mov    %r12,0x18(%rsp)
  0x000000011c329031: mov    %r13,0x10(%rsp)
  0x000000011c329036: mov    %r14,0x8(%rsp)
  0x000000011c32903b: mov    %r15,(%rsp)
  0x000000011c32903f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c329049: movabs $0x11c328fe9,%rsi  ;   {internal_word}
  0x000000011c329053: mov    %rsp,%rdx
  0x000000011c329056: and    $0xfffffffffffffff0,%rsp
  0x000000011c32905a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32905f: hlt    
[Deopt Handler Code]
  0x000000011c329060: movabs $0x11c329060,%r10  ;   {section_word}
  0x000000011c32906a: push   %r10
  0x000000011c32906c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c329071: hlt    
  0x000000011c329072: hlt    
  0x000000011c329073: hlt    
  0x000000011c329074: hlt    
  0x000000011c329075: hlt    
  0x000000011c329076: hlt    
  0x000000011c329077: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x000000011c328b00' size='2544' address='0x000000011c328950' relocation_offset='296' insts_offset='432' stub_offset='1648' scopes_data_offset='1856' scopes_pcs_offset='2048' dependencies_offset='2512' nul_chk_table_offset='2520' method='java/io/BufferedInputStream read ()I' bytes='49' count='5191' iicount='5191' stamp='1.178'/>
Decoding compiled method 0x000000011c327590:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;
  # this:     rsi:rsi   = &apos;java/io/BufferedInputStream&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0xb0]  (sp of caller)
  0x000000011c327780: mov    0x8(%rsi),%r10d
  0x000000011c327784: shl    $0x3,%r10
  0x000000011c327788: cmp    %rax,%r10
  0x000000011c32778b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c327791: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32779c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3277a0: mov    %eax,-0x14000(%rsp)
  0x000000011c3277a7: push   %rbp
  0x000000011c3277a8: sub    $0xa0,%rsp
  0x000000011c3277af: mov    %rsi,0x58(%rsp)
  0x000000011c3277b4: mov    %rdx,0x68(%rsp)
  0x000000011c3277b9: mov    %ecx,0x60(%rsp)
  0x000000011c3277bd: mov    %r8d,0x54(%rsp)
  0x000000011c3277c2: lea    0x80(%rsp),%rdi
  0x000000011c3277ca: mov    %rsi,0x8(%rdi)
  0x000000011c3277ce: mov    (%rsi),%rax
  0x000000011c3277d1: mov    %rax,%rbx
  0x000000011c3277d4: and    $0x7,%rbx
  0x000000011c3277d8: cmp    $0x5,%rbx
  0x000000011c3277dc: jne    0x000000011c327863
  0x000000011c3277e2: mov    0x8(%rsi),%ebx
  0x000000011c3277e5: shl    $0x3,%rbx
  0x000000011c3277e9: mov    0xa8(%rbx),%rbx
  0x000000011c3277f0: or     %r15,%rbx
  0x000000011c3277f3: xor    %rax,%rbx
  0x000000011c3277f6: and    $0xffffffffffffff87,%rbx
  0x000000011c3277fa: je     0x000000011c32788b
  0x000000011c327800: test   $0x7,%rbx
  0x000000011c327807: jne    0x000000011c327850
  0x000000011c327809: test   $0x300,%rbx
  0x000000011c327810: jne    0x000000011c32782f
  0x000000011c327812: and    $0x37f,%rax
  0x000000011c327819: mov    %rax,%rbx
  0x000000011c32781c: or     %r15,%rbx
  0x000000011c32781f: lock cmpxchg %rbx,(%rsi)
  0x000000011c327824: jne    0x000000011c327e4e
  0x000000011c32782a: jmpq   0x000000011c32788b
  0x000000011c32782f: mov    0x8(%rsi),%ebx
  0x000000011c327832: shl    $0x3,%rbx
  0x000000011c327836: mov    0xa8(%rbx),%rbx
  0x000000011c32783d: or     %r15,%rbx
  0x000000011c327840: lock cmpxchg %rbx,(%rsi)
  0x000000011c327845: jne    0x000000011c327e4e
  0x000000011c32784b: jmpq   0x000000011c32788b
  0x000000011c327850: mov    0x8(%rsi),%ebx
  0x000000011c327853: shl    $0x3,%rbx
  0x000000011c327857: mov    0xa8(%rbx),%rbx
  0x000000011c32785e: lock cmpxchg %rbx,(%rsi)
  0x000000011c327863: mov    (%rsi),%rax
  0x000000011c327866: or     $0x1,%rax
  0x000000011c32786a: mov    %rax,(%rdi)
  0x000000011c32786d: lock cmpxchg %rdi,(%rsi)
  0x000000011c327872: je     0x000000011c32788b
  0x000000011c327878: sub    %rsp,%rax
  0x000000011c32787b: and    $0xfffffffffffff007,%rax
  0x000000011c327882: mov    %rax,(%rdi)
  0x000000011c327885: jne    0x000000011c327e4e
  0x000000011c32788b: movabs $0x1125c32a0,%rdi  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327895: mov    0xdc(%rdi),%ebx
  0x000000011c32789b: add    $0x8,%ebx
  0x000000011c32789e: mov    %ebx,0xdc(%rdi)
  0x000000011c3278a4: movabs $0x1123fec50,%rdi  ;   {metadata({method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3278ae: and    $0x1ff8,%ebx
  0x000000011c3278b4: cmp    $0x0,%ebx
  0x000000011c3278b7: je     0x000000011c327e61  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 336)

  0x000000011c3278bd: mov    %rsi,%rdi
  0x000000011c3278c0: movabs $0x1125c32a0,%rbx  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3278ca: addq   $0x1,0x108(%rbx)
  0x000000011c3278d2: movabs $0x1125c20d8,%rdi  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3278dc: mov    0xdc(%rdi),%ebx
  0x000000011c3278e2: add    $0x8,%ebx
  0x000000011c3278e5: mov    %ebx,0xdc(%rdi)
  0x000000011c3278eb: movabs $0x1123fe680,%rdi  ;   {metadata({method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3278f5: and    $0x7ffff8,%ebx
  0x000000011c3278fb: cmp    $0x0,%ebx
  0x000000011c3278fe: je     0x000000011c327e78
  0x000000011c327904: mov    0x20(%rsi),%edi
  0x000000011c327907: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000011c32790b: cmp    $0x0,%rdi
  0x000000011c32790f: movabs $0x1125c20d8,%rdi  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327919: movabs $0x108,%rbx
  0x000000011c327923: jne    0x000000011c327933
  0x000000011c327929: movabs $0x118,%rbx
  0x000000011c327933: mov    (%rdi,%rbx,1),%rax
  0x000000011c327937: lea    0x1(%rax),%rax
  0x000000011c32793b: mov    %rax,(%rdi,%rbx,1)
  0x000000011c32793f: je     0x000000011c327dce  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000011c327945: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ; implicit exception: dispatches to 0x000000011c327e8f
  0x000000011c327948: mov    %rcx,%rbx
  0x000000011c32794b: or     %r8,%rbx
  0x000000011c32794e: mov    %rcx,%rax
  0x000000011c327951: add    %r8d,%eax
  0x000000011c327954: or     %rax,%rbx
  0x000000011c327957: sub    %eax,%edi
  0x000000011c327959: or     %rdi,%rbx
  0x000000011c32795c: cmp    $0x0,%ebx
  0x000000011c32795f: movabs $0x1125c32a0,%rdi  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327969: movabs $0x118,%rbx
  0x000000011c327973: jge    0x000000011c327983
  0x000000011c327979: movabs $0x128,%rbx
  0x000000011c327983: mov    (%rdi,%rbx,1),%rax
  0x000000011c327987: lea    0x1(%rax),%rax
  0x000000011c32798b: mov    %rax,(%rdi,%rbx,1)
  0x000000011c32798f: jl     0x000000011c327d8f  ;*ifge
                                                ; - java.io.BufferedInputStream::read@19 (line 337)

  0x000000011c327995: cmp    $0x0,%r8d
  0x000000011c327999: movabs $0x1125c32a0,%rdi  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3279a3: movabs $0x148,%rbx
  0x000000011c3279ad: jne    0x000000011c3279bd
  0x000000011c3279b3: movabs $0x158,%rbx
  0x000000011c3279bd: mov    (%rdi,%rbx,1),%rax
  0x000000011c3279c1: lea    0x1(%rax),%rax
  0x000000011c3279c5: mov    %rax,(%rdi,%rbx,1)
  0x000000011c3279c9: je     0x000000011c327d47  ;*ifne
                                                ; - java.io.BufferedInputStream::read@31 (line 339)

  0x000000011c3279cf: mov    $0x0,%edi          ;*aload_0
                                                ; - java.io.BufferedInputStream::read@39 (line 345)

  0x000000011c3279d4: nopl   0x0(%rax)
  0x000000011c3279d8: mov    %rsi,%rbx
  0x000000011c3279db: movabs $0x1125c32a0,%rax  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3279e5: addq   $0x1,0x168(%rax)
  0x000000011c3279ed: mov    %rdi,%rbx
  0x000000011c3279f0: add    %ecx,%ebx
  0x000000011c3279f2: mov    %r8,%rax
  0x000000011c3279f5: sub    %edi,%eax
  0x000000011c3279f7: mov    %rdx,%r9
  0x000000011c3279fa: mov    %r9,%rdx
  0x000000011c3279fd: mov    %rbx,%rcx
  0x000000011c327a00: mov    %rax,%r8
  0x000000011c327a03: mov    %rsi,%rax
  0x000000011c327a06: mov    %rax,%rsi          ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)

  0x000000011c327a09: mov    %edi,0x50(%rsp)
  0x000000011c327a0d: nop
  0x000000011c327a0e: nop
  0x000000011c327a0f: callq  0x000000011c24c0a0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=660}
                                                ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)
                                                ;   {optimized virtual_call}
  0x000000011c327a14: cmp    $0x0,%eax
  0x000000011c327a17: movabs $0x1125c32a0,%rsi  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327a21: movabs $0x178,%rdi
  0x000000011c327a2b: jg     0x000000011c327a3b
  0x000000011c327a31: movabs $0x188,%rdi
  0x000000011c327a3b: mov    (%rsi,%rdi,1),%rbx
  0x000000011c327a3f: lea    0x1(%rbx),%rbx
  0x000000011c327a43: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c327a47: jle    0x000000011c327c19  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@56 (line 346)

  0x000000011c327a4d: add    0x50(%rsp),%eax
  0x000000011c327a51: cmp    0x54(%rsp),%eax
  0x000000011c327a55: movabs $0x1125c32a0,%rsi  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327a5f: movabs $0x1d0,%rdi
  0x000000011c327a69: jl     0x000000011c327a79
  0x000000011c327a6f: movabs $0x1e0,%rdi
  0x000000011c327a79: mov    (%rsi,%rdi,1),%rbx
  0x000000011c327a7d: lea    0x1(%rbx),%rbx
  0x000000011c327a81: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c327a85: jge    0x000000011c327cfe  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@82 (line 349)

  0x000000011c327a8b: mov    0x58(%rsp),%rsi
  0x000000011c327a90: mov    0xc(%rsi),%edi
  0x000000011c327a93: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.BufferedInputStream::read@89 (line 352)

  0x000000011c327a97: cmp    $0x0,%rdi
  0x000000011c327a9b: movabs $0x1125c32a0,%rbx  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327aa5: movabs $0x1f0,%rdx
  0x000000011c327aaf: je     0x000000011c327abf
  0x000000011c327ab5: movabs $0x200,%rdx
  0x000000011c327abf: mov    (%rbx,%rdx,1),%rcx
  0x000000011c327ac3: lea    0x1(%rcx),%rcx
  0x000000011c327ac7: mov    %rcx,(%rbx,%rdx,1)
  0x000000011c327acb: mov    %eax,0x64(%rsp)
  0x000000011c327acf: je     0x000000011c327bb5  ;*ifnull
                                                ; - java.io.BufferedInputStream::read@96 (line 353)

  0x000000011c327ad5: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011c327e94
  0x000000011c327ad8: mov    %rdi,%rbx
  0x000000011c327adb: movabs $0x1125c32a0,%rdx  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327ae5: mov    0x8(%rbx),%ebx
  0x000000011c327ae8: shl    $0x3,%rbx
  0x000000011c327aec: cmp    0x218(%rdx),%rbx
  0x000000011c327af3: jne    0x000000011c327b02
  0x000000011c327af5: addq   $0x1,0x220(%rdx)
  0x000000011c327afd: jmpq   0x000000011c327b68
  0x000000011c327b02: cmp    0x228(%rdx),%rbx
  0x000000011c327b09: jne    0x000000011c327b18
  0x000000011c327b0b: addq   $0x1,0x230(%rdx)
  0x000000011c327b13: jmpq   0x000000011c327b68
  0x000000011c327b18: cmpq   $0x0,0x218(%rdx)
  0x000000011c327b23: jne    0x000000011c327b3c
  0x000000011c327b25: mov    %rbx,0x218(%rdx)
  0x000000011c327b2c: movq   $0x1,0x220(%rdx)
  0x000000011c327b37: jmpq   0x000000011c327b68
  0x000000011c327b3c: cmpq   $0x0,0x228(%rdx)
  0x000000011c327b47: jne    0x000000011c327b60
  0x000000011c327b49: mov    %rbx,0x228(%rdx)
  0x000000011c327b50: movq   $0x1,0x230(%rdx)
  0x000000011c327b5b: jmpq   0x000000011c327b68
  0x000000011c327b60: addq   $0x1,0x210(%rdx)
  0x000000011c327b68: mov    %rdi,%rsi          ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)

  0x000000011c327b6b: nop
  0x000000011c327b6c: nop
  0x000000011c327b6d: movabs $0xffffffffffffffff,%rax
  0x000000011c327b77: callq  0x000000011c24c2e0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1020}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {virtual_call}
  0x000000011c327b7c: cmp    $0x0,%eax
  0x000000011c327b7f: movabs $0x1125c32a0,%rax  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327b89: movabs $0x240,%rdx
  0x000000011c327b93: jg     0x000000011c327ba3
  0x000000011c327b99: movabs $0x250,%rdx
  0x000000011c327ba3: mov    (%rax,%rdx,1),%rsi
  0x000000011c327ba7: lea    0x1(%rsi),%rsi
  0x000000011c327bab: mov    %rsi,(%rax,%rdx,1)
  0x000000011c327baf: jle    0x000000011c327cb7  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@104 (line 353)

  0x000000011c327bb5: movabs $0x1125c32a0,%rax  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327bbf: mov    0xe0(%rax),%edx
  0x000000011c327bc5: add    $0x8,%edx
  0x000000011c327bc8: mov    %edx,0xe0(%rax)
  0x000000011c327bce: movabs $0x1123fec50,%rax  ;   {metadata({method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327bd8: and    $0xfff8,%edx
  0x000000011c327bde: cmp    $0x0,%edx
  0x000000011c327be1: je     0x000000011c327e99  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1127}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x000000011c327be7: test   %eax,-0xf840aed(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c327bed: movabs $0x1125c32a0,%rax  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327bf7: incl   0x260(%rax)
  0x000000011c327bfd: mov    0x64(%rsp),%edi
  0x000000011c327c01: mov    0x54(%rsp),%r8d
  0x000000011c327c06: mov    0x60(%rsp),%ecx
  0x000000011c327c0a: mov    0x68(%rsp),%rdx
  0x000000011c327c0f: mov    0x58(%rsp),%rsi
  0x000000011c327c14: jmpq   0x000000011c3279d8  ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x000000011c327c19: mov    0x50(%rsp),%edi
  0x000000011c327c1d: cmp    $0x0,%edi
  0x000000011c327c20: movabs $0x1125c32a0,%rdx  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327c2a: movabs $0x198,%rsi
  0x000000011c327c34: jne    0x000000011c327c44
  0x000000011c327c3a: movabs $0x1a8,%rsi
  0x000000011c327c44: mov    (%rdx,%rsi,1),%rbx
  0x000000011c327c48: lea    0x1(%rbx),%rbx
  0x000000011c327c4c: mov    %rbx,(%rdx,%rsi,1)
  0x000000011c327c50: jne    0x000000011c327c6e  ;*ifne
                                                ; - java.io.BufferedInputStream::read@61 (line 347)

  0x000000011c327c56: movabs $0x1125c32a0,%rdx  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327c60: incl   0x1b8(%rdx)
  0x000000011c327c66: mov    %rax,%rdx
  0x000000011c327c69: jmpq   0x000000011c327c71  ;*goto
                                                ; - java.io.BufferedInputStream::read@66 (line 347)

  0x000000011c327c6e: mov    %rdi,%rdx
  0x000000011c327c71: lea    0x80(%rsp),%rax
  0x000000011c327c79: mov    0x8(%rax),%rdi
  0x000000011c327c7d: mov    (%rdi),%rsi
  0x000000011c327c80: and    $0x7,%rsi
  0x000000011c327c84: cmp    $0x5,%rsi
  0x000000011c327c88: je     0x000000011c327ca5
  0x000000011c327c8e: mov    (%rax),%rsi
  0x000000011c327c91: test   %rsi,%rsi
  0x000000011c327c94: je     0x000000011c327ca5
  0x000000011c327c9a: lock cmpxchg %rsi,(%rdi)
  0x000000011c327c9f: jne    0x000000011c327eb0
  0x000000011c327ca5: mov    %rdx,%rax
  0x000000011c327ca8: add    $0xa0,%rsp
  0x000000011c327caf: pop    %rbp
  0x000000011c327cb0: test   %eax,-0xf840bb6(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c327cb6: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@71 (line 347)

  0x000000011c327cb7: lea    0x80(%rsp),%rax
  0x000000011c327cbf: mov    0x8(%rax),%rsi
  0x000000011c327cc3: mov    (%rsi),%rdx
  0x000000011c327cc6: and    $0x7,%rdx
  0x000000011c327cca: cmp    $0x5,%rdx
  0x000000011c327cce: je     0x000000011c327ceb
  0x000000011c327cd4: mov    (%rax),%rdx
  0x000000011c327cd7: test   %rdx,%rdx
  0x000000011c327cda: je     0x000000011c327ceb
  0x000000011c327ce0: lock cmpxchg %rdx,(%rsi)
  0x000000011c327ce5: jne    0x000000011c327ec6
  0x000000011c327ceb: mov    0x64(%rsp),%eax
  0x000000011c327cef: add    $0xa0,%rsp
  0x000000011c327cf6: pop    %rbp
  0x000000011c327cf7: test   %eax,-0xf840bfd(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c327cfd: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@109 (line 354)

  0x000000011c327cfe: mov    %rax,%rdx
  0x000000011c327d01: lea    0x80(%rsp),%rax
  0x000000011c327d09: mov    0x8(%rax),%rdi
  0x000000011c327d0d: mov    (%rdi),%rsi
  0x000000011c327d10: and    $0x7,%rsi
  0x000000011c327d14: cmp    $0x5,%rsi
  0x000000011c327d18: je     0x000000011c327d35
  0x000000011c327d1e: mov    (%rax),%rsi
  0x000000011c327d21: test   %rsi,%rsi
  0x000000011c327d24: je     0x000000011c327d35
  0x000000011c327d2a: lock cmpxchg %rsi,(%rdi)
  0x000000011c327d2f: jne    0x000000011c327edc
  0x000000011c327d35: mov    %rdx,%rax
  0x000000011c327d38: add    $0xa0,%rsp
  0x000000011c327d3f: pop    %rbp
  0x000000011c327d40: test   %eax,-0xf840c46(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c327d46: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@87 (line 350)

  0x000000011c327d47: lea    0x80(%rsp),%rax
  0x000000011c327d4f: mov    0x8(%rax),%rsi
  0x000000011c327d53: mov    (%rsi),%rdx
  0x000000011c327d56: and    $0x7,%rdx
  0x000000011c327d5a: cmp    $0x5,%rdx
  0x000000011c327d5e: je     0x000000011c327d7b
  0x000000011c327d64: mov    (%rax),%rdx
  0x000000011c327d67: test   %rdx,%rdx
  0x000000011c327d6a: je     0x000000011c327d7b
  0x000000011c327d70: lock cmpxchg %rdx,(%rsi)
  0x000000011c327d75: jne    0x000000011c327ef2
  0x000000011c327d7b: mov    $0x0,%eax
  0x000000011c327d80: add    $0xa0,%rsp
  0x000000011c327d87: pop    %rbp
  0x000000011c327d88: test   %eax,-0xf840c8e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c327d8e: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@35 (line 340)

  0x000000011c327d8f: nop
  0x000000011c327d90: jmpq   0x000000011c327f17  ;   {no_reloc}
  0x000000011c327d95: add    %al,(%rax)
  0x000000011c327d97: add    %al,(%rax)
  0x000000011c327d99: add    %ch,%cl
  0x000000011c327d9b: (bad)  
  0x000000011c327d9c: add    %eax,(%rax)
  0x000000011c327d9e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)

  0x000000011c327da1: lock movabs $0x1125c32a0,%rdi  ;   {metadata(method data for {method} {0x00000001123fec50} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327dac: addq   $0x1,0x138(%rdi)
  0x000000011c327db4: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::read@26 (line 338)

  0x000000011c327db7: mov    %rax,0x70(%rsp)
  0x000000011c327dbc: nop
  0x000000011c327dbd: nop
  0x000000011c327dbe: nop
  0x000000011c327dbf: callq  0x000000011c24c0a0  ; OopMap{[112]=Oop [136]=Oop off=1604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::read@26 (line 338)
                                                ;   {optimized virtual_call}
  0x000000011c327dc4: mov    0x70(%rsp),%rax
  0x000000011c327dc9: jmpq   0x000000011c327f7f  ;*athrow
                                                ; - java.io.BufferedInputStream::read@29 (line 338)

  0x000000011c327dce: xchg   %ax,%ax
  0x000000011c327dd0: jmpq   0x000000011c327f3d  ;   {no_reloc}
  0x000000011c327dd5: add    %al,(%rax)
  0x000000011c327dd7: add    %al,(%rax)
  0x000000011c327dd9: add    %cl,-0x75(%rcx)
  0x000000011c327ddc: rex.RXB (bad) 
  0x000000011c327dde: lea    0x20(%rax),%rdi
  0x000000011c327de2: cmp    0x70(%r15),%rdi
  0x000000011c327de6: ja     0x000000011c327f47
  0x000000011c327dec: mov    %rdi,0x60(%r15)
  0x000000011c327df0: mov    0xa8(%rdx),%rcx
  0x000000011c327df7: mov    %rcx,(%rax)
  0x000000011c327dfa: mov    %rdx,%rcx
  0x000000011c327dfd: shr    $0x3,%rcx
  0x000000011c327e01: mov    %ecx,0x8(%rax)
  0x000000011c327e04: xor    %rcx,%rcx
  0x000000011c327e07: mov    %ecx,0xc(%rax)
  0x000000011c327e0a: xor    %rcx,%rcx
  0x000000011c327e0d: mov    %rcx,0x10(%rax)
  0x000000011c327e11: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000011c327e15: mov    %rax,%rdx
  0x000000011c327e18: movabs $0x1125c20d8,%rsi  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c327e22: addq   $0x1,0x128(%rsi)
  0x000000011c327e2a: movabs $0x715aa3e10,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011c327e34: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x000000011c327e37: mov    %rax,0x78(%rsp)
  0x000000011c327e3c: nop
  0x000000011c327e3d: nop
  0x000000011c327e3e: nop
  0x000000011c327e3f: callq  0x000000011c24c0a0  ; OopMap{[104]=Oop [120]=Oop [88]=Oop [136]=Oop off=1732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {optimized virtual_call}
  0x000000011c327e44: mov    0x78(%rsp),%rax
  0x000000011c327e49: jmpq   0x000000011c327f7f
  0x000000011c327e4e: mov    %rsi,0x8(%rsp)
  0x000000011c327e53: mov    %rdi,(%rsp)
  0x000000011c327e57: callq  0x000000011c3044a0  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1756}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x000000011c327e5c: jmpq   0x000000011c32788b
  0x000000011c327e61: mov    %rdi,0x8(%rsp)
  0x000000011c327e66: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c327e6e: callq  0x000000011c306120  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1779}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x000000011c327e73: jmpq   0x000000011c3278bd
  0x000000011c327e78: mov    %rdi,0x8(%rsp)
  0x000000011c327e7d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c327e85: callq  0x000000011c306120  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1802}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x000000011c327e8a: jmpq   0x000000011c327904
  0x000000011c327e8f: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [104]=Oop [136]=Oop off=1812}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ;   {runtime_call}
  0x000000011c327e94: callq  0x000000011c301ac0  ; OopMap{[104]=Oop [88]=Oop rdi=Oop [136]=Oop off=1817}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {runtime_call}
  0x000000011c327e99: mov    %rax,0x8(%rsp)
  0x000000011c327e9e: movq   $0x6e,(%rsp)
  0x000000011c327ea6: callq  0x000000011c306120  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1835}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)
                                                ;   {runtime_call}
  0x000000011c327eab: jmpq   0x000000011c327be7
  0x000000011c327eb0: lea    0x80(%rsp),%rax
  0x000000011c327eb8: mov    %rax,(%rsp)
  0x000000011c327ebc: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c327ec1: jmpq   0x000000011c327ca5
  0x000000011c327ec6: lea    0x80(%rsp),%rax
  0x000000011c327ece: mov    %rax,(%rsp)
  0x000000011c327ed2: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c327ed7: jmpq   0x000000011c327ceb
  0x000000011c327edc: lea    0x80(%rsp),%rax
  0x000000011c327ee4: mov    %rax,(%rsp)
  0x000000011c327ee8: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c327eed: jmpq   0x000000011c327d35
  0x000000011c327ef2: lea    0x80(%rsp),%rax
  0x000000011c327efa: mov    %rax,(%rsp)
  0x000000011c327efe: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c327f03: jmpq   0x000000011c327d7b
  0x000000011c327f08: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c327f12: mov    $0xa050f00,%eax
  0x000000011c327f17: callq  0x000000011c305120  ; OopMap{[136]=Oop off=1948}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x000000011c327f1c: jmpq   0x000000011c327d90
  0x000000011c327f21: mov    %rdx,%rdx
  0x000000011c327f24: callq  0x000000011c301f60  ; OopMap{[136]=Oop off=1961}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x000000011c327f29: jmpq   0x000000011c327d9f
  0x000000011c327f2e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c327f38: mov    $0xa050f00,%eax
  0x000000011c327f3d: callq  0x000000011c305120  ; OopMap{[88]=Oop [104]=Oop [136]=Oop off=1986}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x000000011c327f42: jmpq   0x000000011c327dd0
  0x000000011c327f47: mov    %rdx,%rdx
  0x000000011c327f4a: callq  0x000000011c302220  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1999}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x000000011c327f4f: jmpq   0x000000011c327e15
  0x000000011c327f54: nop
  0x000000011c327f55: nop
  0x000000011c327f56: mov    0x2a8(%r15),%rax
  0x000000011c327f5d: movabs $0x0,%r10
  0x000000011c327f67: mov    %r10,0x2a8(%r15)
  0x000000011c327f6e: movabs $0x0,%r10
  0x000000011c327f78: mov    %r10,0x2b0(%r15)
  0x000000011c327f7f: mov    %rax,%rbx
  0x000000011c327f82: lea    0x80(%rsp),%rax
  0x000000011c327f8a: mov    0x8(%rax),%rsi
  0x000000011c327f8e: mov    (%rsi),%rdi
  0x000000011c327f91: and    $0x7,%rdi
  0x000000011c327f95: cmp    $0x5,%rdi
  0x000000011c327f99: je     0x000000011c327fb6
  0x000000011c327f9f: mov    (%rax),%rdi
  0x000000011c327fa2: test   %rdi,%rdi
  0x000000011c327fa5: je     0x000000011c327fb6
  0x000000011c327fab: lock cmpxchg %rdi,(%rsi)
  0x000000011c327fb0: jne    0x000000011c327fc6
  0x000000011c327fb6: mov    %rbx,%rax
  0x000000011c327fb9: add    $0xa0,%rsp
  0x000000011c327fc0: pop    %rbp
  0x000000011c327fc1: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c327fc6: lea    0x80(%rsp),%rax
  0x000000011c327fce: mov    %rax,(%rsp)
  0x000000011c327fd2: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c327fd7: jmp    0x000000011c327fb6
  0x000000011c327fd9: hlt    
  0x000000011c327fda: hlt    
  0x000000011c327fdb: hlt    
  0x000000011c327fdc: hlt    
  0x000000011c327fdd: hlt    
  0x000000011c327fde: hlt    
  0x000000011c327fdf: hlt    
[Stub Code]
  0x000000011c327fe0: nop                       ;   {no_reloc}
  0x000000011c327fe1: nop
  0x000000011c327fe2: nop
  0x000000011c327fe3: nop
  0x000000011c327fe4: nop
  0x000000011c327fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c327fef: jmpq   0x000000011c327fef  ;   {runtime_call}
  0x000000011c327ff4: nop
  0x000000011c327ff5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c327fff: jmpq   0x000000011c327fff  ;   {runtime_call}
  0x000000011c328004: nop
  0x000000011c328005: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32800f: jmpq   0x000000011c32800f  ;   {runtime_call}
  0x000000011c328014: nop
  0x000000011c328015: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32801f: jmpq   0x000000011c32801f  ;   {runtime_call}
[Exception Handler]
  0x000000011c328024: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c328029: mov    %rsp,-0x28(%rsp)
  0x000000011c32802e: sub    $0x80,%rsp
  0x000000011c328035: mov    %rax,0x78(%rsp)
  0x000000011c32803a: mov    %rcx,0x70(%rsp)
  0x000000011c32803f: mov    %rdx,0x68(%rsp)
  0x000000011c328044: mov    %rbx,0x60(%rsp)
  0x000000011c328049: mov    %rbp,0x50(%rsp)
  0x000000011c32804e: mov    %rsi,0x48(%rsp)
  0x000000011c328053: mov    %rdi,0x40(%rsp)
  0x000000011c328058: mov    %r8,0x38(%rsp)
  0x000000011c32805d: mov    %r9,0x30(%rsp)
  0x000000011c328062: mov    %r10,0x28(%rsp)
  0x000000011c328067: mov    %r11,0x20(%rsp)
  0x000000011c32806c: mov    %r12,0x18(%rsp)
  0x000000011c328071: mov    %r13,0x10(%rsp)
  0x000000011c328076: mov    %r14,0x8(%rsp)
  0x000000011c32807b: mov    %r15,(%rsp)
  0x000000011c32807f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c328089: movabs $0x11c328029,%rsi  ;   {internal_word}
  0x000000011c328093: mov    %rsp,%rdx
  0x000000011c328096: and    $0xfffffffffffffff0,%rsp
  0x000000011c32809a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32809f: hlt    
[Deopt Handler Code]
  0x000000011c3280a0: movabs $0x11c3280a0,%r10  ;   {section_word}
  0x000000011c3280aa: push   %r10
  0x000000011c3280ac: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3280b1: hlt    
  0x000000011c3280b2: hlt    
  0x000000011c3280b3: hlt    
  0x000000011c3280b4: hlt    
  0x000000011c3280b5: hlt    
  0x000000011c3280b6: hlt    
  0x000000011c3280b7: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x000000011c327780' size='3976' address='0x000000011c327590' relocation_offset='296' insts_offset='496' stub_offset='2640' scopes_data_offset='2880' scopes_pcs_offset='3256' dependencies_offset='3944' nul_chk_table_offset='3952' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='998' backedge_count='12' iicount='998' stamp='1.190'/>
Decoding compiled method 0x000000011c326e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001125c1180} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011c326fa0: mov    0x8(%rsi),%r10d
  0x000000011c326fa4: shl    $0x3,%r10
  0x000000011c326fa8: cmp    %rax,%r10
  0x000000011c326fab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c326fb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c326fbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c326fc0: mov    %eax,-0x14000(%rsp)
  0x000000011c326fc7: push   %rbp
  0x000000011c326fc8: sub    $0x40,%rsp
  0x000000011c326fcc: movabs $0x1125c3710,%rdi  ;   {metadata(method data for {method} {0x00000001125c1180} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c326fd6: mov    0xdc(%rdi),%ebx
  0x000000011c326fdc: add    $0x8,%ebx
  0x000000011c326fdf: mov    %ebx,0xdc(%rdi)
  0x000000011c326fe5: movabs $0x1125c1180,%rdi  ;   {metadata({method} {0x00000001125c1180} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c326fef: and    $0x1ff8,%ebx
  0x000000011c326ff5: cmp    $0x0,%ebx
  0x000000011c326ff8: je     0x000000011c32720e  ;*aload_0
                                                ; - java.io.DataInputStream::readShort@0 (line 312)

  0x000000011c326ffe: mov    0xc(%rsi),%edi
  0x000000011c327001: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@1 (line 312)

  0x000000011c327005: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011c327225
  0x000000011c327008: mov    %rdi,%rbx
  0x000000011c32700b: movabs $0x1125c3710,%rax  ;   {metadata(method data for {method} {0x00000001125c1180} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c327015: mov    0x8(%rbx),%ebx
  0x000000011c327018: shl    $0x3,%rbx
  0x000000011c32701c: cmp    0x110(%rax),%rbx
  0x000000011c327023: jne    0x000000011c327032
  0x000000011c327025: addq   $0x1,0x118(%rax)
  0x000000011c32702d: jmpq   0x000000011c327098
  0x000000011c327032: cmp    0x120(%rax),%rbx
  0x000000011c327039: jne    0x000000011c327048
  0x000000011c32703b: addq   $0x1,0x128(%rax)
  0x000000011c327043: jmpq   0x000000011c327098
  0x000000011c327048: cmpq   $0x0,0x110(%rax)
  0x000000011c327053: jne    0x000000011c32706c
  0x000000011c327055: mov    %rbx,0x110(%rax)
  0x000000011c32705c: movq   $0x1,0x118(%rax)
  0x000000011c327067: jmpq   0x000000011c327098
  0x000000011c32706c: cmpq   $0x0,0x120(%rax)
  0x000000011c327077: jne    0x000000011c327090
  0x000000011c327079: mov    %rbx,0x120(%rax)
  0x000000011c327080: movq   $0x1,0x128(%rax)
  0x000000011c32708b: jmpq   0x000000011c327098
  0x000000011c327090: addq   $0x1,0x108(%rax)
  0x000000011c327098: mov    %rsi,0x20(%rsp)
  0x000000011c32709d: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)

  0x000000011c3270a0: nop
  0x000000011c3270a1: nop
  0x000000011c3270a2: nop
  0x000000011c3270a3: nop
  0x000000011c3270a4: nop
  0x000000011c3270a5: movabs $0xffffffffffffffff,%rax
  0x000000011c3270af: callq  0x000000011c24c2e0  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {virtual_call}
  0x000000011c3270b4: mov    0x20(%rsp),%rsi
  0x000000011c3270b9: mov    0xc(%rsi),%esi
  0x000000011c3270bc: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@9 (line 313)

  0x000000011c3270c0: cmp    (%rsi),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ; implicit exception: dispatches to 0x000000011c32722a
  0x000000011c3270c3: mov    %rsi,%rdi
  0x000000011c3270c6: movabs $0x1125c3710,%rbx  ;   {metadata(method data for {method} {0x00000001125c1180} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3270d0: mov    0x8(%rdi),%edi
  0x000000011c3270d3: shl    $0x3,%rdi
  0x000000011c3270d7: cmp    0x140(%rbx),%rdi
  0x000000011c3270de: jne    0x000000011c3270ed
  0x000000011c3270e0: addq   $0x1,0x148(%rbx)
  0x000000011c3270e8: jmpq   0x000000011c327153
  0x000000011c3270ed: cmp    0x150(%rbx),%rdi
  0x000000011c3270f4: jne    0x000000011c327103
  0x000000011c3270f6: addq   $0x1,0x158(%rbx)
  0x000000011c3270fe: jmpq   0x000000011c327153
  0x000000011c327103: cmpq   $0x0,0x140(%rbx)
  0x000000011c32710e: jne    0x000000011c327127
  0x000000011c327110: mov    %rdi,0x140(%rbx)
  0x000000011c327117: movq   $0x1,0x148(%rbx)
  0x000000011c327122: jmpq   0x000000011c327153
  0x000000011c327127: cmpq   $0x0,0x150(%rbx)
  0x000000011c327132: jne    0x000000011c32714b
  0x000000011c327134: mov    %rdi,0x150(%rbx)
  0x000000011c32713b: movq   $0x1,0x158(%rbx)
  0x000000011c327146: jmpq   0x000000011c327153
  0x000000011c32714b: addq   $0x1,0x138(%rbx)
  0x000000011c327153: mov    %eax,0x28(%rsp)
  0x000000011c327157: nop
  0x000000011c327158: nop
  0x000000011c327159: nop
  0x000000011c32715a: nop
  0x000000011c32715b: nop
  0x000000011c32715c: nop
  0x000000011c32715d: movabs $0xffffffffffffffff,%rax
  0x000000011c327167: callq  0x000000011c24c2e0  ; OopMap{off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {virtual_call}
  0x000000011c32716c: mov    0x28(%rsp),%edx
  0x000000011c327170: or     %rax,%rdx
  0x000000011c327173: cmp    $0x0,%edx
  0x000000011c327176: movabs $0x1125c3710,%rdx  ;   {metadata(method data for {method} {0x00000001125c1180} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c327180: movabs $0x168,%rsi
  0x000000011c32718a: jge    0x000000011c32719a
  0x000000011c327190: movabs $0x178,%rsi
  0x000000011c32719a: mov    (%rdx,%rsi,1),%rdi
  0x000000011c32719e: lea    0x1(%rdi),%rdi
  0x000000011c3271a2: mov    %rdi,(%rdx,%rsi,1)
  0x000000011c3271a6: jl     0x000000011c3271cd  ;*ifge
                                                ; - java.io.DataInputStream::readShort@19 (line 314)

  0x000000011c3271ac: mov    0x28(%rsp),%edx
  0x000000011c3271b0: shl    $0x8,%edx
  0x000000011c3271b3: add    %eax,%edx
  0x000000011c3271b5: movswl %dx,%edx
  0x000000011c3271b8: shl    $0x10,%edx
  0x000000011c3271bb: sar    $0x10,%edx
  0x000000011c3271be: mov    %rdx,%rax
  0x000000011c3271c1: add    $0x40,%rsp
  0x000000011c3271c5: pop    %rbp
  0x000000011c3271c6: test   %eax,-0xf8400cc(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c3271cc: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readShort@39 (line 316)

  0x000000011c3271cd: data32 xchg %ax,%ax
  0x000000011c3271d0: jmpq   0x000000011c32723e  ;   {no_reloc}
  0x000000011c3271d5: add    %al,(%rax)
  0x000000011c3271d7: add    %al,(%rax)
  0x000000011c3271d9: add    %ch,%cl
  0x000000011c3271db: imul   $0x8b480000,(%rax),%eax  ;*new
                                                ; - java.io.DataInputStream::readShort@22 (line 315)

  0x000000011c3271e1: lock movabs $0x1125c3710,%rdi  ;   {metadata(method data for {method} {0x00000001125c1180} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c3271ec: addq   $0x1,0x188(%rdi)
  0x000000011c3271f4: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readShort@26 (line 315)

  0x000000011c3271f7: mov    %rax,0x30(%rsp)
  0x000000011c3271fc: nop
  0x000000011c3271fd: nop
  0x000000011c3271fe: nop
  0x000000011c3271ff: callq  0x000000011c24c0a0  ; OopMap{[48]=Oop off=612}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readShort@26 (line 315)
                                                ;   {optimized virtual_call}
  0x000000011c327204: mov    0x30(%rsp),%rax
  0x000000011c327209: jmpq   0x000000011c32727d
  0x000000011c32720e: mov    %rdi,0x8(%rsp)
  0x000000011c327213: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32721b: callq  0x000000011c306120  ; OopMap{rsi=Oop off=640}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readShort@-1 (line 312)
                                                ;   {runtime_call}
  0x000000011c327220: jmpq   0x000000011c326ffe
  0x000000011c327225: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdi=Oop off=650}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {runtime_call}
  0x000000011c32722a: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=655}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {runtime_call}
  0x000000011c32722f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c327239: mov    $0xa050f00,%eax
  0x000000011c32723e: callq  0x000000011c305120  ; OopMap{off=675}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x000000011c327243: jmp    0x000000011c3271d0
  0x000000011c327245: nop
  0x000000011c327246: nop
  0x000000011c327247: nop
  0x000000011c327248: mov    %rdx,%rdx
  0x000000011c32724b: callq  0x000000011c301f60  ; OopMap{off=688}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x000000011c327250: jmp    0x000000011c3271df
  0x000000011c327252: nop
  0x000000011c327253: nop
  0x000000011c327254: mov    0x2a8(%r15),%rax
  0x000000011c32725b: movabs $0x0,%r10
  0x000000011c327265: mov    %r10,0x2a8(%r15)
  0x000000011c32726c: movabs $0x0,%r10
  0x000000011c327276: mov    %r10,0x2b0(%r15)
  0x000000011c32727d: add    $0x40,%rsp
  0x000000011c327281: pop    %rbp
  0x000000011c327282: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c327287: hlt    
  0x000000011c327288: hlt    
  0x000000011c327289: hlt    
  0x000000011c32728a: hlt    
  0x000000011c32728b: hlt    
  0x000000011c32728c: hlt    
  0x000000011c32728d: hlt    
  0x000000011c32728e: hlt    
  0x000000011c32728f: hlt    
  0x000000011c327290: hlt    
  0x000000011c327291: hlt    
  0x000000011c327292: hlt    
  0x000000011c327293: hlt    
  0x000000011c327294: hlt    
  0x000000011c327295: hlt    
  0x000000011c327296: hlt    
  0x000000011c327297: hlt    
  0x000000011c327298: hlt    
  0x000000011c327299: hlt    
  0x000000011c32729a: hlt    
  0x000000011c32729b: hlt    
  0x000000011c32729c: hlt    
  0x000000011c32729d: hlt    
  0x000000011c32729e: hlt    
  0x000000011c32729f: hlt    
[Stub Code]
  0x000000011c3272a0: nop                       ;   {no_reloc}
  0x000000011c3272a1: nop
  0x000000011c3272a2: nop
  0x000000011c3272a3: nop
  0x000000011c3272a4: nop
  0x000000011c3272a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3272af: jmpq   0x000000011c3272af  ;   {runtime_call}
  0x000000011c3272b4: nop
  0x000000011c3272b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3272bf: jmpq   0x000000011c3272bf  ;   {runtime_call}
  0x000000011c3272c4: nop
  0x000000011c3272c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3272cf: jmpq   0x000000011c3272cf  ;   {runtime_call}
[Exception Handler]
  0x000000011c3272d4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c3272d9: mov    %rsp,-0x28(%rsp)
  0x000000011c3272de: sub    $0x80,%rsp
  0x000000011c3272e5: mov    %rax,0x78(%rsp)
  0x000000011c3272ea: mov    %rcx,0x70(%rsp)
  0x000000011c3272ef: mov    %rdx,0x68(%rsp)
  0x000000011c3272f4: mov    %rbx,0x60(%rsp)
  0x000000011c3272f9: mov    %rbp,0x50(%rsp)
  0x000000011c3272fe: mov    %rsi,0x48(%rsp)
  0x000000011c327303: mov    %rdi,0x40(%rsp)
  0x000000011c327308: mov    %r8,0x38(%rsp)
  0x000000011c32730d: mov    %r9,0x30(%rsp)
  0x000000011c327312: mov    %r10,0x28(%rsp)
  0x000000011c327317: mov    %r11,0x20(%rsp)
  0x000000011c32731c: mov    %r12,0x18(%rsp)
  0x000000011c327321: mov    %r13,0x10(%rsp)
  0x000000011c327326: mov    %r14,0x8(%rsp)
  0x000000011c32732b: mov    %r15,(%rsp)
  0x000000011c32732f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c327339: movabs $0x11c3272d9,%rsi  ;   {internal_word}
  0x000000011c327343: mov    %rsp,%rdx
  0x000000011c327346: and    $0xfffffffffffffff0,%rsp
  0x000000011c32734a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32734f: hlt    
[Deopt Handler Code]
  0x000000011c327350: movabs $0x11c327350,%r10  ;   {section_word}
  0x000000011c32735a: push   %r10
  0x000000011c32735c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c327361: hlt    
  0x000000011c327362: hlt    
  0x000000011c327363: hlt    
  0x000000011c327364: hlt    
  0x000000011c327365: hlt    
  0x000000011c327366: hlt    
  0x000000011c327367: hlt    
<nmethod compile_id='41' compiler='C1' level='3' entry='0x000000011c326fa0' size='1848' address='0x000000011c326e10' relocation_offset='296' insts_offset='400' stub_offset='1168' scopes_data_offset='1376' scopes_pcs_offset='1512' dependencies_offset='1816' nul_chk_table_offset='1824' method='java/io/DataInputStream readShort ()S' bytes='40' count='1994' iicount='1994' stamp='1.195'/>
Decoding compiled method 0x000000011c326950:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c326ac0: mov    %eax,-0x14000(%rsp)
  0x000000011c326ac7: push   %rbp
  0x000000011c326ac8: sub    $0x30,%rsp
  0x000000011c326acc: movabs $0x112533790,%rdi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c326ad6: mov    0xdc(%rdi),%ebx
  0x000000011c326adc: add    $0x8,%ebx
  0x000000011c326adf: mov    %ebx,0xdc(%rdi)
  0x000000011c326ae5: movabs $0x1123a9a20,%rdi  ;   {metadata({method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c326aef: and    $0x1ff8,%ebx
  0x000000011c326af5: cmp    $0x0,%ebx
  0x000000011c326af8: je     0x000000011c326c0c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x000000011c326afe: cmp    $0x0,%rsi
  0x000000011c326b02: movabs $0x112533790,%rdi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c326b0c: movabs $0x108,%rbx
  0x000000011c326b16: jne    0x000000011c326b26
  0x000000011c326b1c: movabs $0x118,%rbx
  0x000000011c326b26: mov    (%rdi,%rbx,1),%rax
  0x000000011c326b2a: lea    0x1(%rax),%rax
  0x000000011c326b2e: mov    %rax,(%rdi,%rbx,1)
  0x000000011c326b32: jne    0x000000011c326b52  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x000000011c326b38: movabs $0x112533790,%rsi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c326b42: incl   0x128(%rsi)
  0x000000011c326b48: mov    $0x0,%esi
  0x000000011c326b4d: jmpq   0x000000011c326bfd  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x000000011c326b52: cmp    (%rsi),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x000000011c326c23
  0x000000011c326b55: mov    %rsi,%rdi
  0x000000011c326b58: movabs $0x112533790,%rbx  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c326b62: mov    0x8(%rdi),%edi
  0x000000011c326b65: shl    $0x3,%rdi
  0x000000011c326b69: cmp    0x148(%rbx),%rdi
  0x000000011c326b70: jne    0x000000011c326b7f
  0x000000011c326b72: addq   $0x1,0x150(%rbx)
  0x000000011c326b7a: jmpq   0x000000011c326be5
  0x000000011c326b7f: cmp    0x158(%rbx),%rdi
  0x000000011c326b86: jne    0x000000011c326b95
  0x000000011c326b88: addq   $0x1,0x160(%rbx)
  0x000000011c326b90: jmpq   0x000000011c326be5
  0x000000011c326b95: cmpq   $0x0,0x148(%rbx)
  0x000000011c326ba0: jne    0x000000011c326bb9
  0x000000011c326ba2: mov    %rdi,0x148(%rbx)
  0x000000011c326ba9: movq   $0x1,0x150(%rbx)
  0x000000011c326bb4: jmpq   0x000000011c326be5
  0x000000011c326bb9: cmpq   $0x0,0x158(%rbx)
  0x000000011c326bc4: jne    0x000000011c326bdd
  0x000000011c326bc6: mov    %rdi,0x158(%rbx)
  0x000000011c326bcd: movq   $0x1,0x160(%rbx)
  0x000000011c326bd8: jmpq   0x000000011c326be5
  0x000000011c326bdd: addq   $0x1,0x140(%rbx)
  0x000000011c326be5: movabs $0xffffffffffffffff,%rax
  0x000000011c326bef: callq  0x000000011c24c2e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x000000011c326bf4: mov    %rax,%rsi
  0x000000011c326bf7: shr    $0x10,%esi
  0x000000011c326bfa: xor    %rax,%rsi
  0x000000011c326bfd: mov    %rsi,%rax
  0x000000011c326c00: add    $0x30,%rsp
  0x000000011c326c04: pop    %rbp
  0x000000011c326c05: test   %eax,-0xf83fb0b(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c326c0b: retq   
  0x000000011c326c0c: mov    %rdi,0x8(%rsp)
  0x000000011c326c11: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c326c19: callq  0x000000011c306120  ; OopMap{rsi=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call}
  0x000000011c326c1e: jmpq   0x000000011c326afe
  0x000000011c326c23: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call}
  0x000000011c326c28: nop
  0x000000011c326c29: nop
  0x000000011c326c2a: mov    0x2a8(%r15),%rax
  0x000000011c326c31: movabs $0x0,%r10
  0x000000011c326c3b: mov    %r10,0x2a8(%r15)
  0x000000011c326c42: movabs $0x0,%r10
  0x000000011c326c4c: mov    %r10,0x2b0(%r15)
  0x000000011c326c53: add    $0x30,%rsp
  0x000000011c326c57: pop    %rbp
  0x000000011c326c58: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c326c5d: hlt    
  0x000000011c326c5e: hlt    
  0x000000011c326c5f: hlt    
[Stub Code]
  0x000000011c326c60: nop                       ;   {no_reloc}
  0x000000011c326c61: nop
  0x000000011c326c62: nop
  0x000000011c326c63: nop
  0x000000011c326c64: nop
  0x000000011c326c65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c326c6f: jmpq   0x000000011c326c6f  ;   {runtime_call}
[Exception Handler]
  0x000000011c326c74: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c326c79: mov    %rsp,-0x28(%rsp)
  0x000000011c326c7e: sub    $0x80,%rsp
  0x000000011c326c85: mov    %rax,0x78(%rsp)
  0x000000011c326c8a: mov    %rcx,0x70(%rsp)
  0x000000011c326c8f: mov    %rdx,0x68(%rsp)
  0x000000011c326c94: mov    %rbx,0x60(%rsp)
  0x000000011c326c99: mov    %rbp,0x50(%rsp)
  0x000000011c326c9e: mov    %rsi,0x48(%rsp)
  0x000000011c326ca3: mov    %rdi,0x40(%rsp)
  0x000000011c326ca8: mov    %r8,0x38(%rsp)
  0x000000011c326cad: mov    %r9,0x30(%rsp)
  0x000000011c326cb2: mov    %r10,0x28(%rsp)
  0x000000011c326cb7: mov    %r11,0x20(%rsp)
  0x000000011c326cbc: mov    %r12,0x18(%rsp)
  0x000000011c326cc1: mov    %r13,0x10(%rsp)
  0x000000011c326cc6: mov    %r14,0x8(%rsp)
  0x000000011c326ccb: mov    %r15,(%rsp)
  0x000000011c326ccf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c326cd9: movabs $0x11c326c79,%rsi  ;   {internal_word}
  0x000000011c326ce3: mov    %rsp,%rdx
  0x000000011c326ce6: and    $0xfffffffffffffff0,%rsp
  0x000000011c326cea: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c326cef: hlt    
[Deopt Handler Code]
  0x000000011c326cf0: movabs $0x11c326cf0,%r10  ;   {section_word}
  0x000000011c326cfa: push   %r10
  0x000000011c326cfc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c326d01: hlt    
  0x000000011c326d02: hlt    
  0x000000011c326d03: hlt    
  0x000000011c326d04: hlt    
  0x000000011c326d05: hlt    
  0x000000011c326d06: hlt    
  0x000000011c326d07: hlt    
<nmethod compile_id='43' compiler='C1' level='3' entry='0x000000011c326ac0' size='1176' address='0x000000011c326950' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='798' iicount='798' stamp='1.197'/>
<writer thread='42243'/>
<task_queued compile_id='44' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='384' iicount='384' level='3' stamp='1.197' comment='tiered' hot_count='384'/>
<task_queued compile_id='45' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='384' iicount='384' level='3' stamp='1.197' comment='tiered' hot_count='384'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c329610:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;
  # this:     rsi:rsi   = &apos;java/io/BufferedInputStream&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0xa0]  (sp of caller)
  0x000000011c329820: mov    0x8(%rsi),%r10d
  0x000000011c329824: shl    $0x3,%r10
  0x000000011c329828: cmp    %rax,%r10
  0x000000011c32982b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c329831: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32983c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c329840: mov    %eax,-0x14000(%rsp)
  0x000000011c329847: push   %rbp
  0x000000011c329848: sub    $0x90,%rsp
  0x000000011c32984f: mov    %rsi,0x50(%rsp)
  0x000000011c329854: mov    %rdx,0x60(%rsp)
  0x000000011c329859: mov    %ecx,0x5c(%rsp)
  0x000000011c32985d: mov    %r8d,0x58(%rsp)
  0x000000011c329862: movabs $0x1125c3008,%rdi  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c32986c: mov    0xdc(%rdi),%ebx
  0x000000011c329872: add    $0x8,%ebx
  0x000000011c329875: mov    %ebx,0xdc(%rdi)
  0x000000011c32987b: movabs $0x1123feb38,%rdi  ;   {metadata({method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329885: and    $0x1ff8,%ebx
  0x000000011c32988b: cmp    $0x0,%ebx
  0x000000011c32988e: je     0x000000011c329ee1  ;*aload_0
                                                ; - java.io.BufferedInputStream::read1@0 (line 277)

  0x000000011c329894: mov    0x10(%rsi),%edi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@1 (line 277)

  0x000000011c329897: mov    0x14(%rsi),%ebx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@5 (line 277)

  0x000000011c32989a: sub    %ebx,%edi
  0x000000011c32989c: cmp    $0x0,%edi
  0x000000011c32989f: movabs $0x1125c3008,%rbx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3298a9: movabs $0x108,%rax
  0x000000011c3298b3: jg     0x000000011c3298c3
  0x000000011c3298b9: movabs $0x118,%rax
  0x000000011c3298c3: mov    (%rbx,%rax,1),%r9
  0x000000011c3298c7: lea    0x1(%r9),%r9
  0x000000011c3298cb: mov    %r9,(%rbx,%rax,1)
  0x000000011c3298cf: jg     0x000000011c329a45  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@13 (line 278)

  0x000000011c3298d5: mov    %rsi,%rdi
  0x000000011c3298d8: movabs $0x1125c3008,%rbx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3298e2: addq   $0x1,0x128(%rbx)
  0x000000011c3298ea: movabs $0x1125c20d8,%rdi  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3298f4: mov    0xdc(%rdi),%ebx
  0x000000011c3298fa: add    $0x8,%ebx
  0x000000011c3298fd: mov    %ebx,0xdc(%rdi)
  0x000000011c329903: movabs $0x1123fe680,%rdi  ;   {metadata({method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c32990d: and    $0x7ffff8,%ebx
  0x000000011c329913: cmp    $0x0,%ebx
  0x000000011c329916: je     0x000000011c329ef8
  0x000000011c32991c: mov    0x20(%rsi),%edi
  0x000000011c32991f: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000011c329923: cmp    $0x0,%rdi
  0x000000011c329927: movabs $0x1125c20d8,%rbx  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329931: movabs $0x108,%rax
  0x000000011c32993b: jne    0x000000011c32994b
  0x000000011c329941: movabs $0x118,%rax
  0x000000011c32994b: mov    (%rbx,%rax,1),%r9
  0x000000011c32994f: lea    0x1(%r9),%r9
  0x000000011c329953: mov    %r9,(%rbx,%rax,1)
  0x000000011c329957: je     0x000000011c329e5e  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000011c32995d: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ; implicit exception: dispatches to 0x000000011c329f0f
  0x000000011c329960: cmp    %edi,%r8d
  0x000000011c329963: movabs $0x1125c3008,%rdi  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c32996d: movabs $0x138,%rbx
  0x000000011c329977: jl     0x000000011c329987
  0x000000011c32997d: movabs $0x148,%rbx
  0x000000011c329987: mov    (%rdi,%rbx,1),%rax
  0x000000011c32998b: lea    0x1(%rax),%rax
  0x000000011c32998f: mov    %rax,(%rdi,%rbx,1)
  0x000000011c329993: jl     0x000000011c3299d5  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read1@22 (line 283)

  0x000000011c329999: mov    0x18(%rsi),%edi    ;*getfield markpos
                                                ; - java.io.BufferedInputStream::read1@26 (line 283)

  0x000000011c32999c: cmp    $0x0,%edi
  0x000000011c32999f: movabs $0x1125c3008,%rdi  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3299a9: movabs $0x158,%rbx
  0x000000011c3299b3: jge    0x000000011c3299c3
  0x000000011c3299b9: movabs $0x168,%rbx
  0x000000011c3299c3: mov    (%rdi,%rbx,1),%rax
  0x000000011c3299c7: lea    0x1(%rax),%rax
  0x000000011c3299cb: mov    %rax,(%rdi,%rbx,1)
  0x000000011c3299cf: jl     0x000000011c329b25  ;*ifge
                                                ; - java.io.BufferedInputStream::read1@29 (line 283)

  0x000000011c3299d5: mov    %rsi,%rdi
  0x000000011c3299d8: movabs $0x1125c3008,%rbx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c3299e2: addq   $0x1,0x1b8(%rbx)
  0x000000011c3299ea: mov    %rsi,%rdi
  0x000000011c3299ed: mov    %rdi,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)

  0x000000011c3299f0: nop
  0x000000011c3299f1: nop
  0x000000011c3299f2: nop
  0x000000011c3299f3: nop
  0x000000011c3299f4: nop
  0x000000011c3299f5: nop
  0x000000011c3299f6: nop
  0x000000011c3299f7: callq  0x000000011c24c0a0  ; OopMap{[80]=Oop [96]=Oop off=476}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)
                                                ;   {optimized virtual_call}
  0x000000011c3299fc: mov    0x50(%rsp),%rsi
  0x000000011c329a01: mov    0x10(%rsi),%edx    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@48 (line 287)

  0x000000011c329a04: mov    0x14(%rsi),%ecx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@52 (line 287)

  0x000000011c329a07: sub    %ecx,%edx
  0x000000011c329a09: cmp    $0x0,%edx
  0x000000011c329a0c: movabs $0x1125c3008,%rcx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329a16: movabs $0x1c8,%r8
  0x000000011c329a20: jg     0x000000011c329a30
  0x000000011c329a26: movabs $0x1d8,%r8
  0x000000011c329a30: mov    (%rcx,%r8,1),%rdi
  0x000000011c329a34: lea    0x1(%rdi),%rdi
  0x000000011c329a38: mov    %rdi,(%rcx,%r8,1)
  0x000000011c329a3c: jle    0x000000011c329d40  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@60 (line 288)

  0x000000011c329a42: mov    %rdx,%rdi          ;*iload
                                                ; - java.io.BufferedInputStream::read1@65 (line 290)

  0x000000011c329a45: cmp    0x58(%rsp),%edi
  0x000000011c329a49: movabs $0x1125c3008,%rdx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329a53: movabs $0x1e8,%rcx
  0x000000011c329a5d: jge    0x000000011c329a6d
  0x000000011c329a63: movabs $0x1f8,%rcx
  0x000000011c329a6d: mov    (%rdx,%rcx,1),%r8
  0x000000011c329a71: lea    0x1(%r8),%r8
  0x000000011c329a75: mov    %r8,(%rdx,%rcx,1)
  0x000000011c329a79: jge    0x000000011c329a94  ;*if_icmpge
                                                ; - java.io.BufferedInputStream::read1@68 (line 290)

  0x000000011c329a7f: movabs $0x1125c3008,%rdx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329a89: incl   0x208(%rdx)
  0x000000011c329a8f: jmpq   0x000000011c329a98  ;*goto
                                                ; - java.io.BufferedInputStream::read1@73 (line 290)

  0x000000011c329a94: mov    0x58(%rsp),%edi    ;*istore
                                                ; - java.io.BufferedInputStream::read1@77 (line 290)

  0x000000011c329a98: mov    %rsi,%rdx
  0x000000011c329a9b: movabs $0x1125c3008,%rcx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329aa5: addq   $0x1,0x220(%rcx)
  0x000000011c329aad: movabs $0x1125c20d8,%rdx  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329ab7: mov    0xdc(%rdx),%ecx
  0x000000011c329abd: add    $0x8,%ecx
  0x000000011c329ac0: mov    %ecx,0xdc(%rdx)
  0x000000011c329ac6: movabs $0x1123fe680,%rdx  ;   {metadata({method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329ad0: and    $0x7ffff8,%ecx
  0x000000011c329ad6: cmp    $0x0,%ecx
  0x000000011c329ad9: je     0x000000011c329f14
  0x000000011c329adf: mov    0x20(%rsi),%ebx
  0x000000011c329ae2: shl    $0x3,%rbx          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000011c329ae6: cmp    $0x0,%rbx
  0x000000011c329aea: movabs $0x1125c20d8,%rdx  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329af4: movabs $0x108,%rcx
  0x000000011c329afe: jne    0x000000011c329b0e
  0x000000011c329b04: movabs $0x118,%rcx
  0x000000011c329b0e: mov    (%rdx,%rcx,1),%r8
  0x000000011c329b12: lea    0x1(%r8),%r8
  0x000000011c329b16: mov    %r8,(%rdx,%rcx,1)
  0x000000011c329b1a: jne    0x000000011c329c73
  0x000000011c329b20: jmpq   0x000000011c329dd6  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000011c329b25: mov    %rsi,%rdx
  0x000000011c329b28: movabs $0x1125c3008,%rcx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329b32: addq   $0x1,0x178(%rcx)
  0x000000011c329b3a: movabs $0x1125cd988,%rdx  ;   {metadata(method data for {method} {0x00000001123fe5d0} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329b44: mov    0xdc(%rdx),%ecx
  0x000000011c329b4a: add    $0x8,%ecx
  0x000000011c329b4d: mov    %ecx,0xdc(%rdx)
  0x000000011c329b53: movabs $0x1123fe5d0,%rdx  ;   {metadata({method} {0x00000001123fe5d0} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329b5d: and    $0x7ffff8,%ecx
  0x000000011c329b63: cmp    $0x0,%ecx
  0x000000011c329b66: je     0x000000011c329f2b
  0x000000011c329b6c: mov    0xc(%rsi),%esi
  0x000000011c329b6f: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.BufferedInputStream::getInIfOpen@1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000011c329b73: cmp    $0x0,%rsi
  0x000000011c329b77: movabs $0x1125cd988,%rdx  ;   {metadata(method data for {method} {0x00000001123fe5d0} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329b81: movabs $0x108,%rcx
  0x000000011c329b8b: jne    0x000000011c329b9b
  0x000000011c329b91: movabs $0x118,%rcx
  0x000000011c329b9b: mov    (%rdx,%rcx,1),%r8
  0x000000011c329b9f: lea    0x1(%r8),%r8
  0x000000011c329ba3: mov    %r8,(%rdx,%rcx,1)
  0x000000011c329ba7: je     0x000000011c329d54  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getInIfOpen@6 (line 158)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000011c329bad: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011c329f42
  0x000000011c329bb0: mov    %rsi,%rdx
  0x000000011c329bb3: movabs $0x1125c3008,%rcx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329bbd: mov    0x8(%rdx),%edx
  0x000000011c329bc0: shl    $0x3,%rdx
  0x000000011c329bc4: cmp    0x190(%rcx),%rdx
  0x000000011c329bcb: jne    0x000000011c329bda
  0x000000011c329bcd: addq   $0x1,0x198(%rcx)
  0x000000011c329bd5: jmpq   0x000000011c329c40
  0x000000011c329bda: cmp    0x1a0(%rcx),%rdx
  0x000000011c329be1: jne    0x000000011c329bf0
  0x000000011c329be3: addq   $0x1,0x1a8(%rcx)
  0x000000011c329beb: jmpq   0x000000011c329c40
  0x000000011c329bf0: cmpq   $0x0,0x190(%rcx)
  0x000000011c329bfb: jne    0x000000011c329c14
  0x000000011c329bfd: mov    %rdx,0x190(%rcx)
  0x000000011c329c04: movq   $0x1,0x198(%rcx)
  0x000000011c329c0f: jmpq   0x000000011c329c40
  0x000000011c329c14: cmpq   $0x0,0x1a0(%rcx)
  0x000000011c329c1f: jne    0x000000011c329c38
  0x000000011c329c21: mov    %rdx,0x1a0(%rcx)
  0x000000011c329c28: movq   $0x1,0x1a8(%rcx)
  0x000000011c329c33: jmpq   0x000000011c329c40
  0x000000011c329c38: addq   $0x1,0x188(%rcx)
  0x000000011c329c40: mov    0x60(%rsp),%rdx
  0x000000011c329c45: mov    0x5c(%rsp),%ecx
  0x000000011c329c49: mov    0x58(%rsp),%r8d    ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)

  0x000000011c329c4e: nop
  0x000000011c329c4f: nop
  0x000000011c329c50: nop
  0x000000011c329c51: nop
  0x000000011c329c52: nop
  0x000000011c329c53: nop
  0x000000011c329c54: nop
  0x000000011c329c55: movabs $0xffffffffffffffff,%rax
  0x000000011c329c5f: callq  0x000000011c24c2e0  ; OopMap{off=1092}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {virtual_call}
  0x000000011c329c64: add    $0x90,%rsp
  0x000000011c329c6b: pop    %rbp
  0x000000011c329c6c: test   %eax,-0xf842b72(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c329c72: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@42 (line 284)

  0x000000011c329c73: mov    0x14(%rsi),%edx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@84 (line 291)

  0x000000011c329c76: movabs $0x1125c3008,%rcx  ;   {metadata(method data for {method} {0x00000001123feb38} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329c80: addq   $0x1,0x230(%rcx)
  0x000000011c329c88: mov    %rbx,%rsi
  0x000000011c329c8b: mov    0x60(%rsp),%rcx
  0x000000011c329c90: mov    0x5c(%rsp),%r8d
  0x000000011c329c95: mov    %rdi,%r9
  0x000000011c329c98: mov    %edi,0x68(%rsp)
  0x000000011c329c9c: test   %rsi,%rsi
  0x000000011c329c9f: je     0x000000011c329f47
  0x000000011c329ca5: test   %rcx,%rcx
  0x000000011c329ca8: je     0x000000011c329f47
  0x000000011c329cae: test   %edx,%edx
  0x000000011c329cb0: jl     0x000000011c329f47
  0x000000011c329cb6: test   %r8d,%r8d
  0x000000011c329cb9: jl     0x000000011c329f47
  0x000000011c329cbf: lea    (%rdx,%r9,1),%rdi
  0x000000011c329cc3: cmp    0xc(%rsi),%edi
  0x000000011c329cc6: ja     0x000000011c329f47
  0x000000011c329ccc: lea    (%r8,%r9,1),%rdi
  0x000000011c329cd0: cmp    0xc(%rcx),%edi
  0x000000011c329cd3: ja     0x000000011c329f47
  0x000000011c329cd9: test   %r9d,%r9d
  0x000000011c329cdc: jl     0x000000011c329f47
  0x000000011c329ce2: je     0x000000011c329d1e
  0x000000011c329ce8: movslq %edx,%rdx
  0x000000011c329ceb: movslq %r8d,%r8
  0x000000011c329cee: lea    0x10(%rsi,%rdx,1),%rdi
  0x000000011c329cf3: lea    0x10(%rcx,%r8,1),%rsi
  0x000000011c329cf8: mov    %r9,%rdx
  0x000000011c329cfb: test   $0xf,%esp
  0x000000011c329d01: je     0x000000011c329d19
  0x000000011c329d07: sub    $0x8,%rsp
  0x000000011c329d0b: callq  Stub::jbyte_arraycopy  ;   {runtime_call}
  0x000000011c329d10: add    $0x8,%rsp
  0x000000011c329d14: jmpq   0x000000011c329d1e
  0x000000011c329d19: callq  Stub::jbyte_arraycopy  ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)
                                                ;   {runtime_call}
  0x000000011c329d1e: mov    0x50(%rsp),%rsi
  0x000000011c329d23: mov    0x14(%rsi),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@96 (line 292)

  0x000000011c329d26: add    0x68(%rsp),%eax
  0x000000011c329d2a: mov    %eax,0x14(%rsi)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read1@102 (line 292)

  0x000000011c329d2d: mov    0x68(%rsp),%eax
  0x000000011c329d31: add    $0x90,%rsp
  0x000000011c329d38: pop    %rbp
  0x000000011c329d39: test   %eax,-0xf842c3f(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c329d3f: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@107 (line 293)

  0x000000011c329d40: mov    $0xffffffff,%eax
  0x000000011c329d45: add    $0x90,%rsp
  0x000000011c329d4c: pop    %rbp
  0x000000011c329d4d: test   %eax,-0xf842c53(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c329d53: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@64 (line 288)

  0x000000011c329d54: nopl   0x0(%rax)
  0x000000011c329d58: jmpq   0x000000011c329f60  ;   {no_reloc}
  0x000000011c329d5d: add    %al,(%rax)
  0x000000011c329d5f: add    %al,(%rax)
  0x000000011c329d61: add    %cl,-0x75(%rcx)
  0x000000011c329d64: rex.RXB (bad) 
  0x000000011c329d66: lea    0x20(%rax),%rdi
  0x000000011c329d6a: cmp    0x70(%r15),%rdi
  0x000000011c329d6e: ja     0x000000011c329f6a
  0x000000011c329d74: mov    %rdi,0x60(%r15)
  0x000000011c329d78: mov    0xa8(%rdx),%rcx
  0x000000011c329d7f: mov    %rcx,(%rax)
  0x000000011c329d82: mov    %rdx,%rcx
  0x000000011c329d85: shr    $0x3,%rcx
  0x000000011c329d89: mov    %ecx,0x8(%rax)
  0x000000011c329d8c: xor    %rcx,%rcx
  0x000000011c329d8f: mov    %ecx,0xc(%rax)
  0x000000011c329d92: xor    %rcx,%rcx
  0x000000011c329d95: mov    %rcx,0x10(%rax)
  0x000000011c329d99: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000011c329d9d: mov    %rax,%rdx
  0x000000011c329da0: movabs $0x1125cd988,%rsi  ;   {metadata(method data for {method} {0x00000001123fe5d0} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329daa: addq   $0x1,0x128(%rsi)
  0x000000011c329db2: movabs $0x715aa3e10,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011c329dbc: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000011c329dbf: mov    %rax,0x70(%rsp)
  0x000000011c329dc4: nop
  0x000000011c329dc5: nop
  0x000000011c329dc6: nop
  0x000000011c329dc7: callq  0x000000011c24c0a0  ; OopMap{[96]=Oop [112]=Oop off=1452}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {optimized virtual_call}
  0x000000011c329dcc: mov    0x70(%rsp),%rax
  0x000000011c329dd1: jmpq   0x000000011c329fee  ;*athrow
                                                ; - java.io.BufferedInputStream::getInIfOpen@18 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x000000011c329dd6: mov    %edi,0x68(%rsp)
  0x000000011c329dda: nopw   0x0(%rax,%rax,1)
  0x000000011c329de0: jmpq   0x000000011c329f86  ;   {no_reloc}
  0x000000011c329de5: add    %al,(%rax)
  0x000000011c329de7: add    %al,(%rax)
  0x000000011c329de9: add    %cl,-0x75(%rcx)
  0x000000011c329dec: rex.RXB (bad) 
  0x000000011c329dee: lea    0x20(%rax),%rdi
  0x000000011c329df2: cmp    0x70(%r15),%rdi
  0x000000011c329df6: ja     0x000000011c329f90
  0x000000011c329dfc: mov    %rdi,0x60(%r15)
  0x000000011c329e00: mov    0xa8(%rdx),%rcx
  0x000000011c329e07: mov    %rcx,(%rax)
  0x000000011c329e0a: mov    %rdx,%rcx
  0x000000011c329e0d: shr    $0x3,%rcx
  0x000000011c329e11: mov    %ecx,0x8(%rax)
  0x000000011c329e14: xor    %rcx,%rcx
  0x000000011c329e17: mov    %ecx,0xc(%rax)
  0x000000011c329e1a: xor    %rcx,%rcx
  0x000000011c329e1d: mov    %rcx,0x10(%rax)
  0x000000011c329e21: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000011c329e25: mov    %rax,%rdx
  0x000000011c329e28: movabs $0x1125c20d8,%rsi  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329e32: addq   $0x1,0x128(%rsi)
  0x000000011c329e3a: movabs $0x715aa3e10,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011c329e44: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000011c329e47: mov    %rax,0x78(%rsp)
  0x000000011c329e4c: nop
  0x000000011c329e4d: nop
  0x000000011c329e4e: nop
  0x000000011c329e4f: callq  0x000000011c24c0a0  ; OopMap{[96]=Oop [120]=Oop [80]=Oop off=1588}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {optimized virtual_call}
  0x000000011c329e54: mov    0x78(%rsp),%rax
  0x000000011c329e59: jmpq   0x000000011c329fee  ;*athrow
                                                ; - java.io.BufferedInputStream::getBufIfOpen@18 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x000000011c329e5e: xchg   %ax,%ax
  0x000000011c329e60: jmpq   0x000000011c329fac  ;   {no_reloc}
  0x000000011c329e65: add    %al,(%rax)
  0x000000011c329e67: add    %al,(%rax)
  0x000000011c329e69: add    %cl,-0x75(%rcx)
  0x000000011c329e6c: rex.RXB (bad) 
  0x000000011c329e6e: lea    0x20(%rax),%rdi
  0x000000011c329e72: cmp    0x70(%r15),%rdi
  0x000000011c329e76: ja     0x000000011c329fb6
  0x000000011c329e7c: mov    %rdi,0x60(%r15)
  0x000000011c329e80: mov    0xa8(%rdx),%rcx
  0x000000011c329e87: mov    %rcx,(%rax)
  0x000000011c329e8a: mov    %rdx,%rcx
  0x000000011c329e8d: shr    $0x3,%rcx
  0x000000011c329e91: mov    %ecx,0x8(%rax)
  0x000000011c329e94: xor    %rcx,%rcx
  0x000000011c329e97: mov    %ecx,0xc(%rax)
  0x000000011c329e9a: xor    %rcx,%rcx
  0x000000011c329e9d: mov    %rcx,0x10(%rax)
  0x000000011c329ea1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000011c329ea5: mov    %rax,%rdx
  0x000000011c329ea8: movabs $0x1125c20d8,%rsi  ;   {metadata(method data for {method} {0x00000001123fe680} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x000000011c329eb2: addq   $0x1,0x128(%rsi)
  0x000000011c329eba: movabs $0x715aa3e10,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011c329ec4: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x000000011c329ec7: mov    %rax,0x80(%rsp)
  0x000000011c329ecf: callq  0x000000011c24c0a0  ; OopMap{[96]=Oop [80]=Oop [128]=Oop off=1716}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {optimized virtual_call}
  0x000000011c329ed4: mov    0x80(%rsp),%rax
  0x000000011c329edc: jmpq   0x000000011c329fee
  0x000000011c329ee1: mov    %rdi,0x8(%rsp)
  0x000000011c329ee6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c329eee: callq  0x000000011c306120  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1747}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read1@-1 (line 277)
                                                ;   {runtime_call}
  0x000000011c329ef3: jmpq   0x000000011c329894
  0x000000011c329ef8: mov    %rdi,0x8(%rsp)
  0x000000011c329efd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c329f05: callq  0x000000011c306120  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1770}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x000000011c329f0a: jmpq   0x000000011c32991c
  0x000000011c329f0f: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [80]=Oop rdx=Oop [96]=Oop off=1780}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ;   {runtime_call}
  0x000000011c329f14: mov    %rdx,0x8(%rsp)
  0x000000011c329f19: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c329f21: callq  0x000000011c306120  ; OopMap{[96]=Oop rsi=Oop [80]=Oop off=1798}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x000000011c329f26: jmpq   0x000000011c329adf
  0x000000011c329f2b: mov    %rdx,0x8(%rsp)
  0x000000011c329f30: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c329f38: callq  0x000000011c306120  ; OopMap{[96]=Oop rsi=Oop [80]=Oop off=1821}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getInIfOpen@-1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x000000011c329f3d: jmpq   0x000000011c329b6c
  0x000000011c329f42: callq  0x000000011c301ac0  ; OopMap{[96]=Oop rsi=Oop off=1831}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {runtime_call}
  0x000000011c329f47: callq  0x000000011c24c520  ; OopMap{[80]=Oop off=1836}
                                                ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)
                                                ;   {static_call}
  0x000000011c329f4c: jmpq   0x000000011c329d1e
  0x000000011c329f51: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c329f5b: mov    $0xa050f00,%eax
  0x000000011c329f60: callq  0x000000011c305120  ; OopMap{[96]=Oop off=1861}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x000000011c329f65: jmpq   0x000000011c329d58
  0x000000011c329f6a: mov    %rdx,%rdx
  0x000000011c329f6d: callq  0x000000011c302220  ; OopMap{[96]=Oop off=1874}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x000000011c329f72: jmpq   0x000000011c329d9d
  0x000000011c329f77: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c329f81: mov    $0xa050f00,%eax
  0x000000011c329f86: callq  0x000000011c305120  ; OopMap{[80]=Oop [96]=Oop off=1899}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x000000011c329f8b: jmpq   0x000000011c329de0
  0x000000011c329f90: mov    %rdx,%rdx
  0x000000011c329f93: callq  0x000000011c302220  ; OopMap{[96]=Oop [80]=Oop off=1912}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x000000011c329f98: jmpq   0x000000011c329e25
  0x000000011c329f9d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c329fa7: mov    $0xa050f00,%eax
  0x000000011c329fac: callq  0x000000011c305120  ; OopMap{[80]=Oop [96]=Oop off=1937}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x000000011c329fb1: jmpq   0x000000011c329e60
  0x000000011c329fb6: mov    %rdx,%rdx
  0x000000011c329fb9: callq  0x000000011c302220  ; OopMap{[96]=Oop [80]=Oop off=1950}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x000000011c329fbe: jmpq   0x000000011c329ea5
  0x000000011c329fc3: nop
  0x000000011c329fc4: nop
  0x000000011c329fc5: mov    0x2a8(%r15),%rax
  0x000000011c329fcc: movabs $0x0,%r10
  0x000000011c329fd6: mov    %r10,0x2a8(%r15)
  0x000000011c329fdd: movabs $0x0,%r10
  0x000000011c329fe7: mov    %r10,0x2b0(%r15)
  0x000000011c329fee: add    $0x90,%rsp
  0x000000011c329ff5: pop    %rbp
  0x000000011c329ff6: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c329ffb: hlt    
  0x000000011c329ffc: hlt    
  0x000000011c329ffd: hlt    
  0x000000011c329ffe: hlt    
  0x000000011c329fff: hlt    
[Stub Code]
  0x000000011c32a000: nop                       ;   {no_reloc}
  0x000000011c32a001: nop
  0x000000011c32a002: nop
  0x000000011c32a003: nop
  0x000000011c32a004: nop
  0x000000011c32a005: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32a00f: jmpq   0x000000011c32a00f  ;   {runtime_call}
  0x000000011c32a014: nop
  0x000000011c32a015: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32a01f: jmpq   0x000000011c32a01f  ;   {runtime_call}
  0x000000011c32a024: nop
  0x000000011c32a025: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32a02f: jmpq   0x000000011c32a02f  ;   {runtime_call}
  0x000000011c32a034: nop
  0x000000011c32a035: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32a03f: jmpq   0x000000011c32a03f  ;   {runtime_call}
  0x000000011c32a044: nop
  0x000000011c32a045: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32a04f: jmpq   0x000000011c32a04f  ;   {runtime_call}
  0x000000011c32a054: nop
  0x000000011c32a055: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32a05f: jmpq   0x000000011c32a05f  ;   {runtime_call}
[Exception Handler]
  0x000000011c32a064: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c32a069: mov    %rsp,-0x28(%rsp)
  0x000000011c32a06e: sub    $0x80,%rsp
  0x000000011c32a075: mov    %rax,0x78(%rsp)
  0x000000011c32a07a: mov    %rcx,0x70(%rsp)
  0x000000011c32a07f: mov    %rdx,0x68(%rsp)
  0x000000011c32a084: mov    %rbx,0x60(%rsp)
  0x000000011c32a089: mov    %rbp,0x50(%rsp)
  0x000000011c32a08e: mov    %rsi,0x48(%rsp)
  0x000000011c32a093: mov    %rdi,0x40(%rsp)
  0x000000011c32a098: mov    %r8,0x38(%rsp)
  0x000000011c32a09d: mov    %r9,0x30(%rsp)
  0x000000011c32a0a2: mov    %r10,0x28(%rsp)
  0x000000011c32a0a7: mov    %r11,0x20(%rsp)
  0x000000011c32a0ac: mov    %r12,0x18(%rsp)
  0x000000011c32a0b1: mov    %r13,0x10(%rsp)
  0x000000011c32a0b6: mov    %r14,0x8(%rsp)
  0x000000011c32a0bb: mov    %r15,(%rsp)
  0x000000011c32a0bf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32a0c9: movabs $0x11c32a069,%rsi  ;   {internal_word}
  0x000000011c32a0d3: mov    %rsp,%rdx
  0x000000011c32a0d6: and    $0xfffffffffffffff0,%rsp
  0x000000011c32a0da: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32a0df: hlt    
[Deopt Handler Code]
  0x000000011c32a0e0: movabs $0x11c32a0e0,%r10  ;   {section_word}
  0x000000011c32a0ea: push   %r10
  0x000000011c32a0ec: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32a0f1: hlt    
  0x000000011c32a0f2: hlt    
  0x000000011c32a0f3: hlt    
  0x000000011c32a0f4: hlt    
  0x000000011c32a0f5: hlt    
  0x000000011c32a0f6: hlt    
  0x000000011c32a0f7: hlt    
<nmethod compile_id='37' compiler='C1' level='3' entry='0x000000011c329820' size='4320' address='0x000000011c329610' relocation_offset='296' insts_offset='528' stub_offset='2544' scopes_data_offset='2824' scopes_pcs_offset='3360' dependencies_offset='4288' nul_chk_table_offset='4296' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='1010' iicount='1010' stamp='1.210'/>
Decoding compiled method 0x000000011c32a710:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001125c1868} &apos;readUTF&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c32a880: mov    0x8(%rsi),%r10d
  0x000000011c32a884: shl    $0x3,%r10
  0x000000011c32a888: cmp    %rax,%r10
  0x000000011c32a88b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c32a891: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32a89c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c32a8a0: mov    %eax,-0x14000(%rsp)
  0x000000011c32a8a7: push   %rbp
  0x000000011c32a8a8: sub    $0x30,%rsp
  0x000000011c32a8ac: movabs $0x1125c3570,%rdi  ;   {metadata(method data for {method} {0x00000001125c1868} &apos;readUTF&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32a8b6: mov    0xdc(%rdi),%ebx
  0x000000011c32a8bc: add    $0x8,%ebx
  0x000000011c32a8bf: mov    %ebx,0xdc(%rdi)
  0x000000011c32a8c5: movabs $0x1125c1868,%rdi  ;   {metadata({method} {0x00000001125c1868} &apos;readUTF&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32a8cf: and    $0x1ff8,%ebx
  0x000000011c32a8d5: cmp    $0x0,%ebx
  0x000000011c32a8d8: je     0x000000011c32a908  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 564)

  0x000000011c32a8de: movabs $0x1125c3570,%rdi  ;   {metadata(method data for {method} {0x00000001125c1868} &apos;readUTF&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32a8e8: addq   $0x1,0x108(%rdi)
  0x000000011c32a8f0: nop
  0x000000011c32a8f1: nop
  0x000000011c32a8f2: nop
  0x000000011c32a8f3: nop
  0x000000011c32a8f4: nop
  0x000000011c32a8f5: nop
  0x000000011c32a8f6: nop
  0x000000011c32a8f7: callq  0x000000011c24c520  ; OopMap{off=124}
                                                ;*invokestatic readUTF
                                                ; - java.io.DataInputStream::readUTF@1 (line 564)
                                                ;   {static_call}
  0x000000011c32a8fc: add    $0x30,%rsp
  0x000000011c32a900: pop    %rbp
  0x000000011c32a901: test   %eax,-0xf843807(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32a907: retq   
  0x000000011c32a908: mov    %rdi,0x8(%rsp)
  0x000000011c32a90d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32a915: callq  0x000000011c306120  ; OopMap{rsi=Oop off=154}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 564)
                                                ;   {runtime_call}
  0x000000011c32a91a: jmp    0x000000011c32a8de
  0x000000011c32a91c: nop
  0x000000011c32a91d: nop
  0x000000011c32a91e: mov    0x2a8(%r15),%rax
  0x000000011c32a925: movabs $0x0,%r10
  0x000000011c32a92f: mov    %r10,0x2a8(%r15)
  0x000000011c32a936: movabs $0x0,%r10
  0x000000011c32a940: mov    %r10,0x2b0(%r15)
  0x000000011c32a947: add    $0x30,%rsp
  0x000000011c32a94b: pop    %rbp
  0x000000011c32a94c: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32a951: hlt    
  0x000000011c32a952: hlt    
  0x000000011c32a953: hlt    
  0x000000011c32a954: hlt    
  0x000000011c32a955: hlt    
  0x000000011c32a956: hlt    
  0x000000011c32a957: hlt    
  0x000000011c32a958: hlt    
  0x000000011c32a959: hlt    
  0x000000011c32a95a: hlt    
  0x000000011c32a95b: hlt    
  0x000000011c32a95c: hlt    
  0x000000011c32a95d: hlt    
  0x000000011c32a95e: hlt    
  0x000000011c32a95f: hlt    
[Stub Code]
  0x000000011c32a960: nop                       ;   {no_reloc}
  0x000000011c32a961: nop
  0x000000011c32a962: nop
  0x000000011c32a963: nop
  0x000000011c32a964: nop
  0x000000011c32a965: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32a96f: jmpq   0x000000011c32a96f  ;   {runtime_call}
[Exception Handler]
  0x000000011c32a974: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c32a979: mov    %rsp,-0x28(%rsp)
  0x000000011c32a97e: sub    $0x80,%rsp
  0x000000011c32a985: mov    %rax,0x78(%rsp)
  0x000000011c32a98a: mov    %rcx,0x70(%rsp)
  0x000000011c32a98f: mov    %rdx,0x68(%rsp)
  0x000000011c32a994: mov    %rbx,0x60(%rsp)
  0x000000011c32a999: mov    %rbp,0x50(%rsp)
  0x000000011c32a99e: mov    %rsi,0x48(%rsp)
  0x000000011c32a9a3: mov    %rdi,0x40(%rsp)
  0x000000011c32a9a8: mov    %r8,0x38(%rsp)
  0x000000011c32a9ad: mov    %r9,0x30(%rsp)
  0x000000011c32a9b2: mov    %r10,0x28(%rsp)
  0x000000011c32a9b7: mov    %r11,0x20(%rsp)
  0x000000011c32a9bc: mov    %r12,0x18(%rsp)
  0x000000011c32a9c1: mov    %r13,0x10(%rsp)
  0x000000011c32a9c6: mov    %r14,0x8(%rsp)
  0x000000011c32a9cb: mov    %r15,(%rsp)
  0x000000011c32a9cf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32a9d9: movabs $0x11c32a979,%rsi  ;   {internal_word}
  0x000000011c32a9e3: mov    %rsp,%rdx
  0x000000011c32a9e6: and    $0xfffffffffffffff0,%rsp
  0x000000011c32a9ea: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32a9ef: hlt    
[Deopt Handler Code]
  0x000000011c32a9f0: movabs $0x11c32a9f0,%r10  ;   {section_word}
  0x000000011c32a9fa: push   %r10
  0x000000011c32a9fc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32aa01: hlt    
  0x000000011c32aa02: hlt    
  0x000000011c32aa03: hlt    
  0x000000011c32aa04: hlt    
  0x000000011c32aa05: hlt    
  0x000000011c32aa06: hlt    
  0x000000011c32aa07: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x000000011c32a880' size='888' address='0x000000011c32a710' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='800' dependencies_offset='880' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='601' iicount='601' stamp='1.212'/>
Decoding compiled method 0x000000011c32aad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001125c1240} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011c32ac60: mov    0x8(%rsi),%r10d
  0x000000011c32ac64: shl    $0x3,%r10
  0x000000011c32ac68: cmp    %rax,%r10
  0x000000011c32ac6b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c32ac71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32ac7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c32ac80: mov    %eax,-0x14000(%rsp)
  0x000000011c32ac87: push   %rbp
  0x000000011c32ac88: sub    $0x40,%rsp
  0x000000011c32ac8c: movabs $0x1125c2c08,%rdi  ;   {metadata(method data for {method} {0x00000001125c1240} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32ac96: mov    0xdc(%rdi),%ebx
  0x000000011c32ac9c: add    $0x8,%ebx
  0x000000011c32ac9f: mov    %ebx,0xdc(%rdi)
  0x000000011c32aca5: movabs $0x1125c1240,%rdi  ;   {metadata({method} {0x00000001125c1240} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32acaf: and    $0x1ff8,%ebx
  0x000000011c32acb5: cmp    $0x0,%ebx
  0x000000011c32acb8: je     0x000000011c32aec6  ;*aload_0
                                                ; - java.io.DataInputStream::readUnsignedShort@0 (line 337)

  0x000000011c32acbe: mov    0xc(%rsi),%edi
  0x000000011c32acc1: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.DataInputStream::readUnsignedShort@1 (line 337)

  0x000000011c32acc5: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011c32aedd
  0x000000011c32acc8: mov    %rdi,%rbx
  0x000000011c32accb: movabs $0x1125c2c08,%rax  ;   {metadata(method data for {method} {0x00000001125c1240} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32acd5: mov    0x8(%rbx),%ebx
  0x000000011c32acd8: shl    $0x3,%rbx
  0x000000011c32acdc: cmp    0x110(%rax),%rbx
  0x000000011c32ace3: jne    0x000000011c32acf2
  0x000000011c32ace5: addq   $0x1,0x118(%rax)
  0x000000011c32aced: jmpq   0x000000011c32ad58
  0x000000011c32acf2: cmp    0x120(%rax),%rbx
  0x000000011c32acf9: jne    0x000000011c32ad08
  0x000000011c32acfb: addq   $0x1,0x128(%rax)
  0x000000011c32ad03: jmpq   0x000000011c32ad58
  0x000000011c32ad08: cmpq   $0x0,0x110(%rax)
  0x000000011c32ad13: jne    0x000000011c32ad2c
  0x000000011c32ad15: mov    %rbx,0x110(%rax)
  0x000000011c32ad1c: movq   $0x1,0x118(%rax)
  0x000000011c32ad27: jmpq   0x000000011c32ad58
  0x000000011c32ad2c: cmpq   $0x0,0x120(%rax)
  0x000000011c32ad37: jne    0x000000011c32ad50
  0x000000011c32ad39: mov    %rbx,0x120(%rax)
  0x000000011c32ad40: movq   $0x1,0x128(%rax)
  0x000000011c32ad4b: jmpq   0x000000011c32ad58
  0x000000011c32ad50: addq   $0x1,0x108(%rax)
  0x000000011c32ad58: mov    %rsi,0x20(%rsp)
  0x000000011c32ad5d: mov    %rdi,%rsi          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)

  0x000000011c32ad60: nop
  0x000000011c32ad61: nop
  0x000000011c32ad62: nop
  0x000000011c32ad63: nop
  0x000000011c32ad64: nop
  0x000000011c32ad65: movabs $0xffffffffffffffff,%rax
  0x000000011c32ad6f: callq  0x000000011c24c2e0  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)
                                                ;   {virtual_call}
  0x000000011c32ad74: mov    0x20(%rsp),%rsi
  0x000000011c32ad79: mov    0xc(%rsi),%esi
  0x000000011c32ad7c: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readUnsignedShort@9 (line 338)

  0x000000011c32ad80: cmp    (%rsi),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ; implicit exception: dispatches to 0x000000011c32aee2
  0x000000011c32ad83: mov    %rsi,%rdi
  0x000000011c32ad86: movabs $0x1125c2c08,%rbx  ;   {metadata(method data for {method} {0x00000001125c1240} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32ad90: mov    0x8(%rdi),%edi
  0x000000011c32ad93: shl    $0x3,%rdi
  0x000000011c32ad97: cmp    0x140(%rbx),%rdi
  0x000000011c32ad9e: jne    0x000000011c32adad
  0x000000011c32ada0: addq   $0x1,0x148(%rbx)
  0x000000011c32ada8: jmpq   0x000000011c32ae13
  0x000000011c32adad: cmp    0x150(%rbx),%rdi
  0x000000011c32adb4: jne    0x000000011c32adc3
  0x000000011c32adb6: addq   $0x1,0x158(%rbx)
  0x000000011c32adbe: jmpq   0x000000011c32ae13
  0x000000011c32adc3: cmpq   $0x0,0x140(%rbx)
  0x000000011c32adce: jne    0x000000011c32ade7
  0x000000011c32add0: mov    %rdi,0x140(%rbx)
  0x000000011c32add7: movq   $0x1,0x148(%rbx)
  0x000000011c32ade2: jmpq   0x000000011c32ae13
  0x000000011c32ade7: cmpq   $0x0,0x150(%rbx)
  0x000000011c32adf2: jne    0x000000011c32ae0b
  0x000000011c32adf4: mov    %rdi,0x150(%rbx)
  0x000000011c32adfb: movq   $0x1,0x158(%rbx)
  0x000000011c32ae06: jmpq   0x000000011c32ae13
  0x000000011c32ae0b: addq   $0x1,0x138(%rbx)
  0x000000011c32ae13: mov    %eax,0x28(%rsp)
  0x000000011c32ae17: nop
  0x000000011c32ae18: nop
  0x000000011c32ae19: nop
  0x000000011c32ae1a: nop
  0x000000011c32ae1b: nop
  0x000000011c32ae1c: nop
  0x000000011c32ae1d: movabs $0xffffffffffffffff,%rax
  0x000000011c32ae27: callq  0x000000011c24c2e0  ; OopMap{off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ;   {virtual_call}
  0x000000011c32ae2c: mov    0x28(%rsp),%edx
  0x000000011c32ae30: or     %rax,%rdx
  0x000000011c32ae33: cmp    $0x0,%edx
  0x000000011c32ae36: movabs $0x1125c2c08,%rdx  ;   {metadata(method data for {method} {0x00000001125c1240} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32ae40: movabs $0x168,%rsi
  0x000000011c32ae4a: jge    0x000000011c32ae5a
  0x000000011c32ae50: movabs $0x178,%rsi
  0x000000011c32ae5a: mov    (%rdx,%rsi,1),%rdi
  0x000000011c32ae5e: lea    0x1(%rdi),%rdi
  0x000000011c32ae62: mov    %rdi,(%rdx,%rsi,1)
  0x000000011c32ae66: jl     0x000000011c32ae84  ;*ifge
                                                ; - java.io.DataInputStream::readUnsignedShort@19 (line 339)

  0x000000011c32ae6c: mov    0x28(%rsp),%edx
  0x000000011c32ae70: shl    $0x8,%edx
  0x000000011c32ae73: add    %eax,%edx
  0x000000011c32ae75: mov    %rdx,%rax
  0x000000011c32ae78: add    $0x40,%rsp
  0x000000011c32ae7c: pop    %rbp
  0x000000011c32ae7d: test   %eax,-0xf843d83(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32ae83: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readUnsignedShort@38 (line 341)

  0x000000011c32ae84: nopl   0x0(%rax)
  0x000000011c32ae88: jmpq   0x000000011c32aef6  ;   {no_reloc}
  0x000000011c32ae8d: add    %al,(%rax)
  0x000000011c32ae8f: add    %al,(%rax)
  0x000000011c32ae91: add    %ch,%cl
  0x000000011c32ae93: imul   $0x8b480000,(%rax),%eax  ;*new
                                                ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)

  0x000000011c32ae99: lock movabs $0x1125c2c08,%rdi  ;   {metadata(method data for {method} {0x00000001125c1240} &apos;readUnsignedShort&apos; &apos;()I&apos; in &apos;java/io/DataInputStream&apos;)}
  0x000000011c32aea4: addq   $0x1,0x188(%rdi)
  0x000000011c32aeac: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUnsignedShort@26 (line 340)

  0x000000011c32aeaf: mov    %rax,0x30(%rsp)
  0x000000011c32aeb4: nop
  0x000000011c32aeb5: nop
  0x000000011c32aeb6: nop
  0x000000011c32aeb7: callq  0x000000011c24c0a0  ; OopMap{[48]=Oop off=604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUnsignedShort@26 (line 340)
                                                ;   {optimized virtual_call}
  0x000000011c32aebc: mov    0x30(%rsp),%rax
  0x000000011c32aec1: jmpq   0x000000011c32af35
  0x000000011c32aec6: mov    %rdi,0x8(%rsp)
  0x000000011c32aecb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32aed3: callq  0x000000011c306120  ; OopMap{rsi=Oop off=632}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUnsignedShort@-1 (line 337)
                                                ;   {runtime_call}
  0x000000011c32aed8: jmpq   0x000000011c32acbe
  0x000000011c32aedd: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdi=Oop off=642}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@4 (line 337)
                                                ;   {runtime_call}
  0x000000011c32aee2: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=647}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readUnsignedShort@12 (line 338)
                                                ;   {runtime_call}
  0x000000011c32aee7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c32aef1: mov    $0xa050f00,%eax
  0x000000011c32aef6: callq  0x000000011c305120  ; OopMap{off=667}
                                                ;*new  ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)
                                                ;   {runtime_call}
  0x000000011c32aefb: jmp    0x000000011c32ae88
  0x000000011c32aefd: nop
  0x000000011c32aefe: nop
  0x000000011c32aeff: nop
  0x000000011c32af00: mov    %rdx,%rdx
  0x000000011c32af03: callq  0x000000011c301f60  ; OopMap{off=680}
                                                ;*new  ; - java.io.DataInputStream::readUnsignedShort@22 (line 340)
                                                ;   {runtime_call}
  0x000000011c32af08: jmp    0x000000011c32ae97
  0x000000011c32af0a: nop
  0x000000011c32af0b: nop
  0x000000011c32af0c: mov    0x2a8(%r15),%rax
  0x000000011c32af13: movabs $0x0,%r10
  0x000000011c32af1d: mov    %r10,0x2a8(%r15)
  0x000000011c32af24: movabs $0x0,%r10
  0x000000011c32af2e: mov    %r10,0x2b0(%r15)
  0x000000011c32af35: add    $0x40,%rsp
  0x000000011c32af39: pop    %rbp
  0x000000011c32af3a: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32af3f: hlt    
[Stub Code]
  0x000000011c32af40: nop                       ;   {no_reloc}
  0x000000011c32af41: nop
  0x000000011c32af42: nop
  0x000000011c32af43: nop
  0x000000011c32af44: nop
  0x000000011c32af45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32af4f: jmpq   0x000000011c32af4f  ;   {runtime_call}
  0x000000011c32af54: nop
  0x000000011c32af55: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32af5f: jmpq   0x000000011c32af5f  ;   {runtime_call}
  0x000000011c32af64: nop
  0x000000011c32af65: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32af6f: jmpq   0x000000011c32af6f  ;   {runtime_call}
[Exception Handler]
  0x000000011c32af74: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c32af79: mov    %rsp,-0x28(%rsp)
  0x000000011c32af7e: sub    $0x80,%rsp
  0x000000011c32af85: mov    %rax,0x78(%rsp)
  0x000000011c32af8a: mov    %rcx,0x70(%rsp)
  0x000000011c32af8f: mov    %rdx,0x68(%rsp)
  0x000000011c32af94: mov    %rbx,0x60(%rsp)
  0x000000011c32af99: mov    %rbp,0x50(%rsp)
  0x000000011c32af9e: mov    %rsi,0x48(%rsp)
  0x000000011c32afa3: mov    %rdi,0x40(%rsp)
  0x000000011c32afa8: mov    %r8,0x38(%rsp)
  0x000000011c32afad: mov    %r9,0x30(%rsp)
  0x000000011c32afb2: mov    %r10,0x28(%rsp)
  0x000000011c32afb7: mov    %r11,0x20(%rsp)
  0x000000011c32afbc: mov    %r12,0x18(%rsp)
  0x000000011c32afc1: mov    %r13,0x10(%rsp)
  0x000000011c32afc6: mov    %r14,0x8(%rsp)
  0x000000011c32afcb: mov    %r15,(%rsp)
  0x000000011c32afcf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32afd9: movabs $0x11c32af79,%rsi  ;   {internal_word}
  0x000000011c32afe3: mov    %rsp,%rdx
  0x000000011c32afe6: and    $0xfffffffffffffff0,%rsp
  0x000000011c32afea: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32afef: hlt    
[Deopt Handler Code]
  0x000000011c32aff0: movabs $0x11c32aff0,%r10  ;   {section_word}
  0x000000011c32affa: push   %r10
  0x000000011c32affc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32b001: hlt    
  0x000000011c32b002: hlt    
  0x000000011c32b003: hlt    
  0x000000011c32b004: hlt    
  0x000000011c32b005: hlt    
  0x000000011c32b006: hlt    
  0x000000011c32b007: hlt    
<nmethod compile_id='40' compiler='C1' level='3' entry='0x000000011c32ac60' size='1816' address='0x000000011c32aad0' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1344' scopes_pcs_offset='1480' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='601' iicount='601' stamp='1.216'/>
<writer thread='42243'/>
<task_queued compile_id='46' method='sun/instrument/InstrumentationImpl transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B' bytes='38' count='256' iicount='256' level='3' stamp='1.217' comment='tiered' hot_count='256'/>
<task_queued compile_id='47' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='256' iicount='256' level='1' stamp='1.217' comment='tiered' hot_count='256'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c32b210:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112339670} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx       = char
  #           [sp+0x100]  (sp of caller)
  0x000000011c32b3c0: mov    0x8(%rsi),%r10d
  0x000000011c32b3c4: shl    $0x3,%r10
  0x000000011c32b3c8: cmp    %rax,%r10
  0x000000011c32b3cb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c32b3d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32b3dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c32b3e0: mov    %eax,-0x14000(%rsp)
  0x000000011c32b3e7: push   %rbp
  0x000000011c32b3e8: sub    $0xf0,%rsp
  0x000000011c32b3ef: movabs $0x1125d45d0,%rdi  ;   {metadata(method data for {method} {0x0000000112339670} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c32b3f9: mov    0xdc(%rdi),%ebx
  0x000000011c32b3ff: add    $0x8,%ebx
  0x000000011c32b402: mov    %ebx,0xdc(%rdi)
  0x000000011c32b408: movabs $0x112339670,%rdi  ;   {metadata({method} {0x0000000112339670} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c32b412: and    $0x1ff8,%ebx
  0x000000011c32b418: cmp    $0x0,%ebx
  0x000000011c32b41b: je     0x000000011c32b7aa  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 202)

  0x000000011c32b421: mov    %rsi,%rdi
  0x000000011c32b424: movabs $0x1125d45d0,%rbx  ;   {metadata(method data for {method} {0x0000000112339670} &apos;append&apos; &apos;(C)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c32b42e: addq   $0x1,0x108(%rbx)
  0x000000011c32b436: movabs $0x1125d4fb0,%rdi  ;   {metadata(method data for {method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32b440: mov    0xdc(%rdi),%ebx
  0x000000011c32b446: add    $0x8,%ebx
  0x000000011c32b449: mov    %ebx,0xdc(%rdi)
  0x000000011c32b44f: movabs $0x112336618,%rdi  ;   {metadata({method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32b459: and    $0x7ffff8,%ebx
  0x000000011c32b45f: cmp    $0x0,%ebx
  0x000000011c32b462: je     0x000000011c32b7c1
  0x000000011c32b468: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b46b: inc    %edi
  0x000000011c32b46d: mov    %rsi,%rbx
  0x000000011c32b470: movabs $0x1125d4fb0,%rax  ;   {metadata(method data for {method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32b47a: addq   $0x1,0x108(%rax)
  0x000000011c32b482: movabs $0x1124d7970,%rbx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32b48c: mov    0xdc(%rbx),%eax
  0x000000011c32b492: add    $0x8,%eax
  0x000000011c32b495: mov    %eax,0xdc(%rbx)
  0x000000011c32b49b: movabs $0x1123354e0,%rbx  ;   {metadata({method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32b4a5: and    $0x7ffff8,%eax
  0x000000011c32b4ab: cmp    $0x0,%eax
  0x000000011c32b4ae: je     0x000000011c32b7d8
  0x000000011c32b4b4: mov    0x10(%rsi),%ebx
  0x000000011c32b4b7: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b4bb: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; implicit exception: dispatches to 0x000000011c32b7ef
  0x000000011c32b4be: mov    %rdi,%rcx
  0x000000011c32b4c1: sub    %eax,%ecx
  0x000000011c32b4c3: cmp    $0x0,%ecx
  0x000000011c32b4c6: movabs $0x1124d7970,%rcx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32b4d0: movabs $0x108,%r8
  0x000000011c32b4da: jle    0x000000011c32b4ea
  0x000000011c32b4e0: movabs $0x118,%r8
  0x000000011c32b4ea: mov    (%rcx,%r8,1),%r9
  0x000000011c32b4ee: lea    0x1(%r9),%r9
  0x000000011c32b4f2: mov    %r9,(%rcx,%r8,1)
  0x000000011c32b4f6: jg     0x000000011c32b508  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b4fc: mov    %edx,0xc4(%rsp)
  0x000000011c32b503: jmpq   0x000000011c32b76e  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b508: mov    %eax,0xc0(%rsp)
  0x000000011c32b50f: mov    %rbx,0xc8(%rsp)
  0x000000011c32b517: mov    %edx,0xc4(%rsp)
  0x000000011c32b51e: mov    %rsi,%rcx
  0x000000011c32b521: movabs $0x1124d7970,%r8   ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32b52b: addq   $0x1,0x128(%r8)
  0x000000011c32b533: mov    %rdi,%rdx
  0x000000011c32b536: mov    %rsi,%rdi
  0x000000011c32b539: mov    %rdi,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b53c: mov    %rdi,0xd0(%rsp)
  0x000000011c32b544: nop
  0x000000011c32b545: nop
  0x000000011c32b546: nop
  0x000000011c32b547: callq  0x000000011c24c0a0  ; OopMap{[208]=Oop [200]=Oop off=396}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {optimized virtual_call}
  0x000000011c32b54c: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b54f: movabs $0x1124d7970,%rbx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32b559: addq   $0x1,0x138(%rbx)
  0x000000011c32b561: movabs $0x11258f020,%rbx  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c32b56b: mov    0xdc(%rbx),%edx
  0x000000011c32b571: add    $0x8,%edx
  0x000000011c32b574: mov    %edx,0xdc(%rbx)
  0x000000011c32b57a: movabs $0x1123dac50,%rbx  ;   {metadata({method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c32b584: and    $0x7ffff8,%edx
  0x000000011c32b58a: cmp    $0x0,%edx
  0x000000011c32b58d: je     0x000000011c32b7f4
  0x000000011c32b593: mov    %r8,%rbx
  0x000000011c32b596: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c32b5a0: movslq %ebx,%rbx
  0x000000011c32b5a3: mov    %rbx,%rdi
  0x000000011c32b5a6: cmp    $0xffffff,%rbx
  0x000000011c32b5ad: ja     0x000000011c32b80b
  0x000000011c32b5b3: movabs $0x17,%rsi
  0x000000011c32b5bd: lea    (%rsi,%rbx,2),%rsi
  0x000000011c32b5c1: and    $0xfffffffffffffff8,%rsi
  0x000000011c32b5c5: mov    0x60(%r15),%rax
  0x000000011c32b5c9: lea    (%rax,%rsi,1),%rsi
  0x000000011c32b5cd: cmp    0x70(%r15),%rsi
  0x000000011c32b5d1: ja     0x000000011c32b80b
  0x000000011c32b5d7: mov    %rsi,0x60(%r15)
  0x000000011c32b5db: sub    %rax,%rsi
  0x000000011c32b5de: movq   $0x1,(%rax)
  0x000000011c32b5e5: mov    %rdx,%rcx
  0x000000011c32b5e8: shr    $0x3,%rcx
  0x000000011c32b5ec: mov    %ecx,0x8(%rax)
  0x000000011c32b5ef: mov    %ebx,0xc(%rax)
  0x000000011c32b5f2: sub    $0x10,%rsi
  0x000000011c32b5f6: je     0x000000011c32b60d
  0x000000011c32b5fc: xor    %rbx,%rbx
  0x000000011c32b5ff: shr    $0x3,%rsi
  0x000000011c32b603: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c32b608: dec    %rsi
  0x000000011c32b60b: jne    0x000000011c32b603  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b60d: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c32b617: addq   $0x1,0x108(%rsi)
  0x000000011c32b61f: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32b629: mov    0xdc(%rsi),%edx
  0x000000011c32b62f: add    $0x8,%edx
  0x000000011c32b632: mov    %edx,0xdc(%rsi)
  0x000000011c32b638: movabs $0x1123b6508,%rsi  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32b642: and    $0x7ffff8,%edx
  0x000000011c32b648: cmp    $0x0,%edx
  0x000000011c32b64b: je     0x000000011c32b815
  0x000000011c32b651: mov    0xc0(%rsp),%esi
  0x000000011c32b658: cmp    %r8d,%esi
  0x000000011c32b65b: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32b665: movabs $0x108,%rcx
  0x000000011c32b66f: jg     0x000000011c32b67f
  0x000000011c32b675: movabs $0x118,%rcx
  0x000000011c32b67f: mov    (%rdx,%rcx,1),%r9
  0x000000011c32b683: lea    0x1(%r9),%r9
  0x000000011c32b687: mov    %r9,(%rdx,%rcx,1)
  0x000000011c32b68b: jg     0x000000011c32b6a9  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b691: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32b69b: incl   0x128(%rdx)
  0x000000011c32b6a1: mov    %rsi,%r9
  0x000000011c32b6a4: jmpq   0x000000011c32b6ac  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b6a9: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b6ac: mov    0xc8(%rsp),%rbx
  0x000000011c32b6b4: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c32b6be: addq   $0x1,0x118(%rsi)
  0x000000011c32b6c6: mov    %rbx,%rsi
  0x000000011c32b6c9: mov    $0x0,%edx
  0x000000011c32b6ce: mov    %rax,%rcx
  0x000000011c32b6d1: mov    $0x0,%r8d
  0x000000011c32b6d7: mov    %rax,0xd8(%rsp)
  0x000000011c32b6df: lea    (%rdx,%r9,1),%rdi
  0x000000011c32b6e3: cmp    0xc(%rsi),%edi
  0x000000011c32b6e6: ja     0x000000011c32b82c
  0x000000011c32b6ec: lea    (%r8,%r9,1),%rdi
  0x000000011c32b6f0: cmp    0xc(%rcx),%edi
  0x000000011c32b6f3: ja     0x000000011c32b82c
  0x000000011c32b6f9: test   %r9d,%r9d
  0x000000011c32b6fc: jl     0x000000011c32b82c
  0x000000011c32b702: je     0x000000011c32b73e
  0x000000011c32b708: movslq %edx,%rdx
  0x000000011c32b70b: movslq %r8d,%r8
  0x000000011c32b70e: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011c32b713: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011c32b718: mov    %r9,%rdx
  0x000000011c32b71b: test   $0xf,%esp
  0x000000011c32b721: je     0x000000011c32b739
  0x000000011c32b727: sub    $0x8,%rsp
  0x000000011c32b72b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011c32b730: add    $0x8,%rsp
  0x000000011c32b734: jmpq   0x000000011c32b73e
  0x000000011c32b739: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b73e: mov    0xd8(%rsp),%rax
  0x000000011c32b746: mov    0xd0(%rsp),%rsi
  0x000000011c32b74e: mov    %rax,%r10
  0x000000011c32b751: shr    $0x3,%r10
  0x000000011c32b755: mov    %r10d,0x10(%rsi)
  0x000000011c32b759: mov    %rsi,%rax
  0x000000011c32b75c: shr    $0x9,%rax
  0x000000011c32b760: movabs $0x10c974000,%rdi
  0x000000011c32b76a: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b76e: mov    0xc4(%rsp),%edx
  0x000000011c32b775: mov    0x10(%rsi),%eax
  0x000000011c32b778: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b77c: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b77f: mov    %rdi,%rbx
  0x000000011c32b782: inc    %ebx
  0x000000011c32b784: mov    %ebx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b787: movslq %edi,%rbx
  0x000000011c32b78a: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000011c32b839
  0x000000011c32b78d: jae    0x000000011c32b843
  0x000000011c32b793: mov    %dx,0x10(%rax,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)

  0x000000011c32b798: mov    %rsi,%rax
  0x000000011c32b79b: add    $0xf0,%rsp
  0x000000011c32b7a2: pop    %rbp
  0x000000011c32b7a3: test   %eax,-0xf8446a9(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32b7a9: retq   
  0x000000011c32b7aa: mov    %rdi,0x8(%rsp)
  0x000000011c32b7af: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32b7b7: callq  0x000000011c306120  ; OopMap{rsi=Oop off=1020}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b7bc: jmpq   0x000000011c32b421
  0x000000011c32b7c1: mov    %rdi,0x8(%rsp)
  0x000000011c32b7c6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32b7ce: callq  0x000000011c306120  ; OopMap{rsi=Oop off=1043}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b7d3: jmpq   0x000000011c32b468
  0x000000011c32b7d8: mov    %rbx,0x8(%rsp)
  0x000000011c32b7dd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32b7e5: callq  0x000000011c306120  ; OopMap{rsi=Oop off=1066}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b7ea: jmpq   0x000000011c32b4b4
  0x000000011c32b7ef: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rbx=Oop off=1076}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b7f4: mov    %rbx,0x8(%rsp)
  0x000000011c32b7f9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32b801: callq  0x000000011c306120  ; OopMap{[208]=Oop [200]=Oop off=1094}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b806: jmpq   0x000000011c32b593
  0x000000011c32b80b: callq  0x000000011c302b20  ; OopMap{[208]=Oop [200]=Oop off=1104}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b810: jmpq   0x000000011c32b60d
  0x000000011c32b815: mov    %rsi,0x8(%rsp)
  0x000000011c32b81a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32b822: callq  0x000000011c306120  ; OopMap{[208]=Oop [200]=Oop rax=Oop off=1127}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b827: jmpq   0x000000011c32b651
  0x000000011c32b82c: nop
  0x000000011c32b82d: nop
  0x000000011c32b82e: nop
  0x000000011c32b82f: callq  0x000000011c24c520  ; OopMap{[208]=Oop [216]=Oop off=1140}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {static_call}
  0x000000011c32b834: jmpq   0x000000011c32b73e
  0x000000011c32b839: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rax=Oop off=1150}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b83e: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rax=Oop off=1155}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b843: mov    %rdi,(%rsp)
  0x000000011c32b847: callq  0x000000011c274080  ; OopMap{rsi=Oop rax=Oop off=1164}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ;   {runtime_call}
  0x000000011c32b84c: nop
  0x000000011c32b84d: nop
  0x000000011c32b84e: mov    0x2a8(%r15),%rax
  0x000000011c32b855: movabs $0x0,%r10
  0x000000011c32b85f: mov    %r10,0x2a8(%r15)
  0x000000011c32b866: movabs $0x0,%r10
  0x000000011c32b870: mov    %r10,0x2b0(%r15)
  0x000000011c32b877: add    $0xf0,%rsp
  0x000000011c32b87e: pop    %rbp
  0x000000011c32b87f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32b884: hlt    
  0x000000011c32b885: hlt    
  0x000000011c32b886: hlt    
  0x000000011c32b887: hlt    
  0x000000011c32b888: hlt    
  0x000000011c32b889: hlt    
  0x000000011c32b88a: hlt    
  0x000000011c32b88b: hlt    
  0x000000011c32b88c: hlt    
  0x000000011c32b88d: hlt    
  0x000000011c32b88e: hlt    
  0x000000011c32b88f: hlt    
  0x000000011c32b890: hlt    
  0x000000011c32b891: hlt    
  0x000000011c32b892: hlt    
  0x000000011c32b893: hlt    
  0x000000011c32b894: hlt    
  0x000000011c32b895: hlt    
  0x000000011c32b896: hlt    
  0x000000011c32b897: hlt    
  0x000000011c32b898: hlt    
  0x000000011c32b899: hlt    
  0x000000011c32b89a: hlt    
  0x000000011c32b89b: hlt    
  0x000000011c32b89c: hlt    
  0x000000011c32b89d: hlt    
  0x000000011c32b89e: hlt    
  0x000000011c32b89f: hlt    
[Stub Code]
  0x000000011c32b8a0: nop                       ;   {no_reloc}
  0x000000011c32b8a1: nop
  0x000000011c32b8a2: nop
  0x000000011c32b8a3: nop
  0x000000011c32b8a4: nop
  0x000000011c32b8a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32b8af: jmpq   0x000000011c32b8af  ;   {runtime_call}
  0x000000011c32b8b4: nop
  0x000000011c32b8b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32b8bf: jmpq   0x000000011c32b8bf  ;   {runtime_call}
[Exception Handler]
  0x000000011c32b8c4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c32b8c9: mov    %rsp,-0x28(%rsp)
  0x000000011c32b8ce: sub    $0x80,%rsp
  0x000000011c32b8d5: mov    %rax,0x78(%rsp)
  0x000000011c32b8da: mov    %rcx,0x70(%rsp)
  0x000000011c32b8df: mov    %rdx,0x68(%rsp)
  0x000000011c32b8e4: mov    %rbx,0x60(%rsp)
  0x000000011c32b8e9: mov    %rbp,0x50(%rsp)
  0x000000011c32b8ee: mov    %rsi,0x48(%rsp)
  0x000000011c32b8f3: mov    %rdi,0x40(%rsp)
  0x000000011c32b8f8: mov    %r8,0x38(%rsp)
  0x000000011c32b8fd: mov    %r9,0x30(%rsp)
  0x000000011c32b902: mov    %r10,0x28(%rsp)
  0x000000011c32b907: mov    %r11,0x20(%rsp)
  0x000000011c32b90c: mov    %r12,0x18(%rsp)
  0x000000011c32b911: mov    %r13,0x10(%rsp)
  0x000000011c32b916: mov    %r14,0x8(%rsp)
  0x000000011c32b91b: mov    %r15,(%rsp)
  0x000000011c32b91f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32b929: movabs $0x11c32b8c9,%rsi  ;   {internal_word}
  0x000000011c32b933: mov    %rsp,%rdx
  0x000000011c32b936: and    $0xfffffffffffffff0,%rsp
  0x000000011c32b93a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32b93f: hlt    
[Deopt Handler Code]
  0x000000011c32b940: movabs $0x11c32b940,%r10  ;   {section_word}
  0x000000011c32b94a: push   %r10
  0x000000011c32b94c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32b951: hlt    
  0x000000011c32b952: hlt    
  0x000000011c32b953: hlt    
  0x000000011c32b954: hlt    
  0x000000011c32b955: hlt    
  0x000000011c32b956: hlt    
  0x000000011c32b957: hlt    
<nmethod compile_id='44' compiler='C1' level='3' entry='0x000000011c32b3c0' size='2784' address='0x000000011c32b210' relocation_offset='296' insts_offset='432' stub_offset='1680' scopes_data_offset='1904' scopes_pcs_offset='2232' dependencies_offset='2744' nul_chk_table_offset='2752' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='385' iicount='385' stamp='1.225'/>
Decoding compiled method 0x000000011c32bd10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = char
  #           [sp+0xe0]  (sp of caller)
  0x000000011c32bec0: mov    0x8(%rsi),%r10d
  0x000000011c32bec4: shl    $0x3,%r10
  0x000000011c32bec8: cmp    %rax,%r10
  0x000000011c32becb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c32bed1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32bedc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c32bee0: mov    %eax,-0x14000(%rsp)
  0x000000011c32bee7: push   %rbp
  0x000000011c32bee8: sub    $0xd0,%rsp
  0x000000011c32beef: movabs $0x1125d4fb0,%rdi  ;   {metadata(method data for {method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32bef9: mov    0xdc(%rdi),%ebx
  0x000000011c32beff: add    $0x8,%ebx
  0x000000011c32bf02: mov    %ebx,0xdc(%rdi)
  0x000000011c32bf08: movabs $0x112336618,%rdi  ;   {metadata({method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32bf12: and    $0x1ff8,%ebx
  0x000000011c32bf18: cmp    $0x0,%ebx
  0x000000011c32bf1b: je     0x000000011c32c262  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 649)

  0x000000011c32bf21: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x000000011c32bf24: inc    %edi
  0x000000011c32bf26: mov    %rsi,%rbx
  0x000000011c32bf29: movabs $0x1125d4fb0,%rax  ;   {metadata(method data for {method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32bf33: addq   $0x1,0x108(%rax)
  0x000000011c32bf3b: movabs $0x1124d7970,%rbx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32bf45: mov    0xdc(%rbx),%eax
  0x000000011c32bf4b: add    $0x8,%eax
  0x000000011c32bf4e: mov    %eax,0xdc(%rbx)
  0x000000011c32bf54: movabs $0x1123354e0,%rbx  ;   {metadata({method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32bf5e: and    $0x7ffff8,%eax
  0x000000011c32bf64: cmp    $0x0,%eax
  0x000000011c32bf67: je     0x000000011c32c279
  0x000000011c32bf6d: mov    0x10(%rsi),%ebx
  0x000000011c32bf70: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32bf74: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x000000011c32c290
  0x000000011c32bf77: mov    %rdi,%rcx
  0x000000011c32bf7a: sub    %eax,%ecx
  0x000000011c32bf7c: cmp    $0x0,%ecx
  0x000000011c32bf7f: movabs $0x1124d7970,%rcx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32bf89: movabs $0x108,%r8
  0x000000011c32bf93: jle    0x000000011c32bfa3
  0x000000011c32bf99: movabs $0x118,%r8
  0x000000011c32bfa3: mov    (%rcx,%r8,1),%r9
  0x000000011c32bfa7: lea    0x1(%r9),%r9
  0x000000011c32bfab: mov    %r9,(%rcx,%r8,1)
  0x000000011c32bfaf: jg     0x000000011c32bfc1  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32bfb5: mov    %edx,0xac(%rsp)
  0x000000011c32bfbc: jmpq   0x000000011c32c226  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32bfc1: mov    %eax,0xa8(%rsp)
  0x000000011c32bfc8: mov    %rbx,0xb0(%rsp)
  0x000000011c32bfd0: mov    %edx,0xac(%rsp)
  0x000000011c32bfd7: mov    %rsi,%rcx
  0x000000011c32bfda: movabs $0x1124d7970,%r8   ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32bfe4: addq   $0x1,0x128(%r8)
  0x000000011c32bfec: mov    %rdi,%rdx
  0x000000011c32bfef: mov    %rsi,%rdi
  0x000000011c32bff2: mov    %rdi,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32bff5: mov    %rdi,0xb8(%rsp)
  0x000000011c32bffd: nop
  0x000000011c32bffe: nop
  0x000000011c32bfff: callq  0x000000011c24c0a0  ; OopMap{[184]=Oop [176]=Oop off=324}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x000000011c32c004: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32c007: movabs $0x1124d7970,%rbx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32c011: addq   $0x1,0x138(%rbx)
  0x000000011c32c019: movabs $0x11258f020,%rbx  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c32c023: mov    0xdc(%rbx),%edx
  0x000000011c32c029: add    $0x8,%edx
  0x000000011c32c02c: mov    %edx,0xdc(%rbx)
  0x000000011c32c032: movabs $0x1123dac50,%rbx  ;   {metadata({method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c32c03c: and    $0x7ffff8,%edx
  0x000000011c32c042: cmp    $0x0,%edx
  0x000000011c32c045: je     0x000000011c32c295
  0x000000011c32c04b: mov    %r8,%rbx
  0x000000011c32c04e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c32c058: movslq %ebx,%rbx
  0x000000011c32c05b: mov    %rbx,%rdi
  0x000000011c32c05e: cmp    $0xffffff,%rbx
  0x000000011c32c065: ja     0x000000011c32c2ac
  0x000000011c32c06b: movabs $0x17,%rsi
  0x000000011c32c075: lea    (%rsi,%rbx,2),%rsi
  0x000000011c32c079: and    $0xfffffffffffffff8,%rsi
  0x000000011c32c07d: mov    0x60(%r15),%rax
  0x000000011c32c081: lea    (%rax,%rsi,1),%rsi
  0x000000011c32c085: cmp    0x70(%r15),%rsi
  0x000000011c32c089: ja     0x000000011c32c2ac
  0x000000011c32c08f: mov    %rsi,0x60(%r15)
  0x000000011c32c093: sub    %rax,%rsi
  0x000000011c32c096: movq   $0x1,(%rax)
  0x000000011c32c09d: mov    %rdx,%rcx
  0x000000011c32c0a0: shr    $0x3,%rcx
  0x000000011c32c0a4: mov    %ecx,0x8(%rax)
  0x000000011c32c0a7: mov    %ebx,0xc(%rax)
  0x000000011c32c0aa: sub    $0x10,%rsi
  0x000000011c32c0ae: je     0x000000011c32c0c5
  0x000000011c32c0b4: xor    %rbx,%rbx
  0x000000011c32c0b7: shr    $0x3,%rsi
  0x000000011c32c0bb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c32c0c0: dec    %rsi
  0x000000011c32c0c3: jne    0x000000011c32c0bb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32c0c5: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c32c0cf: addq   $0x1,0x108(%rsi)
  0x000000011c32c0d7: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32c0e1: mov    0xdc(%rsi),%edx
  0x000000011c32c0e7: add    $0x8,%edx
  0x000000011c32c0ea: mov    %edx,0xdc(%rsi)
  0x000000011c32c0f0: movabs $0x1123b6508,%rsi  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32c0fa: and    $0x7ffff8,%edx
  0x000000011c32c100: cmp    $0x0,%edx
  0x000000011c32c103: je     0x000000011c32c2b6
  0x000000011c32c109: mov    0xa8(%rsp),%esi
  0x000000011c32c110: cmp    %r8d,%esi
  0x000000011c32c113: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32c11d: movabs $0x108,%rcx
  0x000000011c32c127: jg     0x000000011c32c137
  0x000000011c32c12d: movabs $0x118,%rcx
  0x000000011c32c137: mov    (%rdx,%rcx,1),%r9
  0x000000011c32c13b: lea    0x1(%r9),%r9
  0x000000011c32c13f: mov    %r9,(%rdx,%rcx,1)
  0x000000011c32c143: jg     0x000000011c32c161  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32c149: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32c153: incl   0x128(%rdx)
  0x000000011c32c159: mov    %rsi,%r9
  0x000000011c32c15c: jmpq   0x000000011c32c164  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32c161: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32c164: mov    0xb0(%rsp),%rbx
  0x000000011c32c16c: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c32c176: addq   $0x1,0x118(%rsi)
  0x000000011c32c17e: mov    %rbx,%rsi
  0x000000011c32c181: mov    $0x0,%edx
  0x000000011c32c186: mov    %rax,%rcx
  0x000000011c32c189: mov    $0x0,%r8d
  0x000000011c32c18f: mov    %rax,0xc0(%rsp)
  0x000000011c32c197: lea    (%rdx,%r9,1),%rdi
  0x000000011c32c19b: cmp    0xc(%rsi),%edi
  0x000000011c32c19e: ja     0x000000011c32c2cd
  0x000000011c32c1a4: lea    (%r8,%r9,1),%rdi
  0x000000011c32c1a8: cmp    0xc(%rcx),%edi
  0x000000011c32c1ab: ja     0x000000011c32c2cd
  0x000000011c32c1b1: test   %r9d,%r9d
  0x000000011c32c1b4: jl     0x000000011c32c2cd
  0x000000011c32c1ba: je     0x000000011c32c1f6
  0x000000011c32c1c0: movslq %edx,%rdx
  0x000000011c32c1c3: movslq %r8d,%r8
  0x000000011c32c1c6: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011c32c1cb: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011c32c1d0: mov    %r9,%rdx
  0x000000011c32c1d3: test   $0xf,%esp
  0x000000011c32c1d9: je     0x000000011c32c1f1
  0x000000011c32c1df: sub    $0x8,%rsp
  0x000000011c32c1e3: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011c32c1e8: add    $0x8,%rsp
  0x000000011c32c1ec: jmpq   0x000000011c32c1f6
  0x000000011c32c1f1: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c32c1f6: mov    0xc0(%rsp),%rax
  0x000000011c32c1fe: mov    0xb8(%rsp),%rsi
  0x000000011c32c206: mov    %rax,%r10
  0x000000011c32c209: shr    $0x3,%r10
  0x000000011c32c20d: mov    %r10d,0x10(%rsi)
  0x000000011c32c211: mov    %rsi,%rax
  0x000000011c32c214: shr    $0x9,%rax
  0x000000011c32c218: movabs $0x10c974000,%rdi
  0x000000011c32c222: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c32c226: mov    0xac(%rsp),%edx
  0x000000011c32c22d: mov    0x10(%rsi),%eax
  0x000000011c32c230: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)

  0x000000011c32c234: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x000000011c32c237: mov    %rdi,%rbx
  0x000000011c32c23a: inc    %ebx
  0x000000011c32c23c: mov    %ebx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x000000011c32c23f: movslq %edi,%rbx
  0x000000011c32c242: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000011c32c2d9
  0x000000011c32c245: jae    0x000000011c32c2e3
  0x000000011c32c24b: mov    %dx,0x10(%rax,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x000000011c32c250: mov    %rsi,%rax
  0x000000011c32c253: add    $0xd0,%rsp
  0x000000011c32c25a: pop    %rbp
  0x000000011c32c25b: test   %eax,-0xf845161(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32c261: retq   
  0x000000011c32c262: mov    %rdi,0x8(%rsp)
  0x000000011c32c267: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32c26f: callq  0x000000011c306120  ; OopMap{rsi=Oop off=948}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ;   {runtime_call}
  0x000000011c32c274: jmpq   0x000000011c32bf21
  0x000000011c32c279: mov    %rbx,0x8(%rsp)
  0x000000011c32c27e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32c286: callq  0x000000011c306120  ; OopMap{rsi=Oop off=971}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c32c28b: jmpq   0x000000011c32bf6d
  0x000000011c32c290: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rbx=Oop off=981}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c32c295: mov    %rbx,0x8(%rsp)
  0x000000011c32c29a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32c2a2: callq  0x000000011c306120  ; OopMap{[184]=Oop [176]=Oop off=999}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c32c2a7: jmpq   0x000000011c32c04b
  0x000000011c32c2ac: callq  0x000000011c302b20  ; OopMap{[184]=Oop [176]=Oop off=1009}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c32c2b1: jmpq   0x000000011c32c0c5
  0x000000011c32c2b6: mov    %rsi,0x8(%rsp)
  0x000000011c32c2bb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32c2c3: callq  0x000000011c306120  ; OopMap{[184]=Oop [176]=Oop rax=Oop off=1032}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c32c2c8: jmpq   0x000000011c32c109
  0x000000011c32c2cd: nop
  0x000000011c32c2ce: nop
  0x000000011c32c2cf: callq  0x000000011c24c520  ; OopMap{[184]=Oop [192]=Oop off=1044}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {static_call}
  0x000000011c32c2d4: jmpq   0x000000011c32c1f6
  0x000000011c32c2d9: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rax=Oop off=1054}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000011c32c2de: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rax=Oop off=1059}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000011c32c2e3: mov    %rdi,(%rsp)
  0x000000011c32c2e7: callq  0x000000011c274080  ; OopMap{rsi=Oop rax=Oop off=1068}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000011c32c2ec: nop
  0x000000011c32c2ed: nop
  0x000000011c32c2ee: mov    0x2a8(%r15),%rax
  0x000000011c32c2f5: movabs $0x0,%r10
  0x000000011c32c2ff: mov    %r10,0x2a8(%r15)
  0x000000011c32c306: movabs $0x0,%r10
  0x000000011c32c310: mov    %r10,0x2b0(%r15)
  0x000000011c32c317: add    $0xd0,%rsp
  0x000000011c32c31e: pop    %rbp
  0x000000011c32c31f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32c324: hlt    
  0x000000011c32c325: hlt    
  0x000000011c32c326: hlt    
  0x000000011c32c327: hlt    
  0x000000011c32c328: hlt    
  0x000000011c32c329: hlt    
  0x000000011c32c32a: hlt    
  0x000000011c32c32b: hlt    
  0x000000011c32c32c: hlt    
  0x000000011c32c32d: hlt    
  0x000000011c32c32e: hlt    
  0x000000011c32c32f: hlt    
  0x000000011c32c330: hlt    
  0x000000011c32c331: hlt    
  0x000000011c32c332: hlt    
  0x000000011c32c333: hlt    
  0x000000011c32c334: hlt    
  0x000000011c32c335: hlt    
  0x000000011c32c336: hlt    
  0x000000011c32c337: hlt    
  0x000000011c32c338: hlt    
  0x000000011c32c339: hlt    
  0x000000011c32c33a: hlt    
  0x000000011c32c33b: hlt    
  0x000000011c32c33c: hlt    
  0x000000011c32c33d: hlt    
  0x000000011c32c33e: hlt    
  0x000000011c32c33f: hlt    
[Stub Code]
  0x000000011c32c340: nop                       ;   {no_reloc}
  0x000000011c32c341: nop
  0x000000011c32c342: nop
  0x000000011c32c343: nop
  0x000000011c32c344: nop
  0x000000011c32c345: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32c34f: jmpq   0x000000011c32c34f  ;   {runtime_call}
  0x000000011c32c354: nop
  0x000000011c32c355: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32c35f: jmpq   0x000000011c32c35f  ;   {runtime_call}
[Exception Handler]
  0x000000011c32c364: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c32c369: mov    %rsp,-0x28(%rsp)
  0x000000011c32c36e: sub    $0x80,%rsp
  0x000000011c32c375: mov    %rax,0x78(%rsp)
  0x000000011c32c37a: mov    %rcx,0x70(%rsp)
  0x000000011c32c37f: mov    %rdx,0x68(%rsp)
  0x000000011c32c384: mov    %rbx,0x60(%rsp)
  0x000000011c32c389: mov    %rbp,0x50(%rsp)
  0x000000011c32c38e: mov    %rsi,0x48(%rsp)
  0x000000011c32c393: mov    %rdi,0x40(%rsp)
  0x000000011c32c398: mov    %r8,0x38(%rsp)
  0x000000011c32c39d: mov    %r9,0x30(%rsp)
  0x000000011c32c3a2: mov    %r10,0x28(%rsp)
  0x000000011c32c3a7: mov    %r11,0x20(%rsp)
  0x000000011c32c3ac: mov    %r12,0x18(%rsp)
  0x000000011c32c3b1: mov    %r13,0x10(%rsp)
  0x000000011c32c3b6: mov    %r14,0x8(%rsp)
  0x000000011c32c3bb: mov    %r15,(%rsp)
  0x000000011c32c3bf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32c3c9: movabs $0x11c32c369,%rsi  ;   {internal_word}
  0x000000011c32c3d3: mov    %rsp,%rdx
  0x000000011c32c3d6: and    $0xfffffffffffffff0,%rsp
  0x000000011c32c3da: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32c3df: hlt    
[Deopt Handler Code]
  0x000000011c32c3e0: movabs $0x11c32c3e0,%r10  ;   {section_word}
  0x000000011c32c3ea: push   %r10
  0x000000011c32c3ec: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32c3f1: hlt    
  0x000000011c32c3f2: hlt    
  0x000000011c32c3f3: hlt    
  0x000000011c32c3f4: hlt    
  0x000000011c32c3f5: hlt    
  0x000000011c32c3f6: hlt    
  0x000000011c32c3f7: hlt    
<nmethod compile_id='45' compiler='C1' level='3' entry='0x000000011c32bec0' size='2624' address='0x000000011c32bd10' relocation_offset='296' insts_offset='432' stub_offset='1584' scopes_data_offset='1800' scopes_pcs_offset='2088' dependencies_offset='2584' nul_chk_table_offset='2592' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='385' iicount='385' stamp='1.233'/>
Decoding compiled method 0x000000011c32c790:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112498230} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;
  # this:     rsi:rsi   = &apos;sun/instrument/InstrumentationImpl&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/ClassLoader&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/String&apos;
  # parm2:    r8:r8     = &apos;java/lang/Class&apos;
  # parm3:    r9:r9     = &apos;java/security/ProtectionDomain&apos;
  # parm4:    rdi:rdi   = &apos;[B&apos;
  # parm5:    [sp+0x50]   = boolean  (sp of caller)
  0x000000011c32c900: mov    0x8(%rsi),%r10d
  0x000000011c32c904: shl    $0x3,%r10
  0x000000011c32c908: cmp    %rax,%r10
  0x000000011c32c90b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c32c911: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32c91c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c32c920: mov    %eax,-0x14000(%rsp)
  0x000000011c32c927: push   %rbp
  0x000000011c32c928: sub    $0x40,%rsp
  0x000000011c32c92c: movabs $0x1125dc160,%rax  ;   {metadata(method data for {method} {0x0000000112498230} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x000000011c32c936: mov    0xdc(%rax),%ebx
  0x000000011c32c93c: add    $0x8,%ebx
  0x000000011c32c93f: mov    %ebx,0xdc(%rax)
  0x000000011c32c945: movabs $0x112498230,%rax  ;   {metadata({method} {0x0000000112498230} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x000000011c32c94f: and    $0x1ff8,%ebx
  0x000000011c32c955: cmp    $0x0,%ebx
  0x000000011c32c958: je     0x000000011c32ca50  ;*iload
                                                ; - sun.instrument.InstrumentationImpl::transform@0 (line 422)

  0x000000011c32c95e: mov    0x50(%rsp),%eax
  0x000000011c32c962: cmp    $0x0,%eax
  0x000000011c32c965: movabs $0x1125dc160,%rax  ;   {metadata(method data for {method} {0x0000000112498230} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x000000011c32c96f: movabs $0x108,%rbx
  0x000000011c32c979: je     0x000000011c32c989
  0x000000011c32c97f: movabs $0x118,%rbx
  0x000000011c32c989: mov    (%rax,%rbx,1),%r11
  0x000000011c32c98d: lea    0x1(%r11),%r11
  0x000000011c32c991: mov    %r11,(%rax,%rbx,1)
  0x000000011c32c995: je     0x000000011c32c9b7  ;*ifeq
                                                ; - sun.instrument.InstrumentationImpl::transform@2 (line 422)

  0x000000011c32c99b: mov    0x1c(%rsi),%eax
  0x000000011c32c99e: shl    $0x3,%rax          ;*getfield mRetransfomableTransformerManager
                                                ; - sun.instrument.InstrumentationImpl::transform@6 (line 422)

  0x000000011c32c9a2: movabs $0x1125dc160,%rsi  ;   {metadata(method data for {method} {0x0000000112498230} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x000000011c32c9ac: incl   0x128(%rsi)
  0x000000011c32c9b2: jmpq   0x000000011c32c9be  ;*goto
                                                ; - sun.instrument.InstrumentationImpl::transform@9 (line 422)

  0x000000011c32c9b7: mov    0x18(%rsi),%eax
  0x000000011c32c9ba: shl    $0x3,%rax          ;*getfield mTransformerManager
                                                ; - sun.instrument.InstrumentationImpl::transform@13 (line 422)

  0x000000011c32c9be: cmp    $0x0,%rax
  0x000000011c32c9c2: movabs $0x1125dc160,%rsi  ;   {metadata(method data for {method} {0x0000000112498230} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x000000011c32c9cc: movabs $0x140,%rbx
  0x000000011c32c9d6: jne    0x000000011c32c9e6
  0x000000011c32c9dc: movabs $0x150,%rbx
  0x000000011c32c9e6: mov    (%rsi,%rbx,1),%r11
  0x000000011c32c9ea: lea    0x1(%r11),%r11
  0x000000011c32c9ee: mov    %r11,(%rsi,%rbx,1)
  0x000000011c32c9f2: jne    0x000000011c32ca0e  ;*ifnonnull
                                                ; - sun.instrument.InstrumentationImpl::transform@20 (line 425)

  0x000000011c32c9f8: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c32ca02: add    $0x40,%rsp
  0x000000011c32ca06: pop    %rbp
  0x000000011c32ca07: test   %eax,-0xf84590d(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32ca0d: retq                      ;*areturn
                                                ; - sun.instrument.InstrumentationImpl::transform@24 (line 426)

  0x000000011c32ca0e: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000011c32ca67
  0x000000011c32ca11: mov    %rax,%rsi
  0x000000011c32ca14: movabs $0x1125dc160,%rbx  ;   {metadata(method data for {method} {0x0000000112498230} &apos;transform&apos; &apos;(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B&apos; in &apos;sun/instrument/InstrumentationImpl&apos;)}
  0x000000011c32ca1e: movabs $0x7c003a330,%r10  ;   {metadata(&apos;sun/instrument/TransformerManager&apos;)}
  0x000000011c32ca28: mov    %r10,0x168(%rbx)
  0x000000011c32ca2f: addq   $0x1,0x170(%rbx)
  0x000000011c32ca37: mov    %rax,%rsi          ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)

  0x000000011c32ca3a: nop
  0x000000011c32ca3b: nop
  0x000000011c32ca3c: nop
  0x000000011c32ca3d: nop
  0x000000011c32ca3e: nop
  0x000000011c32ca3f: callq  0x000000011c24c0a0  ; OopMap{off=324}
                                                ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)
                                                ;   {optimized virtual_call}
  0x000000011c32ca44: add    $0x40,%rsp
  0x000000011c32ca48: pop    %rbp
  0x000000011c32ca49: test   %eax,-0xf84594f(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32ca4f: retq   
  0x000000011c32ca50: mov    %rax,0x8(%rsp)
  0x000000011c32ca55: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32ca5d: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop rcx=Oop r8=Oop r9=Oop rdi=Oop off=354}
                                                ;*synchronization entry
                                                ; - sun.instrument.InstrumentationImpl::transform@-1 (line 422)
                                                ;   {runtime_call}
  0x000000011c32ca62: jmpq   0x000000011c32c95e
  0x000000011c32ca67: callq  0x000000011c301ac0  ; OopMap{rax=Oop rdi=Oop r9=Oop r8=Oop rcx=Oop rdx=Oop off=364}
                                                ;*invokevirtual transform
                                                ; - sun.instrument.InstrumentationImpl::transform@34 (line 428)
                                                ;   {runtime_call}
  0x000000011c32ca6c: nop
  0x000000011c32ca6d: nop
  0x000000011c32ca6e: mov    0x2a8(%r15),%rax
  0x000000011c32ca75: movabs $0x0,%r10
  0x000000011c32ca7f: mov    %r10,0x2a8(%r15)
  0x000000011c32ca86: movabs $0x0,%r10
  0x000000011c32ca90: mov    %r10,0x2b0(%r15)
  0x000000011c32ca97: add    $0x40,%rsp
  0x000000011c32ca9b: pop    %rbp
  0x000000011c32ca9c: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32caa1: hlt    
  0x000000011c32caa2: hlt    
  0x000000011c32caa3: hlt    
  0x000000011c32caa4: hlt    
  0x000000011c32caa5: hlt    
  0x000000011c32caa6: hlt    
  0x000000011c32caa7: hlt    
  0x000000011c32caa8: hlt    
  0x000000011c32caa9: hlt    
  0x000000011c32caaa: hlt    
  0x000000011c32caab: hlt    
  0x000000011c32caac: hlt    
  0x000000011c32caad: hlt    
  0x000000011c32caae: hlt    
  0x000000011c32caaf: hlt    
  0x000000011c32cab0: hlt    
  0x000000011c32cab1: hlt    
  0x000000011c32cab2: hlt    
  0x000000011c32cab3: hlt    
  0x000000011c32cab4: hlt    
  0x000000011c32cab5: hlt    
  0x000000011c32cab6: hlt    
  0x000000011c32cab7: hlt    
  0x000000011c32cab8: hlt    
  0x000000011c32cab9: hlt    
  0x000000011c32caba: hlt    
  0x000000011c32cabb: hlt    
  0x000000011c32cabc: hlt    
  0x000000011c32cabd: hlt    
  0x000000011c32cabe: hlt    
  0x000000011c32cabf: hlt    
[Stub Code]
  0x000000011c32cac0: nop                       ;   {no_reloc}
  0x000000011c32cac1: nop
  0x000000011c32cac2: nop
  0x000000011c32cac3: nop
  0x000000011c32cac4: nop
  0x000000011c32cac5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32cacf: jmpq   0x000000011c32cacf  ;   {runtime_call}
[Exception Handler]
  0x000000011c32cad4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c32cad9: mov    %rsp,-0x28(%rsp)
  0x000000011c32cade: sub    $0x80,%rsp
  0x000000011c32cae5: mov    %rax,0x78(%rsp)
  0x000000011c32caea: mov    %rcx,0x70(%rsp)
  0x000000011c32caef: mov    %rdx,0x68(%rsp)
  0x000000011c32caf4: mov    %rbx,0x60(%rsp)
  0x000000011c32caf9: mov    %rbp,0x50(%rsp)
  0x000000011c32cafe: mov    %rsi,0x48(%rsp)
  0x000000011c32cb03: mov    %rdi,0x40(%rsp)
  0x000000011c32cb08: mov    %r8,0x38(%rsp)
  0x000000011c32cb0d: mov    %r9,0x30(%rsp)
  0x000000011c32cb12: mov    %r10,0x28(%rsp)
  0x000000011c32cb17: mov    %r11,0x20(%rsp)
  0x000000011c32cb1c: mov    %r12,0x18(%rsp)
  0x000000011c32cb21: mov    %r13,0x10(%rsp)
  0x000000011c32cb26: mov    %r14,0x8(%rsp)
  0x000000011c32cb2b: mov    %r15,(%rsp)
  0x000000011c32cb2f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32cb39: movabs $0x11c32cad9,%rsi  ;   {internal_word}
  0x000000011c32cb43: mov    %rsp,%rdx
  0x000000011c32cb46: and    $0xfffffffffffffff0,%rsp
  0x000000011c32cb4a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32cb4f: hlt    
[Deopt Handler Code]
  0x000000011c32cb50: movabs $0x11c32cb50,%r10  ;   {section_word}
  0x000000011c32cb5a: push   %r10
  0x000000011c32cb5c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32cb61: hlt    
  0x000000011c32cb62: hlt    
  0x000000011c32cb63: hlt    
  0x000000011c32cb64: hlt    
  0x000000011c32cb65: hlt    
  0x000000011c32cb66: hlt    
  0x000000011c32cb67: hlt    
<nmethod compile_id='46' compiler='C1' level='3' entry='0x000000011c32c900' size='1344' address='0x000000011c32c790' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='1008' scopes_pcs_offset='1112' dependencies_offset='1320' nul_chk_table_offset='1328' method='sun/instrument/InstrumentationImpl transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B' bytes='38' count='263' iicount='263' stamp='1.237'/>
Decoding compiled method 0x000000011c32cd10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001124991b8} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c32ce60: mov    0x8(%rsi),%r10d
  0x000000011c32ce64: shl    $0x3,%r10
  0x000000011c32ce68: cmp    %rax,%r10
  0x000000011c32ce6b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c32ce71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32ce7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c32ce80: mov    %eax,-0x14000(%rsp)
  0x000000011c32ce87: push   %rbp
  0x000000011c32ce88: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x000000011c32ce8c: mov    0x10(%rsi),%eax
  0x000000011c32ce8f: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x000000011c32ce93: add    $0x30,%rsp
  0x000000011c32ce97: pop    %rbp
  0x000000011c32ce98: test   %eax,-0xf845d9e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32ce9e: retq   
  0x000000011c32ce9f: nop
  0x000000011c32cea0: nop
  0x000000011c32cea1: mov    0x2a8(%r15),%rax
  0x000000011c32cea8: movabs $0x0,%r10
  0x000000011c32ceb2: mov    %r10,0x2a8(%r15)
  0x000000011c32ceb9: movabs $0x0,%r10
  0x000000011c32cec3: mov    %r10,0x2b0(%r15)
  0x000000011c32ceca: add    $0x30,%rsp
  0x000000011c32cece: pop    %rbp
  0x000000011c32cecf: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32ced4: hlt    
  0x000000011c32ced5: hlt    
  0x000000011c32ced6: hlt    
  0x000000011c32ced7: hlt    
  0x000000011c32ced8: hlt    
  0x000000011c32ced9: hlt    
  0x000000011c32ceda: hlt    
  0x000000011c32cedb: hlt    
  0x000000011c32cedc: hlt    
  0x000000011c32cedd: hlt    
  0x000000011c32cede: hlt    
  0x000000011c32cedf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c32cee0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c32cee5: mov    %rsp,-0x28(%rsp)
  0x000000011c32ceea: sub    $0x80,%rsp
  0x000000011c32cef1: mov    %rax,0x78(%rsp)
  0x000000011c32cef6: mov    %rcx,0x70(%rsp)
  0x000000011c32cefb: mov    %rdx,0x68(%rsp)
  0x000000011c32cf00: mov    %rbx,0x60(%rsp)
  0x000000011c32cf05: mov    %rbp,0x50(%rsp)
  0x000000011c32cf0a: mov    %rsi,0x48(%rsp)
  0x000000011c32cf0f: mov    %rdi,0x40(%rsp)
  0x000000011c32cf14: mov    %r8,0x38(%rsp)
  0x000000011c32cf19: mov    %r9,0x30(%rsp)
  0x000000011c32cf1e: mov    %r10,0x28(%rsp)
  0x000000011c32cf23: mov    %r11,0x20(%rsp)
  0x000000011c32cf28: mov    %r12,0x18(%rsp)
  0x000000011c32cf2d: mov    %r13,0x10(%rsp)
  0x000000011c32cf32: mov    %r14,0x8(%rsp)
  0x000000011c32cf37: mov    %r15,(%rsp)
  0x000000011c32cf3b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32cf45: movabs $0x11c32cee5,%rsi  ;   {internal_word}
  0x000000011c32cf4f: mov    %rsp,%rdx
  0x000000011c32cf52: and    $0xfffffffffffffff0,%rsp
  0x000000011c32cf56: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32cf5b: hlt    
[Deopt Handler Code]
  0x000000011c32cf5c: movabs $0x11c32cf5c,%r10  ;   {section_word}
  0x000000011c32cf66: push   %r10
  0x000000011c32cf68: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32cf6d: hlt    
  0x000000011c32cf6e: hlt    
  0x000000011c32cf6f: hlt    
<nmethod compile_id='47' compiler='C1' level='1' entry='0x000000011c32ce60' size='704' address='0x000000011c32cd10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='264' iicount='264' stamp='1.238'/>
<writer thread='42243'/>
<task_queued compile_id='48' method='java/lang/String lastIndexOf (II)I' bytes='52' count='332' backedge_count='13944' iicount='332' level='3' stamp='1.238' comment='tiered' hot_count='332'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c32d010:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011c32d1a0: mov    0x8(%rsi),%r10d
  0x000000011c32d1a4: shl    $0x3,%r10
  0x000000011c32d1a8: cmp    %rax,%r10
  0x000000011c32d1ab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c32d1b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32d1bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c32d1c0: mov    %eax,-0x14000(%rsp)
  0x000000011c32d1c7: push   %rbp
  0x000000011c32d1c8: sub    $0x40,%rsp
  0x000000011c32d1cc: movabs $0x1124d8018,%rax  ;   {metadata(method data for {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d1d6: mov    0xdc(%rax),%edi
  0x000000011c32d1dc: add    $0x8,%edi
  0x000000011c32d1df: mov    %edi,0xdc(%rax)
  0x000000011c32d1e5: movabs $0x1122c53d0,%rax  ;   {metadata({method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d1ef: and    $0x1ff8,%edi
  0x000000011c32d1f5: cmp    $0x0,%edi
  0x000000011c32d1f8: je     0x000000011c32d3f8  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x000000011c32d1fe: cmp    $0x10000,%edx
  0x000000011c32d204: movabs $0x1124d8018,%rax  ;   {metadata(method data for {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d20e: movabs $0x108,%rdi
  0x000000011c32d218: jge    0x000000011c32d228
  0x000000011c32d21e: movabs $0x118,%rdi
  0x000000011c32d228: mov    (%rax,%rdi,1),%rbx
  0x000000011c32d22c: lea    0x1(%rbx),%rbx
  0x000000011c32d230: mov    %rbx,(%rax,%rdi,1)
  0x000000011c32d234: jge    0x000000011c32d3d1  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x000000011c32d23a: mov    0xc(%rsi),%eax
  0x000000011c32d23d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x000000011c32d241: mov    0xc(%rax),%esi     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x000000011c32d40f
  0x000000011c32d244: dec    %esi
  0x000000011c32d246: movabs $0x1124d8018,%rdi  ;   {metadata(method data for {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d250: addq   $0x1,0x128(%rdi)
  0x000000011c32d258: movabs $0x112489e90,%rdi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32d262: mov    0xdc(%rdi),%ebx
  0x000000011c32d268: add    $0x8,%ebx
  0x000000011c32d26b: mov    %ebx,0xdc(%rdi)
  0x000000011c32d271: movabs $0x1123b6508,%rdi  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32d27b: and    $0x7ffff8,%ebx
  0x000000011c32d281: cmp    $0x0,%ebx
  0x000000011c32d284: je     0x000000011c32d414
  0x000000011c32d28a: cmp    %esi,%ecx
  0x000000011c32d28c: movabs $0x112489e90,%rdi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32d296: movabs $0x108,%rbx
  0x000000011c32d2a0: jg     0x000000011c32d2b0
  0x000000011c32d2a6: movabs $0x118,%rbx
  0x000000011c32d2b0: mov    (%rdi,%rbx,1),%r8
  0x000000011c32d2b4: lea    0x1(%r8),%r8
  0x000000011c32d2b8: mov    %r8,(%rdi,%rbx,1)
  0x000000011c32d2bc: jg     0x000000011c32d2d7  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000011c32d2c2: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c32d2cc: incl   0x128(%rsi)
  0x000000011c32d2d2: jmpq   0x000000011c32d373  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000011c32d2d7: mov    %rsi,%rcx
  0x000000011c32d2da: jmpq   0x000000011c32d373  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000011c32d2df: nop
  0x000000011c32d2e0: movslq %ecx,%rsi
  0x000000011c32d2e3: cmp    0xc(%rax),%ecx
  0x000000011c32d2e6: jae    0x000000011c32d42b
  0x000000011c32d2ec: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000011c32d2f1: cmp    %edx,%esi
  0x000000011c32d2f3: movabs $0x1124d8018,%rsi  ;   {metadata(method data for {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d2fd: movabs $0x158,%rdi
  0x000000011c32d307: jne    0x000000011c32d317
  0x000000011c32d30d: movabs $0x168,%rdi
  0x000000011c32d317: mov    (%rsi,%rdi,1),%rbx
  0x000000011c32d31b: lea    0x1(%rbx),%rbx
  0x000000011c32d31f: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c32d323: je     0x000000011c32d3b1  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000011c32d329: dec    %ecx
  0x000000011c32d32b: movabs $0x1124d8018,%rsi  ;   {metadata(method data for {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d335: mov    0xe0(%rsi),%edi
  0x000000011c32d33b: add    $0x8,%edi
  0x000000011c32d33e: mov    %edi,0xe0(%rsi)
  0x000000011c32d344: movabs $0x1122c53d0,%rsi  ;   {metadata({method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d34e: and    $0xfff8,%edi
  0x000000011c32d354: cmp    $0x0,%edi
  0x000000011c32d357: je     0x000000011c32d434  ; OopMap{rax=Oop off=445}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x000000011c32d35d: test   %eax,-0xf846263(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c32d363: movabs $0x1124d8018,%rsi  ;   {metadata(method data for {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d36d: incl   0x178(%rsi)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x000000011c32d373: cmp    $0x0,%ecx
  0x000000011c32d376: movabs $0x1124d8018,%rsi  ;   {metadata(method data for {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d380: movabs $0x138,%rdi
  0x000000011c32d38a: jl     0x000000011c32d39a
  0x000000011c32d390: movabs $0x148,%rdi
  0x000000011c32d39a: mov    (%rsi,%rdi,1),%rbx
  0x000000011c32d39e: lea    0x1(%rbx),%rbx
  0x000000011c32d3a2: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c32d3a6: jl     0x000000011c32d3c0
  0x000000011c32d3ac: jmpq   0x000000011c32d2e0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000011c32d3b1: mov    %rcx,%rax
  0x000000011c32d3b4: add    $0x40,%rsp
  0x000000011c32d3b8: pop    %rbp
  0x000000011c32d3b9: test   %eax,-0xf8462bf(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32d3bf: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x000000011c32d3c0: mov    $0xffffffff,%eax
  0x000000011c32d3c5: add    $0x40,%rsp
  0x000000011c32d3c9: pop    %rbp
  0x000000011c32d3ca: test   %eax,-0xf8462d0(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32d3d0: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x000000011c32d3d1: mov    %rsi,%rdi
  0x000000011c32d3d4: movabs $0x1124d8018,%rbx  ;   {metadata(method data for {method} {0x00000001122c53d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32d3de: addq   $0x1,0x190(%rbx)
  0x000000011c32d3e6: nop
  0x000000011c32d3e7: callq  0x000000011c24c0a0  ; OopMap{off=588}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x000000011c32d3ec: add    $0x40,%rsp
  0x000000011c32d3f0: pop    %rbp
  0x000000011c32d3f1: test   %eax,-0xf8462f7(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32d3f7: retq   
  0x000000011c32d3f8: mov    %rax,0x8(%rsp)
  0x000000011c32d3fd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32d405: callq  0x000000011c306120  ; OopMap{rsi=Oop off=618}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x000000011c32d40a: jmpq   0x000000011c32d1fe
  0x000000011c32d40f: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=628}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x000000011c32d414: mov    %rdi,0x8(%rsp)
  0x000000011c32d419: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32d421: callq  0x000000011c306120  ; OopMap{rax=Oop off=646}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x000000011c32d426: jmpq   0x000000011c32d28a
  0x000000011c32d42b: mov    %rcx,(%rsp)
  0x000000011c32d42f: callq  0x000000011c274080  ; OopMap{rax=Oop off=660}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x000000011c32d434: mov    %rsi,0x8(%rsp)
  0x000000011c32d439: movq   $0x28,(%rsp)
  0x000000011c32d441: callq  0x000000011c306120  ; OopMap{rax=Oop off=678}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x000000011c32d446: jmpq   0x000000011c32d35d
  0x000000011c32d44b: nop
  0x000000011c32d44c: nop
  0x000000011c32d44d: mov    0x2a8(%r15),%rax
  0x000000011c32d454: movabs $0x0,%r10
  0x000000011c32d45e: mov    %r10,0x2a8(%r15)
  0x000000011c32d465: movabs $0x0,%r10
  0x000000011c32d46f: mov    %r10,0x2b0(%r15)
  0x000000011c32d476: add    $0x40,%rsp
  0x000000011c32d47a: pop    %rbp
  0x000000011c32d47b: jmpq   0x000000011c274520  ;   {runtime_call}
[Stub Code]
  0x000000011c32d480: nop                       ;   {no_reloc}
  0x000000011c32d481: nop
  0x000000011c32d482: nop
  0x000000011c32d483: nop
  0x000000011c32d484: nop
  0x000000011c32d485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c32d48f: jmpq   0x000000011c32d48f  ;   {runtime_call}
[Exception Handler]
  0x000000011c32d494: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c32d499: mov    %rsp,-0x28(%rsp)
  0x000000011c32d49e: sub    $0x80,%rsp
  0x000000011c32d4a5: mov    %rax,0x78(%rsp)
  0x000000011c32d4aa: mov    %rcx,0x70(%rsp)
  0x000000011c32d4af: mov    %rdx,0x68(%rsp)
  0x000000011c32d4b4: mov    %rbx,0x60(%rsp)
  0x000000011c32d4b9: mov    %rbp,0x50(%rsp)
  0x000000011c32d4be: mov    %rsi,0x48(%rsp)
  0x000000011c32d4c3: mov    %rdi,0x40(%rsp)
  0x000000011c32d4c8: mov    %r8,0x38(%rsp)
  0x000000011c32d4cd: mov    %r9,0x30(%rsp)
  0x000000011c32d4d2: mov    %r10,0x28(%rsp)
  0x000000011c32d4d7: mov    %r11,0x20(%rsp)
  0x000000011c32d4dc: mov    %r12,0x18(%rsp)
  0x000000011c32d4e1: mov    %r13,0x10(%rsp)
  0x000000011c32d4e6: mov    %r14,0x8(%rsp)
  0x000000011c32d4eb: mov    %r15,(%rsp)
  0x000000011c32d4ef: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32d4f9: movabs $0x11c32d499,%rsi  ;   {internal_word}
  0x000000011c32d503: mov    %rsp,%rdx
  0x000000011c32d506: and    $0xfffffffffffffff0,%rsp
  0x000000011c32d50a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32d50f: hlt    
[Deopt Handler Code]
  0x000000011c32d510: movabs $0x11c32d510,%r10  ;   {section_word}
  0x000000011c32d51a: push   %r10
  0x000000011c32d51c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32d521: hlt    
  0x000000011c32d522: hlt    
  0x000000011c32d523: hlt    
  0x000000011c32d524: hlt    
  0x000000011c32d525: hlt    
  0x000000011c32d526: hlt    
  0x000000011c32d527: hlt    
<nmethod compile_id='48' compiler='C1' level='3' entry='0x000000011c32d1a0' size='1880' address='0x000000011c32d010' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1320' scopes_pcs_offset='1504' dependencies_offset='1856' nul_chk_table_offset='1864' method='java/lang/String lastIndexOf (II)I' bytes='52' count='332' backedge_count='13958' iicount='332' stamp='1.243'/>
<writer thread='42243'/>
<task_queued compile_id='49' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='152' backedge_count='11264' iicount='152' level='3' stamp='1.244' comment='tiered' hot_count='152'/>
<task_queued compile_id='50' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='112' backedge_count='2048' iicount='112' level='3' stamp='1.244' comment='tiered' hot_count='112'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c32df10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x50]   = int  (sp of caller)
  0x000000011c32e0c0: mov    %eax,-0x14000(%rsp)
  0x000000011c32e0c7: push   %rbp
  0x000000011c32e0c8: sub    $0x40,%rsp
  0x000000011c32e0cc: mov    %edx,0x20(%rsp)
  0x000000011c32e0d0: mov    %edi,0x24(%rsp)
  0x000000011c32e0d4: movabs $0x1125e53e8,%rax  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e0de: mov    0xdc(%rax),%ebx
  0x000000011c32e0e4: add    $0x8,%ebx
  0x000000011c32e0e7: mov    %ebx,0xdc(%rax)
  0x000000011c32e0ed: movabs $0x1122c57e0,%rax  ;   {metadata({method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e0f7: and    $0x1ff8,%ebx
  0x000000011c32e0fd: cmp    $0x0,%ebx
  0x000000011c32e100: je     0x000000011c32e594  ;*iload
                                                ; - java.lang.String::indexOf@0 (line 1756)

  0x000000011c32e106: mov    0x50(%rsp),%eax
  0x000000011c32e10a: cmp    %ecx,%eax
  0x000000011c32e10c: movabs $0x1125e53e8,%rbx  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e116: movabs $0x108,%r11
  0x000000011c32e120: jl     0x000000011c32e130
  0x000000011c32e126: movabs $0x118,%r11
  0x000000011c32e130: mov    (%rbx,%r11,1),%r13
  0x000000011c32e134: lea    0x1(%r13),%r13
  0x000000011c32e138: mov    %r13,(%rbx,%r11,1)
  0x000000011c32e13c: jl     0x000000011c32e180  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x000000011c32e142: cmp    $0x0,%edi
  0x000000011c32e145: movabs $0x1125e53e8,%rax  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e14f: movabs $0x128,%rsi
  0x000000011c32e159: jne    0x000000011c32e169
  0x000000011c32e15f: movabs $0x138,%rsi
  0x000000011c32e169: mov    (%rax,%rsi,1),%rdi
  0x000000011c32e16d: lea    0x1(%rdi),%rdi
  0x000000011c32e171: mov    %rdi,(%rax,%rsi,1)
  0x000000011c32e175: jne    0x000000011c32e580
  0x000000011c32e17b: jmpq   0x000000011c32e56b  ;*ifne
                                                ; - java.lang.String::indexOf@8 (line 1757)

  0x000000011c32e180: cmp    $0x0,%eax
  0x000000011c32e183: movabs $0x1125e53e8,%rbx  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e18d: movabs $0x160,%r11
  0x000000011c32e197: jge    0x000000011c32e1a7
  0x000000011c32e19d: movabs $0x170,%r11
  0x000000011c32e1a7: mov    (%rbx,%r11,1),%r13
  0x000000011c32e1ab: lea    0x1(%r13),%r13
  0x000000011c32e1af: mov    %r13,(%rbx,%r11,1)
  0x000000011c32e1b3: jge    0x000000011c32e1be  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000000011c32e1b9: mov    $0x0,%eax          ;*iload
                                                ; - java.lang.String::indexOf@25 (line 1762)

  0x000000011c32e1be: cmp    $0x0,%edi
  0x000000011c32e1c1: movabs $0x1125e53e8,%rbx  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e1cb: movabs $0x180,%r11
  0x000000011c32e1d5: jne    0x000000011c32e1e5
  0x000000011c32e1db: movabs $0x190,%r11
  0x000000011c32e1e5: mov    (%rbx,%r11,1),%r13
  0x000000011c32e1e9: lea    0x1(%r13),%r13
  0x000000011c32e1ed: mov    %r13,(%rbx,%r11,1)
  0x000000011c32e1f1: je     0x000000011c32e55f  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x000000011c32e1f7: movslq %r9d,%rbx
  0x000000011c32e1fa: cmp    0xc(%r8),%r9d      ; implicit exception: dispatches to 0x000000011c32e5ab
  0x000000011c32e1fe: jae    0x000000011c32e5b5
  0x000000011c32e204: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000011c32e20a: mov    %ebx,0x28(%rsp)
  0x000000011c32e20e: sub    %edi,%ecx
  0x000000011c32e210: add    %edx,%ecx
  0x000000011c32e212: add    %edx,%eax
  0x000000011c32e214: nopl   0x0(%rax)
  0x000000011c32e218: cmp    %ecx,%eax
  0x000000011c32e21a: movabs $0x1125e53e8,%r11  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e224: movabs $0x1a0,%r13
  0x000000011c32e22e: jg     0x000000011c32e23e
  0x000000011c32e234: movabs $0x1b0,%r13
  0x000000011c32e23e: mov    (%r11,%r13,1),%r14
  0x000000011c32e242: lea    0x1(%r14),%r14
  0x000000011c32e246: mov    %r14,(%r11,%r13,1)
  0x000000011c32e24a: jg     0x000000011c32e54e  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x000000011c32e250: movslq %eax,%r11
  0x000000011c32e253: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000011c32e5be
  0x000000011c32e256: jae    0x000000011c32e5c8
  0x000000011c32e25c: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x000000011c32e262: cmp    %ebx,%r11d
  0x000000011c32e265: movabs $0x1125e53e8,%r11  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e26f: movabs $0x1c0,%r13
  0x000000011c32e279: je     0x000000011c32e289
  0x000000011c32e27f: movabs $0x1d0,%r13
  0x000000011c32e289: mov    (%r11,%r13,1),%r14
  0x000000011c32e28d: lea    0x1(%r14),%r14
  0x000000011c32e291: mov    %r14,(%r11,%r13,1)
  0x000000011c32e295: je     0x000000011c32e373
  0x000000011c32e29b: jmpq   0x000000011c32e339  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x000000011c32e2a0: movslq %eax,%r11
  0x000000011c32e2a3: cmp    0xc(%rsi),%eax
  0x000000011c32e2a6: jae    0x000000011c32e5d1
  0x000000011c32e2ac: movzwl 0x10(%rsi,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000011c32e2b2: cmp    %ebx,%r11d
  0x000000011c32e2b5: movabs $0x1125e53e8,%r11  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e2bf: movabs $0x200,%r13
  0x000000011c32e2c9: je     0x000000011c32e2d9
  0x000000011c32e2cf: movabs $0x210,%r13
  0x000000011c32e2d9: mov    (%r11,%r13,1),%r14
  0x000000011c32e2dd: lea    0x1(%r14),%r14
  0x000000011c32e2e1: mov    %r14,(%r11,%r13,1)
  0x000000011c32e2e5: je     0x000000011c32e373  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000011c32e2eb: movabs $0x1125e53e8,%r11  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e2f5: mov    0xe0(%r11),%r13d
  0x000000011c32e2fc: add    $0x8,%r13d
  0x000000011c32e300: mov    %r13d,0xe0(%r11)
  0x000000011c32e307: movabs $0x1122c57e0,%r11  ;   {metadata({method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e311: and    $0xfff8,%r13d
  0x000000011c32e318: cmp    $0x0,%r13d
  0x000000011c32e31c: je     0x000000011c32e5da  ; OopMap{r8=Oop rsi=Oop off=610}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x000000011c32e322: test   %eax,-0xf847228(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c32e328: movabs $0x1125e53e8,%r11  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e332: incl   0x220(%r11)        ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x000000011c32e339: inc    %eax
  0x000000011c32e33b: cmp    %ecx,%eax
  0x000000011c32e33d: movabs $0x1125e53e8,%r11  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e347: movabs $0x1e0,%r13
  0x000000011c32e351: jg     0x000000011c32e361
  0x000000011c32e357: movabs $0x1f0,%r13
  0x000000011c32e361: mov    (%r11,%r13,1),%r14
  0x000000011c32e365: lea    0x1(%r14),%r14
  0x000000011c32e369: mov    %r14,(%r11,%r13,1)
  0x000000011c32e36d: jle    0x000000011c32e2a0  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000011c32e373: cmp    %ecx,%eax
  0x000000011c32e375: movabs $0x1125e53e8,%r11  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e37f: movabs $0x238,%r13
  0x000000011c32e389: jg     0x000000011c32e399
  0x000000011c32e38f: movabs $0x248,%r13
  0x000000011c32e399: mov    (%r11,%r13,1),%r14
  0x000000011c32e39d: lea    0x1(%r14),%r14
  0x000000011c32e3a1: mov    %r14,(%r11,%r13,1)
  0x000000011c32e3a5: jg     0x000000011c32e4e5  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x000000011c32e3ab: mov    %rax,%r11
  0x000000011c32e3ae: inc    %r11d
  0x000000011c32e3b1: mov    %r11,%r13
  0x000000011c32e3b4: add    %edi,%r13d
  0x000000011c32e3b7: dec    %r13d
  0x000000011c32e3ba: mov    %r9,%r14
  0x000000011c32e3bd: inc    %r14d
  0x000000011c32e3c0: jmpq   0x000000011c32e473  ;*iload
                                                ; - java.lang.String::indexOf@119 (line 1779)

  0x000000011c32e3c5: data32 xchg %ax,%ax
  0x000000011c32e3c8: movslq %r11d,%rdi
  0x000000011c32e3cb: cmp    0xc(%rsi),%r11d
  0x000000011c32e3cf: jae    0x000000011c32e5f1
  0x000000011c32e3d5: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x000000011c32e3da: movslq %r14d,%rbx
  0x000000011c32e3dd: cmp    0xc(%r8),%r14d
  0x000000011c32e3e1: jae    0x000000011c32e5fa
  0x000000011c32e3e7: movzwl 0x10(%r8,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x000000011c32e3ed: cmp    %ebx,%edi
  0x000000011c32e3ef: movabs $0x1125e53e8,%rdi  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e3f9: movabs $0x278,%rbx
  0x000000011c32e403: jne    0x000000011c32e413
  0x000000011c32e409: movabs $0x288,%rbx
  0x000000011c32e413: mov    (%rdi,%rbx,1),%rdx
  0x000000011c32e417: lea    0x1(%rdx),%rdx
  0x000000011c32e41b: mov    %rdx,(%rdi,%rbx,1)
  0x000000011c32e41f: jne    0x000000011c32e4ac  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x000000011c32e425: inc    %r11d
  0x000000011c32e428: inc    %r14d
  0x000000011c32e42b: movabs $0x1125e53e8,%rdi  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e435: mov    0xe0(%rdi),%ebx
  0x000000011c32e43b: add    $0x8,%ebx
  0x000000011c32e43e: mov    %ebx,0xe0(%rdi)
  0x000000011c32e444: movabs $0x1122c57e0,%rdi  ;   {metadata({method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e44e: and    $0xfff8,%ebx
  0x000000011c32e454: cmp    $0x0,%ebx
  0x000000011c32e457: je     0x000000011c32e603  ; OopMap{r8=Oop rsi=Oop off=925}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x000000011c32e45d: test   %eax,-0xf847363(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c32e463: movabs $0x1125e53e8,%rdi  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e46d: incl   0x298(%rdi)        ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)

  0x000000011c32e473: cmp    %r13d,%r11d
  0x000000011c32e476: movabs $0x1125e53e8,%rdx  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e480: movabs $0x258,%rdi
  0x000000011c32e48a: jge    0x000000011c32e49a
  0x000000011c32e490: movabs $0x268,%rdi
  0x000000011c32e49a: mov    (%rdx,%rdi,1),%rbx
  0x000000011c32e49e: lea    0x1(%rbx),%rbx
  0x000000011c32e4a2: mov    %rbx,(%rdx,%rdi,1)
  0x000000011c32e4a6: jl     0x000000011c32e3c8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x000000011c32e4ac: cmp    %r13d,%r11d
  0x000000011c32e4af: movabs $0x1125e53e8,%rdi  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e4b9: movabs $0x2b0,%rbx
  0x000000011c32e4c3: jne    0x000000011c32e4d3
  0x000000011c32e4c9: movabs $0x2c0,%rbx
  0x000000011c32e4d3: mov    (%rdi,%rbx,1),%rdx
  0x000000011c32e4d7: lea    0x1(%rdx),%rdx
  0x000000011c32e4db: mov    %rdx,(%rdi,%rbx,1)
  0x000000011c32e4df: je     0x000000011c32e53c  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x000000011c32e4e5: inc    %eax
  0x000000011c32e4e7: movabs $0x1125e53e8,%rdi  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e4f1: mov    0xe0(%rdi),%ebx
  0x000000011c32e4f7: add    $0x8,%ebx
  0x000000011c32e4fa: mov    %ebx,0xe0(%rdi)
  0x000000011c32e500: movabs $0x1122c57e0,%rdi  ;   {metadata({method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e50a: and    $0xfff8,%ebx
  0x000000011c32e510: cmp    $0x0,%ebx
  0x000000011c32e513: je     0x000000011c32e61a  ; OopMap{r8=Oop rsi=Oop off=1113}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000011c32e519: test   %eax,-0xf84741f(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c32e51f: movabs $0x1125e53e8,%rdi  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e529: incl   0x2d0(%rdi)
  0x000000011c32e52f: mov    0x28(%rsp),%ebx
  0x000000011c32e533: mov    0x24(%rsp),%edi
  0x000000011c32e537: jmpq   0x000000011c32e218  ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000011c32e53c: mov    0x20(%rsp),%edx
  0x000000011c32e540: sub    %edx,%eax
  0x000000011c32e542: add    $0x40,%rsp
  0x000000011c32e546: pop    %rbp
  0x000000011c32e547: test   %eax,-0xf84744d(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32e54d: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@157 (line 1784)

  0x000000011c32e54e: mov    $0xffffffff,%eax
  0x000000011c32e553: add    $0x40,%rsp
  0x000000011c32e557: pop    %rbp
  0x000000011c32e558: test   %eax,-0xf84745e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32e55e: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@165 (line 1788)

  0x000000011c32e55f: add    $0x40,%rsp
  0x000000011c32e563: pop    %rbp
  0x000000011c32e564: test   %eax,-0xf84746a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32e56a: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@32 (line 1763)

  0x000000011c32e56b: movabs $0x1125e53e8,%rax  ;   {metadata(method data for {method} {0x00000001122c57e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c32e575: incl   0x148(%rax)
  0x000000011c32e57b: jmpq   0x000000011c32e585  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1757)

  0x000000011c32e580: mov    $0xffffffff,%ecx   ;*ireturn
                                                ; - java.lang.String::indexOf@16 (line 1757)

  0x000000011c32e585: mov    %rcx,%rax
  0x000000011c32e588: add    $0x40,%rsp
  0x000000011c32e58c: pop    %rbp
  0x000000011c32e58d: test   %eax,-0xf847493(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32e593: retq   
  0x000000011c32e594: mov    %rax,0x8(%rsp)
  0x000000011c32e599: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c32e5a1: callq  0x000000011c306120  ; OopMap{rsi=Oop r8=Oop off=1254}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)
                                                ;   {runtime_call}
  0x000000011c32e5a6: jmpq   0x000000011c32e106
  0x000000011c32e5ab: callq  0x000000011c301ac0  ; OopMap{r8=Oop rsi=Oop off=1264}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000011c32e5b0: callq  0x000000011c301ac0  ; OopMap{r8=Oop rsi=Oop off=1269}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000011c32e5b5: mov    %r9,(%rsp)
  0x000000011c32e5b9: callq  0x000000011c274080  ; OopMap{r8=Oop rsi=Oop off=1278}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000011c32e5be: callq  0x000000011c301ac0  ; OopMap{r8=Oop rsi=Oop off=1283}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000011c32e5c3: callq  0x000000011c301ac0  ; OopMap{r8=Oop rsi=Oop off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000011c32e5c8: mov    %rax,(%rsp)
  0x000000011c32e5cc: callq  0x000000011c274080  ; OopMap{r8=Oop rsi=Oop off=1297}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000011c32e5d1: mov    %rax,(%rsp)
  0x000000011c32e5d5: callq  0x000000011c274080  ; OopMap{r8=Oop rsi=Oop off=1306}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x000000011c32e5da: mov    %r11,0x8(%rsp)
  0x000000011c32e5df: movq   $0x58,(%rsp)
  0x000000011c32e5e7: callq  0x000000011c306120  ; OopMap{r8=Oop rsi=Oop off=1324}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {runtime_call}
  0x000000011c32e5ec: jmpq   0x000000011c32e322
  0x000000011c32e5f1: mov    %r11,(%rsp)
  0x000000011c32e5f5: callq  0x000000011c274080  ; OopMap{r8=Oop rsi=Oop off=1338}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x000000011c32e5fa: mov    %r14,(%rsp)
  0x000000011c32e5fe: callq  0x000000011c274080  ; OopMap{r8=Oop rsi=Oop off=1347}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x000000011c32e603: mov    %rdi,0x8(%rsp)
  0x000000011c32e608: movq   $0x8f,(%rsp)
  0x000000011c32e610: callq  0x000000011c306120  ; OopMap{r8=Oop rsi=Oop off=1365}
                                                ;*goto
                                                ; - java.lang.String::indexOf@143 (line 1780)
                                                ;   {runtime_call}
  0x000000011c32e615: jmpq   0x000000011c32e45d
  0x000000011c32e61a: mov    %rdi,0x8(%rsp)
  0x000000011c32e61f: movq   $0xa1,(%rsp)
  0x000000011c32e627: callq  0x000000011c306120  ; OopMap{r8=Oop rsi=Oop off=1388}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {runtime_call}
  0x000000011c32e62c: jmpq   0x000000011c32e519
  0x000000011c32e631: nop
  0x000000011c32e632: nop
  0x000000011c32e633: mov    0x2a8(%r15),%rax
  0x000000011c32e63a: movabs $0x0,%r10
  0x000000011c32e644: mov    %r10,0x2a8(%r15)
  0x000000011c32e64b: movabs $0x0,%r10
  0x000000011c32e655: mov    %r10,0x2b0(%r15)
  0x000000011c32e65c: add    $0x40,%rsp
  0x000000011c32e660: pop    %rbp
  0x000000011c32e661: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c32e666: hlt    
  0x000000011c32e667: hlt    
  0x000000011c32e668: hlt    
  0x000000011c32e669: hlt    
  0x000000011c32e66a: hlt    
  0x000000011c32e66b: hlt    
  0x000000011c32e66c: hlt    
  0x000000011c32e66d: hlt    
  0x000000011c32e66e: hlt    
  0x000000011c32e66f: hlt    
  0x000000011c32e670: hlt    
  0x000000011c32e671: hlt    
  0x000000011c32e672: hlt    
  0x000000011c32e673: hlt    
  0x000000011c32e674: hlt    
  0x000000011c32e675: hlt    
  0x000000011c32e676: hlt    
  0x000000011c32e677: hlt    
  0x000000011c32e678: hlt    
  0x000000011c32e679: hlt    
  0x000000011c32e67a: hlt    
  0x000000011c32e67b: hlt    
  0x000000011c32e67c: hlt    
  0x000000011c32e67d: hlt    
  0x000000011c32e67e: hlt    
  0x000000011c32e67f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c32e680: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c32e685: mov    %rsp,-0x28(%rsp)
  0x000000011c32e68a: sub    $0x80,%rsp
  0x000000011c32e691: mov    %rax,0x78(%rsp)
  0x000000011c32e696: mov    %rcx,0x70(%rsp)
  0x000000011c32e69b: mov    %rdx,0x68(%rsp)
  0x000000011c32e6a0: mov    %rbx,0x60(%rsp)
  0x000000011c32e6a5: mov    %rbp,0x50(%rsp)
  0x000000011c32e6aa: mov    %rsi,0x48(%rsp)
  0x000000011c32e6af: mov    %rdi,0x40(%rsp)
  0x000000011c32e6b4: mov    %r8,0x38(%rsp)
  0x000000011c32e6b9: mov    %r9,0x30(%rsp)
  0x000000011c32e6be: mov    %r10,0x28(%rsp)
  0x000000011c32e6c3: mov    %r11,0x20(%rsp)
  0x000000011c32e6c8: mov    %r12,0x18(%rsp)
  0x000000011c32e6cd: mov    %r13,0x10(%rsp)
  0x000000011c32e6d2: mov    %r14,0x8(%rsp)
  0x000000011c32e6d7: mov    %r15,(%rsp)
  0x000000011c32e6db: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c32e6e5: movabs $0x11c32e685,%rsi  ;   {internal_word}
  0x000000011c32e6ef: mov    %rsp,%rdx
  0x000000011c32e6f2: and    $0xfffffffffffffff0,%rsp
  0x000000011c32e6f6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c32e6fb: hlt    
[Deopt Handler Code]
  0x000000011c32e6fc: movabs $0x11c32e6fc,%r10  ;   {section_word}
  0x000000011c32e706: push   %r10
  0x000000011c32e708: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c32e70d: hlt    
  0x000000011c32e70e: hlt    
  0x000000011c32e70f: hlt    
<nmethod compile_id='49' compiler='C1' level='3' entry='0x000000011c32e0c0' size='3232' address='0x000000011c32df10' relocation_offset='296' insts_offset='432' stub_offset='1904' scopes_data_offset='2056' scopes_pcs_offset='2448' dependencies_offset='3184' nul_chk_table_offset='3192' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='161' backedge_count='12026' iicount='161' stamp='1.252'/>
<writer thread='42243'/>
<task_queued compile_id='51' method='java/util/ArrayList add (Ljava/lang/Object;)Z' bytes='29' count='256' iicount='256' level='3' stamp='1.252' comment='tiered' hot_count='256'/>
<task_queued compile_id='52' method='java/util/ArrayList ensureCapacityInternal (I)V' bytes='13' count='256' iicount='256' level='3' stamp='1.252' comment='tiered' hot_count='256'/>
<task_queued compile_id='53' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='640' iicount='640' level='3' stamp='1.252' comment='tiered' hot_count='640'/>
<task_queued compile_id='54' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='768' iicount='768' level='1' stamp='1.252' comment='tiered' hot_count='768'/>
<task_queued compile_id='55' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='384' iicount='384' level='1' stamp='1.252' comment='tiered' hot_count='384'/>
<task_queued compile_id='56' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='1024' iicount='1024' level='3' stamp='1.253' comment='tiered' hot_count='1024'/>
<task_queued compile_id='57' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1024' iicount='1024' level='3' stamp='1.253' comment='tiered' hot_count='1024'/>
<task_queued compile_id='58' method='java/lang/Character toLowerCase (I)I' bytes='9' count='768' iicount='768' level='3' stamp='1.253' comment='tiered' hot_count='768'/>
<task_queued compile_id='59' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='768' iicount='768' level='3' stamp='1.253' comment='tiered' hot_count='768'/>
<task_queued compile_id='60' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='768' iicount='768' level='3' stamp='1.253' comment='tiered' hot_count='768'/>
<task_queued compile_id='61' method='java/net/Parts getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='1.253' comment='tiered' hot_count='128'/>
<task_queued compile_id='62' method='java/net/Parts getQuery ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='1.253' comment='tiered' hot_count='128'/>
<task_queued compile_id='63' method='java/net/Parts getRef ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='1.253' comment='tiered' hot_count='128'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c32ebd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;
  # this:     rsi:rsi   = &apos;java/io/BufferedReader&apos;
  # parm0:    rdx       = boolean
  #           [sp+0xf0]  (sp of caller)
  0x000000011c32ee80: mov    0x8(%rsi),%r10d
  0x000000011c32ee84: shl    $0x3,%r10
  0x000000011c32ee88: cmp    %rax,%r10
  0x000000011c32ee8b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c32ee91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c32ee9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c32eea0: mov    %eax,-0x14000(%rsp)
  0x000000011c32eea7: push   %rbp
  0x000000011c32eea8: sub    $0xe0,%rsp
  0x000000011c32eeaf: mov    %rsi,0x70(%rsp)
  0x000000011c32eeb4: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32eebe: mov    0xdc(%rax),%edi
  0x000000011c32eec4: add    $0x8,%edi
  0x000000011c32eec7: mov    %edi,0xdc(%rax)
  0x000000011c32eecd: movabs $0x112447ec0,%rax  ;   {metadata({method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32eed7: and    $0x1ff8,%edi
  0x000000011c32eedd: cmp    $0x0,%edi
  0x000000011c32eee0: je     0x000000011c3301ea  ;*aconst_null
                                                ; - java.io.BufferedReader::readLine@0 (line 313)

  0x000000011c32eee6: mov    0xc(%rsi),%edi
  0x000000011c32eee9: shl    $0x3,%rdi          ;*getfield lock
                                                ; - java.io.BufferedReader::readLine@3 (line 316)

  0x000000011c32eeed: mov    %rdi,0x88(%rsp)
  0x000000011c32eef5: lea    0xb0(%rsp),%rbx
  0x000000011c32eefd: mov    %rdi,0x8(%rbx)
  0x000000011c32ef01: mov    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011c330201
  0x000000011c32ef04: mov    %rax,%rcx
  0x000000011c32ef07: and    $0x7,%rcx
  0x000000011c32ef0b: cmp    $0x5,%rcx
  0x000000011c32ef0f: jne    0x000000011c32ef96
  0x000000011c32ef15: mov    0x8(%rdi),%ecx
  0x000000011c32ef18: shl    $0x3,%rcx
  0x000000011c32ef1c: mov    0xa8(%rcx),%rcx
  0x000000011c32ef23: or     %r15,%rcx
  0x000000011c32ef26: xor    %rax,%rcx
  0x000000011c32ef29: and    $0xffffffffffffff87,%rcx
  0x000000011c32ef2d: je     0x000000011c32efbe
  0x000000011c32ef33: test   $0x7,%rcx
  0x000000011c32ef3a: jne    0x000000011c32ef83
  0x000000011c32ef3c: test   $0x300,%rcx
  0x000000011c32ef43: jne    0x000000011c32ef62
  0x000000011c32ef45: and    $0x37f,%rax
  0x000000011c32ef4c: mov    %rax,%rcx
  0x000000011c32ef4f: or     %r15,%rcx
  0x000000011c32ef52: lock cmpxchg %rcx,(%rdi)
  0x000000011c32ef57: jne    0x000000011c330206
  0x000000011c32ef5d: jmpq   0x000000011c32efbe
  0x000000011c32ef62: mov    0x8(%rdi),%ecx
  0x000000011c32ef65: shl    $0x3,%rcx
  0x000000011c32ef69: mov    0xa8(%rcx),%rcx
  0x000000011c32ef70: or     %r15,%rcx
  0x000000011c32ef73: lock cmpxchg %rcx,(%rdi)
  0x000000011c32ef78: jne    0x000000011c330206
  0x000000011c32ef7e: jmpq   0x000000011c32efbe
  0x000000011c32ef83: mov    0x8(%rdi),%ecx
  0x000000011c32ef86: shl    $0x3,%rcx
  0x000000011c32ef8a: mov    0xa8(%rcx),%rcx
  0x000000011c32ef91: lock cmpxchg %rcx,(%rdi)
  0x000000011c32ef96: mov    (%rdi),%rax
  0x000000011c32ef99: or     $0x1,%rax
  0x000000011c32ef9d: mov    %rax,(%rbx)
  0x000000011c32efa0: lock cmpxchg %rbx,(%rdi)
  0x000000011c32efa5: je     0x000000011c32efbe
  0x000000011c32efab: sub    %rsp,%rax
  0x000000011c32efae: and    $0xfffffffffffff007,%rax
  0x000000011c32efb5: mov    %rax,(%rbx)
  0x000000011c32efb8: jne    0x000000011c330206  ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)

  0x000000011c32efbe: mov    %rsi,%rbx
  0x000000011c32efc1: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32efcb: addq   $0x1,0x108(%rax)
  0x000000011c32efd3: movabs $0x1125e5bf8,%rbx  ;   {metadata(method data for {method} {0x0000000112447798} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32efdd: mov    0xdc(%rbx),%eax
  0x000000011c32efe3: add    $0x8,%eax
  0x000000011c32efe6: mov    %eax,0xdc(%rbx)
  0x000000011c32efec: movabs $0x112447798,%rbx  ;   {metadata({method} {0x0000000112447798} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32eff6: and    $0x7ffff8,%eax
  0x000000011c32effc: cmp    $0x0,%eax
  0x000000011c32efff: je     0x000000011c330219
  0x000000011c32f005: mov    0x28(%rsi),%ebx
  0x000000011c32f008: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.BufferedReader::ensureOpen@1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000011c32f00c: cmp    $0x0,%rbx
  0x000000011c32f010: movabs $0x1125e5bf8,%rbx  ;   {metadata(method data for {method} {0x0000000112447798} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f01a: movabs $0x108,%rax
  0x000000011c32f024: jne    0x000000011c32f034
  0x000000011c32f02a: movabs $0x118,%rax
  0x000000011c32f034: mov    (%rbx,%rax,1),%rcx
  0x000000011c32f038: lea    0x1(%rcx),%rcx
  0x000000011c32f03c: mov    %rcx,(%rbx,%rax,1)
  0x000000011c32f040: je     0x000000011c32ffbb  ;*ifnonnull
                                                ; - java.io.BufferedReader::ensureOpen@4 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000011c32f046: cmp    $0x0,%edx
  0x000000011c32f049: movabs $0x1125e5720,%rbx  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f053: movabs $0x118,%rax
  0x000000011c32f05d: jne    0x000000011c32f06d
  0x000000011c32f063: movabs $0x128,%rax
  0x000000011c32f06d: mov    (%rbx,%rax,1),%rdx
  0x000000011c32f071: lea    0x1(%rdx),%rdx
  0x000000011c32f075: mov    %rdx,(%rbx,%rax,1)
  0x000000011c32f079: jne    0x000000011c32f0bc  ;*ifne
                                                ; - java.io.BufferedReader::readLine@15 (line 318)

  0x000000011c32f07f: movsbl 0x24(%rsi),%ebx    ;*getfield skipLF
                                                ; - java.io.BufferedReader::readLine@19 (line 318)

  0x000000011c32f083: cmp    $0x0,%ebx
  0x000000011c32f086: movabs $0x1125e5720,%rbx  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f090: movabs $0x138,%rax
  0x000000011c32f09a: je     0x000000011c32f0aa
  0x000000011c32f0a0: movabs $0x148,%rax
  0x000000011c32f0aa: mov    (%rbx,%rax,1),%rdx
  0x000000011c32f0ae: lea    0x1(%rdx),%rdx
  0x000000011c32f0b2: mov    %rdx,(%rbx,%rax,1)
  0x000000011c32f0b6: je     0x000000011c32f0d6  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@22 (line 318)

  0x000000011c32f0bc: movabs $0x1125e5720,%rbx  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f0c6: incl   0x158(%rbx)
  0x000000011c32f0cc: mov    $0x1,%ebx
  0x000000011c32f0d1: jmpq   0x000000011c32f0db  ;*goto
                                                ; - java.io.BufferedReader::readLine@26 (line 318)

  0x000000011c32f0d6: mov    $0x0,%ebx          ;*istore
                                                ; - java.io.BufferedReader::readLine@30 (line 318)

  0x000000011c32f0db: movabs $0x0,%rax          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@32 (line 323)
                                                ;   {oop(NULL)}
  0x000000011c32f0e5: mov    %ebx,0x78(%rsp)
  0x000000011c32f0e9: mov    %rax,0x80(%rsp)
  0x000000011c32f0f1: nopl   0x0(%rax)
  0x000000011c32f0f8: mov    0x18(%rsi),%edx    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@33 (line 323)

  0x000000011c32f0fb: mov    0x14(%rsi),%ecx    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@37 (line 323)

  0x000000011c32f0fe: cmp    %ecx,%edx
  0x000000011c32f100: movabs $0x1125e5720,%rdx  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f10a: movabs $0x170,%rcx
  0x000000011c32f114: jl     0x000000011c32f124
  0x000000011c32f11a: movabs $0x180,%rcx
  0x000000011c32f124: mov    (%rdx,%rcx,1),%r8
  0x000000011c32f128: lea    0x1(%r8),%r8
  0x000000011c32f12c: mov    %r8,(%rdx,%rcx,1)
  0x000000011c32f130: jl     0x000000011c32f161  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@40 (line 323)

  0x000000011c32f136: mov    %rsi,%rdx
  0x000000011c32f139: movabs $0x1125e5720,%rcx  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f143: addq   $0x1,0x190(%rcx)
  0x000000011c32f14b: mov    %rsi,%rdx
  0x000000011c32f14e: mov    %rdx,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)

  0x000000011c32f151: nop
  0x000000011c32f152: nop
  0x000000011c32f153: nop
  0x000000011c32f154: nop
  0x000000011c32f155: nop
  0x000000011c32f156: nop
  0x000000011c32f157: callq  0x000000011c24c0a0  ; OopMap{[112]=Oop [136]=Oop [128]=Oop [184]=Oop off=732}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)
                                                ;   {optimized virtual_call}
  0x000000011c32f15c: mov    0x70(%rsp),%rsi
  0x000000011c32f161: mov    0x18(%rsi),%edx    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@48 (line 325)

  0x000000011c32f164: mov    0x14(%rsi),%edi    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@52 (line 325)

  0x000000011c32f167: cmp    %edi,%edx
  0x000000011c32f169: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f173: movabs $0x1a0,%rcx
  0x000000011c32f17d: jl     0x000000011c32f18d
  0x000000011c32f183: movabs $0x1b0,%rcx
  0x000000011c32f18d: mov    (%rax,%rcx,1),%rbx
  0x000000011c32f191: lea    0x1(%rbx),%rbx
  0x000000011c32f195: mov    %rbx,(%rax,%rcx,1)
  0x000000011c32f199: jge    0x000000011c32fc3a  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@55 (line 325)

  0x000000011c32f19f: mov    0x78(%rsp),%ebx
  0x000000011c32f1a3: cmp    $0x0,%ebx
  0x000000011c32f1a6: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f1b0: movabs $0x260,%rcx
  0x000000011c32f1ba: je     0x000000011c32f1ca
  0x000000011c32f1c0: movabs $0x270,%rcx
  0x000000011c32f1ca: mov    (%rax,%rcx,1),%rbx
  0x000000011c32f1ce: lea    0x1(%rbx),%rbx
  0x000000011c32f1d2: mov    %rbx,(%rax,%rcx,1)
  0x000000011c32f1d6: je     0x000000011c32f232  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@90 (line 336)

  0x000000011c32f1dc: mov    0x2c(%rsi),%eax
  0x000000011c32f1df: shl    $0x3,%rax          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@94 (line 336)

  0x000000011c32f1e3: movslq %edx,%rcx
  0x000000011c32f1e6: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000011c330230
  0x000000011c32f1e9: jae    0x000000011c33023a
  0x000000011c32f1ef: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)

  0x000000011c32f1f4: cmp    $0xa,%eax
  0x000000011c32f1f7: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f201: movabs $0x280,%rcx
  0x000000011c32f20b: jne    0x000000011c32f21b
  0x000000011c32f211: movabs $0x290,%rcx
  0x000000011c32f21b: mov    (%rax,%rcx,1),%rbx
  0x000000011c32f21f: lea    0x1(%rbx),%rbx
  0x000000011c32f223: mov    %rbx,(%rax,%rcx,1)
  0x000000011c32f227: jne    0x000000011c32f232  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@104 (line 336)

  0x000000011c32f22d: inc    %edx
  0x000000011c32f22f: mov    %edx,0x18(%rsi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@114 (line 337)

  0x000000011c32f232: movb   $0x0,0x24(%rsi)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@119 (line 338)

  0x000000011c32f236: mov    0x18(%rsi),%r8d    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@126 (line 342)

  0x000000011c32f23a: mov    %r8,%r9
  0x000000011c32f23d: mov    $0x0,%edx
  0x000000011c32f242: jmpq   0x000000011c32f31e  ;*iload
                                                ; - java.io.BufferedReader::readLine@131 (line 342)

  0x000000011c32f247: nop
  0x000000011c32f248: mov    0x2c(%rsi),%edx
  0x000000011c32f24b: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@141 (line 343)

  0x000000011c32f24f: movslq %r9d,%rax
  0x000000011c32f252: cmp    0xc(%rdx),%r9d     ; implicit exception: dispatches to 0x000000011c330243
  0x000000011c32f256: jae    0x000000011c33024d
  0x000000011c32f25c: movzwl 0x10(%rdx,%rax,2),%edx  ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)

  0x000000011c32f261: cmp    $0xa,%edx
  0x000000011c32f264: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f26e: movabs $0x2c0,%rcx
  0x000000011c32f278: je     0x000000011c32f288
  0x000000011c32f27e: movabs $0x2d0,%rcx
  0x000000011c32f288: mov    (%rax,%rcx,1),%rbx
  0x000000011c32f28c: lea    0x1(%rbx),%rbx
  0x000000011c32f290: mov    %rbx,(%rax,%rcx,1)
  0x000000011c32f294: je     0x000000011c32f361  ;*if_icmpeq
                                                ; - java.io.BufferedReader::readLine@153 (line 344)

  0x000000011c32f29a: cmp    $0xd,%edx
  0x000000011c32f29d: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f2a7: movabs $0x2e0,%rcx
  0x000000011c32f2b1: jne    0x000000011c32f2c1
  0x000000011c32f2b7: movabs $0x2f0,%rcx
  0x000000011c32f2c1: mov    (%rax,%rcx,1),%rbx
  0x000000011c32f2c5: lea    0x1(%rbx),%rbx
  0x000000011c32f2c9: mov    %rbx,(%rax,%rcx,1)
  0x000000011c32f2cd: je     0x000000011c32f361  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@160 (line 344)

  0x000000011c32f2d3: inc    %r9d
  0x000000011c32f2d6: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f2e0: mov    0xe0(%rax),%ecx
  0x000000011c32f2e6: add    $0x8,%ecx
  0x000000011c32f2e9: mov    %ecx,0xe0(%rax)
  0x000000011c32f2ef: movabs $0x112447ec0,%rax  ;   {metadata({method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f2f9: and    $0xfff8,%ecx
  0x000000011c32f2ff: cmp    $0x0,%ecx
  0x000000011c32f302: je     0x000000011c330256  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop [184]=Oop off=1160}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x000000011c32f308: test   %eax,-0xf84820e(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c32f30e: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f318: incl   0x318(%rax)        ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x000000011c32f31e: cmp    %edi,%r9d
  0x000000011c32f321: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f32b: movabs $0x2a0,%rcx
  0x000000011c32f335: jge    0x000000011c32f345
  0x000000011c32f33b: movabs $0x2b0,%rcx
  0x000000011c32f345: mov    (%rax,%rcx,1),%rbx
  0x000000011c32f349: lea    0x1(%rbx),%rbx
  0x000000011c32f34d: mov    %rbx,(%rax,%rcx,1)
  0x000000011c32f351: jl     0x000000011c32f248  ;*if_icmpge
                                                ; - java.io.BufferedReader::readLine@137 (line 342)

  0x000000011c32f357: mov    $0x0,%edi
  0x000000011c32f35c: jmpq   0x000000011c32f376  ;*aload_0
                                                ; - java.io.BufferedReader::readLine@175 (line 350)

  0x000000011c32f361: movabs $0x1125e5720,%rdi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f36b: incl   0x300(%rdi)
  0x000000011c32f371: mov    $0x1,%edi          ;*goto
                                                ; - java.io.BufferedReader::readLine@166 (line 346)

  0x000000011c32f376: mov    %r9d,0x18(%rsi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@183 (line 351)

  0x000000011c32f37a: cmp    $0x0,%edi
  0x000000011c32f37d: movabs $0x1125e5720,%rdi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f387: movabs $0x330,%rax
  0x000000011c32f391: je     0x000000011c32f3a1
  0x000000011c32f397: movabs $0x340,%rax
  0x000000011c32f3a1: mov    (%rdi,%rax,1),%rcx
  0x000000011c32f3a5: lea    0x1(%rcx),%rcx
  0x000000011c32f3a9: mov    %rcx,(%rdi,%rax,1)
  0x000000011c32f3ad: mov    0x80(%rsp),%rax
  0x000000011c32f3b5: jne    0x000000011c32f84b  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@188 (line 353)

  0x000000011c32f3bb: cmp    $0x0,%rax
  0x000000011c32f3bf: movabs $0x1125e5720,%rdx  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f3c9: movabs $0x418,%rdi
  0x000000011c32f3d3: jne    0x000000011c32f3e3
  0x000000011c32f3d9: movabs $0x428,%rdi
  0x000000011c32f3e3: mov    (%rdx,%rdi,1),%rcx
  0x000000011c32f3e7: lea    0x1(%rcx),%rcx
  0x000000011c32f3eb: mov    %rcx,(%rdx,%rdi,1)
  0x000000011c32f3ef: je     0x000000011c32f3fd  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@265 (line 368)

  0x000000011c32f3f5: mov    %rsi,%r11
  0x000000011c32f3f8: jmpq   0x000000011c32f5c3  ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x000000011c32f3fd: data32 xchg %ax,%ax
  0x000000011c32f400: jmpq   0x000000011c33027c  ;   {no_reloc}
  0x000000011c32f405: add    %al,(%rax)
  0x000000011c32f407: add    %al,(%rax)
  0x000000011c32f409: add    %cl,-0x22(%rbx,%rcx,4)
  0x000000011c32f40d: mov    0x60(%r15),%rax
  0x000000011c32f411: lea    0x18(%rax),%rdi
  0x000000011c32f415: cmp    0x70(%r15),%rdi
  0x000000011c32f419: ja     0x000000011c330286
  0x000000011c32f41f: mov    %rdi,0x60(%r15)
  0x000000011c32f423: mov    0xa8(%rdx),%rcx
  0x000000011c32f42a: mov    %rcx,(%rax)
  0x000000011c32f42d: mov    %rdx,%rcx
  0x000000011c32f430: shr    $0x3,%rcx
  0x000000011c32f434: mov    %ecx,0x8(%rax)
  0x000000011c32f437: xor    %rcx,%rcx
  0x000000011c32f43a: mov    %ecx,0xc(%rax)
  0x000000011c32f43d: xor    %rcx,%rcx
  0x000000011c32f440: mov    %rcx,0x10(%rax)
  0x000000011c32f444: mov    %rax,%r13          ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)

  0x000000011c32f447: movabs $0x7155b4d98,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f451: mov    0x74(%rbx),%ebx    ;*getstatic defaultExpectedLineLength
                                                ; - java.io.BufferedReader::readLine@272 (line 369)

  0x000000011c32f454: mov    %r13,%rdx
  0x000000011c32f457: movabs $0x1125e5720,%rsi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f461: addq   $0x1,0x438(%rsi)
  0x000000011c32f469: movabs $0x1125e6438,%rdx  ;   {metadata(method data for {method} {0x0000000112330948} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32f473: mov    0xdc(%rdx),%esi
  0x000000011c32f479: add    $0x8,%esi
  0x000000011c32f47c: mov    %esi,0xdc(%rdx)
  0x000000011c32f482: movabs $0x112330948,%rdx  ;   {metadata({method} {0x0000000112330948} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32f48c: and    $0x7ffff8,%esi
  0x000000011c32f492: cmp    $0x0,%esi
  0x000000011c32f495: je     0x000000011c330293
  0x000000011c32f49b: mov    %r13,%rdx
  0x000000011c32f49e: movabs $0x1125e6438,%rsi  ;   {metadata(method data for {method} {0x0000000112330948} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32f4a8: addq   $0x1,0x108(%rsi)
  0x000000011c32f4b0: movabs $0x11257f080,%rdx  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32f4ba: mov    0xdc(%rdx),%esi
  0x000000011c32f4c0: add    $0x8,%esi
  0x000000011c32f4c3: mov    %esi,0xdc(%rdx)
  0x000000011c32f4c9: movabs $0x112335260,%rdx  ;   {metadata({method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32f4d3: and    $0x7ffff8,%esi
  0x000000011c32f4d9: cmp    $0x0,%esi
  0x000000011c32f4dc: je     0x000000011c3302aa
  0x000000011c32f4e2: mov    %r13,%rdx
  0x000000011c32f4e5: movabs $0x11257f080,%rsi  ;   {metadata(method data for {method} {0x0000000112335260} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c32f4ef: addq   $0x1,0x108(%rsi)
  0x000000011c32f4f7: movabs $0x1124371c0,%rdx  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c32f501: mov    0xdc(%rdx),%esi
  0x000000011c32f507: add    $0x8,%esi
  0x000000011c32f50a: mov    %esi,0xdc(%rdx)
  0x000000011c32f510: movabs $0x1122c0480,%rdx  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c32f51a: and    $0x7ffff8,%esi
  0x000000011c32f520: cmp    $0x0,%esi
  0x000000011c32f523: je     0x000000011c3302c1
  0x000000011c32f529: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c32f533: movslq %ebx,%rbx
  0x000000011c32f536: mov    %rbx,%rdi
  0x000000011c32f539: cmp    $0xffffff,%rbx
  0x000000011c32f540: ja     0x000000011c3302d8
  0x000000011c32f546: movabs $0x17,%rsi
  0x000000011c32f550: lea    (%rsi,%rbx,2),%rsi
  0x000000011c32f554: and    $0xfffffffffffffff8,%rsi
  0x000000011c32f558: mov    0x60(%r15),%rax
  0x000000011c32f55c: lea    (%rax,%rsi,1),%rsi
  0x000000011c32f560: cmp    0x70(%r15),%rsi
  0x000000011c32f564: ja     0x000000011c3302d8
  0x000000011c32f56a: mov    %rsi,0x60(%r15)
  0x000000011c32f56e: sub    %rax,%rsi
  0x000000011c32f571: movq   $0x1,(%rax)
  0x000000011c32f578: mov    %rdx,%rcx
  0x000000011c32f57b: shr    $0x3,%rcx
  0x000000011c32f57f: mov    %ecx,0x8(%rax)
  0x000000011c32f582: mov    %ebx,0xc(%rax)
  0x000000011c32f585: sub    $0x10,%rsi
  0x000000011c32f589: je     0x000000011c32f5a0
  0x000000011c32f58f: xor    %rbx,%rbx
  0x000000011c32f592: shr    $0x3,%rsi
  0x000000011c32f596: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c32f59b: dec    %rsi
  0x000000011c32f59e: jne    0x000000011c32f596  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x000000011c32f5a0: mov    %rax,%r10
  0x000000011c32f5a3: shr    $0x3,%r10
  0x000000011c32f5a7: mov    %r10d,0x10(%r13)
  0x000000011c32f5ab: mov    %r13,%rax
  0x000000011c32f5ae: shr    $0x9,%rax
  0x000000011c32f5b2: movabs $0x10c974000,%rdx
  0x000000011c32f5bc: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x000000011c32f5c0: mov    %r13,%rax          ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x000000011c32f5c3: mov    0x2c(%r11),%edx
  0x000000011c32f5c7: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@281 (line 370)

  0x000000011c32f5cb: cmp    (%rax),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ; implicit exception: dispatches to 0x000000011c3302e2
  0x000000011c32f5ce: mov    %rax,%rcx
  0x000000011c32f5d1: movabs $0x1125e5720,%rsi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f5db: mov    0x8(%rcx),%ecx
  0x000000011c32f5de: shl    $0x3,%rcx
  0x000000011c32f5e2: cmp    0x450(%rsi),%rcx
  0x000000011c32f5e9: jne    0x000000011c32f5f8
  0x000000011c32f5eb: addq   $0x1,0x458(%rsi)
  0x000000011c32f5f3: jmpq   0x000000011c32f65e
  0x000000011c32f5f8: cmp    0x460(%rsi),%rcx
  0x000000011c32f5ff: jne    0x000000011c32f60e
  0x000000011c32f601: addq   $0x1,0x468(%rsi)
  0x000000011c32f609: jmpq   0x000000011c32f65e
  0x000000011c32f60e: cmpq   $0x0,0x450(%rsi)
  0x000000011c32f619: jne    0x000000011c32f632
  0x000000011c32f61b: mov    %rcx,0x450(%rsi)
  0x000000011c32f622: movq   $0x1,0x458(%rsi)
  0x000000011c32f62d: jmpq   0x000000011c32f65e
  0x000000011c32f632: cmpq   $0x0,0x460(%rsi)
  0x000000011c32f63d: jne    0x000000011c32f656
  0x000000011c32f63f: mov    %rcx,0x460(%rsi)
  0x000000011c32f646: movq   $0x1,0x468(%rsi)
  0x000000011c32f651: jmpq   0x000000011c32f65e
  0x000000011c32f656: addq   $0x1,0x448(%rsi)
  0x000000011c32f65e: sub    %r8d,%r9d
  0x000000011c32f661: lea    0xc0(%rsp),%rcx
  0x000000011c32f669: mov    %rax,%rdi
  0x000000011c32f66c: mov    %rdi,0x8(%rcx)
  0x000000011c32f670: mov    (%rdi),%rax
  0x000000011c32f673: mov    %rax,%rsi
  0x000000011c32f676: and    $0x7,%rsi
  0x000000011c32f67a: cmp    $0x5,%rsi
  0x000000011c32f67e: jne    0x000000011c32f705
  0x000000011c32f684: mov    0x8(%rdi),%esi
  0x000000011c32f687: shl    $0x3,%rsi
  0x000000011c32f68b: mov    0xa8(%rsi),%rsi
  0x000000011c32f692: or     %r15,%rsi
  0x000000011c32f695: xor    %rax,%rsi
  0x000000011c32f698: and    $0xffffffffffffff87,%rsi
  0x000000011c32f69c: je     0x000000011c32f72d
  0x000000011c32f6a2: test   $0x7,%rsi
  0x000000011c32f6a9: jne    0x000000011c32f6f2
  0x000000011c32f6ab: test   $0x300,%rsi
  0x000000011c32f6b2: jne    0x000000011c32f6d1
  0x000000011c32f6b4: and    $0x37f,%rax
  0x000000011c32f6bb: mov    %rax,%rsi
  0x000000011c32f6be: or     %r15,%rsi
  0x000000011c32f6c1: lock cmpxchg %rsi,(%rdi)
  0x000000011c32f6c6: jne    0x000000011c3302e7
  0x000000011c32f6cc: jmpq   0x000000011c32f72d
  0x000000011c32f6d1: mov    0x8(%rdi),%esi
  0x000000011c32f6d4: shl    $0x3,%rsi
  0x000000011c32f6d8: mov    0xa8(%rsi),%rsi
  0x000000011c32f6df: or     %r15,%rsi
  0x000000011c32f6e2: lock cmpxchg %rsi,(%rdi)
  0x000000011c32f6e7: jne    0x000000011c3302e7
  0x000000011c32f6ed: jmpq   0x000000011c32f72d
  0x000000011c32f6f2: mov    0x8(%rdi),%esi
  0x000000011c32f6f5: shl    $0x3,%rsi
  0x000000011c32f6f9: mov    0xa8(%rsi),%rsi
  0x000000011c32f700: lock cmpxchg %rsi,(%rdi)
  0x000000011c32f705: mov    (%rdi),%rax
  0x000000011c32f708: or     $0x1,%rax
  0x000000011c32f70c: mov    %rax,(%rcx)
  0x000000011c32f70f: lock cmpxchg %rcx,(%rdi)
  0x000000011c32f714: je     0x000000011c32f72d
  0x000000011c32f71a: sub    %rsp,%rax
  0x000000011c32f71d: and    $0xfffffffffffff007,%rax
  0x000000011c32f724: mov    %rax,(%rcx)
  0x000000011c32f727: jne    0x000000011c3302e7  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011c32f72d: movabs $0x1125e6150,%rcx  ;   {metadata(method data for {method} {0x00000001123316f8} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32f737: mov    0xdc(%rcx),%esi
  0x000000011c32f73d: add    $0x8,%esi
  0x000000011c32f740: mov    %esi,0xdc(%rcx)
  0x000000011c32f746: movabs $0x1123316f8,%rcx  ;   {metadata({method} {0x00000001123316f8} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32f750: and    $0x7ffff8,%esi
  0x000000011c32f756: cmp    $0x0,%esi
  0x000000011c32f759: je     0x000000011c3302fa
  0x000000011c32f75f: movl   $0x0,0x14(%rdi)
  0x000000011c32f766: mov    %rdi,%rax
  0x000000011c32f769: shr    $0x9,%rax
  0x000000011c32f76d: movabs $0x10c974000,%rcx
  0x000000011c32f777: movb   $0x0,(%rax,%rcx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011c32f77b: mov    %rdi,%rax
  0x000000011c32f77e: movabs $0x1125e6150,%rcx  ;   {metadata(method data for {method} {0x00000001123316f8} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32f788: addq   $0x1,0x108(%rcx)
  0x000000011c32f790: mov    %r8,%rcx
  0x000000011c32f793: mov    %r9,%r8
  0x000000011c32f796: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011c32f799: mov    %rdi,0x90(%rsp)
  0x000000011c32f7a1: nop
  0x000000011c32f7a2: nop
  0x000000011c32f7a3: nop
  0x000000011c32f7a4: nop
  0x000000011c32f7a5: nop
  0x000000011c32f7a6: nop
  0x000000011c32f7a7: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop [200]=Oop off=2348}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {optimized virtual_call}
  0x000000011c32f7ac: lea    0xc0(%rsp),%rax
  0x000000011c32f7b4: mov    0x8(%rax),%rsi
  0x000000011c32f7b8: mov    (%rsi),%rdx
  0x000000011c32f7bb: and    $0x7,%rdx
  0x000000011c32f7bf: cmp    $0x5,%rdx
  0x000000011c32f7c3: je     0x000000011c32f7e0
  0x000000011c32f7c9: mov    (%rax),%rdx
  0x000000011c32f7cc: test   %rdx,%rdx
  0x000000011c32f7cf: je     0x000000011c32f7e0
  0x000000011c32f7d5: lock cmpxchg %rdx,(%rsi)
  0x000000011c32f7da: jne    0x000000011c330311  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011c32f7e0: movabs $0x1125e5720,%rdx  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f7ea: mov    0xe0(%rdx),%esi
  0x000000011c32f7f0: add    $0x8,%esi
  0x000000011c32f7f3: mov    %esi,0xe0(%rdx)
  0x000000011c32f7f9: movabs $0x112447ec0,%rdx  ;   {metadata({method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f803: and    $0xfff8,%esi
  0x000000011c32f809: cmp    $0x0,%esi
  0x000000011c32f80c: je     0x000000011c330327  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop off=2450}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x000000011c32f812: test   %eax,-0xf848718(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c32f818: movabs $0x1125e5720,%rdx  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f822: incl   0x478(%rdx)
  0x000000011c32f828: mov    0x90(%rsp),%rax
  0x000000011c32f830: mov    $0x0,%ebx
  0x000000011c32f835: mov    %ebx,0x78(%rsp)
  0x000000011c32f839: mov    %rax,0x80(%rsp)
  0x000000011c32f841: mov    0x70(%rsp),%rsi
  0x000000011c32f846: jmpq   0x000000011c32f0f8  ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x000000011c32f84b: cmp    $0x0,%rax
  0x000000011c32f84f: movabs $0x1125e5720,%rsi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f859: movabs $0x350,%rdi
  0x000000011c32f863: jne    0x000000011c32f873
  0x000000011c32f869: movabs $0x360,%rdi
  0x000000011c32f873: mov    (%rsi,%rdi,1),%rcx
  0x000000011c32f877: lea    0x1(%rcx),%rcx
  0x000000011c32f87b: mov    %rcx,(%rsi,%rdi,1)
  0x000000011c32f87f: mov    %edx,0x7c(%rsp)
  0x000000011c32f883: mov    0x70(%rsp),%rsi
  0x000000011c32f888: jne    0x000000011c32f929  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@192 (line 355)

  0x000000011c32f88e: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000011c32f898: mov    %rsi,%r11
  0x000000011c32f89b: mov    0x60(%r15),%rax
  0x000000011c32f89f: lea    0x18(%rax),%rdi
  0x000000011c32f8a3: cmp    0x70(%r15),%rdi
  0x000000011c32f8a7: ja     0x000000011c33033e
  0x000000011c32f8ad: mov    %rdi,0x60(%r15)
  0x000000011c32f8b1: mov    0xa8(%rdx),%rcx
  0x000000011c32f8b8: mov    %rcx,(%rax)
  0x000000011c32f8bb: mov    %rdx,%rcx
  0x000000011c32f8be: shr    $0x3,%rcx
  0x000000011c32f8c2: mov    %ecx,0x8(%rax)
  0x000000011c32f8c5: xor    %rcx,%rcx
  0x000000011c32f8c8: mov    %ecx,0xc(%rax)
  0x000000011c32f8cb: xor    %rcx,%rcx
  0x000000011c32f8ce: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)

  0x000000011c32f8d2: mov    0x2c(%r11),%edx
  0x000000011c32f8d6: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@200 (line 356)

  0x000000011c32f8da: mov    %rax,%rcx
  0x000000011c32f8dd: movabs $0x1125e5720,%rsi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f8e7: addq   $0x1,0x370(%rsi)
  0x000000011c32f8ef: sub    %r8d,%r9d
  0x000000011c32f8f2: mov    %r8,%rcx
  0x000000011c32f8f5: mov    %r9,%r8
  0x000000011c32f8f8: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)

  0x000000011c32f8fb: mov    %rax,0x98(%rsp)
  0x000000011c32f903: nop
  0x000000011c32f904: nop
  0x000000011c32f905: nop
  0x000000011c32f906: nop
  0x000000011c32f907: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop [112]=Oop [152]=Oop [184]=Oop off=2700}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)
                                                ;   {optimized virtual_call}
  0x000000011c32f90c: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f916: incl   0x380(%rax)
  0x000000011c32f91c: mov    0x98(%rsp),%rsi
  0x000000011c32f924: jmpq   0x000000011c32fbe7  ;*goto
                                                ; - java.io.BufferedReader::readLine@213 (line 356)

  0x000000011c32f929: mov    0x2c(%rsi),%edx
  0x000000011c32f92c: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@218 (line 358)

  0x000000011c32f930: cmp    (%rax),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ; implicit exception: dispatches to 0x000000011c33034b
  0x000000011c32f933: mov    %rax,%rcx
  0x000000011c32f936: movabs $0x1125e5720,%rdi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32f940: mov    0x8(%rcx),%ecx
  0x000000011c32f943: shl    $0x3,%rcx
  0x000000011c32f947: cmp    0x3a0(%rdi),%rcx
  0x000000011c32f94e: jne    0x000000011c32f95d
  0x000000011c32f950: addq   $0x1,0x3a8(%rdi)
  0x000000011c32f958: jmpq   0x000000011c32f9c3
  0x000000011c32f95d: cmp    0x3b0(%rdi),%rcx
  0x000000011c32f964: jne    0x000000011c32f973
  0x000000011c32f966: addq   $0x1,0x3b8(%rdi)
  0x000000011c32f96e: jmpq   0x000000011c32f9c3
  0x000000011c32f973: cmpq   $0x0,0x3a0(%rdi)
  0x000000011c32f97e: jne    0x000000011c32f997
  0x000000011c32f980: mov    %rcx,0x3a0(%rdi)
  0x000000011c32f987: movq   $0x1,0x3a8(%rdi)
  0x000000011c32f992: jmpq   0x000000011c32f9c3
  0x000000011c32f997: cmpq   $0x0,0x3b0(%rdi)
  0x000000011c32f9a2: jne    0x000000011c32f9bb
  0x000000011c32f9a4: mov    %rcx,0x3b0(%rdi)
  0x000000011c32f9ab: movq   $0x1,0x3b8(%rdi)
  0x000000011c32f9b6: jmpq   0x000000011c32f9c3
  0x000000011c32f9bb: addq   $0x1,0x398(%rdi)
  0x000000011c32f9c3: sub    %r8d,%r9d
  0x000000011c32f9c6: lea    0xc0(%rsp),%rcx
  0x000000011c32f9ce: mov    %rax,%rdi
  0x000000011c32f9d1: mov    %rdi,0x8(%rcx)
  0x000000011c32f9d5: mov    (%rdi),%rax
  0x000000011c32f9d8: mov    %rax,%rbx
  0x000000011c32f9db: and    $0x7,%rbx
  0x000000011c32f9df: cmp    $0x5,%rbx
  0x000000011c32f9e3: jne    0x000000011c32fa6a
  0x000000011c32f9e9: mov    0x8(%rdi),%ebx
  0x000000011c32f9ec: shl    $0x3,%rbx
  0x000000011c32f9f0: mov    0xa8(%rbx),%rbx
  0x000000011c32f9f7: or     %r15,%rbx
  0x000000011c32f9fa: xor    %rax,%rbx
  0x000000011c32f9fd: and    $0xffffffffffffff87,%rbx
  0x000000011c32fa01: je     0x000000011c32fa92
  0x000000011c32fa07: test   $0x7,%rbx
  0x000000011c32fa0e: jne    0x000000011c32fa57
  0x000000011c32fa10: test   $0x300,%rbx
  0x000000011c32fa17: jne    0x000000011c32fa36
  0x000000011c32fa19: and    $0x37f,%rax
  0x000000011c32fa20: mov    %rax,%rbx
  0x000000011c32fa23: or     %r15,%rbx
  0x000000011c32fa26: lock cmpxchg %rbx,(%rdi)
  0x000000011c32fa2b: jne    0x000000011c330350
  0x000000011c32fa31: jmpq   0x000000011c32fa92
  0x000000011c32fa36: mov    0x8(%rdi),%ebx
  0x000000011c32fa39: shl    $0x3,%rbx
  0x000000011c32fa3d: mov    0xa8(%rbx),%rbx
  0x000000011c32fa44: or     %r15,%rbx
  0x000000011c32fa47: lock cmpxchg %rbx,(%rdi)
  0x000000011c32fa4c: jne    0x000000011c330350
  0x000000011c32fa52: jmpq   0x000000011c32fa92
  0x000000011c32fa57: mov    0x8(%rdi),%ebx
  0x000000011c32fa5a: shl    $0x3,%rbx
  0x000000011c32fa5e: mov    0xa8(%rbx),%rbx
  0x000000011c32fa65: lock cmpxchg %rbx,(%rdi)
  0x000000011c32fa6a: mov    (%rdi),%rax
  0x000000011c32fa6d: or     $0x1,%rax
  0x000000011c32fa71: mov    %rax,(%rcx)
  0x000000011c32fa74: lock cmpxchg %rcx,(%rdi)
  0x000000011c32fa79: je     0x000000011c32fa92
  0x000000011c32fa7f: sub    %rsp,%rax
  0x000000011c32fa82: and    $0xfffffffffffff007,%rax
  0x000000011c32fa89: mov    %rax,(%rcx)
  0x000000011c32fa8c: jne    0x000000011c330350  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011c32fa92: movabs $0x1125e6150,%rcx  ;   {metadata(method data for {method} {0x00000001123316f8} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32fa9c: mov    0xdc(%rcx),%ebx
  0x000000011c32faa2: add    $0x8,%ebx
  0x000000011c32faa5: mov    %ebx,0xdc(%rcx)
  0x000000011c32faab: movabs $0x1123316f8,%rcx  ;   {metadata({method} {0x00000001123316f8} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32fab5: and    $0x7ffff8,%ebx
  0x000000011c32fabb: cmp    $0x0,%ebx
  0x000000011c32fabe: je     0x000000011c330363
  0x000000011c32fac4: movl   $0x0,0x14(%rdi)
  0x000000011c32facb: mov    %rdi,%rax
  0x000000011c32face: shr    $0x9,%rax
  0x000000011c32fad2: movabs $0x10c974000,%rcx
  0x000000011c32fadc: movb   $0x0,(%rax,%rcx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011c32fae0: mov    %rdi,%rax
  0x000000011c32fae3: movabs $0x1125e6150,%rcx  ;   {metadata(method data for {method} {0x00000001123316f8} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c32faed: addq   $0x1,0x108(%rcx)
  0x000000011c32faf5: mov    %r8,%rcx
  0x000000011c32faf8: mov    %r9,%r8
  0x000000011c32fafb: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011c32fafe: mov    %rdi,0x80(%rsp)
  0x000000011c32fb06: nop
  0x000000011c32fb07: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop [200]=Oop off=3212}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {optimized virtual_call}
  0x000000011c32fb0c: lea    0xc0(%rsp),%rax
  0x000000011c32fb14: mov    0x8(%rax),%rdi
  0x000000011c32fb18: mov    (%rdi),%rsi
  0x000000011c32fb1b: and    $0x7,%rsi
  0x000000011c32fb1f: cmp    $0x5,%rsi
  0x000000011c32fb23: je     0x000000011c32fb40
  0x000000011c32fb29: mov    (%rax),%rsi
  0x000000011c32fb2c: test   %rsi,%rsi
  0x000000011c32fb2f: je     0x000000011c32fb40
  0x000000011c32fb35: lock cmpxchg %rsi,(%rdi)
  0x000000011c32fb3a: jne    0x000000011c33037a  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011c32fb40: mov    0x80(%rsp),%rax
  0x000000011c32fb48: movabs $0x1125e5720,%rsi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32fb52: mov    0x8(%rax),%eax
  0x000000011c32fb55: shl    $0x3,%rax
  0x000000011c32fb59: cmp    0x3d0(%rsi),%rax
  0x000000011c32fb60: jne    0x000000011c32fb6f
  0x000000011c32fb62: addq   $0x1,0x3d8(%rsi)
  0x000000011c32fb6a: jmpq   0x000000011c32fbd5
  0x000000011c32fb6f: cmp    0x3e0(%rsi),%rax
  0x000000011c32fb76: jne    0x000000011c32fb85
  0x000000011c32fb78: addq   $0x1,0x3e8(%rsi)
  0x000000011c32fb80: jmpq   0x000000011c32fbd5
  0x000000011c32fb85: cmpq   $0x0,0x3d0(%rsi)
  0x000000011c32fb90: jne    0x000000011c32fba9
  0x000000011c32fb92: mov    %rax,0x3d0(%rsi)
  0x000000011c32fb99: movq   $0x1,0x3d8(%rsi)
  0x000000011c32fba4: jmpq   0x000000011c32fbd5
  0x000000011c32fba9: cmpq   $0x0,0x3e0(%rsi)
  0x000000011c32fbb4: jne    0x000000011c32fbcd
  0x000000011c32fbb6: mov    %rax,0x3e0(%rsi)
  0x000000011c32fbbd: movq   $0x1,0x3e8(%rsi)
  0x000000011c32fbc8: jmpq   0x000000011c32fbd5
  0x000000011c32fbcd: addq   $0x1,0x3c8(%rsi)
  0x000000011c32fbd5: mov    0x80(%rsp),%rsi    ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)

  0x000000011c32fbdd: nop
  0x000000011c32fbde: nop
  0x000000011c32fbdf: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=3428}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)
                                                ;   {optimized virtual_call}
  0x000000011c32fbe4: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@236 (line 361)

  0x000000011c32fbe7: mov    0x7c(%rsp),%edi
  0x000000011c32fbeb: mov    0x70(%rsp),%rbx
  0x000000011c32fbf0: mov    0x18(%rbx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@238 (line 361)

  0x000000011c32fbf3: inc    %eax
  0x000000011c32fbf5: mov    %eax,0x18(%rbx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@243 (line 361)

  0x000000011c32fbf8: cmp    $0xd,%edi
  0x000000011c32fbfb: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32fc05: movabs $0x3f8,%rdi
  0x000000011c32fc0f: jne    0x000000011c32fc1f
  0x000000011c32fc15: movabs $0x408,%rdi
  0x000000011c32fc1f: mov    (%rax,%rdi,1),%rdx
  0x000000011c32fc23: lea    0x1(%rdx),%rdx
  0x000000011c32fc27: mov    %rdx,(%rax,%rdi,1)
  0x000000011c32fc2b: jne    0x000000011c32ff75  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@250 (line 362)

  0x000000011c32fc31: movb   $0x1,0x24(%rbx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@255 (line 363)

  0x000000011c32fc35: jmpq   0x000000011c32ff75  ;*aload
                                                ; - java.io.BufferedReader::readLine@258 (line 365)

  0x000000011c32fc3a: mov    0x80(%rsp),%rsi
  0x000000011c32fc42: cmp    $0x0,%rsi
  0x000000011c32fc46: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32fc50: movabs $0x1c0,%rdi
  0x000000011c32fc5a: je     0x000000011c32fc6a
  0x000000011c32fc60: movabs $0x1d0,%rdi
  0x000000011c32fc6a: mov    (%rax,%rdi,1),%rbx
  0x000000011c32fc6e: lea    0x1(%rbx),%rbx
  0x000000011c32fc72: mov    %rbx,(%rax,%rdi,1)
  0x000000011c32fc76: je     0x000000011c32fe48  ;*ifnull
                                                ; - java.io.BufferedReader::readLine@59 (line 326)

  0x000000011c32fc7c: cmp    (%rsi),%rax        ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ; implicit exception: dispatches to 0x000000011c330390
  0x000000011c32fc7f: mov    %rsi,%rax
  0x000000011c32fc82: movabs $0x1125e5720,%rdi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32fc8c: mov    0x8(%rax),%eax
  0x000000011c32fc8f: shl    $0x3,%rax
  0x000000011c32fc93: cmp    0x1e8(%rdi),%rax
  0x000000011c32fc9a: jne    0x000000011c32fca9
  0x000000011c32fc9c: addq   $0x1,0x1f0(%rdi)
  0x000000011c32fca4: jmpq   0x000000011c32fd0f
  0x000000011c32fca9: cmp    0x1f8(%rdi),%rax
  0x000000011c32fcb0: jne    0x000000011c32fcbf
  0x000000011c32fcb2: addq   $0x1,0x200(%rdi)
  0x000000011c32fcba: jmpq   0x000000011c32fd0f
  0x000000011c32fcbf: cmpq   $0x0,0x1e8(%rdi)
  0x000000011c32fcca: jne    0x000000011c32fce3
  0x000000011c32fccc: mov    %rax,0x1e8(%rdi)
  0x000000011c32fcd3: movq   $0x1,0x1f0(%rdi)
  0x000000011c32fcde: jmpq   0x000000011c32fd0f
  0x000000011c32fce3: cmpq   $0x0,0x1f8(%rdi)
  0x000000011c32fcee: jne    0x000000011c32fd07
  0x000000011c32fcf0: mov    %rax,0x1f8(%rdi)
  0x000000011c32fcf7: movq   $0x1,0x200(%rdi)
  0x000000011c32fd02: jmpq   0x000000011c32fd0f
  0x000000011c32fd07: addq   $0x1,0x1e0(%rdi)
  0x000000011c32fd0f: lea    0xc0(%rsp),%rdi
  0x000000011c32fd17: mov    %rsi,0x8(%rdi)
  0x000000011c32fd1b: mov    (%rsi),%rax
  0x000000011c32fd1e: mov    %rax,%rbx
  0x000000011c32fd21: and    $0x7,%rbx
  0x000000011c32fd25: cmp    $0x5,%rbx
  0x000000011c32fd29: jne    0x000000011c32fdb0
  0x000000011c32fd2f: mov    0x8(%rsi),%ebx
  0x000000011c32fd32: shl    $0x3,%rbx
  0x000000011c32fd36: mov    0xa8(%rbx),%rbx
  0x000000011c32fd3d: or     %r15,%rbx
  0x000000011c32fd40: xor    %rax,%rbx
  0x000000011c32fd43: and    $0xffffffffffffff87,%rbx
  0x000000011c32fd47: je     0x000000011c32fdd8
  0x000000011c32fd4d: test   $0x7,%rbx
  0x000000011c32fd54: jne    0x000000011c32fd9d
  0x000000011c32fd56: test   $0x300,%rbx
  0x000000011c32fd5d: jne    0x000000011c32fd7c
  0x000000011c32fd5f: and    $0x37f,%rax
  0x000000011c32fd66: mov    %rax,%rbx
  0x000000011c32fd69: or     %r15,%rbx
  0x000000011c32fd6c: lock cmpxchg %rbx,(%rsi)
  0x000000011c32fd71: jne    0x000000011c330395
  0x000000011c32fd77: jmpq   0x000000011c32fdd8
  0x000000011c32fd7c: mov    0x8(%rsi),%ebx
  0x000000011c32fd7f: shl    $0x3,%rbx
  0x000000011c32fd83: mov    0xa8(%rbx),%rbx
  0x000000011c32fd8a: or     %r15,%rbx
  0x000000011c32fd8d: lock cmpxchg %rbx,(%rsi)
  0x000000011c32fd92: jne    0x000000011c330395
  0x000000011c32fd98: jmpq   0x000000011c32fdd8
  0x000000011c32fd9d: mov    0x8(%rsi),%ebx
  0x000000011c32fda0: shl    $0x3,%rbx
  0x000000011c32fda4: mov    0xa8(%rbx),%rbx
  0x000000011c32fdab: lock cmpxchg %rbx,(%rsi)
  0x000000011c32fdb0: mov    (%rsi),%rax
  0x000000011c32fdb3: or     $0x1,%rax
  0x000000011c32fdb7: mov    %rax,(%rdi)
  0x000000011c32fdba: lock cmpxchg %rdi,(%rsi)
  0x000000011c32fdbf: je     0x000000011c32fdd8
  0x000000011c32fdc5: sub    %rsp,%rax
  0x000000011c32fdc8: and    $0xfffffffffffff007,%rax
  0x000000011c32fdcf: mov    %rax,(%rdi)
  0x000000011c32fdd2: jne    0x000000011c330395  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011c32fdd8: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011c32fddb: lea    0xc0(%rsp),%rax
  0x000000011c32fde3: mov    0x8(%rax),%rdx
  0x000000011c32fde7: mov    (%rdx),%rbx
  0x000000011c32fdea: and    $0x7,%rbx
  0x000000011c32fdee: cmp    $0x5,%rbx
  0x000000011c32fdf2: je     0x000000011c32fe0f
  0x000000011c32fdf8: mov    (%rax),%rbx
  0x000000011c32fdfb: test   %rbx,%rbx
  0x000000011c32fdfe: je     0x000000011c32fe0f
  0x000000011c32fe04: lock cmpxchg %rbx,(%rdx)
  0x000000011c32fe09: jne    0x000000011c3303a8  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011c32fe0f: cmp    $0x0,%edi
  0x000000011c32fe12: movabs $0x1125e5720,%rax  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32fe1c: movabs $0x210,%rdi
  0x000000011c32fe26: jle    0x000000011c32fe36
  0x000000011c32fe2c: movabs $0x220,%rdi
  0x000000011c32fe36: mov    (%rax,%rdi,1),%rbx
  0x000000011c32fe3a: lea    0x1(%rbx),%rbx
  0x000000011c32fe3e: mov    %rbx,(%rax,%rdi,1)
  0x000000011c32fe42: jg     0x000000011c32fe95  ;*ifle
                                                ; - java.io.BufferedReader::readLine@66 (line 326)

  0x000000011c32fe48: lea    0xb0(%rsp),%rax
  0x000000011c32fe50: mov    0x8(%rax),%rdi
  0x000000011c32fe54: mov    (%rdi),%rsi
  0x000000011c32fe57: and    $0x7,%rsi
  0x000000011c32fe5b: cmp    $0x5,%rsi
  0x000000011c32fe5f: je     0x000000011c32fe7c
  0x000000011c32fe65: mov    (%rax),%rsi
  0x000000011c32fe68: test   %rsi,%rsi
  0x000000011c32fe6b: je     0x000000011c32fe7c
  0x000000011c32fe71: lock cmpxchg %rsi,(%rdi)
  0x000000011c32fe76: jne    0x000000011c3303be  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@80 (line 329)

  0x000000011c32fe7c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c32fe86: add    $0xe0,%rsp
  0x000000011c32fe8d: pop    %rbp
  0x000000011c32fe8e: test   %eax,-0xf848d94(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32fe94: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@81 (line 329)

  0x000000011c32fe95: mov    %rsi,%rax
  0x000000011c32fe98: movabs $0x1125e5720,%rdi  ;   {metadata(method data for {method} {0x0000000112447ec0} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c32fea2: mov    0x8(%rax),%eax
  0x000000011c32fea5: shl    $0x3,%rax
  0x000000011c32fea9: cmp    0x238(%rdi),%rax
  0x000000011c32feb0: jne    0x000000011c32febf
  0x000000011c32feb2: addq   $0x1,0x240(%rdi)
  0x000000011c32feba: jmpq   0x000000011c32ff25
  0x000000011c32febf: cmp    0x248(%rdi),%rax
  0x000000011c32fec6: jne    0x000000011c32fed5
  0x000000011c32fec8: addq   $0x1,0x250(%rdi)
  0x000000011c32fed0: jmpq   0x000000011c32ff25
  0x000000011c32fed5: cmpq   $0x0,0x238(%rdi)
  0x000000011c32fee0: jne    0x000000011c32fef9
  0x000000011c32fee2: mov    %rax,0x238(%rdi)
  0x000000011c32fee9: movq   $0x1,0x240(%rdi)
  0x000000011c32fef4: jmpq   0x000000011c32ff25
  0x000000011c32fef9: cmpq   $0x0,0x248(%rdi)
  0x000000011c32ff04: jne    0x000000011c32ff1d
  0x000000011c32ff06: mov    %rax,0x248(%rdi)
  0x000000011c32ff0d: movq   $0x1,0x250(%rdi)
  0x000000011c32ff18: jmpq   0x000000011c32ff25
  0x000000011c32ff1d: addq   $0x1,0x230(%rdi)
  0x000000011c32ff25: nop
  0x000000011c32ff26: nop
  0x000000011c32ff27: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop [184]=Oop off=4268}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)
                                                ;   {optimized virtual_call}
  0x000000011c32ff2c: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x000000011c32ff2f: lea    0xb0(%rsp),%rax
  0x000000011c32ff37: mov    0x8(%rax),%rdi
  0x000000011c32ff3b: mov    (%rdi),%rsi
  0x000000011c32ff3e: and    $0x7,%rsi
  0x000000011c32ff42: cmp    $0x5,%rsi
  0x000000011c32ff46: je     0x000000011c32ff63
  0x000000011c32ff4c: mov    (%rax),%rsi
  0x000000011c32ff4f: test   %rsi,%rsi
  0x000000011c32ff52: je     0x000000011c32ff63
  0x000000011c32ff58: lock cmpxchg %rsi,(%rdi)
  0x000000011c32ff5d: jne    0x000000011c3303d4  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@75 (line 327)

  0x000000011c32ff63: mov    %rdx,%rax
  0x000000011c32ff66: add    $0xe0,%rsp
  0x000000011c32ff6d: pop    %rbp
  0x000000011c32ff6e: test   %eax,-0xf848e74(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32ff74: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@76 (line 327)

  0x000000011c32ff75: lea    0xb0(%rsp),%rax
  0x000000011c32ff7d: mov    0x8(%rax),%rdi
  0x000000011c32ff81: mov    (%rdi),%rdx
  0x000000011c32ff84: and    $0x7,%rdx
  0x000000011c32ff88: cmp    $0x5,%rdx
  0x000000011c32ff8c: je     0x000000011c32ffa9
  0x000000011c32ff92: mov    (%rax),%rdx
  0x000000011c32ff95: test   %rdx,%rdx
  0x000000011c32ff98: je     0x000000011c32ffa9
  0x000000011c32ff9e: lock cmpxchg %rdx,(%rdi)
  0x000000011c32ffa3: jne    0x000000011c3303ea  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@262 (line 365)

  0x000000011c32ffa9: mov    %rsi,%rax
  0x000000011c32ffac: add    $0xe0,%rsp
  0x000000011c32ffb3: pop    %rbp
  0x000000011c32ffb4: test   %eax,-0xf848eba(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c32ffba: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@263 (line 365)

  0x000000011c32ffbb: mov    %edx,0xa8(%rsp)
  0x000000011c32ffc2: nopw   0x0(%rax,%rax,1)
  0x000000011c32ffc8: jmpq   0x000000011c33040f  ;   {no_reloc}
  0x000000011c32ffcd: add    %al,(%rax)
  0x000000011c32ffcf: add    %al,(%rax)
  0x000000011c32ffd1: add    %cl,-0x75(%rcx)
  0x000000011c32ffd4: rex.RXB (bad) 
  0x000000011c32ffd6: lea    0x20(%rax),%rdi
  0x000000011c32ffda: cmp    0x70(%r15),%rdi
  0x000000011c32ffde: ja     0x000000011c330419
  0x000000011c32ffe4: mov    %rdi,0x60(%r15)
  0x000000011c32ffe8: mov    0xa8(%rdx),%rcx
  0x000000011c32ffef: mov    %rcx,(%rax)
  0x000000011c32fff2: mov    %rdx,%rcx
  0x000000011c32fff5: shr    $0x3,%rcx
  0x000000011c32fff9: mov    %ecx,0x8(%rax)
  0x000000011c32fffc: xor    %rcx,%rcx
  0x000000011c32ffff: mov    %ecx,0xc(%rax)
  0x000000011c330002: xor    %rcx,%rcx
  0x000000011c330005: mov    %rcx,0x10(%rax)
  0x000000011c330009: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000011c33000d: mov    %rax,%rdx
  0x000000011c330010: movabs $0x1125e5bf8,%rsi  ;   {metadata(method data for {method} {0x0000000112447798} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x000000011c33001a: addq   $0x1,0x128(%rsi)
  0x000000011c330022: movabs $0x715aa3e10,%rdx  ;   {oop(&quot;Stream closed&quot;)}
  0x000000011c33002c: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000011c33002f: mov    %rax,0xa0(%rsp)
  0x000000011c330037: callq  0x000000011c24c0a0  ; OopMap{[136]=Oop [112]=Oop [160]=Oop [184]=Oop off=4540}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {optimized virtual_call}
  0x000000011c33003c: mov    0xa0(%rsp),%rax    ; OopMap{[136]=Oop [112]=Oop [184]=Oop rax=Oop off=4548}
                                                ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000011c330044: movabs $0x11c330044,%rdx  ;   {section_word}
  0x000000011c33004e: callq  0x000000011c273e60  ;   {runtime_call}
  0x000000011c330053: nop                       ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000011c330054: mov    0x2a8(%r15),%rax
  0x000000011c33005b: xor    %r10,%r10
  0x000000011c33005e: mov    %r10,0x2a8(%r15)
  0x000000011c330065: xor    %r10,%r10
  0x000000011c330068: mov    %r10,0x2b0(%r15)
  0x000000011c33006f: mov    %rax,%rdx
  0x000000011c330072: lea    0xc0(%rsp),%rax
  0x000000011c33007a: mov    0x8(%rax),%rbx
  0x000000011c33007e: mov    (%rbx),%rdi
  0x000000011c330081: and    $0x7,%rdi
  0x000000011c330085: cmp    $0x5,%rdi
  0x000000011c330089: je     0x000000011c3300a6
  0x000000011c33008f: mov    (%rax),%rdi
  0x000000011c330092: test   %rdi,%rdi
  0x000000011c330095: je     0x000000011c3300a6
  0x000000011c33009b: lock cmpxchg %rdi,(%rbx)
  0x000000011c3300a0: jne    0x000000011c330426  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011c3300a6: mov    %rdx,%rax          ; OopMap{rsi=Oop [136]=Oop [184]=Oop rax=Oop off=4649}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011c3300a9: movabs $0x11c3300a9,%rdx  ;   {section_word}
  0x000000011c3300b3: callq  0x000000011c273e60  ;   {runtime_call}
  0x000000011c3300b8: nop                       ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011c3300b9: mov    0x2a8(%r15),%rax
  0x000000011c3300c0: xor    %r10,%r10
  0x000000011c3300c3: mov    %r10,0x2a8(%r15)
  0x000000011c3300ca: xor    %r10,%r10
  0x000000011c3300cd: mov    %r10,0x2b0(%r15)
  0x000000011c3300d4: mov    %rax,%rdx
  0x000000011c3300d7: lea    0xc0(%rsp),%rax
  0x000000011c3300df: mov    0x8(%rax),%rcx
  0x000000011c3300e3: mov    (%rcx),%rbx
  0x000000011c3300e6: and    $0x7,%rbx
  0x000000011c3300ea: cmp    $0x5,%rbx
  0x000000011c3300ee: je     0x000000011c33010b
  0x000000011c3300f4: mov    (%rax),%rbx
  0x000000011c3300f7: test   %rbx,%rbx
  0x000000011c3300fa: je     0x000000011c33010b
  0x000000011c330100: lock cmpxchg %rbx,(%rcx)
  0x000000011c330105: jne    0x000000011c33043c  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011c33010b: mov    %rdx,%rax          ; OopMap{[112]=Oop [136]=Oop rsi=Oop [184]=Oop rax=Oop off=4750}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011c33010e: movabs $0x11c33010e,%rdx  ;   {section_word}
  0x000000011c330118: callq  0x000000011c273e60  ;   {runtime_call}
  0x000000011c33011d: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011c33011e: mov    0x88(%rsp),%rbx
  0x000000011c330126: mov    0x70(%rsp),%rsi
  0x000000011c33012b: mov    0x2a8(%r15),%rax
  0x000000011c330132: xor    %r10,%r10
  0x000000011c330135: mov    %r10,0x2a8(%r15)
  0x000000011c33013c: xor    %r10,%r10
  0x000000011c33013f: mov    %r10,0x2b0(%r15)
  0x000000011c330146: mov    %rax,%rdx
  0x000000011c330149: lea    0xc0(%rsp),%rax
  0x000000011c330151: mov    0x8(%rax),%r8
  0x000000011c330155: mov    (%r8),%rcx
  0x000000011c330158: and    $0x7,%rcx
  0x000000011c33015c: cmp    $0x5,%rcx
  0x000000011c330160: je     0x000000011c33017d
  0x000000011c330166: mov    (%rax),%rcx
  0x000000011c330169: test   %rcx,%rcx
  0x000000011c33016c: je     0x000000011c33017d
  0x000000011c330172: lock cmpxchg %rcx,(%r8)
  0x000000011c330177: jne    0x000000011c330452  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011c33017d: mov    %rdx,%rax          ; OopMap{rdi=Oop rsi=Oop [112]=Oop rbx=Oop [136]=Oop [184]=Oop rax=Oop off=4864}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011c330180: movabs $0x11c330180,%rdx  ;   {section_word}
  0x000000011c33018a: callq  0x000000011c273e60  ;   {runtime_call}
  0x000000011c33018f: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011c330190: mov    0x2a8(%r15),%rax
  0x000000011c330197: xor    %r10,%r10
  0x000000011c33019a: mov    %r10,0x2a8(%r15)
  0x000000011c3301a1: xor    %r10,%r10
  0x000000011c3301a4: mov    %r10,0x2b0(%r15)
  0x000000011c3301ab: mov    %rax,%rsi
  0x000000011c3301ae: lea    0xb0(%rsp),%rax
  0x000000011c3301b6: mov    0x8(%rax),%rbx
  0x000000011c3301ba: mov    (%rbx),%rdi
  0x000000011c3301bd: and    $0x7,%rdi
  0x000000011c3301c1: cmp    $0x5,%rdi
  0x000000011c3301c5: je     0x000000011c3301e2
  0x000000011c3301cb: mov    (%rax),%rdi
  0x000000011c3301ce: test   %rdi,%rdi
  0x000000011c3301d1: je     0x000000011c3301e2
  0x000000011c3301d7: lock cmpxchg %rdi,(%rbx)
  0x000000011c3301dc: jne    0x000000011c330468  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@300 (line 372)

  0x000000011c3301e2: mov    %rsi,%rax
  0x000000011c3301e5: jmpq   0x000000011c3304c7
  0x000000011c3301ea: mov    %rax,0x8(%rsp)
  0x000000011c3301ef: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3301f7: callq  0x000000011c306120  ; OopMap{rsi=Oop [112]=Oop off=4988}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::readLine@-1 (line 313)
                                                ;   {runtime_call}
  0x000000011c3301fc: jmpq   0x000000011c32eee6
  0x000000011c330201: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop off=4998}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x000000011c330206: mov    %rdi,0x8(%rsp)
  0x000000011c33020b: mov    %rbx,(%rsp)
  0x000000011c33020f: callq  0x000000011c3044a0  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop off=5012}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x000000011c330214: jmpq   0x000000011c32efbe
  0x000000011c330219: mov    %rbx,0x8(%rsp)
  0x000000011c33021e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c330226: callq  0x000000011c306120  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop off=5035}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::ensureOpen@-1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000011c33022b: jmpq   0x000000011c32f005
  0x000000011c330230: callq  0x000000011c301ac0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5045}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000011c330235: callq  0x000000011c301ac0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5050}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000011c33023a: mov    %rdx,(%rsp)
  0x000000011c33023e: callq  0x000000011c274080  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5059}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000011c330243: callq  0x000000011c301ac0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5064}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000011c330248: callq  0x000000011c301ac0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5069}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000011c33024d: mov    %r9,(%rsp)
  0x000000011c330251: callq  0x000000011c274080  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5078}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000011c330256: mov    %rax,0x8(%rsp)
  0x000000011c33025b: movq   $0xac,(%rsp)
  0x000000011c330263: callq  0x000000011c306120  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop [184]=Oop off=5096}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)
                                                ;   {runtime_call}
  0x000000011c330268: jmpq   0x000000011c32f308
  0x000000011c33026d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c330277: mov    $0xa050f00,%eax
  0x000000011c33027c: callq  0x000000011c305120  ; OopMap{[136]=Oop rsi=Oop [112]=Oop [184]=Oop off=5121}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x000000011c330281: jmpq   0x000000011c32f400
  0x000000011c330286: mov    %rdx,%rdx
  0x000000011c330289: callq  0x000000011c302220  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5134}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x000000011c33028e: jmpq   0x000000011c32f444
  0x000000011c330293: mov    %rdx,0x8(%rsp)
  0x000000011c330298: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3302a0: callq  0x000000011c306120  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5157}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::&lt;init&gt;@-1 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000011c3302a5: jmpq   0x000000011c32f49b
  0x000000011c3302aa: mov    %rdx,0x8(%rsp)
  0x000000011c3302af: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3302b7: callq  0x000000011c306120  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5180}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000011c3302bc: jmpq   0x000000011c32f4e2
  0x000000011c3302c1: mov    %rdx,0x8(%rsp)
  0x000000011c3302c6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3302ce: callq  0x000000011c306120  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5203}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000011c3302d3: jmpq   0x000000011c32f529
  0x000000011c3302d8: callq  0x000000011c302b20  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5213}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000011c3302dd: jmpq   0x000000011c32f5a0
  0x000000011c3302e2: callq  0x000000011c301ac0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rax=Oop rdx=Oop [184]=Oop off=5223}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000011c3302e7: mov    %rdi,0x8(%rsp)
  0x000000011c3302ec: mov    %rcx,(%rsp)
  0x000000011c3302f0: callq  0x000000011c3044a0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5237}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000011c3302f5: jmpq   0x000000011c32f72d
  0x000000011c3302fa: mov    %rcx,0x8(%rsp)
  0x000000011c3302ff: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c330307: callq  0x000000011c306120  ; OopMap{[136]=Oop r11=Oop [112]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5260}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x000000011c33030c: jmpq   0x000000011c32f75f
  0x000000011c330311: lea    0xc0(%rsp),%rax
  0x000000011c330319: mov    %rax,(%rsp)
  0x000000011c33031d: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c330322: jmpq   0x000000011c32f7e0
  0x000000011c330327: mov    %rdx,0x8(%rsp)
  0x000000011c33032c: movq   $0x125,(%rsp)
  0x000000011c330334: callq  0x000000011c306120  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop off=5305}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)
                                                ;   {runtime_call}
  0x000000011c330339: jmpq   0x000000011c32f812
  0x000000011c33033e: mov    %rdx,%rdx
  0x000000011c330341: callq  0x000000011c302220  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5318}
                                                ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)
                                                ;   {runtime_call}
  0x000000011c330346: jmpq   0x000000011c32f8d2
  0x000000011c33034b: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [112]=Oop rax=Oop [136]=Oop rdx=Oop [184]=Oop off=5328}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000011c330350: mov    %rdi,0x8(%rsp)
  0x000000011c330355: mov    %rcx,(%rsp)
  0x000000011c330359: callq  0x000000011c3044a0  ; OopMap{rsi=Oop [112]=Oop [136]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5342}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000011c33035e: jmpq   0x000000011c32fa92
  0x000000011c330363: mov    %rcx,0x8(%rsp)
  0x000000011c330368: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c330370: callq  0x000000011c306120  ; OopMap{rsi=Oop [112]=Oop [136]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5365}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000011c330375: jmpq   0x000000011c32fac4
  0x000000011c33037a: lea    0xc0(%rsp),%rax
  0x000000011c330382: mov    %rax,(%rsp)
  0x000000011c330386: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c33038b: jmpq   0x000000011c32fb40
  0x000000011c330390: callq  0x000000011c301ac0  ; OopMap{[136]=Oop rsi=Oop [184]=Oop off=5397}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x000000011c330395: mov    %rsi,0x8(%rsp)
  0x000000011c33039a: mov    %rdi,(%rsp)
  0x000000011c33039e: callq  0x000000011c3044a0  ; OopMap{[136]=Oop rsi=Oop [184]=Oop [200]=Oop off=5411}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x000000011c3303a3: jmpq   0x000000011c32fdd8
  0x000000011c3303a8: lea    0xc0(%rsp),%rax
  0x000000011c3303b0: mov    %rax,(%rsp)
  0x000000011c3303b4: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c3303b9: jmpq   0x000000011c32fe0f
  0x000000011c3303be: lea    0xb0(%rsp),%rax
  0x000000011c3303c6: mov    %rax,(%rsp)
  0x000000011c3303ca: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c3303cf: jmpq   0x000000011c32fe7c
  0x000000011c3303d4: lea    0xb0(%rsp),%rax
  0x000000011c3303dc: mov    %rax,(%rsp)
  0x000000011c3303e0: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c3303e5: jmpq   0x000000011c32ff63
  0x000000011c3303ea: lea    0xb0(%rsp),%rax
  0x000000011c3303f2: mov    %rax,(%rsp)
  0x000000011c3303f6: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c3303fb: jmpq   0x000000011c32ffa9
  0x000000011c330400: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c33040a: mov    $0xa050f00,%eax
  0x000000011c33040f: callq  0x000000011c305120  ; OopMap{[112]=Oop [136]=Oop [184]=Oop off=5524}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000011c330414: jmpq   0x000000011c32ffc8
  0x000000011c330419: mov    %rdx,%rdx
  0x000000011c33041c: callq  0x000000011c302220  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5537}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x000000011c330421: jmpq   0x000000011c33000d
  0x000000011c330426: lea    0xc0(%rsp),%rax
  0x000000011c33042e: mov    %rax,(%rsp)
  0x000000011c330432: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c330437: jmpq   0x000000011c3300a6
  0x000000011c33043c: lea    0xc0(%rsp),%rax
  0x000000011c330444: mov    %rax,(%rsp)
  0x000000011c330448: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c33044d: jmpq   0x000000011c33010b
  0x000000011c330452: lea    0xc0(%rsp),%rax
  0x000000011c33045a: mov    %rax,(%rsp)
  0x000000011c33045e: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c330463: jmpq   0x000000011c33017d
  0x000000011c330468: lea    0xb0(%rsp),%rax
  0x000000011c330470: mov    %rax,(%rsp)
  0x000000011c330474: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c330479: jmpq   0x000000011c3301e2
  0x000000011c33047e: mov    0x90(%rsp),%rdi
  0x000000011c330486: jmpq   0x000000011c33011e
  0x000000011c33048b: mov    0x7c(%rsp),%edi
  0x000000011c33048f: mov    0x80(%rsp),%rsi
  0x000000011c330497: jmpq   0x000000011c3300b9
  0x000000011c33049c: nop
  0x000000011c33049d: nop
  0x000000011c33049e: mov    0x2a8(%r15),%rax
  0x000000011c3304a5: movabs $0x0,%r10
  0x000000011c3304af: mov    %r10,0x2a8(%r15)
  0x000000011c3304b6: movabs $0x0,%r10
  0x000000011c3304c0: mov    %r10,0x2b0(%r15)
  0x000000011c3304c7: add    $0xe0,%rsp
  0x000000011c3304ce: pop    %rbp
  0x000000011c3304cf: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c3304d4: hlt    
  0x000000011c3304d5: hlt    
  0x000000011c3304d6: hlt    
  0x000000011c3304d7: hlt    
  0x000000011c3304d8: hlt    
  0x000000011c3304d9: hlt    
  0x000000011c3304da: hlt    
  0x000000011c3304db: hlt    
  0x000000011c3304dc: hlt    
  0x000000011c3304dd: hlt    
  0x000000011c3304de: hlt    
  0x000000011c3304df: hlt    
[Stub Code]
  0x000000011c3304e0: nop                       ;   {no_reloc}
  0x000000011c3304e1: nop
  0x000000011c3304e2: nop
  0x000000011c3304e3: nop
  0x000000011c3304e4: nop
  0x000000011c3304e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3304ef: jmpq   0x000000011c3304ef  ;   {runtime_call}
  0x000000011c3304f4: nop
  0x000000011c3304f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3304ff: jmpq   0x000000011c3304ff  ;   {runtime_call}
  0x000000011c330504: nop
  0x000000011c330505: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33050f: jmpq   0x000000011c33050f  ;   {runtime_call}
  0x000000011c330514: nop
  0x000000011c330515: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33051f: jmpq   0x000000011c33051f  ;   {runtime_call}
  0x000000011c330524: nop
  0x000000011c330525: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33052f: jmpq   0x000000011c33052f  ;   {runtime_call}
  0x000000011c330534: nop
  0x000000011c330535: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33053f: jmpq   0x000000011c33053f  ;   {runtime_call}
  0x000000011c330544: nop
  0x000000011c330545: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33054f: jmpq   0x000000011c33054f  ;   {runtime_call}
[Exception Handler]
  0x000000011c330554: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c330559: mov    %rsp,-0x28(%rsp)
  0x000000011c33055e: sub    $0x80,%rsp
  0x000000011c330565: mov    %rax,0x78(%rsp)
  0x000000011c33056a: mov    %rcx,0x70(%rsp)
  0x000000011c33056f: mov    %rdx,0x68(%rsp)
  0x000000011c330574: mov    %rbx,0x60(%rsp)
  0x000000011c330579: mov    %rbp,0x50(%rsp)
  0x000000011c33057e: mov    %rsi,0x48(%rsp)
  0x000000011c330583: mov    %rdi,0x40(%rsp)
  0x000000011c330588: mov    %r8,0x38(%rsp)
  0x000000011c33058d: mov    %r9,0x30(%rsp)
  0x000000011c330592: mov    %r10,0x28(%rsp)
  0x000000011c330597: mov    %r11,0x20(%rsp)
  0x000000011c33059c: mov    %r12,0x18(%rsp)
  0x000000011c3305a1: mov    %r13,0x10(%rsp)
  0x000000011c3305a6: mov    %r14,0x8(%rsp)
  0x000000011c3305ab: mov    %r15,(%rsp)
  0x000000011c3305af: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3305b9: movabs $0x11c330559,%rsi  ;   {internal_word}
  0x000000011c3305c3: mov    %rsp,%rdx
  0x000000011c3305c6: and    $0xfffffffffffffff0,%rsp
  0x000000011c3305ca: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3305cf: hlt    
[Deopt Handler Code]
  0x000000011c3305d0: movabs $0x11c3305d0,%r10  ;   {section_word}
  0x000000011c3305da: push   %r10
  0x000000011c3305dc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3305e1: hlt    
  0x000000011c3305e2: hlt    
  0x000000011c3305e3: hlt    
  0x000000011c3305e4: hlt    
  0x000000011c3305e5: hlt    
  0x000000011c3305e6: hlt    
  0x000000011c3305e7: hlt    
<nmethod compile_id='50' compiler='C1' level='3' entry='0x000000011c32ee80' size='11168' address='0x000000011c32ebd0' relocation_offset='296' insts_offset='688' stub_offset='6416' scopes_data_offset='6744' scopes_pcs_offset='8304' dependencies_offset='10464' handler_table_offset='10472' nul_chk_table_offset='11096' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='179' backedge_count='3341' iicount='179' stamp='1.282'/>
Decoding compiled method 0x000000011c331790:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000112484d60} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011c331940: mov    %eax,-0x14000(%rsp)
  0x000000011c331947: push   %rbp
  0x000000011c331948: sub    $0x30,%rsp
  0x000000011c33194c: movabs $0x1124d7c80,%rax  ;   {metadata(method data for {method} {0x0000000112484d60} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000011c331956: mov    0xdc(%rax),%edi
  0x000000011c33195c: add    $0x8,%edi
  0x000000011c33195f: mov    %edi,0xdc(%rax)
  0x000000011c331965: movabs $0x112484d60,%rax  ;   {metadata({method} {0x0000000112484d60} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000011c33196f: and    $0x1ff8,%edi
  0x000000011c331975: cmp    $0x0,%edi
  0x000000011c331978: je     0x000000011c331afc  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000011c33197e: mov    %rsi,%rax
  0x000000011c331981: shr    $0x8,%eax
  0x000000011c331984: cmp    $0x0,%eax
  0x000000011c331987: movabs $0x1124d7c80,%rax  ;   {metadata(method data for {method} {0x0000000112484d60} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x000000011c331991: movabs $0x108,%rdi
  0x000000011c33199b: jne    0x000000011c3319ab
  0x000000011c3319a1: movabs $0x118,%rdi
  0x000000011c3319ab: mov    (%rax,%rdi,1),%rbx
  0x000000011c3319af: lea    0x1(%rbx),%rbx
  0x000000011c3319b3: mov    %rbx,(%rax,%rdi,1)
  0x000000011c3319b7: je     0x000000011c331ae6  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x000000011c3319bd: shr    $0x10,%esi
  0x000000011c3319c0: cmp    $0x0,%esi
  0x000000011c3319c3: je     0x000000011c331abe
  0x000000011c3319c9: cmp    $0x1,%esi
  0x000000011c3319cc: je     0x000000011c331a96
  0x000000011c3319d2: cmp    $0x2,%esi
  0x000000011c3319d5: je     0x000000011c331a6e
  0x000000011c3319db: cmp    $0xe,%esi
  0x000000011c3319de: je     0x000000011c331a46
  0x000000011c3319e4: cmp    $0xf,%esi
  0x000000011c3319e7: je     0x000000011c3319f6
  0x000000011c3319ed: cmp    $0x10,%esi
  0x000000011c3319f0: jne    0x000000011c331a1e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x000000011c3319f6: xchg   %ax,%ax
  0x000000011c3319f8: jmpq   0x000000011c331b70  ;   {no_reloc}
  0x000000011c3319fd: add    %al,(%rax)
  0x000000011c3319ff: add    %al,(%rax)
  0x000000011c331a01: add    %ah,0xf(%rsi)
  0x000000011c331a04: (bad)  
  0x000000011c331a05: add    %r8b,(%rax)
  0x000000011c331a08: jmpq   0x000000011c331b8a  ; implicit exception: dispatches to 0x000000011c331b7a
  0x000000011c331a0d: nop
  0x000000011c331a0e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x000000011c331a12: add    $0x30,%rsp
  0x000000011c331a16: pop    %rbp
  0x000000011c331a17: test   %eax,-0xf84a91d(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c331a1d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x000000011c331a1e: xchg   %ax,%ax
  0x000000011c331a20: jmpq   0x000000011c331bf1  ;   {no_reloc}
  0x000000011c331a25: add    %al,(%rax)
  0x000000011c331a27: add    %al,(%rax)
  0x000000011c331a29: add    %ah,0xf(%rsi)
  0x000000011c331a2c: (bad)  
  0x000000011c331a2d: add    %r8b,(%rax)
  0x000000011c331a30: jmpq   0x000000011c331c0b  ; implicit exception: dispatches to 0x000000011c331bfb
  0x000000011c331a35: nop
  0x000000011c331a36: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x000000011c331a3a: add    $0x30,%rsp
  0x000000011c331a3e: pop    %rbp
  0x000000011c331a3f: test   %eax,-0xf84a945(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c331a45: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x000000011c331a46: xchg   %ax,%ax
  0x000000011c331a48: jmpq   0x000000011c331c72  ;   {no_reloc}
  0x000000011c331a4d: add    %al,(%rax)
  0x000000011c331a4f: add    %al,(%rax)
  0x000000011c331a51: add    %ah,0xf(%rsi)
  0x000000011c331a54: (bad)  
  0x000000011c331a55: add    %r8b,(%rax)
  0x000000011c331a58: jmpq   0x000000011c331c8c  ; implicit exception: dispatches to 0x000000011c331c7c
  0x000000011c331a5d: nop
  0x000000011c331a5e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x000000011c331a62: add    $0x30,%rsp
  0x000000011c331a66: pop    %rbp
  0x000000011c331a67: test   %eax,-0xf84a96d(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c331a6d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x000000011c331a6e: xchg   %ax,%ax
  0x000000011c331a70: jmpq   0x000000011c331cf3  ;   {no_reloc}
  0x000000011c331a75: add    %al,(%rax)
  0x000000011c331a77: add    %al,(%rax)
  0x000000011c331a79: add    %ah,0xf(%rsi)
  0x000000011c331a7c: (bad)  
  0x000000011c331a7d: add    %r8b,(%rax)
  0x000000011c331a80: jmpq   0x000000011c331d0d  ; implicit exception: dispatches to 0x000000011c331cfd
  0x000000011c331a85: nop
  0x000000011c331a86: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x000000011c331a8a: add    $0x30,%rsp
  0x000000011c331a8e: pop    %rbp
  0x000000011c331a8f: test   %eax,-0xf84a995(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c331a95: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x000000011c331a96: xchg   %ax,%ax
  0x000000011c331a98: jmpq   0x000000011c331d74  ;   {no_reloc}
  0x000000011c331a9d: add    %al,(%rax)
  0x000000011c331a9f: add    %al,(%rax)
  0x000000011c331aa1: add    %ah,0xf(%rsi)
  0x000000011c331aa4: (bad)  
  0x000000011c331aa5: add    %r8b,(%rax)
  0x000000011c331aa8: jmpq   0x000000011c331d8e  ; implicit exception: dispatches to 0x000000011c331d7e
  0x000000011c331aad: nop
  0x000000011c331aae: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x000000011c331ab2: add    $0x30,%rsp
  0x000000011c331ab6: pop    %rbp
  0x000000011c331ab7: test   %eax,-0xf84a9bd(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c331abd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x000000011c331abe: xchg   %ax,%ax
  0x000000011c331ac0: jmpq   0x000000011c331df5  ;   {no_reloc}
  0x000000011c331ac5: add    %al,(%rax)
  0x000000011c331ac7: add    %al,(%rax)
  0x000000011c331ac9: add    %ah,0xf(%rsi)
  0x000000011c331acc: (bad)  
  0x000000011c331acd: add    %r8b,(%rax)
  0x000000011c331ad0: jmpq   0x000000011c331e0f  ; implicit exception: dispatches to 0x000000011c331dff
  0x000000011c331ad5: nop
  0x000000011c331ad6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x000000011c331ada: add    $0x30,%rsp
  0x000000011c331ade: pop    %rbp
  0x000000011c331adf: test   %eax,-0xf84a9e5(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c331ae5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x000000011c331ae6: movabs $0x7155ca328,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c331af0: add    $0x30,%rsp
  0x000000011c331af4: pop    %rbp
  0x000000011c331af5: test   %eax,-0xf84a9fb(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c331afb: retq   
  0x000000011c331afc: mov    %rax,0x8(%rsp)
  0x000000011c331b01: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c331b09: callq  0x000000011c306120  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x000000011c331b0e: jmpq   0x000000011c33197e
  0x000000011c331b13: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c331b1d: push   %rax
  0x000000011c331b1e: push   %rbx
  0x000000011c331b1f: mov    0x48(%rax),%rbx
  0x000000011c331b23: push   %rdi
  0x000000011c331b24: push   %rsi
  0x000000011c331b25: push   %rdx
  0x000000011c331b26: push   %rcx
  0x000000011c331b27: push   %r8
  0x000000011c331b29: push   %r9
  0x000000011c331b2b: push   %r10
  0x000000011c331b2d: mov    %rsp,%r10
  0x000000011c331b30: and    $0xfffffffffffffff0,%rsp
  0x000000011c331b34: push   %r10
  0x000000011c331b36: push   %r11
  0x000000011c331b38: mov    $0x109,%edi
  0x000000011c331b3d: movabs $0x7fff7783e992,%r10  ;   {runtime_call}
  0x000000011c331b47: callq  *%r10
  0x000000011c331b4a: pop    %r11
  0x000000011c331b4c: pop    %rsp
  0x000000011c331b4d: pop    %r10
  0x000000011c331b4f: pop    %r9
  0x000000011c331b51: pop    %r8
  0x000000011c331b53: pop    %rcx
  0x000000011c331b54: pop    %rdx
  0x000000011c331b55: pop    %rsi
  0x000000011c331b56: pop    %rdi
  0x000000011c331b57: cmp    0x118(%rbx),%rax
  0x000000011c331b5e: pop    %rbx
  0x000000011c331b5f: pop    %rax
  0x000000011c331b60: jne    0x000000011c331b70
  0x000000011c331b66: jmpq   0x000000011c331a02
  0x000000011c331b6b: mov    $0xa535d00,%eax
  0x000000011c331b70: callq  0x000000011c305520  ; OopMap{off=565}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000011c331b75: jmpq   0x000000011c3319f8
  0x000000011c331b7a: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=575}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000011c331b7f: mov    0x0(%rax),%eax
  0x000000011c331b85: mov    $0x6050b00,%eax
  0x000000011c331b8a: callq  0x000000011c304d20  ; OopMap{rax=Oop off=591}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000011c331b8f: jmpq   0x000000011c331a08
  0x000000011c331b94: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c331b9e: push   %rax
  0x000000011c331b9f: push   %rbx
  0x000000011c331ba0: mov    0x48(%rax),%rbx
  0x000000011c331ba4: push   %rdi
  0x000000011c331ba5: push   %rsi
  0x000000011c331ba6: push   %rdx
  0x000000011c331ba7: push   %rcx
  0x000000011c331ba8: push   %r8
  0x000000011c331baa: push   %r9
  0x000000011c331bac: push   %r10
  0x000000011c331bae: mov    %rsp,%r10
  0x000000011c331bb1: and    $0xfffffffffffffff0,%rsp
  0x000000011c331bb5: push   %r10
  0x000000011c331bb7: push   %r11
  0x000000011c331bb9: mov    $0x109,%edi
  0x000000011c331bbe: movabs $0x7fff7783e992,%r10  ;   {runtime_call}
  0x000000011c331bc8: callq  *%r10
  0x000000011c331bcb: pop    %r11
  0x000000011c331bcd: pop    %rsp
  0x000000011c331bce: pop    %r10
  0x000000011c331bd0: pop    %r9
  0x000000011c331bd2: pop    %r8
  0x000000011c331bd4: pop    %rcx
  0x000000011c331bd5: pop    %rdx
  0x000000011c331bd6: pop    %rsi
  0x000000011c331bd7: pop    %rdi
  0x000000011c331bd8: cmp    0x118(%rbx),%rax
  0x000000011c331bdf: pop    %rbx
  0x000000011c331be0: pop    %rax
  0x000000011c331be1: jne    0x000000011c331bf1
  0x000000011c331be7: jmpq   0x000000011c331a2a
  0x000000011c331bec: mov    $0xa535d00,%eax
  0x000000011c331bf1: callq  0x000000011c305520  ; OopMap{off=694}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000011c331bf6: jmpq   0x000000011c331a20
  0x000000011c331bfb: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000011c331c00: mov    0x0(%rax),%eax
  0x000000011c331c06: mov    $0x6050b00,%eax
  0x000000011c331c0b: callq  0x000000011c304d20  ; OopMap{rax=Oop off=720}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000011c331c10: jmpq   0x000000011c331a30
  0x000000011c331c15: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c331c1f: push   %rax
  0x000000011c331c20: push   %rbx
  0x000000011c331c21: mov    0x48(%rax),%rbx
  0x000000011c331c25: push   %rdi
  0x000000011c331c26: push   %rsi
  0x000000011c331c27: push   %rdx
  0x000000011c331c28: push   %rcx
  0x000000011c331c29: push   %r8
  0x000000011c331c2b: push   %r9
  0x000000011c331c2d: push   %r10
  0x000000011c331c2f: mov    %rsp,%r10
  0x000000011c331c32: and    $0xfffffffffffffff0,%rsp
  0x000000011c331c36: push   %r10
  0x000000011c331c38: push   %r11
  0x000000011c331c3a: mov    $0x109,%edi
  0x000000011c331c3f: movabs $0x7fff7783e992,%r10  ;   {runtime_call}
  0x000000011c331c49: callq  *%r10
  0x000000011c331c4c: pop    %r11
  0x000000011c331c4e: pop    %rsp
  0x000000011c331c4f: pop    %r10
  0x000000011c331c51: pop    %r9
  0x000000011c331c53: pop    %r8
  0x000000011c331c55: pop    %rcx
  0x000000011c331c56: pop    %rdx
  0x000000011c331c57: pop    %rsi
  0x000000011c331c58: pop    %rdi
  0x000000011c331c59: cmp    0x118(%rbx),%rax
  0x000000011c331c60: pop    %rbx
  0x000000011c331c61: pop    %rax
  0x000000011c331c62: jne    0x000000011c331c72
  0x000000011c331c68: jmpq   0x000000011c331a52
  0x000000011c331c6d: mov    $0xa535d00,%eax
  0x000000011c331c72: callq  0x000000011c305520  ; OopMap{off=823}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000011c331c77: jmpq   0x000000011c331a48
  0x000000011c331c7c: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=833}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000011c331c81: mov    0x0(%rax),%eax
  0x000000011c331c87: mov    $0x6050b00,%eax
  0x000000011c331c8c: callq  0x000000011c304d20  ; OopMap{rax=Oop off=849}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000011c331c91: jmpq   0x000000011c331a58
  0x000000011c331c96: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c331ca0: push   %rax
  0x000000011c331ca1: push   %rbx
  0x000000011c331ca2: mov    0x48(%rax),%rbx
  0x000000011c331ca6: push   %rdi
  0x000000011c331ca7: push   %rsi
  0x000000011c331ca8: push   %rdx
  0x000000011c331ca9: push   %rcx
  0x000000011c331caa: push   %r8
  0x000000011c331cac: push   %r9
  0x000000011c331cae: push   %r10
  0x000000011c331cb0: mov    %rsp,%r10
  0x000000011c331cb3: and    $0xfffffffffffffff0,%rsp
  0x000000011c331cb7: push   %r10
  0x000000011c331cb9: push   %r11
  0x000000011c331cbb: mov    $0x109,%edi
  0x000000011c331cc0: movabs $0x7fff7783e992,%r10  ;   {runtime_call}
  0x000000011c331cca: callq  *%r10
  0x000000011c331ccd: pop    %r11
  0x000000011c331ccf: pop    %rsp
  0x000000011c331cd0: pop    %r10
  0x000000011c331cd2: pop    %r9
  0x000000011c331cd4: pop    %r8
  0x000000011c331cd6: pop    %rcx
  0x000000011c331cd7: pop    %rdx
  0x000000011c331cd8: pop    %rsi
  0x000000011c331cd9: pop    %rdi
  0x000000011c331cda: cmp    0x118(%rbx),%rax
  0x000000011c331ce1: pop    %rbx
  0x000000011c331ce2: pop    %rax
  0x000000011c331ce3: jne    0x000000011c331cf3
  0x000000011c331ce9: jmpq   0x000000011c331a7a
  0x000000011c331cee: mov    $0xa535d00,%eax
  0x000000011c331cf3: callq  0x000000011c305520  ; OopMap{off=952}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000011c331cf8: jmpq   0x000000011c331a70
  0x000000011c331cfd: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=962}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000011c331d02: mov    0x0(%rax),%eax
  0x000000011c331d08: mov    $0x6050b00,%eax
  0x000000011c331d0d: callq  0x000000011c304d20  ; OopMap{rax=Oop off=978}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000011c331d12: jmpq   0x000000011c331a80
  0x000000011c331d17: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c331d21: push   %rax
  0x000000011c331d22: push   %rbx
  0x000000011c331d23: mov    0x48(%rax),%rbx
  0x000000011c331d27: push   %rdi
  0x000000011c331d28: push   %rsi
  0x000000011c331d29: push   %rdx
  0x000000011c331d2a: push   %rcx
  0x000000011c331d2b: push   %r8
  0x000000011c331d2d: push   %r9
  0x000000011c331d2f: push   %r10
  0x000000011c331d31: mov    %rsp,%r10
  0x000000011c331d34: and    $0xfffffffffffffff0,%rsp
  0x000000011c331d38: push   %r10
  0x000000011c331d3a: push   %r11
  0x000000011c331d3c: mov    $0x109,%edi
  0x000000011c331d41: movabs $0x7fff7783e992,%r10  ;   {runtime_call}
  0x000000011c331d4b: callq  *%r10
  0x000000011c331d4e: pop    %r11
  0x000000011c331d50: pop    %rsp
  0x000000011c331d51: pop    %r10
  0x000000011c331d53: pop    %r9
  0x000000011c331d55: pop    %r8
  0x000000011c331d57: pop    %rcx
  0x000000011c331d58: pop    %rdx
  0x000000011c331d59: pop    %rsi
  0x000000011c331d5a: pop    %rdi
  0x000000011c331d5b: cmp    0x118(%rbx),%rax
  0x000000011c331d62: pop    %rbx
  0x000000011c331d63: pop    %rax
  0x000000011c331d64: jne    0x000000011c331d74
  0x000000011c331d6a: jmpq   0x000000011c331aa2
  0x000000011c331d6f: mov    $0xa535d00,%eax
  0x000000011c331d74: callq  0x000000011c305520  ; OopMap{off=1081}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000011c331d79: jmpq   0x000000011c331a98
  0x000000011c331d7e: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=1091}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000011c331d83: mov    0x0(%rax),%eax
  0x000000011c331d89: mov    $0x6050b00,%eax
  0x000000011c331d8e: callq  0x000000011c304d20  ; OopMap{rax=Oop off=1107}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000011c331d93: jmpq   0x000000011c331aa8
  0x000000011c331d98: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c331da2: push   %rax
  0x000000011c331da3: push   %rbx
  0x000000011c331da4: mov    0x48(%rax),%rbx
  0x000000011c331da8: push   %rdi
  0x000000011c331da9: push   %rsi
  0x000000011c331daa: push   %rdx
  0x000000011c331dab: push   %rcx
  0x000000011c331dac: push   %r8
  0x000000011c331dae: push   %r9
  0x000000011c331db0: push   %r10
  0x000000011c331db2: mov    %rsp,%r10
  0x000000011c331db5: and    $0xfffffffffffffff0,%rsp
  0x000000011c331db9: push   %r10
  0x000000011c331dbb: push   %r11
  0x000000011c331dbd: mov    $0x109,%edi
  0x000000011c331dc2: movabs $0x7fff7783e992,%r10  ;   {runtime_call}
  0x000000011c331dcc: callq  *%r10
  0x000000011c331dcf: pop    %r11
  0x000000011c331dd1: pop    %rsp
  0x000000011c331dd2: pop    %r10
  0x000000011c331dd4: pop    %r9
  0x000000011c331dd6: pop    %r8
  0x000000011c331dd8: pop    %rcx
  0x000000011c331dd9: pop    %rdx
  0x000000011c331dda: pop    %rsi
  0x000000011c331ddb: pop    %rdi
  0x000000011c331ddc: cmp    0x118(%rbx),%rax
  0x000000011c331de3: pop    %rbx
  0x000000011c331de4: pop    %rax
  0x000000011c331de5: jne    0x000000011c331df5
  0x000000011c331deb: jmpq   0x000000011c331aca
  0x000000011c331df0: mov    $0xa535d00,%eax
  0x000000011c331df5: callq  0x000000011c305520  ; OopMap{off=1210}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000011c331dfa: jmpq   0x000000011c331ac0
  0x000000011c331dff: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=1220}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000011c331e04: mov    0x0(%rax),%eax
  0x000000011c331e0a: mov    $0x6050b00,%eax
  0x000000011c331e0f: callq  0x000000011c304d20  ; OopMap{rax=Oop off=1236}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000011c331e14: jmpq   0x000000011c331ad0
  0x000000011c331e19: nop
  0x000000011c331e1a: nop
  0x000000011c331e1b: mov    0x2a8(%r15),%rax
  0x000000011c331e22: movabs $0x0,%r10
  0x000000011c331e2c: mov    %r10,0x2a8(%r15)
  0x000000011c331e33: movabs $0x0,%r10
  0x000000011c331e3d: mov    %r10,0x2b0(%r15)
  0x000000011c331e44: add    $0x30,%rsp
  0x000000011c331e48: pop    %rbp
  0x000000011c331e49: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c331e4e: hlt    
  0x000000011c331e4f: hlt    
  0x000000011c331e50: hlt    
  0x000000011c331e51: hlt    
  0x000000011c331e52: hlt    
  0x000000011c331e53: hlt    
  0x000000011c331e54: hlt    
  0x000000011c331e55: hlt    
  0x000000011c331e56: hlt    
  0x000000011c331e57: hlt    
  0x000000011c331e58: hlt    
  0x000000011c331e59: hlt    
  0x000000011c331e5a: hlt    
  0x000000011c331e5b: hlt    
  0x000000011c331e5c: hlt    
  0x000000011c331e5d: hlt    
  0x000000011c331e5e: hlt    
  0x000000011c331e5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c331e60: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c331e65: mov    %rsp,-0x28(%rsp)
  0x000000011c331e6a: sub    $0x80,%rsp
  0x000000011c331e71: mov    %rax,0x78(%rsp)
  0x000000011c331e76: mov    %rcx,0x70(%rsp)
  0x000000011c331e7b: mov    %rdx,0x68(%rsp)
  0x000000011c331e80: mov    %rbx,0x60(%rsp)
  0x000000011c331e85: mov    %rbp,0x50(%rsp)
  0x000000011c331e8a: mov    %rsi,0x48(%rsp)
  0x000000011c331e8f: mov    %rdi,0x40(%rsp)
  0x000000011c331e94: mov    %r8,0x38(%rsp)
  0x000000011c331e99: mov    %r9,0x30(%rsp)
  0x000000011c331e9e: mov    %r10,0x28(%rsp)
  0x000000011c331ea3: mov    %r11,0x20(%rsp)
  0x000000011c331ea8: mov    %r12,0x18(%rsp)
  0x000000011c331ead: mov    %r13,0x10(%rsp)
  0x000000011c331eb2: mov    %r14,0x8(%rsp)
  0x000000011c331eb7: mov    %r15,(%rsp)
  0x000000011c331ebb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c331ec5: movabs $0x11c331e65,%rsi  ;   {internal_word}
  0x000000011c331ecf: mov    %rsp,%rdx
  0x000000011c331ed2: and    $0xfffffffffffffff0,%rsp
  0x000000011c331ed6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c331edb: hlt    
[Deopt Handler Code]
  0x000000011c331edc: movabs $0x11c331edc,%r10  ;   {section_word}
  0x000000011c331ee6: push   %r10
  0x000000011c331ee8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c331eed: hlt    
  0x000000011c331eee: hlt    
  0x000000011c331eef: hlt    
<nmethod compile_id='56' compiler='C1' level='3' entry='0x000000011c331940' size='2680' address='0x000000011c331790' relocation_offset='296' insts_offset='432' stub_offset='1744' scopes_data_offset='1896' scopes_pcs_offset='2040' dependencies_offset='2616' nul_chk_table_offset='2624' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='1058' iicount='1058' stamp='1.291'/>
<writer thread='42243'/>
<task_queued compile_id='64' method='java/util/Vector size ()I' bytes='5' count='256' iicount='256' level='1' stamp='1.292' comment='tiered' hot_count='256'/>
<task_queued compile_id='65' method='java/lang/Character toLowerCase (C)C' bytes='6' count='768' iicount='768' level='3' stamp='1.292' comment='tiered' hot_count='768'/>
<task_queued compile_id='66' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='1.292' comment='tiered' hot_count='256'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c332250:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112485438} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011c3323c0: mov    0x8(%rsi),%r10d
  0x000000011c3323c4: shl    $0x3,%r10
  0x000000011c3323c8: cmp    %rax,%r10
  0x000000011c3323cb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3323d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c3323dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3323e0: mov    %eax,-0x14000(%rsp)
  0x000000011c3323e7: push   %rbp
  0x000000011c3323e8: sub    $0x30,%rsp
  0x000000011c3323ec: movabs $0x1124d7ef0,%rax  ;   {metadata(method data for {method} {0x0000000112485438} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c3323f6: mov    0xdc(%rax),%edi
  0x000000011c3323fc: add    $0x8,%edi
  0x000000011c3323ff: mov    %edi,0xdc(%rax)
  0x000000011c332405: movabs $0x112485438,%rax  ;   {metadata({method} {0x0000000112485438} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c33240f: and    $0x1ff8,%edi
  0x000000011c332415: cmp    $0x0,%edi
  0x000000011c332418: je     0x000000011c33244a  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000011c33241e: and    $0xffff,%edx
  0x000000011c332424: movabs $0x7155ca338,%rax  ;   {oop([I)}
  0x000000011c33242e: movslq %edx,%rsi
  0x000000011c332431: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000011c33245e
  0x000000011c332434: jae    0x000000011c332468
  0x000000011c33243a: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x000000011c33243e: add    $0x30,%rsp
  0x000000011c332442: pop    %rbp
  0x000000011c332443: test   %eax,-0xf84b349(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c332449: retq   
  0x000000011c33244a: mov    %rax,0x8(%rsp)
  0x000000011c33244f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c332457: callq  0x000000011c306120  ; OopMap{rsi=Oop off=156}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000011c33245c: jmp    0x000000011c33241e
  0x000000011c33245e: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=163}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000011c332463: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=168}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000011c332468: mov    %rdx,(%rsp)
  0x000000011c33246c: callq  0x000000011c274080  ; OopMap{rax=Oop off=177}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000011c332471: nop
  0x000000011c332472: nop
  0x000000011c332473: mov    0x2a8(%r15),%rax
  0x000000011c33247a: movabs $0x0,%r10
  0x000000011c332484: mov    %r10,0x2a8(%r15)
  0x000000011c33248b: movabs $0x0,%r10
  0x000000011c332495: mov    %r10,0x2b0(%r15)
  0x000000011c33249c: add    $0x30,%rsp
  0x000000011c3324a0: pop    %rbp
  0x000000011c3324a1: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c3324a6: hlt    
  0x000000011c3324a7: hlt    
  0x000000011c3324a8: hlt    
  0x000000011c3324a9: hlt    
  0x000000011c3324aa: hlt    
  0x000000011c3324ab: hlt    
  0x000000011c3324ac: hlt    
  0x000000011c3324ad: hlt    
  0x000000011c3324ae: hlt    
  0x000000011c3324af: hlt    
  0x000000011c3324b0: hlt    
  0x000000011c3324b1: hlt    
  0x000000011c3324b2: hlt    
  0x000000011c3324b3: hlt    
  0x000000011c3324b4: hlt    
  0x000000011c3324b5: hlt    
  0x000000011c3324b6: hlt    
  0x000000011c3324b7: hlt    
  0x000000011c3324b8: hlt    
  0x000000011c3324b9: hlt    
  0x000000011c3324ba: hlt    
  0x000000011c3324bb: hlt    
  0x000000011c3324bc: hlt    
  0x000000011c3324bd: hlt    
  0x000000011c3324be: hlt    
  0x000000011c3324bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c3324c0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c3324c5: mov    %rsp,-0x28(%rsp)
  0x000000011c3324ca: sub    $0x80,%rsp
  0x000000011c3324d1: mov    %rax,0x78(%rsp)
  0x000000011c3324d6: mov    %rcx,0x70(%rsp)
  0x000000011c3324db: mov    %rdx,0x68(%rsp)
  0x000000011c3324e0: mov    %rbx,0x60(%rsp)
  0x000000011c3324e5: mov    %rbp,0x50(%rsp)
  0x000000011c3324ea: mov    %rsi,0x48(%rsp)
  0x000000011c3324ef: mov    %rdi,0x40(%rsp)
  0x000000011c3324f4: mov    %r8,0x38(%rsp)
  0x000000011c3324f9: mov    %r9,0x30(%rsp)
  0x000000011c3324fe: mov    %r10,0x28(%rsp)
  0x000000011c332503: mov    %r11,0x20(%rsp)
  0x000000011c332508: mov    %r12,0x18(%rsp)
  0x000000011c33250d: mov    %r13,0x10(%rsp)
  0x000000011c332512: mov    %r14,0x8(%rsp)
  0x000000011c332517: mov    %r15,(%rsp)
  0x000000011c33251b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c332525: movabs $0x11c3324c5,%rsi  ;   {internal_word}
  0x000000011c33252f: mov    %rsp,%rdx
  0x000000011c332532: and    $0xfffffffffffffff0,%rsp
  0x000000011c332536: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33253b: hlt    
[Deopt Handler Code]
  0x000000011c33253c: movabs $0x11c33253c,%r10  ;   {section_word}
  0x000000011c332546: push   %r10
  0x000000011c332548: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33254d: hlt    
  0x000000011c33254e: hlt    
  0x000000011c33254f: hlt    
<nmethod compile_id='57' compiler='C1' level='3' entry='0x000000011c3323c0' size='984' address='0x000000011c332250' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1079' iicount='1079' stamp='1.294'/>
Decoding compiled method 0x000000011c332650:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011c3327c0: mov    %eax,-0x14000(%rsp)
  0x000000011c3327c7: push   %rbp
  0x000000011c3327c8: sub    $0x30,%rsp
  0x000000011c3327cc: movabs $0x1124d8b00,%rdi  ;   {metadata(method data for {method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c3327d6: mov    0xdc(%rdi),%ebx
  0x000000011c3327dc: add    $0x8,%ebx
  0x000000011c3327df: mov    %ebx,0xdc(%rdi)
  0x000000011c3327e5: movabs $0x11235c340,%rdi  ;   {metadata({method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c3327ef: and    $0x1ff8,%ebx
  0x000000011c3327f5: cmp    $0x0,%ebx
  0x000000011c3327f8: je     0x000000011c3328e0  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6338)

  0x000000011c3327fe: movabs $0x1124d8b00,%rdi  ;   {metadata(method data for {method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c332808: addq   $0x1,0x108(%rdi)
  0x000000011c332810: mov    %rsi,%rdi
  0x000000011c332813: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x000000011c332816: mov    %edi,0x20(%rsp)
  0x000000011c33281a: nop
  0x000000011c33281b: nop
  0x000000011c33281c: nop
  0x000000011c33281d: nop
  0x000000011c33281e: nop
  0x000000011c33281f: callq  0x000000011c24c520  ; OopMap{off=100}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {static_call}
  0x000000011c332824: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000011c3328f7
  0x000000011c332827: mov    %rax,%rdx
  0x000000011c33282a: movabs $0x1124d8b00,%rsi  ;   {metadata(method data for {method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c332834: mov    0x8(%rdx),%edx
  0x000000011c332837: shl    $0x3,%rdx
  0x000000011c33283b: cmp    0x120(%rsi),%rdx
  0x000000011c332842: jne    0x000000011c332851
  0x000000011c332844: addq   $0x1,0x128(%rsi)
  0x000000011c33284c: jmpq   0x000000011c3328b7
  0x000000011c332851: cmp    0x130(%rsi),%rdx
  0x000000011c332858: jne    0x000000011c332867
  0x000000011c33285a: addq   $0x1,0x138(%rsi)
  0x000000011c332862: jmpq   0x000000011c3328b7
  0x000000011c332867: cmpq   $0x0,0x120(%rsi)
  0x000000011c332872: jne    0x000000011c33288b
  0x000000011c332874: mov    %rdx,0x120(%rsi)
  0x000000011c33287b: movq   $0x1,0x128(%rsi)
  0x000000011c332886: jmpq   0x000000011c3328b7
  0x000000011c33288b: cmpq   $0x0,0x130(%rsi)
  0x000000011c332896: jne    0x000000011c3328af
  0x000000011c332898: mov    %rdx,0x130(%rsi)
  0x000000011c33289f: movq   $0x1,0x138(%rsi)
  0x000000011c3328aa: jmpq   0x000000011c3328b7
  0x000000011c3328af: addq   $0x1,0x118(%rsi)
  0x000000011c3328b7: mov    0x20(%rsp),%edx
  0x000000011c3328bb: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x000000011c3328be: nop
  0x000000011c3328bf: nop
  0x000000011c3328c0: nop
  0x000000011c3328c1: nop
  0x000000011c3328c2: nop
  0x000000011c3328c3: nop
  0x000000011c3328c4: nop
  0x000000011c3328c5: movabs $0xffffffffffffffff,%rax
  0x000000011c3328cf: callq  0x000000011c24c2e0  ; OopMap{off=276}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {virtual_call}
  0x000000011c3328d4: add    $0x30,%rsp
  0x000000011c3328d8: pop    %rbp
  0x000000011c3328d9: test   %eax,-0xf84b7df(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c3328df: retq   
  0x000000011c3328e0: mov    %rdi,0x8(%rsp)
  0x000000011c3328e5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3328ed: callq  0x000000011c306120  ; OopMap{off=306}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ;   {runtime_call}
  0x000000011c3328f2: jmpq   0x000000011c3327fe
  0x000000011c3328f7: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=316}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x000000011c3328fc: nop
  0x000000011c3328fd: nop
  0x000000011c3328fe: mov    0x2a8(%r15),%rax
  0x000000011c332905: movabs $0x0,%r10
  0x000000011c33290f: mov    %r10,0x2a8(%r15)
  0x000000011c332916: movabs $0x0,%r10
  0x000000011c332920: mov    %r10,0x2b0(%r15)
  0x000000011c332927: add    $0x30,%rsp
  0x000000011c33292b: pop    %rbp
  0x000000011c33292c: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c332931: hlt    
  0x000000011c332932: hlt    
  0x000000011c332933: hlt    
  0x000000011c332934: hlt    
  0x000000011c332935: hlt    
  0x000000011c332936: hlt    
  0x000000011c332937: hlt    
  0x000000011c332938: hlt    
  0x000000011c332939: hlt    
  0x000000011c33293a: hlt    
  0x000000011c33293b: hlt    
  0x000000011c33293c: hlt    
  0x000000011c33293d: hlt    
  0x000000011c33293e: hlt    
  0x000000011c33293f: hlt    
[Stub Code]
  0x000000011c332940: nop                       ;   {no_reloc}
  0x000000011c332941: nop
  0x000000011c332942: nop
  0x000000011c332943: nop
  0x000000011c332944: nop
  0x000000011c332945: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33294f: jmpq   0x000000011c33294f  ;   {runtime_call}
  0x000000011c332954: nop
  0x000000011c332955: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33295f: jmpq   0x000000011c33295f  ;   {runtime_call}
[Exception Handler]
  0x000000011c332964: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c332969: mov    %rsp,-0x28(%rsp)
  0x000000011c33296e: sub    $0x80,%rsp
  0x000000011c332975: mov    %rax,0x78(%rsp)
  0x000000011c33297a: mov    %rcx,0x70(%rsp)
  0x000000011c33297f: mov    %rdx,0x68(%rsp)
  0x000000011c332984: mov    %rbx,0x60(%rsp)
  0x000000011c332989: mov    %rbp,0x50(%rsp)
  0x000000011c33298e: mov    %rsi,0x48(%rsp)
  0x000000011c332993: mov    %rdi,0x40(%rsp)
  0x000000011c332998: mov    %r8,0x38(%rsp)
  0x000000011c33299d: mov    %r9,0x30(%rsp)
  0x000000011c3329a2: mov    %r10,0x28(%rsp)
  0x000000011c3329a7: mov    %r11,0x20(%rsp)
  0x000000011c3329ac: mov    %r12,0x18(%rsp)
  0x000000011c3329b1: mov    %r13,0x10(%rsp)
  0x000000011c3329b6: mov    %r14,0x8(%rsp)
  0x000000011c3329bb: mov    %r15,(%rsp)
  0x000000011c3329bf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3329c9: movabs $0x11c332969,%rsi  ;   {internal_word}
  0x000000011c3329d3: mov    %rsp,%rdx
  0x000000011c3329d6: and    $0xfffffffffffffff0,%rsp
  0x000000011c3329da: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3329df: hlt    
[Deopt Handler Code]
  0x000000011c3329e0: movabs $0x11c3329e0,%r10  ;   {section_word}
  0x000000011c3329ea: push   %r10
  0x000000011c3329ec: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3329f1: hlt    
  0x000000011c3329f2: hlt    
  0x000000011c3329f3: hlt    
  0x000000011c3329f4: hlt    
  0x000000011c3329f5: hlt    
  0x000000011c3329f6: hlt    
  0x000000011c3329f7: hlt    
<nmethod compile_id='58' compiler='C1' level='3' entry='0x000000011c3327c0' size='1160' address='0x000000011c332650' relocation_offset='296' insts_offset='368' stub_offset='752' scopes_data_offset='944' scopes_pcs_offset='992' dependencies_offset='1136' nul_chk_table_offset='1144' method='java/lang/Character toLowerCase (I)I' bytes='9' count='820' iicount='820' stamp='1.297'/>
Decoding compiled method 0x000000011c332b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112485c08} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011c332c80: mov    0x8(%rsi),%r10d
  0x000000011c332c84: shl    $0x3,%r10
  0x000000011c332c88: cmp    %rax,%r10
  0x000000011c332c8b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c332c91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c332c9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c332ca0: mov    %eax,-0x14000(%rsp)
  0x000000011c332ca7: push   %rbp
  0x000000011c332ca8: sub    $0x40,%rsp
  0x000000011c332cac: movabs $0x1124d8c88,%rax  ;   {metadata(method data for {method} {0x0000000112485c08} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c332cb6: mov    0xdc(%rax),%edi
  0x000000011c332cbc: add    $0x8,%edi
  0x000000011c332cbf: mov    %edi,0xdc(%rax)
  0x000000011c332cc5: movabs $0x112485c08,%rax  ;   {metadata({method} {0x0000000112485c08} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c332ccf: and    $0x1ff8,%edi
  0x000000011c332cd5: cmp    $0x0,%edi
  0x000000011c332cd8: je     0x000000011c332de6  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x000000011c332cde: movabs $0x1124d8c88,%rax  ;   {metadata(method data for {method} {0x0000000112485c08} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c332ce8: addq   $0x1,0x118(%rax)
  0x000000011c332cf0: movabs $0x1124d7ef0,%rax  ;   {metadata(method data for {method} {0x0000000112485438} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c332cfa: mov    0xdc(%rax),%esi
  0x000000011c332d00: add    $0x8,%esi
  0x000000011c332d03: mov    %esi,0xdc(%rax)
  0x000000011c332d09: movabs $0x112485438,%rax  ;   {metadata({method} {0x0000000112485438} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c332d13: and    $0x7ffff8,%esi
  0x000000011c332d19: cmp    $0x0,%esi
  0x000000011c332d1c: je     0x000000011c332dfd
  0x000000011c332d22: mov    %rdx,%rax
  0x000000011c332d25: and    $0xffff,%eax
  0x000000011c332d2b: movabs $0x7155ca338,%rsi  ;   {oop([I)}
  0x000000011c332d35: movslq %eax,%rdi
  0x000000011c332d38: cmp    0xc(%rsi),%eax     ; implicit exception: dispatches to 0x000000011c332e14
  0x000000011c332d3b: jae    0x000000011c332e1e
  0x000000011c332d41: mov    0x10(%rsi,%rdi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x000000011c332d45: mov    %rax,%rsi
  0x000000011c332d48: and    $0x20000,%esi
  0x000000011c332d4e: cmp    $0x0,%esi
  0x000000011c332d51: movabs $0x1124d8c88,%rsi  ;   {metadata(method data for {method} {0x0000000112485c08} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c332d5b: movabs $0x138,%rdi
  0x000000011c332d65: je     0x000000011c332d75
  0x000000011c332d6b: movabs $0x148,%rdi
  0x000000011c332d75: mov    (%rsi,%rdi,1),%rbx
  0x000000011c332d79: lea    0x1(%rbx),%rbx
  0x000000011c332d7d: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c332d81: je     0x000000011c332dd7  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x000000011c332d87: mov    %rax,%rsi
  0x000000011c332d8a: and    $0x7fc0000,%esi
  0x000000011c332d90: cmp    $0x7fc0000,%esi
  0x000000011c332d96: movabs $0x1124d8c88,%rsi  ;   {metadata(method data for {method} {0x0000000112485c08} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x000000011c332da0: movabs $0x158,%rdi
  0x000000011c332daa: je     0x000000011c332dba
  0x000000011c332db0: movabs $0x168,%rdi
  0x000000011c332dba: mov    (%rsi,%rdi,1),%rbx
  0x000000011c332dbe: lea    0x1(%rbx),%rbx
  0x000000011c332dc2: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c332dc6: je     0x000000011c332dd7  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x000000011c332dcc: shl    $0x5,%eax
  0x000000011c332dcf: sar    $0x17,%eax
  0x000000011c332dd2: add    %edx,%eax
  0x000000011c332dd4: mov    %rax,%rdx          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x000000011c332dd7: mov    %rdx,%rax
  0x000000011c332dda: add    $0x40,%rsp
  0x000000011c332dde: pop    %rbp
  0x000000011c332ddf: test   %eax,-0xf84bce5(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c332de5: retq   
  0x000000011c332de6: mov    %rax,0x8(%rsp)
  0x000000011c332deb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c332df3: callq  0x000000011c306120  ; OopMap{rsi=Oop off=376}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x000000011c332df8: jmpq   0x000000011c332cde
  0x000000011c332dfd: mov    %rax,0x8(%rsp)
  0x000000011c332e02: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c332e0a: callq  0x000000011c306120  ; OopMap{off=399}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000011c332e0f: jmpq   0x000000011c332d22
  0x000000011c332e14: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=409}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000011c332e19: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=414}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000011c332e1e: mov    %rax,(%rsp)
  0x000000011c332e22: callq  0x000000011c274080  ; OopMap{rsi=Oop off=423}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000011c332e27: nop
  0x000000011c332e28: nop
  0x000000011c332e29: mov    0x2a8(%r15),%rax
  0x000000011c332e30: movabs $0x0,%r10
  0x000000011c332e3a: mov    %r10,0x2a8(%r15)
  0x000000011c332e41: movabs $0x0,%r10
  0x000000011c332e4b: mov    %r10,0x2b0(%r15)
  0x000000011c332e52: add    $0x40,%rsp
  0x000000011c332e56: pop    %rbp
  0x000000011c332e57: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c332e5c: hlt    
  0x000000011c332e5d: hlt    
  0x000000011c332e5e: hlt    
  0x000000011c332e5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c332e60: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c332e65: mov    %rsp,-0x28(%rsp)
  0x000000011c332e6a: sub    $0x80,%rsp
  0x000000011c332e71: mov    %rax,0x78(%rsp)
  0x000000011c332e76: mov    %rcx,0x70(%rsp)
  0x000000011c332e7b: mov    %rdx,0x68(%rsp)
  0x000000011c332e80: mov    %rbx,0x60(%rsp)
  0x000000011c332e85: mov    %rbp,0x50(%rsp)
  0x000000011c332e8a: mov    %rsi,0x48(%rsp)
  0x000000011c332e8f: mov    %rdi,0x40(%rsp)
  0x000000011c332e94: mov    %r8,0x38(%rsp)
  0x000000011c332e99: mov    %r9,0x30(%rsp)
  0x000000011c332e9e: mov    %r10,0x28(%rsp)
  0x000000011c332ea3: mov    %r11,0x20(%rsp)
  0x000000011c332ea8: mov    %r12,0x18(%rsp)
  0x000000011c332ead: mov    %r13,0x10(%rsp)
  0x000000011c332eb2: mov    %r14,0x8(%rsp)
  0x000000011c332eb7: mov    %r15,(%rsp)
  0x000000011c332ebb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c332ec5: movabs $0x11c332e65,%rsi  ;   {internal_word}
  0x000000011c332ecf: mov    %rsp,%rdx
  0x000000011c332ed2: and    $0xfffffffffffffff0,%rsp
  0x000000011c332ed6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c332edb: hlt    
[Deopt Handler Code]
  0x000000011c332edc: movabs $0x11c332edc,%r10  ;   {section_word}
  0x000000011c332ee6: push   %r10
  0x000000011c332ee8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c332eed: hlt    
  0x000000011c332eee: hlt    
  0x000000011c332eef: hlt    
<nmethod compile_id='59' compiler='C1' level='3' entry='0x000000011c332c80' size='1344' address='0x000000011c332b10' relocation_offset='296' insts_offset='368' stub_offset='848' scopes_data_offset='1016' scopes_pcs_offset='1120' dependencies_offset='1312' nul_chk_table_offset='1320' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='820' iicount='820' stamp='1.300'/>
Decoding compiled method 0x000000011c333090:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011235c2a8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x000000011c333220: mov    %eax,-0x14000(%rsp)
  0x000000011c333227: push   %rbp
  0x000000011c333228: sub    $0x40,%rsp
  0x000000011c33322c: movabs $0x1124d89a8,%rdi  ;   {metadata(method data for {method} {0x000000011235c2a8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c333236: mov    0xdc(%rdi),%ebx
  0x000000011c33323c: add    $0x8,%ebx
  0x000000011c33323f: mov    %ebx,0xdc(%rdi)
  0x000000011c333245: movabs $0x11235c2a8,%rdi  ;   {metadata({method} {0x000000011235c2a8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c33324f: and    $0x1ff8,%ebx
  0x000000011c333255: cmp    $0x0,%ebx
  0x000000011c333258: je     0x000000011c33338c  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x000000011c33325e: movabs $0x1124d89a8,%rdi  ;   {metadata(method data for {method} {0x000000011235c2a8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c333268: addq   $0x1,0x108(%rdi)
  0x000000011c333270: movabs $0x1124d8b00,%rdi  ;   {metadata(method data for {method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c33327a: mov    0xdc(%rdi),%ebx
  0x000000011c333280: add    $0x8,%ebx
  0x000000011c333283: mov    %ebx,0xdc(%rdi)
  0x000000011c333289: movabs $0x11235c340,%rdi  ;   {metadata({method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c333293: and    $0x7ffff8,%ebx
  0x000000011c333299: cmp    $0x0,%ebx
  0x000000011c33329c: je     0x000000011c3333a3
  0x000000011c3332a2: movabs $0x1124d8b00,%rdi  ;   {metadata(method data for {method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c3332ac: addq   $0x1,0x108(%rdi)
  0x000000011c3332b4: mov    %rsi,%rdi
  0x000000011c3332b7: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x000000011c3332ba: mov    %edi,0x28(%rsp)
  0x000000011c3332be: nop
  0x000000011c3332bf: callq  0x000000011c24c520  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x000000011c3332c4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000011c3333ba
  0x000000011c3332c7: mov    %rax,%rdx
  0x000000011c3332ca: movabs $0x1124d8b00,%rsi  ;   {metadata(method data for {method} {0x000000011235c340} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x000000011c3332d4: mov    0x8(%rdx),%edx
  0x000000011c3332d7: shl    $0x3,%rdx
  0x000000011c3332db: cmp    0x120(%rsi),%rdx
  0x000000011c3332e2: jne    0x000000011c3332f1
  0x000000011c3332e4: addq   $0x1,0x128(%rsi)
  0x000000011c3332ec: jmpq   0x000000011c333357
  0x000000011c3332f1: cmp    0x130(%rsi),%rdx
  0x000000011c3332f8: jne    0x000000011c333307
  0x000000011c3332fa: addq   $0x1,0x138(%rsi)
  0x000000011c333302: jmpq   0x000000011c333357
  0x000000011c333307: cmpq   $0x0,0x120(%rsi)
  0x000000011c333312: jne    0x000000011c33332b
  0x000000011c333314: mov    %rdx,0x120(%rsi)
  0x000000011c33331b: movq   $0x1,0x128(%rsi)
  0x000000011c333326: jmpq   0x000000011c333357
  0x000000011c33332b: cmpq   $0x0,0x130(%rsi)
  0x000000011c333336: jne    0x000000011c33334f
  0x000000011c333338: mov    %rdx,0x130(%rsi)
  0x000000011c33333f: movq   $0x1,0x138(%rsi)
  0x000000011c33334a: jmpq   0x000000011c333357
  0x000000011c33334f: addq   $0x1,0x118(%rsi)
  0x000000011c333357: mov    0x28(%rsp),%edx
  0x000000011c33335b: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x000000011c33335e: nop
  0x000000011c33335f: nop
  0x000000011c333360: nop
  0x000000011c333361: nop
  0x000000011c333362: nop
  0x000000011c333363: nop
  0x000000011c333364: nop
  0x000000011c333365: movabs $0xffffffffffffffff,%rax
  0x000000011c33336f: callq  0x000000011c24c2e0  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x000000011c333374: and    $0xffff,%eax
  0x000000011c33337a: and    $0xffff,%eax
  0x000000011c333380: add    $0x40,%rsp
  0x000000011c333384: pop    %rbp
  0x000000011c333385: test   %eax,-0xf84c28b(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33338b: retq   
  0x000000011c33338c: mov    %rdi,0x8(%rsp)
  0x000000011c333391: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c333399: callq  0x000000011c306120  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x000000011c33339e: jmpq   0x000000011c33325e
  0x000000011c3333a3: mov    %rdi,0x8(%rsp)
  0x000000011c3333a8: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3333b0: callq  0x000000011c306120  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x000000011c3333b5: jmpq   0x000000011c3332a2
  0x000000011c3333ba: callq  0x000000011c301ac0  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x000000011c3333bf: nop
  0x000000011c3333c0: nop
  0x000000011c3333c1: mov    0x2a8(%r15),%rax
  0x000000011c3333c8: movabs $0x0,%r10
  0x000000011c3333d2: mov    %r10,0x2a8(%r15)
  0x000000011c3333d9: movabs $0x0,%r10
  0x000000011c3333e3: mov    %r10,0x2b0(%r15)
  0x000000011c3333ea: add    $0x40,%rsp
  0x000000011c3333ee: pop    %rbp
  0x000000011c3333ef: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c3333f4: hlt    
  0x000000011c3333f5: hlt    
  0x000000011c3333f6: hlt    
  0x000000011c3333f7: hlt    
  0x000000011c3333f8: hlt    
  0x000000011c3333f9: hlt    
  0x000000011c3333fa: hlt    
  0x000000011c3333fb: hlt    
  0x000000011c3333fc: hlt    
  0x000000011c3333fd: hlt    
  0x000000011c3333fe: hlt    
  0x000000011c3333ff: hlt    
[Stub Code]
  0x000000011c333400: nop                       ;   {no_reloc}
  0x000000011c333401: nop
  0x000000011c333402: nop
  0x000000011c333403: nop
  0x000000011c333404: nop
  0x000000011c333405: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33340f: jmpq   0x000000011c33340f  ;   {runtime_call}
  0x000000011c333414: nop
  0x000000011c333415: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33341f: jmpq   0x000000011c33341f  ;   {runtime_call}
[Exception Handler]
  0x000000011c333424: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c333429: mov    %rsp,-0x28(%rsp)
  0x000000011c33342e: sub    $0x80,%rsp
  0x000000011c333435: mov    %rax,0x78(%rsp)
  0x000000011c33343a: mov    %rcx,0x70(%rsp)
  0x000000011c33343f: mov    %rdx,0x68(%rsp)
  0x000000011c333444: mov    %rbx,0x60(%rsp)
  0x000000011c333449: mov    %rbp,0x50(%rsp)
  0x000000011c33344e: mov    %rsi,0x48(%rsp)
  0x000000011c333453: mov    %rdi,0x40(%rsp)
  0x000000011c333458: mov    %r8,0x38(%rsp)
  0x000000011c33345d: mov    %r9,0x30(%rsp)
  0x000000011c333462: mov    %r10,0x28(%rsp)
  0x000000011c333467: mov    %r11,0x20(%rsp)
  0x000000011c33346c: mov    %r12,0x18(%rsp)
  0x000000011c333471: mov    %r13,0x10(%rsp)
  0x000000011c333476: mov    %r14,0x8(%rsp)
  0x000000011c33347b: mov    %r15,(%rsp)
  0x000000011c33347f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c333489: movabs $0x11c333429,%rsi  ;   {internal_word}
  0x000000011c333493: mov    %rsp,%rdx
  0x000000011c333496: and    $0xfffffffffffffff0,%rsp
  0x000000011c33349a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33349f: hlt    
[Deopt Handler Code]
  0x000000011c3334a0: movabs $0x11c3334a0,%r10  ;   {section_word}
  0x000000011c3334aa: push   %r10
  0x000000011c3334ac: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3334b1: hlt    
  0x000000011c3334b2: hlt    
  0x000000011c3334b3: hlt    
  0x000000011c3334b4: hlt    
  0x000000011c3334b5: hlt    
  0x000000011c3334b6: hlt    
  0x000000011c3334b7: hlt    
<nmethod compile_id='65' compiler='C1' level='3' entry='0x000000011c333220' size='1336' address='0x000000011c333090' relocation_offset='296' insts_offset='400' stub_offset='880' scopes_data_offset='1080' scopes_pcs_offset='1152' dependencies_offset='1312' nul_chk_table_offset='1320' method='java/lang/Character toLowerCase (C)C' bytes='6' count='788' iicount='788' stamp='1.303'/>
Decoding compiled method 0x000000011c333610:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c333780: mov    0x8(%rsi),%r10d
  0x000000011c333784: shl    $0x3,%r10
  0x000000011c333788: cmp    %rax,%r10
  0x000000011c33378b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c333791: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33379c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3337a0: mov    %eax,-0x14000(%rsp)
  0x000000011c3337a7: push   %rbp
  0x000000011c3337a8: sub    $0x30,%rsp
  0x000000011c3337ac: movabs $0x1124d9bd8,%rdi  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3337b6: mov    0xdc(%rdi),%ebx
  0x000000011c3337bc: add    $0x8,%ebx
  0x000000011c3337bf: mov    %ebx,0xdc(%rdi)
  0x000000011c3337c5: movabs $0x112339248,%rdi  ;   {metadata({method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3337cf: and    $0x1ff8,%ebx
  0x000000011c3337d5: cmp    $0x0,%ebx
  0x000000011c3337d8: je     0x000000011c333815  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x000000011c3337de: mov    %rsi,%rdi
  0x000000011c3337e1: movabs $0x1124d9bd8,%rbx  ;   {metadata(method data for {method} {0x0000000112339248} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x000000011c3337eb: addq   $0x1,0x108(%rbx)
  0x000000011c3337f3: mov    %rsi,%rdi
  0x000000011c3337f6: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000011c3337f9: mov    %rdi,0x20(%rsp)
  0x000000011c3337fe: nop
  0x000000011c3337ff: callq  0x000000011c24c0a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x000000011c333804: mov    0x20(%rsp),%rax
  0x000000011c333809: add    $0x30,%rsp
  0x000000011c33380d: pop    %rbp
  0x000000011c33380e: test   %eax,-0xf84c714(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c333814: retq   
  0x000000011c333815: mov    %rdi,0x8(%rsp)
  0x000000011c33381a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c333822: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x000000011c333827: jmp    0x000000011c3337de
  0x000000011c333829: nop
  0x000000011c33382a: nop
  0x000000011c33382b: mov    0x2a8(%r15),%rax
  0x000000011c333832: movabs $0x0,%r10
  0x000000011c33383c: mov    %r10,0x2a8(%r15)
  0x000000011c333843: movabs $0x0,%r10
  0x000000011c33384d: mov    %r10,0x2b0(%r15)
  0x000000011c333854: add    $0x30,%rsp
  0x000000011c333858: pop    %rbp
  0x000000011c333859: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33385e: hlt    
  0x000000011c33385f: hlt    
[Stub Code]
  0x000000011c333860: nop                       ;   {no_reloc}
  0x000000011c333861: nop
  0x000000011c333862: nop
  0x000000011c333863: nop
  0x000000011c333864: nop
  0x000000011c333865: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33386f: jmpq   0x000000011c33386f  ;   {runtime_call}
[Exception Handler]
  0x000000011c333874: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c333879: mov    %rsp,-0x28(%rsp)
  0x000000011c33387e: sub    $0x80,%rsp
  0x000000011c333885: mov    %rax,0x78(%rsp)
  0x000000011c33388a: mov    %rcx,0x70(%rsp)
  0x000000011c33388f: mov    %rdx,0x68(%rsp)
  0x000000011c333894: mov    %rbx,0x60(%rsp)
  0x000000011c333899: mov    %rbp,0x50(%rsp)
  0x000000011c33389e: mov    %rsi,0x48(%rsp)
  0x000000011c3338a3: mov    %rdi,0x40(%rsp)
  0x000000011c3338a8: mov    %r8,0x38(%rsp)
  0x000000011c3338ad: mov    %r9,0x30(%rsp)
  0x000000011c3338b2: mov    %r10,0x28(%rsp)
  0x000000011c3338b7: mov    %r11,0x20(%rsp)
  0x000000011c3338bc: mov    %r12,0x18(%rsp)
  0x000000011c3338c1: mov    %r13,0x10(%rsp)
  0x000000011c3338c6: mov    %r14,0x8(%rsp)
  0x000000011c3338cb: mov    %r15,(%rsp)
  0x000000011c3338cf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3338d9: movabs $0x11c333879,%rsi  ;   {internal_word}
  0x000000011c3338e3: mov    %rsp,%rdx
  0x000000011c3338e6: and    $0xfffffffffffffff0,%rsp
  0x000000011c3338ea: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3338ef: hlt    
[Deopt Handler Code]
  0x000000011c3338f0: movabs $0x11c3338f0,%r10  ;   {section_word}
  0x000000011c3338fa: push   %r10
  0x000000011c3338fc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c333901: hlt    
  0x000000011c333902: hlt    
  0x000000011c333903: hlt    
  0x000000011c333904: hlt    
  0x000000011c333905: hlt    
  0x000000011c333906: hlt    
  0x000000011c333907: hlt    
<nmethod compile_id='60' compiler='C1' level='3' entry='0x000000011c333780' size='912' address='0x000000011c333610' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='817' iicount='817' stamp='1.305'/>
Decoding compiled method 0x000000011c3339d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122e8488} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c333b20: mov    0x8(%rsi),%r10d
  0x000000011c333b24: shl    $0x3,%r10
  0x000000011c333b28: cmp    %rax,%r10
  0x000000011c333b2b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c333b31: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c333b3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c333b40: mov    %eax,-0x14000(%rsp)
  0x000000011c333b47: push   %rbp
  0x000000011c333b48: sub    $0x30,%rsp
  0x000000011c333b4c: mov    0xc(%rsi),%eax
  0x000000011c333b4f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x000000011c333b53: add    $0x30,%rsp
  0x000000011c333b57: pop    %rbp
  0x000000011c333b58: test   %eax,-0xf84ca5e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c333b5e: retq   
  0x000000011c333b5f: nop
  0x000000011c333b60: nop
  0x000000011c333b61: mov    0x2a8(%r15),%rax
  0x000000011c333b68: movabs $0x0,%r10
  0x000000011c333b72: mov    %r10,0x2a8(%r15)
  0x000000011c333b79: movabs $0x0,%r10
  0x000000011c333b83: mov    %r10,0x2b0(%r15)
  0x000000011c333b8a: add    $0x30,%rsp
  0x000000011c333b8e: pop    %rbp
  0x000000011c333b8f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c333b94: hlt    
  0x000000011c333b95: hlt    
  0x000000011c333b96: hlt    
  0x000000011c333b97: hlt    
  0x000000011c333b98: hlt    
  0x000000011c333b99: hlt    
  0x000000011c333b9a: hlt    
  0x000000011c333b9b: hlt    
  0x000000011c333b9c: hlt    
  0x000000011c333b9d: hlt    
  0x000000011c333b9e: hlt    
  0x000000011c333b9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c333ba0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c333ba5: mov    %rsp,-0x28(%rsp)
  0x000000011c333baa: sub    $0x80,%rsp
  0x000000011c333bb1: mov    %rax,0x78(%rsp)
  0x000000011c333bb6: mov    %rcx,0x70(%rsp)
  0x000000011c333bbb: mov    %rdx,0x68(%rsp)
  0x000000011c333bc0: mov    %rbx,0x60(%rsp)
  0x000000011c333bc5: mov    %rbp,0x50(%rsp)
  0x000000011c333bca: mov    %rsi,0x48(%rsp)
  0x000000011c333bcf: mov    %rdi,0x40(%rsp)
  0x000000011c333bd4: mov    %r8,0x38(%rsp)
  0x000000011c333bd9: mov    %r9,0x30(%rsp)
  0x000000011c333bde: mov    %r10,0x28(%rsp)
  0x000000011c333be3: mov    %r11,0x20(%rsp)
  0x000000011c333be8: mov    %r12,0x18(%rsp)
  0x000000011c333bed: mov    %r13,0x10(%rsp)
  0x000000011c333bf2: mov    %r14,0x8(%rsp)
  0x000000011c333bf7: mov    %r15,(%rsp)
  0x000000011c333bfb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c333c05: movabs $0x11c333ba5,%rsi  ;   {internal_word}
  0x000000011c333c0f: mov    %rsp,%rdx
  0x000000011c333c12: and    $0xfffffffffffffff0,%rsp
  0x000000011c333c16: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c333c1b: hlt    
[Deopt Handler Code]
  0x000000011c333c1c: movabs $0x11c333c1c,%r10  ;   {section_word}
  0x000000011c333c26: push   %r10
  0x000000011c333c28: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c333c2d: hlt    
  0x000000011c333c2e: hlt    
  0x000000011c333c2f: hlt    
<nmethod compile_id='54' compiler='C1' level='1' entry='0x000000011c333b20' size='680' address='0x000000011c3339d0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='790' iicount='790' stamp='1.306'/>
Decoding compiled method 0x000000011c333e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011234d360} &apos;getFile&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c333fe0: mov    0x8(%rsi),%r10d
  0x000000011c333fe4: shl    $0x3,%r10
  0x000000011c333fe8: cmp    %rax,%r10
  0x000000011c333feb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c333ff1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c333ffc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c334000: mov    %eax,-0x14000(%rsp)
  0x000000011c334007: push   %rbp
  0x000000011c334008: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getFile@0 (line 826)

  0x000000011c33400c: mov    0x1c(%rsi),%eax
  0x000000011c33400f: shl    $0x3,%rax          ;*getfield file
                                                ; - java.net.URL::getFile@1 (line 826)

  0x000000011c334013: add    $0x30,%rsp
  0x000000011c334017: pop    %rbp
  0x000000011c334018: test   %eax,-0xf84cf1e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33401e: retq   
  0x000000011c33401f: nop
  0x000000011c334020: nop
  0x000000011c334021: mov    0x2a8(%r15),%rax
  0x000000011c334028: movabs $0x0,%r10
  0x000000011c334032: mov    %r10,0x2a8(%r15)
  0x000000011c334039: movabs $0x0,%r10
  0x000000011c334043: mov    %r10,0x2b0(%r15)
  0x000000011c33404a: add    $0x30,%rsp
  0x000000011c33404e: pop    %rbp
  0x000000011c33404f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c334054: hlt    
  0x000000011c334055: hlt    
  0x000000011c334056: hlt    
  0x000000011c334057: hlt    
  0x000000011c334058: hlt    
  0x000000011c334059: hlt    
  0x000000011c33405a: hlt    
  0x000000011c33405b: hlt    
  0x000000011c33405c: hlt    
  0x000000011c33405d: hlt    
  0x000000011c33405e: hlt    
  0x000000011c33405f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c334060: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c334065: mov    %rsp,-0x28(%rsp)
  0x000000011c33406a: sub    $0x80,%rsp
  0x000000011c334071: mov    %rax,0x78(%rsp)
  0x000000011c334076: mov    %rcx,0x70(%rsp)
  0x000000011c33407b: mov    %rdx,0x68(%rsp)
  0x000000011c334080: mov    %rbx,0x60(%rsp)
  0x000000011c334085: mov    %rbp,0x50(%rsp)
  0x000000011c33408a: mov    %rsi,0x48(%rsp)
  0x000000011c33408f: mov    %rdi,0x40(%rsp)
  0x000000011c334094: mov    %r8,0x38(%rsp)
  0x000000011c334099: mov    %r9,0x30(%rsp)
  0x000000011c33409e: mov    %r10,0x28(%rsp)
  0x000000011c3340a3: mov    %r11,0x20(%rsp)
  0x000000011c3340a8: mov    %r12,0x18(%rsp)
  0x000000011c3340ad: mov    %r13,0x10(%rsp)
  0x000000011c3340b2: mov    %r14,0x8(%rsp)
  0x000000011c3340b7: mov    %r15,(%rsp)
  0x000000011c3340bb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3340c5: movabs $0x11c334065,%rsi  ;   {internal_word}
  0x000000011c3340cf: mov    %rsp,%rdx
  0x000000011c3340d2: and    $0xfffffffffffffff0,%rsp
  0x000000011c3340d6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3340db: hlt    
[Deopt Handler Code]
  0x000000011c3340dc: movabs $0x11c3340dc,%r10  ;   {section_word}
  0x000000011c3340e6: push   %r10
  0x000000011c3340e8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3340ed: hlt    
  0x000000011c3340ee: hlt    
  0x000000011c3340ef: hlt    
<nmethod compile_id='66' compiler='C1' level='1' entry='0x000000011c333fe0' size='704' address='0x000000011c333e90' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='264' iicount='264' stamp='1.308'/>
Decoding compiled method 0x000000011c334190:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001123c5470} &apos;access$400&apos; &apos;(Ljava/lang/ThreadLocal;)I&apos; in &apos;java/lang/ThreadLocal&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c3342e0: mov    %eax,-0x14000(%rsp)
  0x000000011c3342e7: push   %rbp
  0x000000011c3342e8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.ThreadLocal::access$400@0 (line 74)

  0x000000011c3342ec: mov    0xc(%rsi),%eax     ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ; implicit exception: dispatches to 0x000000011c3342fb
  0x000000011c3342ef: add    $0x30,%rsp
  0x000000011c3342f3: pop    %rbp
  0x000000011c3342f4: test   %eax,-0xf84d1fa(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c3342fa: retq   
  0x000000011c3342fb: callq  0x000000011c301ac0  ; OopMap{off=32}
                                                ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 74)
                                                ;   {runtime_call}
  0x000000011c334300: nop
  0x000000011c334301: nop
  0x000000011c334302: mov    0x2a8(%r15),%rax
  0x000000011c334309: movabs $0x0,%r10
  0x000000011c334313: mov    %r10,0x2a8(%r15)
  0x000000011c33431a: movabs $0x0,%r10
  0x000000011c334324: mov    %r10,0x2b0(%r15)
  0x000000011c33432b: add    $0x30,%rsp
  0x000000011c33432f: pop    %rbp
  0x000000011c334330: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c334335: hlt    
  0x000000011c334336: hlt    
  0x000000011c334337: hlt    
  0x000000011c334338: hlt    
  0x000000011c334339: hlt    
  0x000000011c33433a: hlt    
  0x000000011c33433b: hlt    
  0x000000011c33433c: hlt    
  0x000000011c33433d: hlt    
  0x000000011c33433e: hlt    
  0x000000011c33433f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c334340: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c334345: mov    %rsp,-0x28(%rsp)
  0x000000011c33434a: sub    $0x80,%rsp
  0x000000011c334351: mov    %rax,0x78(%rsp)
  0x000000011c334356: mov    %rcx,0x70(%rsp)
  0x000000011c33435b: mov    %rdx,0x68(%rsp)
  0x000000011c334360: mov    %rbx,0x60(%rsp)
  0x000000011c334365: mov    %rbp,0x50(%rsp)
  0x000000011c33436a: mov    %rsi,0x48(%rsp)
  0x000000011c33436f: mov    %rdi,0x40(%rsp)
  0x000000011c334374: mov    %r8,0x38(%rsp)
  0x000000011c334379: mov    %r9,0x30(%rsp)
  0x000000011c33437e: mov    %r10,0x28(%rsp)
  0x000000011c334383: mov    %r11,0x20(%rsp)
  0x000000011c334388: mov    %r12,0x18(%rsp)
  0x000000011c33438d: mov    %r13,0x10(%rsp)
  0x000000011c334392: mov    %r14,0x8(%rsp)
  0x000000011c334397: mov    %r15,(%rsp)
  0x000000011c33439b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3343a5: movabs $0x11c334345,%rsi  ;   {internal_word}
  0x000000011c3343af: mov    %rsp,%rdx
  0x000000011c3343b2: and    $0xfffffffffffffff0,%rsp
  0x000000011c3343b6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3343bb: hlt    
[Deopt Handler Code]
  0x000000011c3343bc: movabs $0x11c3343bc,%r10  ;   {section_word}
  0x000000011c3343c6: push   %r10
  0x000000011c3343c8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3343cd: hlt    
  0x000000011c3343ce: hlt    
  0x000000011c3343cf: hlt    
<nmethod compile_id='55' compiler='C1' level='1' entry='0x000000011c3342e0' size='712' address='0x000000011c334190' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='584' scopes_pcs_offset='608' dependencies_offset='688' nul_chk_table_offset='696' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='395' iicount='395' stamp='1.309'/>
Decoding compiled method 0x000000011c334490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001123da9b0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[B&apos;
  # parm1:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011c334620: mov    %eax,-0x14000(%rsp)
  0x000000011c334627: push   %rbp
  0x000000011c334628: sub    $0x60,%rsp
  0x000000011c33462c: mov    %rsi,%r8
  0x000000011c33462f: mov    %rdx,%r9
  0x000000011c334632: movabs $0x112532750,%rbx  ;   {metadata(method data for {method} {0x00000001123da9b0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c33463c: mov    0xdc(%rbx),%edx
  0x000000011c334642: add    $0x8,%edx
  0x000000011c334645: mov    %edx,0xdc(%rbx)
  0x000000011c33464b: movabs $0x1123da9b0,%rbx  ;   {metadata({method} {0x00000001123da9b0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c334655: and    $0x1ff8,%edx
  0x000000011c33465b: cmp    $0x0,%edx
  0x000000011c33465e: je     0x000000011c33480a  ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3236)

  0x000000011c334664: mov    %r9,%rbx
  0x000000011c334667: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x000000011c334671: movslq %ebx,%rbx
  0x000000011c334674: mov    %rbx,%rdi
  0x000000011c334677: cmp    $0xffffff,%rbx
  0x000000011c33467e: ja     0x000000011c334821
  0x000000011c334684: movabs $0x17,%rsi
  0x000000011c33468e: lea    (%rsi,%rbx,1),%rsi
  0x000000011c334692: and    $0xfffffffffffffff8,%rsi
  0x000000011c334696: mov    0x60(%r15),%rax
  0x000000011c33469a: lea    (%rax,%rsi,1),%rsi
  0x000000011c33469e: cmp    0x70(%r15),%rsi
  0x000000011c3346a2: ja     0x000000011c334821
  0x000000011c3346a8: mov    %rsi,0x60(%r15)
  0x000000011c3346ac: sub    %rax,%rsi
  0x000000011c3346af: movq   $0x1,(%rax)
  0x000000011c3346b6: mov    %rdx,%rcx
  0x000000011c3346b9: shr    $0x3,%rcx
  0x000000011c3346bd: mov    %ecx,0x8(%rax)
  0x000000011c3346c0: mov    %ebx,0xc(%rax)
  0x000000011c3346c3: sub    $0x10,%rsi
  0x000000011c3346c7: je     0x000000011c3346de
  0x000000011c3346cd: xor    %rbx,%rbx
  0x000000011c3346d0: shr    $0x3,%rsi
  0x000000011c3346d4: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c3346d9: dec    %rsi
  0x000000011c3346dc: jne    0x000000011c3346d4  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)

  0x000000011c3346de: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; implicit exception: dispatches to 0x000000011c33482b
  0x000000011c3346e2: movabs $0x112532750,%rdx  ;   {metadata(method data for {method} {0x00000001123da9b0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c3346ec: addq   $0x1,0x108(%rdx)
  0x000000011c3346f4: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c3346fe: mov    0xdc(%rdx),%ecx
  0x000000011c334704: add    $0x8,%ecx
  0x000000011c334707: mov    %ecx,0xdc(%rdx)
  0x000000011c33470d: movabs $0x1123b6508,%rdx  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c334717: and    $0x7ffff8,%ecx
  0x000000011c33471d: cmp    $0x0,%ecx
  0x000000011c334720: je     0x000000011c334830
  0x000000011c334726: cmp    %r9d,%esi
  0x000000011c334729: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c334733: movabs $0x108,%rcx
  0x000000011c33473d: jg     0x000000011c33474d
  0x000000011c334743: movabs $0x118,%rcx
  0x000000011c33474d: mov    (%rdx,%rcx,1),%rdi
  0x000000011c334751: lea    0x1(%rdi),%rdi
  0x000000011c334755: mov    %rdi,(%rdx,%rcx,1)
  0x000000011c334759: jg     0x000000011c334772  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x000000011c33475f: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c334769: incl   0x128(%rdx)
  0x000000011c33476f: mov    %rsi,%r9           ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x000000011c334772: movabs $0x112532750,%rsi  ;   {metadata(method data for {method} {0x00000001123da9b0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c33477c: addq   $0x1,0x118(%rsi)
  0x000000011c334784: mov    %r8,%rsi
  0x000000011c334787: mov    $0x0,%edx
  0x000000011c33478c: mov    %rax,%rcx
  0x000000011c33478f: mov    $0x0,%r8d
  0x000000011c334795: mov    %rax,0x50(%rsp)
  0x000000011c33479a: lea    (%rdx,%r9,1),%rdi
  0x000000011c33479e: cmp    0xc(%rsi),%edi
  0x000000011c3347a1: ja     0x000000011c334847
  0x000000011c3347a7: lea    (%r8,%r9,1),%rdi
  0x000000011c3347ab: cmp    0xc(%rcx),%edi
  0x000000011c3347ae: ja     0x000000011c334847
  0x000000011c3347b4: test   %r9d,%r9d
  0x000000011c3347b7: jl     0x000000011c334847
  0x000000011c3347bd: je     0x000000011c3347f9
  0x000000011c3347c3: movslq %edx,%rdx
  0x000000011c3347c6: movslq %r8d,%r8
  0x000000011c3347c9: lea    0x10(%rsi,%rdx,1),%rdi
  0x000000011c3347ce: lea    0x10(%rcx,%r8,1),%rsi
  0x000000011c3347d3: mov    %r9,%rdx
  0x000000011c3347d6: test   $0xf,%esp
  0x000000011c3347dc: je     0x000000011c3347f4
  0x000000011c3347e2: sub    $0x8,%rsp
  0x000000011c3347e6: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011c3347eb: add    $0x8,%rsp
  0x000000011c3347ef: jmpq   0x000000011c3347f9
  0x000000011c3347f4: callq  Stub::jbyte_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {runtime_call}
  0x000000011c3347f9: mov    0x50(%rsp),%rax
  0x000000011c3347fe: add    $0x60,%rsp
  0x000000011c334802: pop    %rbp
  0x000000011c334803: test   %eax,-0xf84d709(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c334809: retq   
  0x000000011c33480a: mov    %rbx,0x8(%rsp)
  0x000000011c33480f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c334817: callq  0x000000011c306120  ; OopMap{r8=Oop off=508}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ;   {runtime_call}
  0x000000011c33481c: jmpq   0x000000011c334664
  0x000000011c334821: callq  0x000000011c302b20  ; OopMap{r8=Oop off=518}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ;   {runtime_call}
  0x000000011c334826: jmpq   0x000000011c3346de
  0x000000011c33482b: callq  0x000000011c301ac0  ; OopMap{r8=Oop rax=Oop off=528}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ;   {runtime_call}
  0x000000011c334830: mov    %rdx,0x8(%rsp)
  0x000000011c334835: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33483d: callq  0x000000011c306120  ; OopMap{r8=Oop rax=Oop off=546}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ;   {runtime_call}
  0x000000011c334842: jmpq   0x000000011c334726
  0x000000011c334847: callq  0x000000011c24c520  ; OopMap{[80]=Oop off=556}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {static_call}
  0x000000011c33484c: jmp    0x000000011c3347f9
  0x000000011c33484e: nop
  0x000000011c33484f: nop
  0x000000011c334850: mov    0x2a8(%r15),%rax
  0x000000011c334857: movabs $0x0,%r10
  0x000000011c334861: mov    %r10,0x2a8(%r15)
  0x000000011c334868: movabs $0x0,%r10
  0x000000011c334872: mov    %r10,0x2b0(%r15)
  0x000000011c334879: add    $0x60,%rsp
  0x000000011c33487d: pop    %rbp
  0x000000011c33487e: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c334883: hlt    
  0x000000011c334884: hlt    
  0x000000011c334885: hlt    
  0x000000011c334886: hlt    
  0x000000011c334887: hlt    
  0x000000011c334888: hlt    
  0x000000011c334889: hlt    
  0x000000011c33488a: hlt    
  0x000000011c33488b: hlt    
  0x000000011c33488c: hlt    
  0x000000011c33488d: hlt    
  0x000000011c33488e: hlt    
  0x000000011c33488f: hlt    
  0x000000011c334890: hlt    
  0x000000011c334891: hlt    
  0x000000011c334892: hlt    
  0x000000011c334893: hlt    
  0x000000011c334894: hlt    
  0x000000011c334895: hlt    
  0x000000011c334896: hlt    
  0x000000011c334897: hlt    
  0x000000011c334898: hlt    
  0x000000011c334899: hlt    
  0x000000011c33489a: hlt    
  0x000000011c33489b: hlt    
  0x000000011c33489c: hlt    
  0x000000011c33489d: hlt    
  0x000000011c33489e: hlt    
  0x000000011c33489f: hlt    
[Stub Code]
  0x000000011c3348a0: nop                       ;   {no_reloc}
  0x000000011c3348a1: nop
  0x000000011c3348a2: nop
  0x000000011c3348a3: nop
  0x000000011c3348a4: nop
  0x000000011c3348a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3348af: jmpq   0x000000011c3348af  ;   {runtime_call}
[Exception Handler]
  0x000000011c3348b4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c3348b9: mov    %rsp,-0x28(%rsp)
  0x000000011c3348be: sub    $0x80,%rsp
  0x000000011c3348c5: mov    %rax,0x78(%rsp)
  0x000000011c3348ca: mov    %rcx,0x70(%rsp)
  0x000000011c3348cf: mov    %rdx,0x68(%rsp)
  0x000000011c3348d4: mov    %rbx,0x60(%rsp)
  0x000000011c3348d9: mov    %rbp,0x50(%rsp)
  0x000000011c3348de: mov    %rsi,0x48(%rsp)
  0x000000011c3348e3: mov    %rdi,0x40(%rsp)
  0x000000011c3348e8: mov    %r8,0x38(%rsp)
  0x000000011c3348ed: mov    %r9,0x30(%rsp)
  0x000000011c3348f2: mov    %r10,0x28(%rsp)
  0x000000011c3348f7: mov    %r11,0x20(%rsp)
  0x000000011c3348fc: mov    %r12,0x18(%rsp)
  0x000000011c334901: mov    %r13,0x10(%rsp)
  0x000000011c334906: mov    %r14,0x8(%rsp)
  0x000000011c33490b: mov    %r15,(%rsp)
  0x000000011c33490f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c334919: movabs $0x11c3348b9,%rsi  ;   {internal_word}
  0x000000011c334923: mov    %rsp,%rdx
  0x000000011c334926: and    $0xfffffffffffffff0,%rsp
  0x000000011c33492a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33492f: hlt    
[Deopt Handler Code]
  0x000000011c334930: movabs $0x11c334930,%r10  ;   {section_word}
  0x000000011c33493a: push   %r10
  0x000000011c33493c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c334941: hlt    
  0x000000011c334942: hlt    
  0x000000011c334943: hlt    
  0x000000011c334944: hlt    
  0x000000011c334945: hlt    
  0x000000011c334946: hlt    
  0x000000011c334947: hlt    
<nmethod compile_id='53' compiler='C1' level='3' entry='0x000000011c334620' size='1584' address='0x000000011c334490' relocation_offset='296' insts_offset='400' stub_offset='1040' scopes_data_offset='1224' scopes_pcs_offset='1352' dependencies_offset='1560' nul_chk_table_offset='1568' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='667' iicount='667' stamp='1.313'/>
Decoding compiled method 0x000000011c334ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112391830} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;
  # this:     rsi:rsi   = &apos;java/util/ArrayList&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0xb0]  (sp of caller)
  0x000000011c334c80: mov    0x8(%rsi),%r10d
  0x000000011c334c84: shl    $0x3,%r10
  0x000000011c334c88: cmp    %rax,%r10
  0x000000011c334c8b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c334c91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c334c9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c334ca0: mov    %eax,-0x14000(%rsp)
  0x000000011c334ca7: push   %rbp
  0x000000011c334ca8: sub    $0xa0,%rsp
  0x000000011c334caf: movabs $0x1125f8d70,%rdi  ;   {metadata(method data for {method} {0x0000000112391830} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334cb9: mov    0xdc(%rdi),%ebx
  0x000000011c334cbf: add    $0x8,%ebx
  0x000000011c334cc2: mov    %ebx,0xdc(%rdi)
  0x000000011c334cc8: movabs $0x112391830,%rdi  ;   {metadata({method} {0x0000000112391830} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334cd2: and    $0x1ff8,%ebx
  0x000000011c334cd8: cmp    $0x0,%ebx
  0x000000011c334cdb: je     0x000000011c33508a  ;*aload_0
                                                ; - java.util.ArrayList::add@0 (line 462)

  0x000000011c334ce1: mov    0x10(%rsi),%edi    ;*getfield size
                                                ; - java.util.ArrayList::add@2 (line 462)

  0x000000011c334ce4: inc    %edi
  0x000000011c334ce6: mov    %rsi,%rbx
  0x000000011c334ce9: movabs $0x1125f8d70,%rax  ;   {metadata(method data for {method} {0x0000000112391830} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334cf3: addq   $0x1,0x108(%rax)
  0x000000011c334cfb: movabs $0x1125f90f0,%rbx  ;   {metadata(method data for {method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334d05: mov    0xdc(%rbx),%eax
  0x000000011c334d0b: add    $0x8,%eax
  0x000000011c334d0e: mov    %eax,0xdc(%rbx)
  0x000000011c334d14: movabs $0x112390da8,%rbx  ;   {metadata({method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334d1e: and    $0x7ffff8,%eax
  0x000000011c334d24: cmp    $0x0,%eax
  0x000000011c334d27: je     0x000000011c3350a1
  0x000000011c334d2d: mov    0x14(%rsi),%ebx
  0x000000011c334d30: shl    $0x3,%rbx          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@2 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334d34: movabs $0x1125f90f0,%rax  ;   {metadata(method data for {method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334d3e: addq   $0x1,0x108(%rax)
  0x000000011c334d46: movabs $0x1125f96a0,%rax  ;   {metadata(method data for {method} {0x0000000112390d08} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334d50: mov    0xdc(%rax),%ecx
  0x000000011c334d56: add    $0x8,%ecx
  0x000000011c334d59: mov    %ecx,0xdc(%rax)
  0x000000011c334d5f: movabs $0x112390d08,%rax  ;   {metadata({method} {0x0000000112390d08} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334d69: and    $0x7ffff8,%ecx
  0x000000011c334d6f: cmp    $0x0,%ecx
  0x000000011c334d72: je     0x000000011c3350b8
  0x000000011c334d78: movabs $0x715586e48,%r10  ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x000000011c334d82: cmp    %r10,%rbx
  0x000000011c334d85: movabs $0x1125f96a0,%rax  ;   {metadata(method data for {method} {0x0000000112390d08} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334d8f: movabs $0x108,%rcx
  0x000000011c334d99: jne    0x000000011c334da9
  0x000000011c334d9f: movabs $0x118,%rcx
  0x000000011c334da9: mov    (%rax,%rcx,1),%r8
  0x000000011c334dad: lea    0x1(%r8),%r8
  0x000000011c334db1: mov    %r8,(%rax,%rcx,1)
  0x000000011c334db5: jne    0x000000011c334e4d  ;*if_acmpne
                                                ; - java.util.ArrayList::calculateCapacity@4 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334dbb: movabs $0x1125f96a0,%rax  ;   {metadata(method data for {method} {0x0000000112390d08} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334dc5: addq   $0x1,0x128(%rax)
  0x000000011c334dcd: movabs $0x1124d9d10,%rax  ;   {metadata(method data for {method} {0x00000001123b6250} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c334dd7: mov    0xdc(%rax),%ecx
  0x000000011c334ddd: add    $0x8,%ecx
  0x000000011c334de0: mov    %ecx,0xdc(%rax)
  0x000000011c334de6: movabs $0x1123b6250,%rax  ;   {metadata({method} {0x00000001123b6250} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c334df0: and    $0x7ffff8,%ecx
  0x000000011c334df6: cmp    $0x0,%ecx
  0x000000011c334df9: je     0x000000011c3350cf
  0x000000011c334dff: cmp    $0xa,%edi
  0x000000011c334e02: movabs $0x1124d9d10,%rax  ;   {metadata(method data for {method} {0x00000001123b6250} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c334e0c: movabs $0x108,%rcx
  0x000000011c334e16: jg     0x000000011c334e26
  0x000000011c334e1c: movabs $0x118,%rcx
  0x000000011c334e26: mov    (%rax,%rcx,1),%r8
  0x000000011c334e2a: lea    0x1(%r8),%r8
  0x000000011c334e2e: mov    %r8,(%rax,%rcx,1)
  0x000000011c334e32: jg     0x000000011c334e4d  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334e38: movabs $0x1124d9d10,%rdi  ;   {metadata(method data for {method} {0x00000001123b6250} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c334e42: incl   0x128(%rdi)
  0x000000011c334e48: mov    $0xa,%edi          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334e4d: mov    %rsi,%rax
  0x000000011c334e50: movabs $0x1125f90f0,%rcx  ;   {metadata(method data for {method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334e5a: addq   $0x1,0x118(%rcx)
  0x000000011c334e62: movabs $0x1125f9920,%rax  ;   {metadata(method data for {method} {0x0000000112390e58} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334e6c: mov    0xdc(%rax),%ecx
  0x000000011c334e72: add    $0x8,%ecx
  0x000000011c334e75: mov    %ecx,0xdc(%rax)
  0x000000011c334e7b: movabs $0x112390e58,%rax  ;   {metadata({method} {0x0000000112390e58} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334e85: and    $0x7ffff8,%ecx
  0x000000011c334e8b: cmp    $0x0,%ecx
  0x000000011c334e8e: je     0x000000011c3350e6
  0x000000011c334e94: mov    0xc(%rsi),%eax     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334e97: inc    %eax
  0x000000011c334e99: mov    %eax,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334e9c: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ; implicit exception: dispatches to 0x000000011c3350fd
  0x000000011c334e9f: mov    %rdi,%rax
  0x000000011c334ea2: sub    %ebx,%eax
  0x000000011c334ea4: cmp    $0x0,%eax
  0x000000011c334ea7: movabs $0x1125f9920,%rbx  ;   {metadata(method data for {method} {0x0000000112390e58} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334eb1: movabs $0x108,%rax
  0x000000011c334ebb: jle    0x000000011c334ecb
  0x000000011c334ec1: movabs $0x118,%rax
  0x000000011c334ecb: mov    (%rbx,%rax,1),%rcx
  0x000000011c334ecf: lea    0x1(%rcx),%rcx
  0x000000011c334ed3: mov    %rcx,(%rbx,%rax,1)
  0x000000011c334ed7: mov    %rdx,0x88(%rsp)
  0x000000011c334edf: jg     0x000000011c334ef2  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334ee5: mov    %rsi,0x80(%rsp)
  0x000000011c334eed: jmpq   0x000000011c334f24  ;*return
                                                ; - java.util.ArrayList::ensureExplicitCapacity@25 (line 240)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334ef2: mov    %rsi,%rbx
  0x000000011c334ef5: movabs $0x1125f9920,%rax  ;   {metadata(method data for {method} {0x0000000112390e58} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334eff: addq   $0x1,0x128(%rax)
  0x000000011c334f07: mov    %rdi,%rdx
  0x000000011c334f0a: mov    %rsi,%rdi
  0x000000011c334f0d: mov    %rdi,%rsi          ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)

  0x000000011c334f10: mov    %rdi,0x80(%rsp)
  0x000000011c334f18: nop
  0x000000011c334f19: nop
  0x000000011c334f1a: nop
  0x000000011c334f1b: nop
  0x000000011c334f1c: nop
  0x000000011c334f1d: nop
  0x000000011c334f1e: nop
  0x000000011c334f1f: callq  0x000000011c24c0a0  ; OopMap{[128]=Oop [136]=Oop off=676}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {optimized virtual_call}
  0x000000011c334f24: mov    0x88(%rsp),%rdx
  0x000000011c334f2c: mov    0x80(%rsp),%rsi
  0x000000011c334f34: mov    0x14(%rsi),%eax
  0x000000011c334f37: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::add@11 (line 463)

  0x000000011c334f3b: mov    0x10(%rsi),%edi    ;*getfield size
                                                ; - java.util.ArrayList::add@16 (line 463)

  0x000000011c334f3e: mov    %rdi,%rbx
  0x000000011c334f41: inc    %ebx
  0x000000011c334f43: mov    %ebx,0x10(%rsi)    ;*putfield size
                                                ; - java.util.ArrayList::add@22 (line 463)

  0x000000011c334f46: movslq %edi,%rsi
  0x000000011c334f49: lea    0x10(%rax,%rsi,4),%rsi
  0x000000011c334f4e: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000011c335102
  0x000000011c334f51: jae    0x000000011c33510c
  0x000000011c334f57: cmp    $0x0,%rdx
  0x000000011c334f5b: jne    0x000000011c334f76
  0x000000011c334f5d: movabs $0x1125f8d70,%rdi  ;   {metadata(method data for {method} {0x0000000112391830} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334f67: orl    $0x100,0x110(%rdi)
  0x000000011c334f71: jmpq   0x000000011c33505a
  0x000000011c334f76: mov    0x8(%rax),%eax     ; implicit exception: dispatches to 0x000000011c335115
  0x000000011c334f79: shl    $0x3,%rax
  0x000000011c334f7d: mov    0x8(%rdx),%edi
  0x000000011c334f80: shl    $0x3,%rdi
  0x000000011c334f84: mov    0xe8(%rax),%rax
  0x000000011c334f8b: cmp    %rax,%rdi
  0x000000011c334f8e: je     0x000000011c334fbc
  0x000000011c334f94: mov    0xc(%rax),%ebx
  0x000000011c334f97: cmp    (%rdi,%rbx,1),%rax
  0x000000011c334f9b: je     0x000000011c334fbc
  0x000000011c334fa1: cmp    $0x18,%ebx
  0x000000011c334fa4: jne    0x000000011c335043
  0x000000011c334faa: push   %rdi
  0x000000011c334fab: push   %rax
  0x000000011c334fac: callq  0x000000011c304120  ;   {runtime_call}
  0x000000011c334fb1: pop    %rdi
  0x000000011c334fb2: pop    %rax
  0x000000011c334fb3: cmp    $0x0,%eax
  0x000000011c334fb6: je     0x000000011c335043
  0x000000011c334fbc: movabs $0x1125f8d70,%rdi  ;   {metadata(method data for {method} {0x0000000112391830} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c334fc6: mov    0x8(%rdx),%eax
  0x000000011c334fc9: shl    $0x3,%rax
  0x000000011c334fcd: cmp    0x120(%rdi),%rax
  0x000000011c334fd4: jne    0x000000011c334fe3
  0x000000011c334fd6: addq   $0x1,0x128(%rdi)
  0x000000011c334fde: jmpq   0x000000011c33505a
  0x000000011c334fe3: cmp    0x130(%rdi),%rax
  0x000000011c334fea: jne    0x000000011c334ff9
  0x000000011c334fec: addq   $0x1,0x138(%rdi)
  0x000000011c334ff4: jmpq   0x000000011c33505a
  0x000000011c334ff9: cmpq   $0x0,0x120(%rdi)
  0x000000011c335004: jne    0x000000011c33501d
  0x000000011c335006: mov    %rax,0x120(%rdi)
  0x000000011c33500d: movq   $0x1,0x128(%rdi)
  0x000000011c335018: jmpq   0x000000011c33505a
  0x000000011c33501d: cmpq   $0x0,0x130(%rdi)
  0x000000011c335028: jne    0x000000011c335041
  0x000000011c33502a: mov    %rax,0x130(%rdi)
  0x000000011c335031: movq   $0x1,0x138(%rdi)
  0x000000011c33503c: jmpq   0x000000011c33505a
  0x000000011c335041: jmp    0x000000011c33505a
  0x000000011c335043: movabs $0x1125f8d70,%rdi  ;   {metadata(method data for {method} {0x0000000112391830} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c33504d: subq   $0x1,0x118(%rdi)
  0x000000011c335055: jmpq   0x000000011c33511a
  0x000000011c33505a: mov    %rdx,%r10
  0x000000011c33505d: shr    $0x3,%r10
  0x000000011c335061: mov    %r10d,(%rsi)
  0x000000011c335064: shr    $0x9,%rsi
  0x000000011c335068: movabs $0x10c974000,%rax
  0x000000011c335072: movb   $0x0,(%rsi,%rax,1)  ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)

  0x000000011c335076: mov    $0x1,%eax
  0x000000011c33507b: add    $0xa0,%rsp
  0x000000011c335082: pop    %rbp
  0x000000011c335083: test   %eax,-0xf84df89(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c335089: retq   
  0x000000011c33508a: mov    %rdi,0x8(%rsp)
  0x000000011c33508f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c335097: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=1052}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 462)
                                                ;   {runtime_call}
  0x000000011c33509c: jmpq   0x000000011c334ce1
  0x000000011c3350a1: mov    %rbx,0x8(%rsp)
  0x000000011c3350a6: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3350ae: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=1075}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000011c3350b3: jmpq   0x000000011c334d2d
  0x000000011c3350b8: mov    %rax,0x8(%rsp)
  0x000000011c3350bd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3350c5: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop rbx=Oop off=1098}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::calculateCapacity@-1 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000011c3350ca: jmpq   0x000000011c334d78
  0x000000011c3350cf: mov    %rax,0x8(%rsp)
  0x000000011c3350d4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3350dc: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop rbx=Oop off=1121}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000011c3350e1: jmpq   0x000000011c334dff
  0x000000011c3350e6: mov    %rax,0x8(%rsp)
  0x000000011c3350eb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3350f3: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop rbx=Oop off=1144}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000011c3350f8: jmpq   0x000000011c334e94
  0x000000011c3350fd: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rdx=Oop off=1154}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; - java.util.ArrayList::add@7 (line 462)
                                                ;   {runtime_call}
  0x000000011c335102: callq  0x000000011c301ac0  ; OopMap{rdx=Oop rax=Oop off=1159}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000011c335107: callq  0x000000011c301ac0  ; OopMap{rdx=Oop rax=Oop off=1164}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000011c33510c: mov    %rdi,(%rsp)
  0x000000011c335110: callq  0x000000011c274080  ; OopMap{rdx=Oop rax=Oop off=1173}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000011c335115: callq  0x000000011c301ac0  ; OopMap{rdx=Oop off=1178}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000011c33511a: mov    %rdx,(%rsp)
  0x000000011c33511e: callq  0x000000011c303a80  ; OopMap{rdx=Oop off=1187}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 463)
                                                ;   {runtime_call}
  0x000000011c335123: nop
  0x000000011c335124: nop
  0x000000011c335125: mov    0x2a8(%r15),%rax
  0x000000011c33512c: movabs $0x0,%r10
  0x000000011c335136: mov    %r10,0x2a8(%r15)
  0x000000011c33513d: movabs $0x0,%r10
  0x000000011c335147: mov    %r10,0x2b0(%r15)
  0x000000011c33514e: add    $0xa0,%rsp
  0x000000011c335155: pop    %rbp
  0x000000011c335156: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33515b: hlt    
  0x000000011c33515c: hlt    
  0x000000011c33515d: hlt    
  0x000000011c33515e: hlt    
  0x000000011c33515f: hlt    
[Stub Code]
  0x000000011c335160: nop                       ;   {no_reloc}
  0x000000011c335161: nop
  0x000000011c335162: nop
  0x000000011c335163: nop
  0x000000011c335164: nop
  0x000000011c335165: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33516f: jmpq   0x000000011c33516f  ;   {runtime_call}
[Exception Handler]
  0x000000011c335174: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c335179: mov    %rsp,-0x28(%rsp)
  0x000000011c33517e: sub    $0x80,%rsp
  0x000000011c335185: mov    %rax,0x78(%rsp)
  0x000000011c33518a: mov    %rcx,0x70(%rsp)
  0x000000011c33518f: mov    %rdx,0x68(%rsp)
  0x000000011c335194: mov    %rbx,0x60(%rsp)
  0x000000011c335199: mov    %rbp,0x50(%rsp)
  0x000000011c33519e: mov    %rsi,0x48(%rsp)
  0x000000011c3351a3: mov    %rdi,0x40(%rsp)
  0x000000011c3351a8: mov    %r8,0x38(%rsp)
  0x000000011c3351ad: mov    %r9,0x30(%rsp)
  0x000000011c3351b2: mov    %r10,0x28(%rsp)
  0x000000011c3351b7: mov    %r11,0x20(%rsp)
  0x000000011c3351bc: mov    %r12,0x18(%rsp)
  0x000000011c3351c1: mov    %r13,0x10(%rsp)
  0x000000011c3351c6: mov    %r14,0x8(%rsp)
  0x000000011c3351cb: mov    %r15,(%rsp)
  0x000000011c3351cf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3351d9: movabs $0x11c335179,%rsi  ;   {internal_word}
  0x000000011c3351e3: mov    %rsp,%rdx
  0x000000011c3351e6: and    $0xfffffffffffffff0,%rsp
  0x000000011c3351ea: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3351ef: hlt    
[Deopt Handler Code]
  0x000000011c3351f0: movabs $0x11c3351f0,%r10  ;   {section_word}
  0x000000011c3351fa: push   %r10
  0x000000011c3351fc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c335201: hlt    
  0x000000011c335202: hlt    
  0x000000011c335203: hlt    
  0x000000011c335204: hlt    
  0x000000011c335205: hlt    
  0x000000011c335206: hlt    
  0x000000011c335207: hlt    
<nmethod compile_id='51' compiler='C1' level='3' entry='0x000000011c334c80' size='2680' address='0x000000011c334ad0' relocation_offset='296' insts_offset='432' stub_offset='1680' scopes_data_offset='1896' scopes_pcs_offset='2152' dependencies_offset='2632' nul_chk_table_offset='2640' method='java/util/ArrayList add (Ljava/lang/Object;)Z' bytes='29' count='281' iicount='281' stamp='1.322'/>
Decoding compiled method 0x000000011c335590:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112384708} &apos;size&apos; &apos;()I&apos; in &apos;java/util/Vector&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000011c3356e0: mov    0x8(%rsi),%r10d
  0x000000011c3356e4: shl    $0x3,%r10
  0x000000011c3356e8: cmp    %rax,%r10
  0x000000011c3356eb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3356f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c3356fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c335700: mov    %eax,-0x14000(%rsp)
  0x000000011c335707: push   %rbp
  0x000000011c335708: sub    $0x40,%rsp
  0x000000011c33570c: lea    0x20(%rsp),%rdi
  0x000000011c335711: mov    %rsi,0x8(%rdi)
  0x000000011c335715: mov    (%rsi),%rax
  0x000000011c335718: mov    %rax,%rbx
  0x000000011c33571b: and    $0x7,%rbx
  0x000000011c33571f: cmp    $0x5,%rbx
  0x000000011c335723: jne    0x000000011c3357aa
  0x000000011c335729: mov    0x8(%rsi),%ebx
  0x000000011c33572c: shl    $0x3,%rbx
  0x000000011c335730: mov    0xa8(%rbx),%rbx
  0x000000011c335737: or     %r15,%rbx
  0x000000011c33573a: xor    %rax,%rbx
  0x000000011c33573d: and    $0xffffffffffffff87,%rbx
  0x000000011c335741: je     0x000000011c3357d2
  0x000000011c335747: test   $0x7,%rbx
  0x000000011c33574e: jne    0x000000011c335797
  0x000000011c335750: test   $0x300,%rbx
  0x000000011c335757: jne    0x000000011c335776
  0x000000011c335759: and    $0x37f,%rax
  0x000000011c335760: mov    %rax,%rbx
  0x000000011c335763: or     %r15,%rbx
  0x000000011c335766: lock cmpxchg %rbx,(%rsi)
  0x000000011c33576b: jne    0x000000011c335815
  0x000000011c335771: jmpq   0x000000011c3357d2
  0x000000011c335776: mov    0x8(%rsi),%ebx
  0x000000011c335779: shl    $0x3,%rbx
  0x000000011c33577d: mov    0xa8(%rbx),%rbx
  0x000000011c335784: or     %r15,%rbx
  0x000000011c335787: lock cmpxchg %rbx,(%rsi)
  0x000000011c33578c: jne    0x000000011c335815
  0x000000011c335792: jmpq   0x000000011c3357d2
  0x000000011c335797: mov    0x8(%rsi),%ebx
  0x000000011c33579a: shl    $0x3,%rbx
  0x000000011c33579e: mov    0xa8(%rbx),%rbx
  0x000000011c3357a5: lock cmpxchg %rbx,(%rsi)
  0x000000011c3357aa: mov    (%rsi),%rax
  0x000000011c3357ad: or     $0x1,%rax
  0x000000011c3357b1: mov    %rax,(%rdi)
  0x000000011c3357b4: lock cmpxchg %rdi,(%rsi)
  0x000000011c3357b9: je     0x000000011c3357d2
  0x000000011c3357bf: sub    %rsp,%rax
  0x000000011c3357c2: and    $0xfffffffffffff007,%rax
  0x000000011c3357c9: mov    %rax,(%rdi)
  0x000000011c3357cc: jne    0x000000011c335815  ;*aload_0
                                                ; - java.util.Vector::size@0 (line 318)

  0x000000011c3357d2: mov    0x10(%rsi),%esi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 318)

  0x000000011c3357d5: lea    0x20(%rsp),%rax
  0x000000011c3357da: mov    0x8(%rax),%rbx
  0x000000011c3357de: mov    (%rbx),%rdi
  0x000000011c3357e1: and    $0x7,%rdi
  0x000000011c3357e5: cmp    $0x5,%rdi
  0x000000011c3357e9: je     0x000000011c335806
  0x000000011c3357ef: mov    (%rax),%rdi
  0x000000011c3357f2: test   %rdi,%rdi
  0x000000011c3357f5: je     0x000000011c335806
  0x000000011c3357fb: lock cmpxchg %rdi,(%rbx)
  0x000000011c335800: jne    0x000000011c335825  ;*ireturn
                                                ; - java.util.Vector::size@4 (line 318)

  0x000000011c335806: mov    %rsi,%rax
  0x000000011c335809: add    $0x40,%rsp
  0x000000011c33580d: pop    %rbp
  0x000000011c33580e: test   %eax,-0xf84e714(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c335814: retq   
  0x000000011c335815: mov    %rsi,0x8(%rsp)
  0x000000011c33581a: mov    %rdi,(%rsp)
  0x000000011c33581e: callq  0x000000011c3044a0  ; OopMap{rsi=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 318)
                                                ;   {runtime_call}
  0x000000011c335823: jmp    0x000000011c3357d2
  0x000000011c335825: lea    0x20(%rsp),%rax
  0x000000011c33582a: mov    %rax,(%rsp)
  0x000000011c33582e: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c335833: jmp    0x000000011c335806
  0x000000011c335835: nop
  0x000000011c335836: nop
  0x000000011c335837: mov    0x2a8(%r15),%rax
  0x000000011c33583e: movabs $0x0,%r10
  0x000000011c335848: mov    %r10,0x2a8(%r15)
  0x000000011c33584f: movabs $0x0,%r10
  0x000000011c335859: mov    %r10,0x2b0(%r15)
  0x000000011c335860: mov    %rax,%rbx
  0x000000011c335863: lea    0x20(%rsp),%rax
  0x000000011c335868: mov    0x8(%rax),%rsi
  0x000000011c33586c: mov    (%rsi),%rdi
  0x000000011c33586f: and    $0x7,%rdi
  0x000000011c335873: cmp    $0x5,%rdi
  0x000000011c335877: je     0x000000011c335894
  0x000000011c33587d: mov    (%rax),%rdi
  0x000000011c335880: test   %rdi,%rdi
  0x000000011c335883: je     0x000000011c335894
  0x000000011c335889: lock cmpxchg %rdi,(%rsi)
  0x000000011c33588e: jne    0x000000011c3358a1
  0x000000011c335894: mov    %rbx,%rax
  0x000000011c335897: add    $0x40,%rsp
  0x000000011c33589b: pop    %rbp
  0x000000011c33589c: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c3358a1: lea    0x20(%rsp),%rax
  0x000000011c3358a6: mov    %rax,(%rsp)
  0x000000011c3358aa: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c3358af: jmp    0x000000011c335894
  0x000000011c3358b1: hlt    
  0x000000011c3358b2: hlt    
  0x000000011c3358b3: hlt    
  0x000000011c3358b4: hlt    
  0x000000011c3358b5: hlt    
  0x000000011c3358b6: hlt    
  0x000000011c3358b7: hlt    
  0x000000011c3358b8: hlt    
  0x000000011c3358b9: hlt    
  0x000000011c3358ba: hlt    
  0x000000011c3358bb: hlt    
  0x000000011c3358bc: hlt    
  0x000000011c3358bd: hlt    
  0x000000011c3358be: hlt    
  0x000000011c3358bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c3358c0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c3358c5: mov    %rsp,-0x28(%rsp)
  0x000000011c3358ca: sub    $0x80,%rsp
  0x000000011c3358d1: mov    %rax,0x78(%rsp)
  0x000000011c3358d6: mov    %rcx,0x70(%rsp)
  0x000000011c3358db: mov    %rdx,0x68(%rsp)
  0x000000011c3358e0: mov    %rbx,0x60(%rsp)
  0x000000011c3358e5: mov    %rbp,0x50(%rsp)
  0x000000011c3358ea: mov    %rsi,0x48(%rsp)
  0x000000011c3358ef: mov    %rdi,0x40(%rsp)
  0x000000011c3358f4: mov    %r8,0x38(%rsp)
  0x000000011c3358f9: mov    %r9,0x30(%rsp)
  0x000000011c3358fe: mov    %r10,0x28(%rsp)
  0x000000011c335903: mov    %r11,0x20(%rsp)
  0x000000011c335908: mov    %r12,0x18(%rsp)
  0x000000011c33590d: mov    %r13,0x10(%rsp)
  0x000000011c335912: mov    %r14,0x8(%rsp)
  0x000000011c335917: mov    %r15,(%rsp)
  0x000000011c33591b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c335925: movabs $0x11c3358c5,%rsi  ;   {internal_word}
  0x000000011c33592f: mov    %rsp,%rdx
  0x000000011c335932: and    $0xfffffffffffffff0,%rsp
  0x000000011c335936: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33593b: hlt    
[Deopt Handler Code]
  0x000000011c33593c: movabs $0x11c33593c,%r10  ;   {section_word}
  0x000000011c335946: push   %r10
  0x000000011c335948: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33594d: hlt    
  0x000000011c33594e: hlt    
  0x000000011c33594f: hlt    
<nmethod compile_id='64' compiler='C1' level='1' entry='0x000000011c3356e0' size='1112' address='0x000000011c335590' relocation_offset='296' insts_offset='336' stub_offset='816' scopes_data_offset='968' scopes_pcs_offset='1008' dependencies_offset='1104' method='java/util/Vector size ()I' bytes='5' count='268' iicount='268' stamp='1.324'/>
<writer thread='42243'/>
<task_queued compile_id='67' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='384' iicount='384' level='3' stamp='1.324' comment='tiered' hot_count='384'/>
<task_queued compile_id='68' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='384' iicount='384' level='3' stamp='1.324' comment='tiered' hot_count='384'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c335a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;
  # this:     rsi:rsi   = &apos;java/util/ArrayList&apos;
  # parm0:    rdx       = int
  #           [sp+0x70]  (sp of caller)
  0x000000011c335ba0: mov    0x8(%rsi),%r10d
  0x000000011c335ba4: shl    $0x3,%r10
  0x000000011c335ba8: cmp    %rax,%r10
  0x000000011c335bab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c335bb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c335bbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c335bc0: mov    %eax,-0x14000(%rsp)
  0x000000011c335bc7: push   %rbp
  0x000000011c335bc8: sub    $0x60,%rsp
  0x000000011c335bcc: movabs $0x1125f90f0,%rdi  ;   {metadata(method data for {method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335bd6: mov    0xdc(%rdi),%ebx
  0x000000011c335bdc: add    $0x8,%ebx
  0x000000011c335bdf: mov    %ebx,0xdc(%rdi)
  0x000000011c335be5: movabs $0x112390da8,%rdi  ;   {metadata({method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335bef: and    $0x1ff8,%ebx
  0x000000011c335bf5: cmp    $0x0,%ebx
  0x000000011c335bf8: je     0x000000011c335dd8  ;*aload_0
                                                ; - java.util.ArrayList::ensureCapacityInternal@0 (line 231)

  0x000000011c335bfe: mov    0x14(%rsi),%edi
  0x000000011c335c01: shl    $0x3,%rdi          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@2 (line 231)

  0x000000011c335c05: movabs $0x1125f90f0,%rbx  ;   {metadata(method data for {method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335c0f: addq   $0x1,0x108(%rbx)
  0x000000011c335c17: movabs $0x1125f96a0,%rbx  ;   {metadata(method data for {method} {0x0000000112390d08} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335c21: mov    0xdc(%rbx),%eax
  0x000000011c335c27: add    $0x8,%eax
  0x000000011c335c2a: mov    %eax,0xdc(%rbx)
  0x000000011c335c30: movabs $0x112390d08,%rbx  ;   {metadata({method} {0x0000000112390d08} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335c3a: and    $0x7ffff8,%eax
  0x000000011c335c40: cmp    $0x0,%eax
  0x000000011c335c43: je     0x000000011c335def
  0x000000011c335c49: movabs $0x715586e48,%r10  ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x000000011c335c53: cmp    %r10,%rdi
  0x000000011c335c56: movabs $0x1125f96a0,%rbx  ;   {metadata(method data for {method} {0x0000000112390d08} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335c60: movabs $0x108,%rax
  0x000000011c335c6a: jne    0x000000011c335c7a
  0x000000011c335c70: movabs $0x118,%rax
  0x000000011c335c7a: mov    (%rbx,%rax,1),%rcx
  0x000000011c335c7e: lea    0x1(%rcx),%rcx
  0x000000011c335c82: mov    %rcx,(%rbx,%rax,1)
  0x000000011c335c86: jne    0x000000011c335d1e  ;*if_acmpne
                                                ; - java.util.ArrayList::calculateCapacity@4 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)

  0x000000011c335c8c: movabs $0x1125f96a0,%rbx  ;   {metadata(method data for {method} {0x0000000112390d08} &apos;calculateCapacity&apos; &apos;([Ljava/lang/Object;I)I&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335c96: addq   $0x1,0x128(%rbx)
  0x000000011c335c9e: movabs $0x1124d9d10,%rbx  ;   {metadata(method data for {method} {0x00000001123b6250} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c335ca8: mov    0xdc(%rbx),%eax
  0x000000011c335cae: add    $0x8,%eax
  0x000000011c335cb1: mov    %eax,0xdc(%rbx)
  0x000000011c335cb7: movabs $0x1123b6250,%rbx  ;   {metadata({method} {0x00000001123b6250} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c335cc1: and    $0x7ffff8,%eax
  0x000000011c335cc7: cmp    $0x0,%eax
  0x000000011c335cca: je     0x000000011c335e06
  0x000000011c335cd0: cmp    $0xa,%edx
  0x000000011c335cd3: movabs $0x1124d9d10,%rbx  ;   {metadata(method data for {method} {0x00000001123b6250} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c335cdd: movabs $0x108,%rax
  0x000000011c335ce7: jg     0x000000011c335cf7
  0x000000011c335ced: movabs $0x118,%rax
  0x000000011c335cf7: mov    (%rbx,%rax,1),%rcx
  0x000000011c335cfb: lea    0x1(%rcx),%rcx
  0x000000011c335cff: mov    %rcx,(%rbx,%rax,1)
  0x000000011c335d03: jg     0x000000011c335d1e  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)

  0x000000011c335d09: movabs $0x1124d9d10,%rdx  ;   {metadata(method data for {method} {0x00000001123b6250} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c335d13: incl   0x128(%rdx)
  0x000000011c335d19: mov    $0xa,%edx          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)

  0x000000011c335d1e: mov    %rsi,%rbx
  0x000000011c335d21: movabs $0x1125f90f0,%rax  ;   {metadata(method data for {method} {0x0000000112390da8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335d2b: addq   $0x1,0x118(%rax)
  0x000000011c335d33: movabs $0x1125f9920,%rbx  ;   {metadata(method data for {method} {0x0000000112390e58} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335d3d: mov    0xdc(%rbx),%eax
  0x000000011c335d43: add    $0x8,%eax
  0x000000011c335d46: mov    %eax,0xdc(%rbx)
  0x000000011c335d4c: movabs $0x112390e58,%rbx  ;   {metadata({method} {0x0000000112390e58} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335d56: and    $0x7ffff8,%eax
  0x000000011c335d5c: cmp    $0x0,%eax
  0x000000011c335d5f: je     0x000000011c335e1d
  0x000000011c335d65: mov    0xc(%rsi),%ebx     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)

  0x000000011c335d68: inc    %ebx
  0x000000011c335d6a: mov    %ebx,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)

  0x000000011c335d6d: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ; implicit exception: dispatches to 0x000000011c335e34
  0x000000011c335d70: mov    %rdx,%rbx
  0x000000011c335d73: sub    %edi,%ebx
  0x000000011c335d75: cmp    $0x0,%ebx
  0x000000011c335d78: movabs $0x1125f9920,%rdi  ;   {metadata(method data for {method} {0x0000000112390e58} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335d82: movabs $0x108,%rbx
  0x000000011c335d8c: jle    0x000000011c335d9c
  0x000000011c335d92: movabs $0x118,%rbx
  0x000000011c335d9c: mov    (%rdi,%rbx,1),%rax
  0x000000011c335da0: lea    0x1(%rax),%rax
  0x000000011c335da4: mov    %rax,(%rdi,%rbx,1)
  0x000000011c335da8: jle    0x000000011c335dcc  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)

  0x000000011c335dae: mov    %rsi,%rdi
  0x000000011c335db1: movabs $0x1125f9920,%rbx  ;   {metadata(method data for {method} {0x0000000112390e58} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x000000011c335dbb: addq   $0x1,0x128(%rbx)
  0x000000011c335dc3: nop
  0x000000011c335dc4: nop
  0x000000011c335dc5: nop
  0x000000011c335dc6: nop
  0x000000011c335dc7: callq  0x000000011c24c0a0  ; OopMap{off=556}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 239)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ;   {optimized virtual_call}
  0x000000011c335dcc: add    $0x60,%rsp
  0x000000011c335dd0: pop    %rbp
  0x000000011c335dd1: test   %eax,-0xf84ecd7(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c335dd7: retq   
  0x000000011c335dd8: mov    %rdi,0x8(%rsp)
  0x000000011c335ddd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c335de5: callq  0x000000011c306120  ; OopMap{rsi=Oop off=586}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 231)
                                                ;   {runtime_call}
  0x000000011c335dea: jmpq   0x000000011c335bfe
  0x000000011c335def: mov    %rbx,0x8(%rsp)
  0x000000011c335df4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c335dfc: callq  0x000000011c306120  ; OopMap{rsi=Oop rdi=Oop off=609}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::calculateCapacity@-1 (line 224)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ;   {runtime_call}
  0x000000011c335e01: jmpq   0x000000011c335c49
  0x000000011c335e06: mov    %rbx,0x8(%rsp)
  0x000000011c335e0b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c335e13: callq  0x000000011c306120  ; OopMap{rsi=Oop rdi=Oop off=632}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::calculateCapacity@10 (line 225)
                                                ; - java.util.ArrayList::ensureCapacityInternal@6 (line 231)
                                                ;   {runtime_call}
  0x000000011c335e18: jmpq   0x000000011c335cd0
  0x000000011c335e1d: mov    %rbx,0x8(%rsp)
  0x000000011c335e22: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c335e2a: callq  0x000000011c306120  ; OopMap{rsi=Oop rdi=Oop off=655}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ;   {runtime_call}
  0x000000011c335e2f: jmpq   0x000000011c335d65
  0x000000011c335e34: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=665}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 238)
                                                ; - java.util.ArrayList::ensureCapacityInternal@9 (line 231)
                                                ;   {runtime_call}
  0x000000011c335e39: nop
  0x000000011c335e3a: nop
  0x000000011c335e3b: mov    0x2a8(%r15),%rax
  0x000000011c335e42: movabs $0x0,%r10
  0x000000011c335e4c: mov    %r10,0x2a8(%r15)
  0x000000011c335e53: movabs $0x0,%r10
  0x000000011c335e5d: mov    %r10,0x2b0(%r15)
  0x000000011c335e64: add    $0x60,%rsp
  0x000000011c335e68: pop    %rbp
  0x000000011c335e69: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c335e6e: hlt    
  0x000000011c335e6f: hlt    
  0x000000011c335e70: hlt    
  0x000000011c335e71: hlt    
  0x000000011c335e72: hlt    
  0x000000011c335e73: hlt    
  0x000000011c335e74: hlt    
  0x000000011c335e75: hlt    
  0x000000011c335e76: hlt    
  0x000000011c335e77: hlt    
  0x000000011c335e78: hlt    
  0x000000011c335e79: hlt    
  0x000000011c335e7a: hlt    
  0x000000011c335e7b: hlt    
  0x000000011c335e7c: hlt    
  0x000000011c335e7d: hlt    
  0x000000011c335e7e: hlt    
  0x000000011c335e7f: hlt    
[Stub Code]
  0x000000011c335e80: nop                       ;   {no_reloc}
  0x000000011c335e81: nop
  0x000000011c335e82: nop
  0x000000011c335e83: nop
  0x000000011c335e84: nop
  0x000000011c335e85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c335e8f: jmpq   0x000000011c335e8f  ;   {runtime_call}
[Exception Handler]
  0x000000011c335e94: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c335e99: mov    %rsp,-0x28(%rsp)
  0x000000011c335e9e: sub    $0x80,%rsp
  0x000000011c335ea5: mov    %rax,0x78(%rsp)
  0x000000011c335eaa: mov    %rcx,0x70(%rsp)
  0x000000011c335eaf: mov    %rdx,0x68(%rsp)
  0x000000011c335eb4: mov    %rbx,0x60(%rsp)
  0x000000011c335eb9: mov    %rbp,0x50(%rsp)
  0x000000011c335ebe: mov    %rsi,0x48(%rsp)
  0x000000011c335ec3: mov    %rdi,0x40(%rsp)
  0x000000011c335ec8: mov    %r8,0x38(%rsp)
  0x000000011c335ecd: mov    %r9,0x30(%rsp)
  0x000000011c335ed2: mov    %r10,0x28(%rsp)
  0x000000011c335ed7: mov    %r11,0x20(%rsp)
  0x000000011c335edc: mov    %r12,0x18(%rsp)
  0x000000011c335ee1: mov    %r13,0x10(%rsp)
  0x000000011c335ee6: mov    %r14,0x8(%rsp)
  0x000000011c335eeb: mov    %r15,(%rsp)
  0x000000011c335eef: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c335ef9: movabs $0x11c335e99,%rsi  ;   {internal_word}
  0x000000011c335f03: mov    %rsp,%rdx
  0x000000011c335f06: and    $0xfffffffffffffff0,%rsp
  0x000000011c335f0a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c335f0f: hlt    
[Deopt Handler Code]
  0x000000011c335f10: movabs $0x11c335f10,%r10  ;   {section_word}
  0x000000011c335f1a: push   %r10
  0x000000011c335f1c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c335f21: hlt    
  0x000000011c335f22: hlt    
  0x000000011c335f23: hlt    
  0x000000011c335f24: hlt    
  0x000000011c335f25: hlt    
  0x000000011c335f26: hlt    
  0x000000011c335f27: hlt    
<nmethod compile_id='52' compiler='C1' level='3' entry='0x000000011c335ba0' size='1800' address='0x000000011c335a10' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1344' scopes_pcs_offset='1504' dependencies_offset='1776' nul_chk_table_offset='1784' method='java/util/ArrayList ensureCapacityInternal (I)V' bytes='13' count='281' iicount='281' stamp='1.329'/>
Decoding compiled method 0x000000011c336150:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123ac650} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x40]  (sp of caller)
  0x000000011c3362a0: mov    0x8(%rsi),%r10d
  0x000000011c3362a4: shl    $0x3,%r10
  0x000000011c3362a8: cmp    %rax,%r10
  0x000000011c3362ab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3362b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c3362bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3362c0: mov    %eax,-0x14000(%rsp)
  0x000000011c3362c7: push   %rbp
  0x000000011c3362c8: sub    $0x30,%rsp
  0x000000011c3362cc: movabs $0x11260c4f0,%rdi  ;   {metadata(method data for {method} {0x00000001123ac650} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3362d6: mov    0xdc(%rdi),%ebx
  0x000000011c3362dc: add    $0x8,%ebx
  0x000000011c3362df: mov    %ebx,0xdc(%rdi)
  0x000000011c3362e5: movabs $0x1123ac650,%rdi  ;   {metadata({method} {0x00000001123ac650} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3362ef: and    $0x1ff8,%ebx
  0x000000011c3362f5: cmp    $0x0,%ebx
  0x000000011c3362f8: je     0x000000011c33630a  ;*return
                                                ; - java.util.HashMap::afterNodeInsertion@0 (line 1780)

  0x000000011c3362fe: add    $0x30,%rsp
  0x000000011c336302: pop    %rbp
  0x000000011c336303: test   %eax,-0xf84f209(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c336309: retq   
  0x000000011c33630a: mov    %rdi,0x8(%rsp)
  0x000000011c33630f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c336317: callq  0x000000011c306120  ; OopMap{rsi=Oop off=124}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::afterNodeInsertion@-1 (line 1780)
                                                ;   {runtime_call}
  0x000000011c33631c: jmp    0x000000011c3362fe
  0x000000011c33631e: nop
  0x000000011c33631f: nop
  0x000000011c336320: mov    0x2a8(%r15),%rax
  0x000000011c336327: movabs $0x0,%r10
  0x000000011c336331: mov    %r10,0x2a8(%r15)
  0x000000011c336338: movabs $0x0,%r10
  0x000000011c336342: mov    %r10,0x2b0(%r15)
  0x000000011c336349: add    $0x30,%rsp
  0x000000011c33634d: pop    %rbp
  0x000000011c33634e: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c336353: hlt    
  0x000000011c336354: hlt    
  0x000000011c336355: hlt    
  0x000000011c336356: hlt    
  0x000000011c336357: hlt    
  0x000000011c336358: hlt    
  0x000000011c336359: hlt    
  0x000000011c33635a: hlt    
  0x000000011c33635b: hlt    
  0x000000011c33635c: hlt    
  0x000000011c33635d: hlt    
  0x000000011c33635e: hlt    
  0x000000011c33635f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c336360: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c336365: mov    %rsp,-0x28(%rsp)
  0x000000011c33636a: sub    $0x80,%rsp
  0x000000011c336371: mov    %rax,0x78(%rsp)
  0x000000011c336376: mov    %rcx,0x70(%rsp)
  0x000000011c33637b: mov    %rdx,0x68(%rsp)
  0x000000011c336380: mov    %rbx,0x60(%rsp)
  0x000000011c336385: mov    %rbp,0x50(%rsp)
  0x000000011c33638a: mov    %rsi,0x48(%rsp)
  0x000000011c33638f: mov    %rdi,0x40(%rsp)
  0x000000011c336394: mov    %r8,0x38(%rsp)
  0x000000011c336399: mov    %r9,0x30(%rsp)
  0x000000011c33639e: mov    %r10,0x28(%rsp)
  0x000000011c3363a3: mov    %r11,0x20(%rsp)
  0x000000011c3363a8: mov    %r12,0x18(%rsp)
  0x000000011c3363ad: mov    %r13,0x10(%rsp)
  0x000000011c3363b2: mov    %r14,0x8(%rsp)
  0x000000011c3363b7: mov    %r15,(%rsp)
  0x000000011c3363bb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c3363c5: movabs $0x11c336365,%rsi  ;   {internal_word}
  0x000000011c3363cf: mov    %rsp,%rdx
  0x000000011c3363d2: and    $0xfffffffffffffff0,%rsp
  0x000000011c3363d6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c3363db: hlt    
[Deopt Handler Code]
  0x000000011c3363dc: movabs $0x11c3363dc,%r10  ;   {section_word}
  0x000000011c3363e6: push   %r10
  0x000000011c3363e8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3363ed: hlt    
  0x000000011c3363ee: hlt    
  0x000000011c3363ef: hlt    
<nmethod compile_id='68' compiler='C1' level='3' entry='0x000000011c3362a0' size='776' address='0x000000011c336150' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='704' dependencies_offset='768' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='393' iicount='393' stamp='1.331'/>
Decoding compiled method 0x000000011c336490:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123ac288} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000011c336600: mov    0x8(%rsi),%r10d
  0x000000011c336604: shl    $0x3,%r10
  0x000000011c336608: cmp    %rax,%r10
  0x000000011c33660b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c336611: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33661c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c336620: mov    %eax,-0x14000(%rsp)
  0x000000011c336627: push   %rbp
  0x000000011c336628: sub    $0x60,%rsp
  0x000000011c33662c: mov    %rdx,%rbx
  0x000000011c33662f: mov    %rcx,%r11
  0x000000011c336632: movabs $0x11260d7c0,%rdx  ;   {metadata(method data for {method} {0x00000001123ac288} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33663c: mov    0xdc(%rdx),%edi
  0x000000011c336642: add    $0x8,%edi
  0x000000011c336645: mov    %edi,0xdc(%rdx)
  0x000000011c33664b: movabs $0x1123ac288,%rdx  ;   {metadata({method} {0x00000001123ac288} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c336655: and    $0x1ff8,%edi
  0x000000011c33665b: cmp    $0x0,%edi
  0x000000011c33665e: je     0x000000011c336792
  0x000000011c336664: movabs $0x7c001c308,%rdx  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x000000011c33666e: mov    0x60(%r15),%rax
  0x000000011c336672: lea    0x20(%rax),%rdi
  0x000000011c336676: cmp    0x70(%r15),%rdi
  0x000000011c33667a: ja     0x000000011c3367a9
  0x000000011c336680: mov    %rdi,0x60(%r15)
  0x000000011c336684: mov    0xa8(%rdx),%rcx
  0x000000011c33668b: mov    %rcx,(%rax)
  0x000000011c33668e: mov    %rdx,%rcx
  0x000000011c336691: shr    $0x3,%rcx
  0x000000011c336695: mov    %ecx,0x8(%rax)
  0x000000011c336698: xor    %rcx,%rcx
  0x000000011c33669b: mov    %ecx,0xc(%rax)
  0x000000011c33669e: xor    %rcx,%rcx
  0x000000011c3366a1: mov    %rcx,0x10(%rax)
  0x000000011c3366a5: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.HashMap::newNode@0 (line 1747)

  0x000000011c3366a9: mov    %rax,%rsi
  0x000000011c3366ac: movabs $0x11260d7c0,%rdi  ;   {metadata(method data for {method} {0x00000001123ac288} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3366b6: addq   $0x1,0x108(%rdi)
  0x000000011c3366be: movabs $0x11260d9c0,%rsi  ;   {metadata(method data for {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c3366c8: mov    0xdc(%rsi),%edi
  0x000000011c3366ce: add    $0x8,%edi
  0x000000011c3366d1: mov    %edi,0xdc(%rsi)
  0x000000011c3366d7: movabs $0x1123ae928,%rsi  ;   {metadata({method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c3366e1: and    $0x7ffff8,%edi
  0x000000011c3366e7: cmp    $0x0,%edi
  0x000000011c3366ea: je     0x000000011c3367b6
  0x000000011c3366f0: mov    %rax,%rsi
  0x000000011c3366f3: movabs $0x11260d9c0,%rdi  ;   {metadata(method data for {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c3366fd: addq   $0x1,0x108(%rdi)
  0x000000011c336705: movabs $0x1124371c0,%rsi  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c33670f: mov    0xdc(%rsi),%edi
  0x000000011c336715: add    $0x8,%edi
  0x000000011c336718: mov    %edi,0xdc(%rsi)
  0x000000011c33671e: movabs $0x1122c0480,%rsi  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c336728: and    $0x7ffff8,%edi
  0x000000011c33672e: cmp    $0x0,%edi
  0x000000011c336731: je     0x000000011c3367cd
  0x000000011c336737: mov    %ebx,0xc(%rax)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1747)

  0x000000011c33673a: mov    %r11,%r10
  0x000000011c33673d: shr    $0x3,%r10
  0x000000011c336741: mov    %r10d,0x10(%rax)
  0x000000011c336745: mov    %rax,%rsi
  0x000000011c336748: shr    $0x9,%rsi
  0x000000011c33674c: movabs $0x10c974000,%rdi
  0x000000011c336756: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1747)

  0x000000011c33675a: mov    %r8,%r10
  0x000000011c33675d: shr    $0x3,%r10
  0x000000011c336761: mov    %r10d,0x14(%rax)
  0x000000011c336765: mov    %rax,%rsi
  0x000000011c336768: shr    $0x9,%rsi
  0x000000011c33676c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1747)

  0x000000011c336770: mov    %r9,%r10
  0x000000011c336773: shr    $0x3,%r10
  0x000000011c336777: mov    %r10d,0x18(%rax)
  0x000000011c33677b: mov    %rax,%rsi
  0x000000011c33677e: shr    $0x9,%rsi
  0x000000011c336782: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.HashMap::newNode@9 (line 1747)

  0x000000011c336786: add    $0x60,%rsp
  0x000000011c33678a: pop    %rbp
  0x000000011c33678b: test   %eax,-0xf84f691(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c336791: retq   
  0x000000011c336792: mov    %rdx,0x8(%rsp)
  0x000000011c336797: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33679f: callq  0x000000011c306120  ; OopMap{rsi=Oop r11=Oop r8=Oop r9=Oop off=420}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1747)
                                                ;   {runtime_call}
  0x000000011c3367a4: jmpq   0x000000011c336664
  0x000000011c3367a9: mov    %rdx,%rdx
  0x000000011c3367ac: callq  0x000000011c302220  ; OopMap{r11=Oop r8=Oop r9=Oop off=433}
                                                ;*new  ; - java.util.HashMap::newNode@0 (line 1747)
                                                ;   {runtime_call}
  0x000000011c3367b1: jmpq   0x000000011c3366a9
  0x000000011c3367b6: mov    %rsi,0x8(%rsp)
  0x000000011c3367bb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3367c3: callq  0x000000011c306120  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=456}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1747)
                                                ;   {runtime_call}
  0x000000011c3367c8: jmpq   0x000000011c3366f0
  0x000000011c3367cd: mov    %rsi,0x8(%rsp)
  0x000000011c3367d2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c3367da: callq  0x000000011c306120  ; OopMap{r11=Oop r8=Oop r9=Oop rax=Oop off=479}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1747)
                                                ;   {runtime_call}
  0x000000011c3367df: jmpq   0x000000011c336737
  0x000000011c3367e4: nop
  0x000000011c3367e5: nop
  0x000000011c3367e6: mov    0x2a8(%r15),%rax
  0x000000011c3367ed: movabs $0x0,%r10
  0x000000011c3367f7: mov    %r10,0x2a8(%r15)
  0x000000011c3367fe: movabs $0x0,%r10
  0x000000011c336808: mov    %r10,0x2b0(%r15)
  0x000000011c33680f: add    $0x60,%rsp
  0x000000011c336813: pop    %rbp
  0x000000011c336814: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c336819: hlt    
  0x000000011c33681a: hlt    
  0x000000011c33681b: hlt    
  0x000000011c33681c: hlt    
  0x000000011c33681d: hlt    
  0x000000011c33681e: hlt    
  0x000000011c33681f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c336820: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c336825: mov    %rsp,-0x28(%rsp)
  0x000000011c33682a: sub    $0x80,%rsp
  0x000000011c336831: mov    %rax,0x78(%rsp)
  0x000000011c336836: mov    %rcx,0x70(%rsp)
  0x000000011c33683b: mov    %rdx,0x68(%rsp)
  0x000000011c336840: mov    %rbx,0x60(%rsp)
  0x000000011c336845: mov    %rbp,0x50(%rsp)
  0x000000011c33684a: mov    %rsi,0x48(%rsp)
  0x000000011c33684f: mov    %rdi,0x40(%rsp)
  0x000000011c336854: mov    %r8,0x38(%rsp)
  0x000000011c336859: mov    %r9,0x30(%rsp)
  0x000000011c33685e: mov    %r10,0x28(%rsp)
  0x000000011c336863: mov    %r11,0x20(%rsp)
  0x000000011c336868: mov    %r12,0x18(%rsp)
  0x000000011c33686d: mov    %r13,0x10(%rsp)
  0x000000011c336872: mov    %r14,0x8(%rsp)
  0x000000011c336877: mov    %r15,(%rsp)
  0x000000011c33687b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c336885: movabs $0x11c336825,%rsi  ;   {internal_word}
  0x000000011c33688f: mov    %rsp,%rdx
  0x000000011c336892: and    $0xfffffffffffffff0,%rsp
  0x000000011c336896: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33689b: hlt    
[Deopt Handler Code]
  0x000000011c33689c: movabs $0x11c33689c,%r10  ;   {section_word}
  0x000000011c3368a6: push   %r10
  0x000000011c3368a8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c3368ad: hlt    
  0x000000011c3368ae: hlt    
  0x000000011c3368af: hlt    
<nmethod compile_id='67' compiler='C1' level='3' entry='0x000000011c336600' size='1400' address='0x000000011c336490' relocation_offset='296' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1216' dependencies_offset='1392' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='393' iicount='393' stamp='1.335'/>
Decoding compiled method 0x000000011c336a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112486af0} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/Parts&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c336ba0: mov    0x8(%rsi),%r10d
  0x000000011c336ba4: shl    $0x3,%r10
  0x000000011c336ba8: cmp    %rax,%r10
  0x000000011c336bab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c336bb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c336bbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c336bc0: mov    %eax,-0x14000(%rsp)
  0x000000011c336bc7: push   %rbp
  0x000000011c336bc8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.Parts::getPath@0 (line 1444)

  0x000000011c336bcc: mov    0xc(%rsi),%eax
  0x000000011c336bcf: shl    $0x3,%rax          ;*getfield path
                                                ; - java.net.Parts::getPath@1 (line 1444)

  0x000000011c336bd3: add    $0x30,%rsp
  0x000000011c336bd7: pop    %rbp
  0x000000011c336bd8: test   %eax,-0xf84fade(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c336bde: retq   
  0x000000011c336bdf: nop
  0x000000011c336be0: nop
  0x000000011c336be1: mov    0x2a8(%r15),%rax
  0x000000011c336be8: movabs $0x0,%r10
  0x000000011c336bf2: mov    %r10,0x2a8(%r15)
  0x000000011c336bf9: movabs $0x0,%r10
  0x000000011c336c03: mov    %r10,0x2b0(%r15)
  0x000000011c336c0a: add    $0x30,%rsp
  0x000000011c336c0e: pop    %rbp
  0x000000011c336c0f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c336c14: hlt    
  0x000000011c336c15: hlt    
  0x000000011c336c16: hlt    
  0x000000011c336c17: hlt    
  0x000000011c336c18: hlt    
  0x000000011c336c19: hlt    
  0x000000011c336c1a: hlt    
  0x000000011c336c1b: hlt    
  0x000000011c336c1c: hlt    
  0x000000011c336c1d: hlt    
  0x000000011c336c1e: hlt    
  0x000000011c336c1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c336c20: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c336c25: mov    %rsp,-0x28(%rsp)
  0x000000011c336c2a: sub    $0x80,%rsp
  0x000000011c336c31: mov    %rax,0x78(%rsp)
  0x000000011c336c36: mov    %rcx,0x70(%rsp)
  0x000000011c336c3b: mov    %rdx,0x68(%rsp)
  0x000000011c336c40: mov    %rbx,0x60(%rsp)
  0x000000011c336c45: mov    %rbp,0x50(%rsp)
  0x000000011c336c4a: mov    %rsi,0x48(%rsp)
  0x000000011c336c4f: mov    %rdi,0x40(%rsp)
  0x000000011c336c54: mov    %r8,0x38(%rsp)
  0x000000011c336c59: mov    %r9,0x30(%rsp)
  0x000000011c336c5e: mov    %r10,0x28(%rsp)
  0x000000011c336c63: mov    %r11,0x20(%rsp)
  0x000000011c336c68: mov    %r12,0x18(%rsp)
  0x000000011c336c6d: mov    %r13,0x10(%rsp)
  0x000000011c336c72: mov    %r14,0x8(%rsp)
  0x000000011c336c77: mov    %r15,(%rsp)
  0x000000011c336c7b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c336c85: movabs $0x11c336c25,%rsi  ;   {internal_word}
  0x000000011c336c8f: mov    %rsp,%rdx
  0x000000011c336c92: and    $0xfffffffffffffff0,%rsp
  0x000000011c336c96: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c336c9b: hlt    
[Deopt Handler Code]
  0x000000011c336c9c: movabs $0x11c336c9c,%r10  ;   {section_word}
  0x000000011c336ca6: push   %r10
  0x000000011c336ca8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c336cad: hlt    
  0x000000011c336cae: hlt    
  0x000000011c336caf: hlt    
<nmethod compile_id='61' compiler='C1' level='1' entry='0x000000011c336ba0' size='704' address='0x000000011c336a50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/Parts getPath ()Ljava/lang/String;' bytes='5' count='133' iicount='133' stamp='1.337'/>
<writer thread='42243'/>
<task_queued compile_id='69' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='512' backedge_count='67' iicount='512' level='3' stamp='1.337' comment='tiered' hot_count='512'/>
<task_queued compile_id='70' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='512' iicount='512' level='3' stamp='1.337' comment='tiered' hot_count='512'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c336d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112486b88} &apos;getQuery&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/Parts&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c336ea0: mov    0x8(%rsi),%r10d
  0x000000011c336ea4: shl    $0x3,%r10
  0x000000011c336ea8: cmp    %rax,%r10
  0x000000011c336eab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c336eb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c336ebc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c336ec0: mov    %eax,-0x14000(%rsp)
  0x000000011c336ec7: push   %rbp
  0x000000011c336ec8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.Parts::getQuery@0 (line 1448)

  0x000000011c336ecc: mov    0x10(%rsi),%eax
  0x000000011c336ecf: shl    $0x3,%rax          ;*getfield query
                                                ; - java.net.Parts::getQuery@1 (line 1448)

  0x000000011c336ed3: add    $0x30,%rsp
  0x000000011c336ed7: pop    %rbp
  0x000000011c336ed8: test   %eax,-0xf84fdde(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c336ede: retq   
  0x000000011c336edf: nop
  0x000000011c336ee0: nop
  0x000000011c336ee1: mov    0x2a8(%r15),%rax
  0x000000011c336ee8: movabs $0x0,%r10
  0x000000011c336ef2: mov    %r10,0x2a8(%r15)
  0x000000011c336ef9: movabs $0x0,%r10
  0x000000011c336f03: mov    %r10,0x2b0(%r15)
  0x000000011c336f0a: add    $0x30,%rsp
  0x000000011c336f0e: pop    %rbp
  0x000000011c336f0f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c336f14: hlt    
  0x000000011c336f15: hlt    
  0x000000011c336f16: hlt    
  0x000000011c336f17: hlt    
  0x000000011c336f18: hlt    
  0x000000011c336f19: hlt    
  0x000000011c336f1a: hlt    
  0x000000011c336f1b: hlt    
  0x000000011c336f1c: hlt    
  0x000000011c336f1d: hlt    
  0x000000011c336f1e: hlt    
  0x000000011c336f1f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c336f20: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c336f25: mov    %rsp,-0x28(%rsp)
  0x000000011c336f2a: sub    $0x80,%rsp
  0x000000011c336f31: mov    %rax,0x78(%rsp)
  0x000000011c336f36: mov    %rcx,0x70(%rsp)
  0x000000011c336f3b: mov    %rdx,0x68(%rsp)
  0x000000011c336f40: mov    %rbx,0x60(%rsp)
  0x000000011c336f45: mov    %rbp,0x50(%rsp)
  0x000000011c336f4a: mov    %rsi,0x48(%rsp)
  0x000000011c336f4f: mov    %rdi,0x40(%rsp)
  0x000000011c336f54: mov    %r8,0x38(%rsp)
  0x000000011c336f59: mov    %r9,0x30(%rsp)
  0x000000011c336f5e: mov    %r10,0x28(%rsp)
  0x000000011c336f63: mov    %r11,0x20(%rsp)
  0x000000011c336f68: mov    %r12,0x18(%rsp)
  0x000000011c336f6d: mov    %r13,0x10(%rsp)
  0x000000011c336f72: mov    %r14,0x8(%rsp)
  0x000000011c336f77: mov    %r15,(%rsp)
  0x000000011c336f7b: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c336f85: movabs $0x11c336f25,%rsi  ;   {internal_word}
  0x000000011c336f8f: mov    %rsp,%rdx
  0x000000011c336f92: and    $0xfffffffffffffff0,%rsp
  0x000000011c336f96: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c336f9b: hlt    
[Deopt Handler Code]
  0x000000011c336f9c: movabs $0x11c336f9c,%r10  ;   {section_word}
  0x000000011c336fa6: push   %r10
  0x000000011c336fa8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c336fad: hlt    
  0x000000011c336fae: hlt    
  0x000000011c336faf: hlt    
<nmethod compile_id='62' compiler='C1' level='1' entry='0x000000011c336ea0' size='704' address='0x000000011c336d50' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/Parts getQuery ()Ljava/lang/String;' bytes='5' count='133' iicount='133' stamp='1.338'/>
<writer thread='42243'/>
<task_queued compile_id='71' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='582' iicount='582' level='3' stamp='1.338' comment='tiered' hot_count='582'/>
<task_queued compile_id='72' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='128' iicount='128' level='1' stamp='1.338' comment='tiered' hot_count='128'/>
<task_queued compile_id='73' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='384' iicount='384' level='3' stamp='1.339' comment='tiered' hot_count='384'/>
<task_queued compile_id='74' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='512' iicount='512' level='3' stamp='1.339' comment='tiered' hot_count='512'/>
<task_queued compile_id='75' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='512' iicount='512' level='3' stamp='1.339' comment='tiered' hot_count='512'/>
<task_queued compile_id='76' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='512' iicount='512' level='3' stamp='1.339' comment='tiered' hot_count='512'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c337050:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9        = boolean
  # parm4:    rdi       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x000000011c3372c0: mov    0x8(%rsi),%r10d
  0x000000011c3372c4: shl    $0x3,%r10
  0x000000011c3372c8: cmp    %rax,%r10
  0x000000011c3372cb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3372d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c3372dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3372e0: mov    %eax,-0x14000(%rsp)
  0x000000011c3372e7: push   %rbp
  0x000000011c3372e8: sub    $0xa0,%rsp
  0x000000011c3372ef: mov    %rsi,0x48(%rsp)
  0x000000011c3372f4: mov    %edx,0x40(%rsp)
  0x000000011c3372f8: mov    %rcx,0x50(%rsp)
  0x000000011c3372fd: movabs $0x11260eb80,%rbx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337307: mov    0xdc(%rbx),%eax
  0x000000011c33730d: add    $0x8,%eax
  0x000000011c337310: mov    %eax,0xdc(%rbx)
  0x000000011c337316: movabs $0x1123aa6f0,%rbx  ;   {metadata({method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337320: and    $0x1ff8,%eax
  0x000000011c337326: cmp    $0x0,%eax
  0x000000011c337329: je     0x000000011c338365  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 628)

  0x000000011c33732f: mov    0x24(%rsi),%ebx
  0x000000011c337332: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 628)

  0x000000011c337336: cmp    $0x0,%rbx
  0x000000011c33733a: movabs $0x11260eb80,%rax  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337344: movabs $0x108,%r11
  0x000000011c33734e: je     0x000000011c33735e
  0x000000011c337354: movabs $0x118,%r11
  0x000000011c33735e: mov    (%rax,%r11,1),%r13
  0x000000011c337362: lea    0x1(%r13),%r13
  0x000000011c337366: mov    %r13,(%rax,%r11,1)
  0x000000011c33736a: je     0x000000011c3373bf  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 628)

  0x000000011c337370: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 628)
                                                ; implicit exception: dispatches to 0x000000011c33837c
  0x000000011c337373: cmp    $0x0,%eax
  0x000000011c337376: movabs $0x11260eb80,%r11  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337380: movabs $0x128,%r13
  0x000000011c33738a: jne    0x000000011c33739a
  0x000000011c337390: movabs $0x138,%r13
  0x000000011c33739a: mov    (%r11,%r13,1),%r14
  0x000000011c33739e: lea    0x1(%r14),%r14
  0x000000011c3373a2: mov    %r14,(%r11,%r13,1)
  0x000000011c3373a6: je     0x000000011c3373bf  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 628)

  0x000000011c3373ac: mov    %edi,0x60(%rsp)
  0x000000011c3373b0: mov    %r9d,0x44(%rsp)
  0x000000011c3373b5: mov    %r8,0x58(%rsp)
  0x000000011c3373ba: jmpq   0x000000011c337478  ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 630)

  0x000000011c3373bf: mov    %edi,0x60(%rsp)
  0x000000011c3373c3: mov    %r9d,0x44(%rsp)
  0x000000011c3373c8: mov    %r8,0x58(%rsp)
  0x000000011c3373cd: mov    %rsi,%rbx
  0x000000011c3373d0: movabs $0x11260eb80,%rax  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3373da: mov    0x8(%rbx),%ebx
  0x000000011c3373dd: shl    $0x3,%rbx
  0x000000011c3373e1: cmp    0x150(%rax),%rbx
  0x000000011c3373e8: jne    0x000000011c3373f7
  0x000000011c3373ea: addq   $0x1,0x158(%rax)
  0x000000011c3373f2: jmpq   0x000000011c33745d
  0x000000011c3373f7: cmp    0x160(%rax),%rbx
  0x000000011c3373fe: jne    0x000000011c33740d
  0x000000011c337400: addq   $0x1,0x168(%rax)
  0x000000011c337408: jmpq   0x000000011c33745d
  0x000000011c33740d: cmpq   $0x0,0x150(%rax)
  0x000000011c337418: jne    0x000000011c337431
  0x000000011c33741a: mov    %rbx,0x150(%rax)
  0x000000011c337421: movq   $0x1,0x158(%rax)
  0x000000011c33742c: jmpq   0x000000011c33745d
  0x000000011c337431: cmpq   $0x0,0x160(%rax)
  0x000000011c33743c: jne    0x000000011c337455
  0x000000011c33743e: mov    %rbx,0x160(%rax)
  0x000000011c337445: movq   $0x1,0x168(%rax)
  0x000000011c337450: jmpq   0x000000011c33745d
  0x000000011c337455: addq   $0x1,0x148(%rax)
  0x000000011c33745d: mov    %rsi,%rbx
  0x000000011c337460: mov    %rbx,%rsi          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)

  0x000000011c337463: nop
  0x000000011c337464: nop
  0x000000011c337465: nop
  0x000000011c337466: nop
  0x000000011c337467: callq  0x000000011c24c0a0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop off=428}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)
                                                ;   {optimized virtual_call}
  0x000000011c33746c: mov    %rax,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 629)

  0x000000011c33746f: mov    0xc(%rdx),%ecx     ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 629)
                                                ; implicit exception: dispatches to 0x000000011c338381
  0x000000011c337472: mov    %rcx,%rax
  0x000000011c337475: mov    %rdx,%rbx          ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 630)

  0x000000011c337478: dec    %eax
  0x000000011c33747a: and    0x40(%rsp),%eax
  0x000000011c33747e: movslq %eax,%rdx
  0x000000011c337481: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x000000011c338386
  0x000000011c337484: jae    0x000000011c338390
  0x000000011c33748a: mov    0x10(%rbx,%rdx,4),%edi
  0x000000011c33748e: shl    $0x3,%rdi          ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)

  0x000000011c337492: cmp    $0x0,%rdi
  0x000000011c337496: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3374a0: movabs $0x178,%rcx
  0x000000011c3374aa: jne    0x000000011c3374ba
  0x000000011c3374b0: movabs $0x188,%rcx
  0x000000011c3374ba: mov    (%rdx,%rcx,1),%r8
  0x000000011c3374be: lea    0x1(%r8),%r8
  0x000000011c3374c2: mov    %r8,(%rdx,%rcx,1)
  0x000000011c3374c6: jne    0x000000011c3376e2  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 630)

  0x000000011c3374cc: mov    %eax,0x64(%rsp)
  0x000000011c3374d0: mov    %rbx,0x68(%rsp)
  0x000000011c3374d5: mov    0x48(%rsp),%rsi
  0x000000011c3374da: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3374e4: mov    0x8(%rsi),%esi
  0x000000011c3374e7: shl    $0x3,%rsi
  0x000000011c3374eb: cmp    0x1a0(%rdx),%rsi
  0x000000011c3374f2: jne    0x000000011c337501
  0x000000011c3374f4: addq   $0x1,0x1a8(%rdx)
  0x000000011c3374fc: jmpq   0x000000011c337567
  0x000000011c337501: cmp    0x1b0(%rdx),%rsi
  0x000000011c337508: jne    0x000000011c337517
  0x000000011c33750a: addq   $0x1,0x1b8(%rdx)
  0x000000011c337512: jmpq   0x000000011c337567
  0x000000011c337517: cmpq   $0x0,0x1a0(%rdx)
  0x000000011c337522: jne    0x000000011c33753b
  0x000000011c337524: mov    %rsi,0x1a0(%rdx)
  0x000000011c33752b: movq   $0x1,0x1a8(%rdx)
  0x000000011c337536: jmpq   0x000000011c337567
  0x000000011c33753b: cmpq   $0x0,0x1b0(%rdx)
  0x000000011c337546: jne    0x000000011c33755f
  0x000000011c337548: mov    %rsi,0x1b0(%rdx)
  0x000000011c33754f: movq   $0x1,0x1b8(%rdx)
  0x000000011c33755a: jmpq   0x000000011c337567
  0x000000011c33755f: addq   $0x1,0x198(%rdx)
  0x000000011c337567: mov    0x40(%rsp),%edx
  0x000000011c33756b: mov    0x50(%rsp),%rcx
  0x000000011c337570: mov    0x58(%rsp),%r8
  0x000000011c337575: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000011c33757f: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 631)

  0x000000011c337584: nop
  0x000000011c337585: movabs $0xffffffffffffffff,%rax
  0x000000011c33758f: callq  0x000000011c24c2e0  ; OopMap{[72]=Oop [104]=Oop off=724}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 631)
                                                ;   {virtual_call}
  0x000000011c337594: mov    0x64(%rsp),%edx
  0x000000011c337598: movslq %edx,%rsi
  0x000000011c33759b: mov    0x68(%rsp),%rbx
  0x000000011c3375a0: lea    0x10(%rbx,%rsi,4),%rsi
  0x000000011c3375a5: cmp    0xc(%rbx),%edx
  0x000000011c3375a8: jae    0x000000011c338399
  0x000000011c3375ae: cmp    $0x0,%rax
  0x000000011c3375b2: jne    0x000000011c3375cd
  0x000000011c3375b4: movabs $0x11260eb80,%rdi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3375be: orl    $0x100,0x1c0(%rdi)
  0x000000011c3375c8: jmpq   0x000000011c3376b1
  0x000000011c3375cd: mov    0x8(%rbx),%edx     ; implicit exception: dispatches to 0x000000011c3383a2
  0x000000011c3375d0: shl    $0x3,%rdx
  0x000000011c3375d4: mov    0x8(%rax),%edi
  0x000000011c3375d7: shl    $0x3,%rdi
  0x000000011c3375db: mov    0xe8(%rdx),%rdx
  0x000000011c3375e2: cmp    %rdx,%rdi
  0x000000011c3375e5: je     0x000000011c337613
  0x000000011c3375eb: mov    0xc(%rdx),%ebx
  0x000000011c3375ee: cmp    (%rdi,%rbx,1),%rdx
  0x000000011c3375f2: je     0x000000011c337613
  0x000000011c3375f8: cmp    $0x18,%ebx
  0x000000011c3375fb: jne    0x000000011c33769a
  0x000000011c337601: push   %rdi
  0x000000011c337602: push   %rdx
  0x000000011c337603: callq  0x000000011c304120  ;   {runtime_call}
  0x000000011c337608: pop    %rdi
  0x000000011c337609: pop    %rdx
  0x000000011c33760a: cmp    $0x0,%edx
  0x000000011c33760d: je     0x000000011c33769a
  0x000000011c337613: movabs $0x11260eb80,%rdi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33761d: mov    0x8(%rax),%edx
  0x000000011c337620: shl    $0x3,%rdx
  0x000000011c337624: cmp    0x1d0(%rdi),%rdx
  0x000000011c33762b: jne    0x000000011c33763a
  0x000000011c33762d: addq   $0x1,0x1d8(%rdi)
  0x000000011c337635: jmpq   0x000000011c3376b1
  0x000000011c33763a: cmp    0x1e0(%rdi),%rdx
  0x000000011c337641: jne    0x000000011c337650
  0x000000011c337643: addq   $0x1,0x1e8(%rdi)
  0x000000011c33764b: jmpq   0x000000011c3376b1
  0x000000011c337650: cmpq   $0x0,0x1d0(%rdi)
  0x000000011c33765b: jne    0x000000011c337674
  0x000000011c33765d: mov    %rdx,0x1d0(%rdi)
  0x000000011c337664: movq   $0x1,0x1d8(%rdi)
  0x000000011c33766f: jmpq   0x000000011c3376b1
  0x000000011c337674: cmpq   $0x0,0x1e0(%rdi)
  0x000000011c33767f: jne    0x000000011c337698
  0x000000011c337681: mov    %rdx,0x1e0(%rdi)
  0x000000011c337688: movq   $0x1,0x1e8(%rdi)
  0x000000011c337693: jmpq   0x000000011c3376b1
  0x000000011c337698: jmp    0x000000011c3376b1
  0x000000011c33769a: movabs $0x11260eb80,%rdi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3376a4: subq   $0x1,0x1c8(%rdi)
  0x000000011c3376ac: jmpq   0x000000011c3383a7
  0x000000011c3376b1: mov    %rax,%r10
  0x000000011c3376b4: shr    $0x3,%r10
  0x000000011c3376b8: mov    %r10d,(%rsi)
  0x000000011c3376bb: shr    $0x9,%rsi
  0x000000011c3376bf: movabs $0x10c974000,%rdx
  0x000000011c3376c9: movb   $0x0,(%rsi,%rdx,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)

  0x000000011c3376cd: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3376d7: incl   0x1f8(%rdx)
  0x000000011c3376dd: jmpq   0x000000011c338036  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 631)

  0x000000011c3376e2: mov    0xc(%rdi),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 634)
                                                ; implicit exception: dispatches to 0x000000011c3383b0
  0x000000011c3376e5: cmp    0x40(%rsp),%edx
  0x000000011c3376e9: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3376f3: movabs $0x210,%rsi
  0x000000011c3376fd: jne    0x000000011c33770d
  0x000000011c337703: movabs $0x220,%rsi
  0x000000011c33770d: mov    (%rdx,%rsi,1),%rax
  0x000000011c337711: lea    0x1(%rax),%rax
  0x000000011c337715: mov    %rax,(%rdx,%rsi,1)
  0x000000011c337719: je     0x000000011c337729  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 634)

  0x000000011c33771f: mov    %rbx,0x68(%rsp)
  0x000000011c337724: jmpq   0x000000011c3378a2  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 637)

  0x000000011c337729: mov    0x50(%rsp),%rcx
  0x000000011c33772e: mov    0x10(%rdi),%edx
  0x000000011c337731: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 634)

  0x000000011c337735: cmp    %rcx,%rdx
  0x000000011c337738: movabs $0x11260eb80,%rsi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337742: movabs $0x230,%rax
  0x000000011c33774c: je     0x000000011c33775c
  0x000000011c337752: movabs $0x240,%rax
  0x000000011c33775c: mov    (%rsi,%rax,1),%r8
  0x000000011c337760: lea    0x1(%r8),%r8
  0x000000011c337764: mov    %r8,(%rsi,%rax,1)
  0x000000011c337768: je     0x000000011c337fe9  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 634)

  0x000000011c33776e: cmp    $0x0,%rcx
  0x000000011c337772: movabs $0x11260eb80,%rsi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33777c: movabs $0x250,%rax
  0x000000011c337786: je     0x000000011c337796
  0x000000011c33778c: movabs $0x260,%rax
  0x000000011c337796: mov    (%rsi,%rax,1),%r8
  0x000000011c33779a: lea    0x1(%r8),%r8
  0x000000011c33779e: mov    %r8,(%rsi,%rax,1)
  0x000000011c3377a2: jne    0x000000011c3377b2  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 634)

  0x000000011c3377a8: mov    %rbx,0x68(%rsp)
  0x000000011c3377ad: jmpq   0x000000011c3378a2  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 637)

  0x000000011c3377b2: mov    %rdi,0x70(%rsp)
  0x000000011c3377b7: mov    %rbx,0x68(%rsp)
  0x000000011c3377bc: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011c3383b5
  0x000000011c3377bf: mov    %rcx,%rsi
  0x000000011c3377c2: movabs $0x11260eb80,%rax  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3377cc: mov    0x8(%rsi),%esi
  0x000000011c3377cf: shl    $0x3,%rsi
  0x000000011c3377d3: cmp    0x278(%rax),%rsi
  0x000000011c3377da: jne    0x000000011c3377e9
  0x000000011c3377dc: addq   $0x1,0x280(%rax)
  0x000000011c3377e4: jmpq   0x000000011c33784f
  0x000000011c3377e9: cmp    0x288(%rax),%rsi
  0x000000011c3377f0: jne    0x000000011c3377ff
  0x000000011c3377f2: addq   $0x1,0x290(%rax)
  0x000000011c3377fa: jmpq   0x000000011c33784f
  0x000000011c3377ff: cmpq   $0x0,0x278(%rax)
  0x000000011c33780a: jne    0x000000011c337823
  0x000000011c33780c: mov    %rsi,0x278(%rax)
  0x000000011c337813: movq   $0x1,0x280(%rax)
  0x000000011c33781e: jmpq   0x000000011c33784f
  0x000000011c337823: cmpq   $0x0,0x288(%rax)
  0x000000011c33782e: jne    0x000000011c337847
  0x000000011c337830: mov    %rsi,0x288(%rax)
  0x000000011c337837: movq   $0x1,0x290(%rax)
  0x000000011c337842: jmpq   0x000000011c33784f
  0x000000011c337847: addq   $0x1,0x270(%rax)
  0x000000011c33784f: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)

  0x000000011c337852: nop
  0x000000011c337853: nop
  0x000000011c337854: nop
  0x000000011c337855: movabs $0xffffffffffffffff,%rax
  0x000000011c33785f: callq  0x000000011c24c2e0  ; OopMap{[72]=Oop [88]=Oop [112]=Oop [80]=Oop [104]=Oop off=1444}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)
                                                ;   {virtual_call}
  0x000000011c337864: cmp    $0x0,%eax
  0x000000011c337867: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337871: movabs $0x2a0,%rcx
  0x000000011c33787b: je     0x000000011c33788b
  0x000000011c337881: movabs $0x2b0,%rcx
  0x000000011c33788b: mov    (%rdx,%rcx,1),%r8
  0x000000011c33788f: lea    0x1(%r8),%r8
  0x000000011c337893: mov    %r8,(%rdx,%rcx,1)
  0x000000011c337897: mov    0x70(%rsp),%rdi
  0x000000011c33789c: jne    0x000000011c337fe9  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 635)

  0x000000011c3378a2: cmp    $0x0,%rdi
  0x000000011c3378a6: jne    0x000000011c3378c2
  0x000000011c3378a8: movabs $0x11260eb80,%r8   ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3378b2: orl    $0x100,0x2d0(%r8)
  0x000000011c3378bd: jmpq   0x000000011c337983
  0x000000011c3378c2: movabs $0x7c0032c28,%r9   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011c3378cc: mov    0x8(%rdi),%ecx
  0x000000011c3378cf: shl    $0x3,%rcx
  0x000000011c3378d3: cmp    %rcx,%r9
  0x000000011c3378d6: jne    0x000000011c337967
  0x000000011c3378dc: movabs $0x11260eb80,%r8   ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3378e6: mov    0x8(%rdi),%r9d
  0x000000011c3378ea: shl    $0x3,%r9
  0x000000011c3378ee: cmp    0x2e0(%r8),%r9
  0x000000011c3378f5: jne    0x000000011c337904
  0x000000011c3378f7: addq   $0x1,0x2e8(%r8)
  0x000000011c3378ff: jmpq   0x000000011c337988
  0x000000011c337904: cmp    0x2f0(%r8),%r9
  0x000000011c33790b: jne    0x000000011c33791a
  0x000000011c33790d: addq   $0x1,0x2f8(%r8)
  0x000000011c337915: jmpq   0x000000011c337988
  0x000000011c33791a: cmpq   $0x0,0x2e0(%r8)
  0x000000011c337925: jne    0x000000011c33793e
  0x000000011c337927: mov    %r9,0x2e0(%r8)
  0x000000011c33792e: movq   $0x1,0x2e8(%r8)
  0x000000011c337939: jmpq   0x000000011c337988
  0x000000011c33793e: cmpq   $0x0,0x2f0(%r8)
  0x000000011c337949: jne    0x000000011c337962
  0x000000011c33794b: mov    %r9,0x2f0(%r8)
  0x000000011c337952: movq   $0x1,0x2f8(%r8)
  0x000000011c33795d: jmpq   0x000000011c337988
  0x000000011c337962: jmpq   0x000000011c337988
  0x000000011c337967: movabs $0x11260eb80,%r8   ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337971: subq   $0x1,0x2d8(%r8)
  0x000000011c337979: jmpq   0x000000011c337983
  0x000000011c33797e: jmpq   0x000000011c337988
  0x000000011c337983: xor    %rdx,%rdx
  0x000000011c337986: jmp    0x000000011c337992
  0x000000011c337988: movabs $0x1,%rdx          ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 637)

  0x000000011c337992: cmp    $0x0,%edx
  0x000000011c337995: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33799f: movabs $0x308,%rcx
  0x000000011c3379a9: je     0x000000011c3379b9
  0x000000011c3379af: movabs $0x318,%rcx
  0x000000011c3379b9: mov    (%rdx,%rcx,1),%r8
  0x000000011c3379bd: lea    0x1(%r8),%r8
  0x000000011c3379c1: mov    %r8,(%rdx,%rcx,1)
  0x000000011c3379c5: je     0x000000011c337b79  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 637)

  0x000000011c3379cb: cmp    $0x0,%rdi
  0x000000011c3379cf: jne    0x000000011c3379ea
  0x000000011c3379d1: movabs $0x11260eb80,%rcx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3379db: orl    $0x100,0x320(%rcx)
  0x000000011c3379e5: jmpq   0x000000011c337aab
  0x000000011c3379ea: movabs $0x7c0032c28,%r8   ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x000000011c3379f4: mov    0x8(%rdi),%edx
  0x000000011c3379f7: shl    $0x3,%rdx
  0x000000011c3379fb: cmp    %rdx,%r8
  0x000000011c3379fe: jne    0x000000011c337a8f
  0x000000011c337a04: movabs $0x11260eb80,%rcx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337a0e: mov    0x8(%rdi),%r8d
  0x000000011c337a12: shl    $0x3,%r8
  0x000000011c337a16: cmp    0x330(%rcx),%r8
  0x000000011c337a1d: jne    0x000000011c337a2c
  0x000000011c337a1f: addq   $0x1,0x338(%rcx)
  0x000000011c337a27: jmpq   0x000000011c337aab
  0x000000011c337a2c: cmp    0x340(%rcx),%r8
  0x000000011c337a33: jne    0x000000011c337a42
  0x000000011c337a35: addq   $0x1,0x348(%rcx)
  0x000000011c337a3d: jmpq   0x000000011c337aab
  0x000000011c337a42: cmpq   $0x0,0x330(%rcx)
  0x000000011c337a4d: jne    0x000000011c337a66
  0x000000011c337a4f: mov    %r8,0x330(%rcx)
  0x000000011c337a56: movq   $0x1,0x338(%rcx)
  0x000000011c337a61: jmpq   0x000000011c337aab
  0x000000011c337a66: cmpq   $0x0,0x340(%rcx)
  0x000000011c337a71: jne    0x000000011c337a8a
  0x000000011c337a73: mov    %r8,0x340(%rcx)
  0x000000011c337a7a: movq   $0x1,0x348(%rcx)
  0x000000011c337a85: jmpq   0x000000011c337aab
  0x000000011c337a8a: jmpq   0x000000011c337aab
  0x000000011c337a8f: movabs $0x11260eb80,%rcx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337a99: subq   $0x1,0x328(%rcx)
  0x000000011c337aa1: jmpq   0x000000011c3383ba
  0x000000011c337aa6: jmpq   0x000000011c337aab
  0x000000011c337aab: mov    %rdi,%rsi          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 638)

  0x000000011c337aae: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x000000011c3383c3
  0x000000011c337ab1: mov    %rsi,%rdx
  0x000000011c337ab4: movabs $0x11260eb80,%rcx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337abe: mov    0x8(%rdx),%edx
  0x000000011c337ac1: shl    $0x3,%rdx
  0x000000011c337ac5: cmp    0x360(%rcx),%rdx
  0x000000011c337acc: jne    0x000000011c337adb
  0x000000011c337ace: addq   $0x1,0x368(%rcx)
  0x000000011c337ad6: jmpq   0x000000011c337b41
  0x000000011c337adb: cmp    0x370(%rcx),%rdx
  0x000000011c337ae2: jne    0x000000011c337af1
  0x000000011c337ae4: addq   $0x1,0x378(%rcx)
  0x000000011c337aec: jmpq   0x000000011c337b41
  0x000000011c337af1: cmpq   $0x0,0x360(%rcx)
  0x000000011c337afc: jne    0x000000011c337b15
  0x000000011c337afe: mov    %rdx,0x360(%rcx)
  0x000000011c337b05: movq   $0x1,0x368(%rcx)
  0x000000011c337b10: jmpq   0x000000011c337b41
  0x000000011c337b15: cmpq   $0x0,0x370(%rcx)
  0x000000011c337b20: jne    0x000000011c337b39
  0x000000011c337b22: mov    %rdx,0x370(%rcx)
  0x000000011c337b29: movq   $0x1,0x378(%rcx)
  0x000000011c337b34: jmpq   0x000000011c337b41
  0x000000011c337b39: addq   $0x1,0x358(%rcx)
  0x000000011c337b41: mov    0x48(%rsp),%rdx
  0x000000011c337b46: mov    0x68(%rsp),%rcx
  0x000000011c337b4b: mov    0x40(%rsp),%r8d
  0x000000011c337b50: mov    0x50(%rsp),%r9
  0x000000011c337b55: mov    0x58(%rsp),%rdi    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)

  0x000000011c337b5a: nop
  0x000000011c337b5b: nop
  0x000000011c337b5c: nop
  0x000000011c337b5d: nop
  0x000000011c337b5e: nop
  0x000000011c337b5f: callq  0x000000011c24c0a0  ; OopMap{[72]=Oop [88]=Oop off=2212}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)
                                                ;   {optimized virtual_call}
  0x000000011c337b64: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337b6e: incl   0x388(%rdx)
  0x000000011c337b74: jmpq   0x000000011c337ffc  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 638)

  0x000000011c337b79: mov    $0x0,%ebx          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 641)

  0x000000011c337b7e: xchg   %ax,%ax
  0x000000011c337b80: mov    %ebx,0x78(%rsp)
  0x000000011c337b84: mov    0x50(%rsp),%rcx
  0x000000011c337b89: mov    0x40(%rsp),%edx
  0x000000011c337b8d: mov    0x18(%rdi),%eax    ; implicit exception: dispatches to 0x000000011c3383c8
  0x000000011c337b90: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 641)

  0x000000011c337b94: mov    %rax,0x80(%rsp)
  0x000000011c337b9c: cmp    $0x0,%rax
  0x000000011c337ba0: movabs $0x11260eb80,%rsi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337baa: movabs $0x3a0,%r8
  0x000000011c337bb4: jne    0x000000011c337bc4
  0x000000011c337bba: movabs $0x3b0,%r8
  0x000000011c337bc4: mov    (%rsi,%r8,1),%r9
  0x000000011c337bc8: lea    0x1(%r9),%r9
  0x000000011c337bcc: mov    %r9,(%rsi,%r8,1)
  0x000000011c337bd0: je     0x000000011c337df2  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 641)

  0x000000011c337bd6: mov    0xc(%rax),%esi     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 647)
                                                ; implicit exception: dispatches to 0x000000011c3383cd
  0x000000011c337bd9: cmp    %edx,%esi
  0x000000011c337bdb: movabs $0x11260eb80,%rsi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337be5: movabs $0x458,%rdi
  0x000000011c337bef: jne    0x000000011c337bff
  0x000000011c337bf5: movabs $0x468,%rdi
  0x000000011c337bff: mov    (%rsi,%rdi,1),%r8
  0x000000011c337c03: lea    0x1(%r8),%r8
  0x000000011c337c07: mov    %r8,(%rsi,%rdi,1)
  0x000000011c337c0b: jne    0x000000011c337d6d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 647)

  0x000000011c337c11: mov    0x10(%rax),%esi
  0x000000011c337c14: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 647)

  0x000000011c337c18: cmp    %rcx,%rsi
  0x000000011c337c1b: movabs $0x11260eb80,%rdi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337c25: movabs $0x478,%r8
  0x000000011c337c2f: je     0x000000011c337c3f
  0x000000011c337c35: movabs $0x488,%r8
  0x000000011c337c3f: mov    (%rdi,%r8,1),%r9
  0x000000011c337c43: lea    0x1(%r9),%r9
  0x000000011c337c47: mov    %r9,(%rdi,%r8,1)
  0x000000011c337c4b: je     0x000000011c337dc8  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 647)

  0x000000011c337c51: cmp    $0x0,%rcx
  0x000000011c337c55: movabs $0x11260eb80,%rdi  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337c5f: movabs $0x498,%r8
  0x000000011c337c69: je     0x000000011c337c79
  0x000000011c337c6f: movabs $0x4a8,%r8
  0x000000011c337c79: mov    (%rdi,%r8,1),%r9
  0x000000011c337c7d: lea    0x1(%r9),%r9
  0x000000011c337c81: mov    %r9,(%rdi,%r8,1)
  0x000000011c337c85: je     0x000000011c337d6d  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 647)

  0x000000011c337c8b: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011c3383d2
  0x000000011c337c8e: mov    %rcx,%rdi
  0x000000011c337c91: movabs $0x11260eb80,%r8   ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337c9b: mov    0x8(%rdi),%edi
  0x000000011c337c9e: shl    $0x3,%rdi
  0x000000011c337ca2: cmp    0x4c0(%r8),%rdi
  0x000000011c337ca9: jne    0x000000011c337cb8
  0x000000011c337cab: addq   $0x1,0x4c8(%r8)
  0x000000011c337cb3: jmpq   0x000000011c337d1e
  0x000000011c337cb8: cmp    0x4d0(%r8),%rdi
  0x000000011c337cbf: jne    0x000000011c337cce
  0x000000011c337cc1: addq   $0x1,0x4d8(%r8)
  0x000000011c337cc9: jmpq   0x000000011c337d1e
  0x000000011c337cce: cmpq   $0x0,0x4c0(%r8)
  0x000000011c337cd9: jne    0x000000011c337cf2
  0x000000011c337cdb: mov    %rdi,0x4c0(%r8)
  0x000000011c337ce2: movq   $0x1,0x4c8(%r8)
  0x000000011c337ced: jmpq   0x000000011c337d1e
  0x000000011c337cf2: cmpq   $0x0,0x4d0(%r8)
  0x000000011c337cfd: jne    0x000000011c337d16
  0x000000011c337cff: mov    %rdi,0x4d0(%r8)
  0x000000011c337d06: movq   $0x1,0x4d8(%r8)
  0x000000011c337d11: jmpq   0x000000011c337d1e
  0x000000011c337d16: addq   $0x1,0x4b8(%r8)
  0x000000011c337d1e: mov    %rsi,%rdx
  0x000000011c337d21: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)

  0x000000011c337d24: nop
  0x000000011c337d25: movabs $0xffffffffffffffff,%rax
  0x000000011c337d2f: callq  0x000000011c24c2e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2676}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)
                                                ;   {virtual_call}
  0x000000011c337d34: cmp    $0x0,%eax
  0x000000011c337d37: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337d41: movabs $0x4e8,%rcx
  0x000000011c337d4b: je     0x000000011c337d5b
  0x000000011c337d51: movabs $0x4f8,%rcx
  0x000000011c337d5b: mov    (%rdx,%rcx,1),%r8
  0x000000011c337d5f: lea    0x1(%r8),%r8
  0x000000011c337d63: mov    %r8,(%rdx,%rcx,1)
  0x000000011c337d67: jne    0x000000011c337dd5  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 648)

  0x000000011c337d6d: mov    0x78(%rsp),%ebx
  0x000000011c337d71: inc    %ebx
  0x000000011c337d73: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337d7d: mov    0xe0(%rdx),%ecx
  0x000000011c337d83: add    $0x8,%ecx
  0x000000011c337d86: mov    %ecx,0xe0(%rdx)
  0x000000011c337d8c: movabs $0x1123aa6f0,%rdx  ;   {metadata({method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337d96: and    $0xfff8,%ecx
  0x000000011c337d9c: cmp    $0x0,%ecx
  0x000000011c337d9f: je     0x000000011c3383d7  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2789}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)

  0x000000011c337da5: test   %eax,-0xf850cab(%rip)        # 0x000000010cae7100
                                                ;   {poll}
  0x000000011c337dab: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337db5: incl   0x520(%rdx)
  0x000000011c337dbb: mov    0x80(%rsp),%rdi
  0x000000011c337dc3: jmpq   0x000000011c337b80  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)

  0x000000011c337dc8: mov    0x80(%rsp),%rax
  0x000000011c337dd0: jmpq   0x000000011c337ffc  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 653)

  0x000000011c337dd5: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337ddf: incl   0x508(%rdx)
  0x000000011c337de5: mov    0x80(%rsp),%rax
  0x000000011c337ded: jmpq   0x000000011c337ffc  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 649)

  0x000000011c337df2: mov    %rdi,0x88(%rsp)
  0x000000011c337dfa: mov    0x48(%rsp),%rsi
  0x000000011c337dff: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337e09: mov    0x8(%rsi),%esi
  0x000000011c337e0c: shl    $0x3,%rsi
  0x000000011c337e10: cmp    0x3c8(%rdx),%rsi
  0x000000011c337e17: jne    0x000000011c337e26
  0x000000011c337e19: addq   $0x1,0x3d0(%rdx)
  0x000000011c337e21: jmpq   0x000000011c337e8c
  0x000000011c337e26: cmp    0x3d8(%rdx),%rsi
  0x000000011c337e2d: jne    0x000000011c337e3c
  0x000000011c337e2f: addq   $0x1,0x3e0(%rdx)
  0x000000011c337e37: jmpq   0x000000011c337e8c
  0x000000011c337e3c: cmpq   $0x0,0x3c8(%rdx)
  0x000000011c337e47: jne    0x000000011c337e60
  0x000000011c337e49: mov    %rsi,0x3c8(%rdx)
  0x000000011c337e50: movq   $0x1,0x3d0(%rdx)
  0x000000011c337e5b: jmpq   0x000000011c337e8c
  0x000000011c337e60: cmpq   $0x0,0x3d8(%rdx)
  0x000000011c337e6b: jne    0x000000011c337e84
  0x000000011c337e6d: mov    %rsi,0x3d8(%rdx)
  0x000000011c337e74: movq   $0x1,0x3e0(%rdx)
  0x000000011c337e7f: jmpq   0x000000011c337e8c
  0x000000011c337e84: addq   $0x1,0x3c0(%rdx)
  0x000000011c337e8c: mov    0x40(%rsp),%edx
  0x000000011c337e90: mov    0x58(%rsp),%r8
  0x000000011c337e95: movabs $0x0,%r9           ;   {oop(NULL)}
  0x000000011c337e9f: mov    0x48(%rsp),%rsi    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 642)

  0x000000011c337ea4: nop
  0x000000011c337ea5: movabs $0xffffffffffffffff,%rax
  0x000000011c337eaf: callq  0x000000011c24c2e0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=3060}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 642)
                                                ;   {virtual_call}
  0x000000011c337eb4: mov    0x88(%rsp),%rdi
  0x000000011c337ebc: mov    %rax,%r10
  0x000000011c337ebf: shr    $0x3,%r10
  0x000000011c337ec3: mov    %r10d,0x18(%rdi)
  0x000000011c337ec7: shr    $0x9,%rdi
  0x000000011c337ecb: movabs $0x10c974000,%rdx
  0x000000011c337ed5: movb   $0x0,(%rdi,%rdx,1)  ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 642)

  0x000000011c337ed9: mov    0x78(%rsp),%ebx
  0x000000011c337edd: cmp    $0x7,%ebx
  0x000000011c337ee0: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337eea: movabs $0x3f0,%rcx
  0x000000011c337ef4: jl     0x000000011c337f04
  0x000000011c337efa: movabs $0x400,%rcx
  0x000000011c337f04: mov    (%rdx,%rcx,1),%rsi
  0x000000011c337f08: lea    0x1(%rsi),%rsi
  0x000000011c337f0c: mov    %rsi,(%rdx,%rcx,1)
  0x000000011c337f10: jge    0x000000011c337f23  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 643)

  0x000000011c337f16: mov    0x80(%rsp),%rax
  0x000000011c337f1e: jmpq   0x000000011c337ffc  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 653)

  0x000000011c337f23: mov    0x68(%rsp),%rbx
  0x000000011c337f28: mov    0x40(%rsp),%ecx
  0x000000011c337f2c: mov    0x48(%rsp),%rsi
  0x000000011c337f31: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337f3b: mov    0x8(%rsi),%esi
  0x000000011c337f3e: shl    $0x3,%rsi
  0x000000011c337f42: cmp    0x418(%rdx),%rsi
  0x000000011c337f49: jne    0x000000011c337f58
  0x000000011c337f4b: addq   $0x1,0x420(%rdx)
  0x000000011c337f53: jmpq   0x000000011c337fbe
  0x000000011c337f58: cmp    0x428(%rdx),%rsi
  0x000000011c337f5f: jne    0x000000011c337f6e
  0x000000011c337f61: addq   $0x1,0x430(%rdx)
  0x000000011c337f69: jmpq   0x000000011c337fbe
  0x000000011c337f6e: cmpq   $0x0,0x418(%rdx)
  0x000000011c337f79: jne    0x000000011c337f92
  0x000000011c337f7b: mov    %rsi,0x418(%rdx)
  0x000000011c337f82: movq   $0x1,0x420(%rdx)
  0x000000011c337f8d: jmpq   0x000000011c337fbe
  0x000000011c337f92: cmpq   $0x0,0x428(%rdx)
  0x000000011c337f9d: jne    0x000000011c337fb6
  0x000000011c337f9f: mov    %rsi,0x428(%rdx)
  0x000000011c337fa6: movq   $0x1,0x430(%rdx)
  0x000000011c337fb1: jmpq   0x000000011c337fbe
  0x000000011c337fb6: addq   $0x1,0x410(%rdx)
  0x000000011c337fbe: mov    %rbx,%rdx
  0x000000011c337fc1: mov    0x48(%rsp),%rsi    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 644)

  0x000000011c337fc6: nop
  0x000000011c337fc7: callq  0x000000011c24c0a0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=3340}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 644)
                                                ;   {optimized virtual_call}
  0x000000011c337fcc: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337fd6: incl   0x440(%rdx)
  0x000000011c337fdc: mov    0x80(%rsp),%rax
  0x000000011c337fe4: jmpq   0x000000011c337ffc  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 644)

  0x000000011c337fe9: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c337ff3: incl   0x2c0(%rdx)
  0x000000011c337ff9: mov    %rdi,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 636)

  0x000000011c337ffc: cmp    $0x0,%rax
  0x000000011c338000: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33800a: movabs $0x538,%rsi
  0x000000011c338014: je     0x000000011c338024
  0x000000011c33801a: movabs $0x548,%rsi
  0x000000011c338024: mov    (%rdx,%rsi,1),%rdi
  0x000000011c338028: lea    0x1(%rdi),%rdi
  0x000000011c33802c: mov    %rdi,(%rdx,%rsi,1)
  0x000000011c338030: jne    0x000000011c33808f  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 653)

  0x000000011c338036: mov    0x48(%rsp),%rsi
  0x000000011c33803b: mov    0x18(%rsi),%edx    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 661)

  0x000000011c33803e: inc    %edx
  0x000000011c338040: mov    %edx,0x18(%rsi)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 661)

  0x000000011c338043: mov    0x14(%rsi),%edx    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 662)

  0x000000011c338046: inc    %edx
  0x000000011c338048: mov    %edx,0x14(%rsi)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 662)

  0x000000011c33804b: mov    0x1c(%rsi),%edi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 662)

  0x000000011c33804e: cmp    %edi,%edx
  0x000000011c338050: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33805a: movabs $0x5c8,%rdi
  0x000000011c338064: jle    0x000000011c338074
  0x000000011c33806a: movabs $0x5d8,%rdi
  0x000000011c338074: mov    (%rdx,%rdi,1),%rbx
  0x000000011c338078: lea    0x1(%rbx),%rbx
  0x000000011c33807c: mov    %rbx,(%rdx,%rdi,1)
  0x000000011c338080: jg     0x000000011c3381fb  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 662)

  0x000000011c338086: mov    0x60(%rsp),%edi
  0x000000011c33808a: jmpq   0x000000011c3382a5  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 664)

  0x000000011c33808f: mov    0x44(%rsp),%r9d
  0x000000011c338094: mov    0x48(%rsp),%rsi
  0x000000011c338099: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x000000011c3383ee
  0x000000011c33809c: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 654)

  0x000000011c3380a0: cmp    $0x0,%r9d
  0x000000011c3380a4: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3380ae: movabs $0x558,%rbx
  0x000000011c3380b8: je     0x000000011c3380c8
  0x000000011c3380be: movabs $0x568,%rbx
  0x000000011c3380c8: mov    (%rdx,%rbx,1),%rcx
  0x000000011c3380cc: lea    0x1(%rcx),%rcx
  0x000000011c3380d0: mov    %rcx,(%rdx,%rbx,1)
  0x000000011c3380d4: je     0x000000011c338114  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 655)

  0x000000011c3380da: cmp    $0x0,%rdi
  0x000000011c3380de: movabs $0x11260eb80,%rdx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3380e8: movabs $0x578,%rbx
  0x000000011c3380f2: jne    0x000000011c338102
  0x000000011c3380f8: movabs $0x588,%rbx
  0x000000011c338102: mov    (%rdx,%rbx,1),%rcx
  0x000000011c338106: lea    0x1(%rcx),%rcx
  0x000000011c33810a: mov    %rcx,(%rdx,%rbx,1)
  0x000000011c33810e: jne    0x000000011c338139  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 655)

  0x000000011c338114: mov    0x58(%rsp),%r8
  0x000000011c338119: mov    %r8,%r10
  0x000000011c33811c: shr    $0x3,%r10
  0x000000011c338120: mov    %r10d,0x14(%rax)
  0x000000011c338124: mov    %rax,%rdx
  0x000000011c338127: shr    $0x9,%rdx
  0x000000011c33812b: movabs $0x10c974000,%rbx
  0x000000011c338135: movb   $0x0,(%rdx,%rbx,1)  ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 656)

  0x000000011c338139: mov    %rdi,0x90(%rsp)
  0x000000011c338141: mov    %rsi,%rdx
  0x000000011c338144: movabs $0x11260eb80,%rbx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33814e: mov    0x8(%rdx),%edx
  0x000000011c338151: shl    $0x3,%rdx
  0x000000011c338155: cmp    0x5a0(%rbx),%rdx
  0x000000011c33815c: jne    0x000000011c33816b
  0x000000011c33815e: addq   $0x1,0x5a8(%rbx)
  0x000000011c338166: jmpq   0x000000011c3381d1
  0x000000011c33816b: cmp    0x5b0(%rbx),%rdx
  0x000000011c338172: jne    0x000000011c338181
  0x000000011c338174: addq   $0x1,0x5b8(%rbx)
  0x000000011c33817c: jmpq   0x000000011c3381d1
  0x000000011c338181: cmpq   $0x0,0x5a0(%rbx)
  0x000000011c33818c: jne    0x000000011c3381a5
  0x000000011c33818e: mov    %rdx,0x5a0(%rbx)
  0x000000011c338195: movq   $0x1,0x5a8(%rbx)
  0x000000011c3381a0: jmpq   0x000000011c3381d1
  0x000000011c3381a5: cmpq   $0x0,0x5b0(%rbx)
  0x000000011c3381b0: jne    0x000000011c3381c9
  0x000000011c3381b2: mov    %rdx,0x5b0(%rbx)
  0x000000011c3381b9: movq   $0x1,0x5b8(%rbx)
  0x000000011c3381c4: jmpq   0x000000011c3381d1
  0x000000011c3381c9: addq   $0x1,0x598(%rbx)
  0x000000011c3381d1: mov    %rax,%rdx          ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 657)

  0x000000011c3381d4: nop
  0x000000011c3381d5: movabs $0xffffffffffffffff,%rax
  0x000000011c3381df: callq  0x000000011c24c2e0  ; OopMap{[144]=Oop off=3876}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 657)
                                                ;   {virtual_call}
  0x000000011c3381e4: mov    0x90(%rsp),%rax
  0x000000011c3381ec: add    $0xa0,%rsp
  0x000000011c3381f3: pop    %rbp
  0x000000011c3381f4: test   %eax,-0xf8510fa(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c3381fa: retq                      ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 658)

  0x000000011c3381fb: mov    %rsi,%rdi
  0x000000011c3381fe: movabs $0x11260eb80,%rbx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c338208: mov    0x8(%rdi),%edi
  0x000000011c33820b: shl    $0x3,%rdi
  0x000000011c33820f: cmp    0x5f0(%rbx),%rdi
  0x000000011c338216: jne    0x000000011c338225
  0x000000011c338218: addq   $0x1,0x5f8(%rbx)
  0x000000011c338220: jmpq   0x000000011c33828b
  0x000000011c338225: cmp    0x600(%rbx),%rdi
  0x000000011c33822c: jne    0x000000011c33823b
  0x000000011c33822e: addq   $0x1,0x608(%rbx)
  0x000000011c338236: jmpq   0x000000011c33828b
  0x000000011c33823b: cmpq   $0x0,0x5f0(%rbx)
  0x000000011c338246: jne    0x000000011c33825f
  0x000000011c338248: mov    %rdi,0x5f0(%rbx)
  0x000000011c33824f: movq   $0x1,0x5f8(%rbx)
  0x000000011c33825a: jmpq   0x000000011c33828b
  0x000000011c33825f: cmpq   $0x0,0x600(%rbx)
  0x000000011c33826a: jne    0x000000011c338283
  0x000000011c33826c: mov    %rdi,0x600(%rbx)
  0x000000011c338273: movq   $0x1,0x608(%rbx)
  0x000000011c33827e: jmpq   0x000000011c33828b
  0x000000011c338283: addq   $0x1,0x5e8(%rbx)
  0x000000011c33828b: mov    %rsi,%rdi
  0x000000011c33828e: mov    %rdi,%rsi          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 663)

  0x000000011c338291: nop
  0x000000011c338292: nop
  0x000000011c338293: nop
  0x000000011c338294: nop
  0x000000011c338295: nop
  0x000000011c338296: nop
  0x000000011c338297: callq  0x000000011c24c0a0  ; OopMap{[72]=Oop off=4060}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 663)
                                                ;   {optimized virtual_call}
  0x000000011c33829c: mov    0x60(%rsp),%edi
  0x000000011c3382a0: mov    0x48(%rsp),%rsi
  0x000000011c3382a5: mov    %rsi,%rdx
  0x000000011c3382a8: movabs $0x11260eb80,%rbx  ;   {metadata(method data for {method} {0x00000001123aa6f0} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3382b2: mov    0x8(%rdx),%edx
  0x000000011c3382b5: shl    $0x3,%rdx
  0x000000011c3382b9: cmp    0x620(%rbx),%rdx
  0x000000011c3382c0: jne    0x000000011c3382cf
  0x000000011c3382c2: addq   $0x1,0x628(%rbx)
  0x000000011c3382ca: jmpq   0x000000011c338335
  0x000000011c3382cf: cmp    0x630(%rbx),%rdx
  0x000000011c3382d6: jne    0x000000011c3382e5
  0x000000011c3382d8: addq   $0x1,0x638(%rbx)
  0x000000011c3382e0: jmpq   0x000000011c338335
  0x000000011c3382e5: cmpq   $0x0,0x620(%rbx)
  0x000000011c3382f0: jne    0x000000011c338309
  0x000000011c3382f2: mov    %rdx,0x620(%rbx)
  0x000000011c3382f9: movq   $0x1,0x628(%rbx)
  0x000000011c338304: jmpq   0x000000011c338335
  0x000000011c338309: cmpq   $0x0,0x630(%rbx)
  0x000000011c338314: jne    0x000000011c33832d
  0x000000011c338316: mov    %rdx,0x630(%rbx)
  0x000000011c33831d: movq   $0x1,0x638(%rbx)
  0x000000011c338328: jmpq   0x000000011c338335
  0x000000011c33832d: addq   $0x1,0x618(%rbx)
  0x000000011c338335: mov    %rdi,%rdx          ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 664)

  0x000000011c338338: nop
  0x000000011c338339: nop
  0x000000011c33833a: nop
  0x000000011c33833b: nop
  0x000000011c33833c: nop
  0x000000011c33833d: movabs $0xffffffffffffffff,%rax
  0x000000011c338347: callq  0x000000011c24c2e0  ; OopMap{off=4236}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 664)
                                                ;   {virtual_call}
  0x000000011c33834c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011c338356: add    $0xa0,%rsp
  0x000000011c33835d: pop    %rbp
  0x000000011c33835e: test   %eax,-0xf851264(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c338364: retq   
  0x000000011c338365: mov    %rbx,0x8(%rsp)
  0x000000011c33836a: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c338372: callq  0x000000011c306120  ; OopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop off=4279}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 628)
                                                ;   {runtime_call}
  0x000000011c338377: jmpq   0x000000011c33732f
  0x000000011c33837c: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [72]=Oop rcx=Oop [80]=Oop r8=Oop rbx=Oop off=4289}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 628)
                                                ;   {runtime_call}
  0x000000011c338381: callq  0x000000011c301ac0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rdx=Oop off=4294}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 629)
                                                ;   {runtime_call}
  0x000000011c338386: callq  0x000000011c301ac0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4299}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x000000011c33838b: callq  0x000000011c301ac0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4304}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x000000011c338390: mov    %rax,(%rsp)
  0x000000011c338394: callq  0x000000011c274080  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4313}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 630)
                                                ;   {runtime_call}
  0x000000011c338399: mov    %rdx,(%rsp)
  0x000000011c33839d: callq  0x000000011c274080  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=4322}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x000000011c3383a2: callq  0x000000011c301ac0  ; OopMap{[72]=Oop rax=Oop off=4327}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x000000011c3383a7: mov    %rax,(%rsp)
  0x000000011c3383ab: callq  0x000000011c303a80  ; OopMap{[72]=Oop rax=Oop off=4336}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 631)
                                                ;   {runtime_call}
  0x000000011c3383b0: callq  0x000000011c301ac0  ; OopMap{[72]=Oop rdi=Oop [88]=Oop [80]=Oop rbx=Oop off=4341}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 634)
                                                ;   {runtime_call}
  0x000000011c3383b5: callq  0x000000011c301ac0  ; OopMap{[72]=Oop [88]=Oop rcx=Oop [80]=Oop [104]=Oop [112]=Oop rdx=Oop off=4346}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 635)
                                                ;   {runtime_call}
  0x000000011c3383ba: mov    %rdi,(%rsp)
  0x000000011c3383be: callq  0x000000011c303cc0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop off=4355}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 638)
                                                ;   {runtime_call}
  0x000000011c3383c3: callq  0x000000011c301ac0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rsi=Oop off=4360}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 638)
                                                ;   {runtime_call}
  0x000000011c3383c8: callq  0x000000011c301ac0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rdi=Oop rcx=Oop [80]=Oop off=4365}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 641)
                                                ;   {runtime_call}
  0x000000011c3383cd: callq  0x000000011c301ac0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop rax=Oop [128]=Oop off=4370}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 647)
                                                ;   {runtime_call}
  0x000000011c3383d2: callq  0x000000011c301ac0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rcx=Oop [80]=Oop [128]=Oop rsi=Oop off=4375}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 648)
                                                ;   {runtime_call}
  0x000000011c3383d7: mov    %rdx,0x8(%rsp)
  0x000000011c3383dc: movq   $0xdb,(%rsp)
  0x000000011c3383e4: callq  0x000000011c306120  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=4393}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 640)
                                                ;   {runtime_call}
  0x000000011c3383e9: jmpq   0x000000011c337da5
  0x000000011c3383ee: callq  0x000000011c301ac0  ; OopMap{rsi=Oop [72]=Oop [88]=Oop rax=Oop off=4403}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 654)
                                                ;   {runtime_call}
  0x000000011c3383f3: nop
  0x000000011c3383f4: nop
  0x000000011c3383f5: mov    0x2a8(%r15),%rax
  0x000000011c3383fc: movabs $0x0,%r10
  0x000000011c338406: mov    %r10,0x2a8(%r15)
  0x000000011c33840d: movabs $0x0,%r10
  0x000000011c338417: mov    %r10,0x2b0(%r15)
  0x000000011c33841e: add    $0xa0,%rsp
  0x000000011c338425: pop    %rbp
  0x000000011c338426: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33842b: hlt    
  0x000000011c33842c: hlt    
  0x000000011c33842d: hlt    
  0x000000011c33842e: hlt    
  0x000000011c33842f: hlt    
  0x000000011c338430: hlt    
  0x000000011c338431: hlt    
  0x000000011c338432: hlt    
  0x000000011c338433: hlt    
  0x000000011c338434: hlt    
  0x000000011c338435: hlt    
  0x000000011c338436: hlt    
  0x000000011c338437: hlt    
  0x000000011c338438: hlt    
  0x000000011c338439: hlt    
  0x000000011c33843a: hlt    
  0x000000011c33843b: hlt    
  0x000000011c33843c: hlt    
  0x000000011c33843d: hlt    
  0x000000011c33843e: hlt    
  0x000000011c33843f: hlt    
[Stub Code]
  0x000000011c338440: nop                       ;   {no_reloc}
  0x000000011c338441: nop
  0x000000011c338442: nop
  0x000000011c338443: nop
  0x000000011c338444: nop
  0x000000011c338445: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33844f: jmpq   0x000000011c33844f  ;   {runtime_call}
  0x000000011c338454: nop
  0x000000011c338455: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33845f: jmpq   0x000000011c33845f  ;   {runtime_call}
  0x000000011c338464: nop
  0x000000011c338465: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33846f: jmpq   0x000000011c33846f  ;   {runtime_call}
  0x000000011c338474: nop
  0x000000011c338475: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33847f: jmpq   0x000000011c33847f  ;   {runtime_call}
  0x000000011c338484: nop
  0x000000011c338485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33848f: jmpq   0x000000011c33848f  ;   {runtime_call}
  0x000000011c338494: nop
  0x000000011c338495: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33849f: jmpq   0x000000011c33849f  ;   {runtime_call}
  0x000000011c3384a4: nop
  0x000000011c3384a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3384af: jmpq   0x000000011c3384af  ;   {runtime_call}
  0x000000011c3384b4: nop
  0x000000011c3384b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3384bf: jmpq   0x000000011c3384bf  ;   {runtime_call}
  0x000000011c3384c4: nop
  0x000000011c3384c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3384cf: jmpq   0x000000011c3384cf  ;   {runtime_call}
  0x000000011c3384d4: nop
  0x000000011c3384d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3384df: jmpq   0x000000011c3384df  ;   {runtime_call}
[Exception Handler]
  0x000000011c3384e4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c3384e9: mov    %rsp,-0x28(%rsp)
  0x000000011c3384ee: sub    $0x80,%rsp
  0x000000011c3384f5: mov    %rax,0x78(%rsp)
  0x000000011c3384fa: mov    %rcx,0x70(%rsp)
  0x000000011c3384ff: mov    %rdx,0x68(%rsp)
  0x000000011c338504: mov    %rbx,0x60(%rsp)
  0x000000011c338509: mov    %rbp,0x50(%rsp)
  0x000000011c33850e: mov    %rsi,0x48(%rsp)
  0x000000011c338513: mov    %rdi,0x40(%rsp)
  0x000000011c338518: mov    %r8,0x38(%rsp)
  0x000000011c33851d: mov    %r9,0x30(%rsp)
  0x000000011c338522: mov    %r10,0x28(%rsp)
  0x000000011c338527: mov    %r11,0x20(%rsp)
  0x000000011c33852c: mov    %r12,0x18(%rsp)
  0x000000011c338531: mov    %r13,0x10(%rsp)
  0x000000011c338536: mov    %r14,0x8(%rsp)
  0x000000011c33853b: mov    %r15,(%rsp)
  0x000000011c33853f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c338549: movabs $0x11c3384e9,%rsi  ;   {internal_word}
  0x000000011c338553: mov    %rsp,%rdx
  0x000000011c338556: and    $0xfffffffffffffff0,%rsp
  0x000000011c33855a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33855f: hlt    
[Deopt Handler Code]
  0x000000011c338560: movabs $0x11c338560,%r10  ;   {section_word}
  0x000000011c33856a: push   %r10
  0x000000011c33856c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c338571: hlt    
  0x000000011c338572: hlt    
  0x000000011c338573: hlt    
  0x000000011c338574: hlt    
  0x000000011c338575: hlt    
  0x000000011c338576: hlt    
  0x000000011c338577: hlt    
<nmethod compile_id='69' compiler='C1' level='3' entry='0x000000011c3372c0' size='8080' address='0x000000011c337050' relocation_offset='296' insts_offset='624' stub_offset='5104' scopes_data_offset='5424' scopes_pcs_offset='6432' dependencies_offset='7968' nul_chk_table_offset='7976' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1069' backedge_count='101' iicount='1069' stamp='1.360'/>
<writer thread='42243'/>
<task_queued compile_id='77' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='640' iicount='640' level='3' stamp='1.360' comment='tiered' hot_count='640'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c339010:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123aa510} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x000000011c3391a0: mov    0x8(%rsi),%r10d
  0x000000011c3391a4: shl    $0x3,%r10
  0x000000011c3391a8: cmp    %rax,%r10
  0x000000011c3391ab: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3391b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c3391bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3391c0: mov    %eax,-0x14000(%rsp)
  0x000000011c3391c7: push   %rbp
  0x000000011c3391c8: sub    $0x80,%rsp
  0x000000011c3391cf: movabs $0x11260f230,%rdi  ;   {metadata(method data for {method} {0x00000001123aa510} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3391d9: mov    0xdc(%rdi),%ebx
  0x000000011c3391df: add    $0x8,%ebx
  0x000000011c3391e2: mov    %ebx,0xdc(%rdi)
  0x000000011c3391e8: movabs $0x1123aa510,%rdi  ;   {metadata({method} {0x00000001123aa510} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3391f2: and    $0x1ff8,%ebx
  0x000000011c3391f8: cmp    $0x0,%ebx
  0x000000011c3391fb: je     0x000000011c33942b  ;*aload_0
                                                ; - java.util.HashMap::put@0 (line 612)

  0x000000011c339201: movabs $0x11260f230,%rdi  ;   {metadata(method data for {method} {0x00000001123aa510} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33920b: addq   $0x1,0x108(%rdi)
  0x000000011c339213: movabs $0x112533790,%rdi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33921d: mov    0xdc(%rdi),%ebx
  0x000000011c339223: add    $0x8,%ebx
  0x000000011c339226: mov    %ebx,0xdc(%rdi)
  0x000000011c33922c: movabs $0x1123a9a20,%rdi  ;   {metadata({method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c339236: and    $0x7ffff8,%ebx
  0x000000011c33923c: cmp    $0x0,%ebx
  0x000000011c33923f: je     0x000000011c339442
  0x000000011c339245: cmp    $0x0,%rdx
  0x000000011c339249: movabs $0x112533790,%rdi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c339253: movabs $0x108,%rbx
  0x000000011c33925d: jne    0x000000011c33926d
  0x000000011c339263: movabs $0x118,%rbx
  0x000000011c33926d: mov    (%rdi,%rbx,1),%rax
  0x000000011c339271: lea    0x1(%rax),%rax
  0x000000011c339275: mov    %rax,(%rdi,%rbx,1)
  0x000000011c339279: jne    0x000000011c3392a8  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x000000011c33927f: movabs $0x112533790,%rdi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c339289: incl   0x128(%rdi)
  0x000000011c33928f: mov    $0x0,%edi
  0x000000011c339294: mov    %rcx,0x68(%rsp)
  0x000000011c339299: mov    %rdx,0x60(%rsp)
  0x000000011c33929e: mov    %rsi,0x58(%rsp)
  0x000000011c3392a3: jmpq   0x000000011c339368  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x000000011c3392a8: mov    %rcx,0x68(%rsp)
  0x000000011c3392ad: mov    %rsi,0x58(%rsp)
  0x000000011c3392b2: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011c339459
  0x000000011c3392b5: mov    %rdx,%rdi
  0x000000011c3392b8: movabs $0x112533790,%rbx  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c3392c2: mov    0x8(%rdi),%edi
  0x000000011c3392c5: shl    $0x3,%rdi
  0x000000011c3392c9: cmp    0x148(%rbx),%rdi
  0x000000011c3392d0: jne    0x000000011c3392df
  0x000000011c3392d2: addq   $0x1,0x150(%rbx)
  0x000000011c3392da: jmpq   0x000000011c339345
  0x000000011c3392df: cmp    0x158(%rbx),%rdi
  0x000000011c3392e6: jne    0x000000011c3392f5
  0x000000011c3392e8: addq   $0x1,0x160(%rbx)
  0x000000011c3392f0: jmpq   0x000000011c339345
  0x000000011c3392f5: cmpq   $0x0,0x148(%rbx)
  0x000000011c339300: jne    0x000000011c339319
  0x000000011c339302: mov    %rdi,0x148(%rbx)
  0x000000011c339309: movq   $0x1,0x150(%rbx)
  0x000000011c339314: jmpq   0x000000011c339345
  0x000000011c339319: cmpq   $0x0,0x158(%rbx)
  0x000000011c339324: jne    0x000000011c33933d
  0x000000011c339326: mov    %rdi,0x158(%rbx)
  0x000000011c33932d: movq   $0x1,0x160(%rbx)
  0x000000011c339338: jmpq   0x000000011c339345
  0x000000011c33933d: addq   $0x1,0x140(%rbx)
  0x000000011c339345: mov    %rdx,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x000000011c339348: mov    %rdx,0x60(%rsp)
  0x000000011c33934d: movabs $0xffffffffffffffff,%rax
  0x000000011c339357: callq  0x000000011c24c2e0  ; OopMap{[88]=Oop [96]=Oop [104]=Oop off=444}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {virtual_call}
  0x000000011c33935c: mov    %rax,%rdx
  0x000000011c33935f: shr    $0x10,%edx
  0x000000011c339362: xor    %rax,%rdx
  0x000000011c339365: mov    %rdx,%rdi          ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)

  0x000000011c339368: mov    0x68(%rsp),%r8
  0x000000011c33936d: mov    0x60(%rsp),%rcx
  0x000000011c339372: mov    0x58(%rsp),%rsi
  0x000000011c339377: mov    %rsi,%rdx
  0x000000011c33937a: movabs $0x11260f230,%r9   ;   {metadata(method data for {method} {0x00000001123aa510} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c339384: mov    0x8(%rdx),%edx
  0x000000011c339387: shl    $0x3,%rdx
  0x000000011c33938b: cmp    0x120(%r9),%rdx
  0x000000011c339392: jne    0x000000011c3393a1
  0x000000011c339394: addq   $0x1,0x128(%r9)
  0x000000011c33939c: jmpq   0x000000011c339407
  0x000000011c3393a1: cmp    0x130(%r9),%rdx
  0x000000011c3393a8: jne    0x000000011c3393b7
  0x000000011c3393aa: addq   $0x1,0x138(%r9)
  0x000000011c3393b2: jmpq   0x000000011c339407
  0x000000011c3393b7: cmpq   $0x0,0x120(%r9)
  0x000000011c3393c2: jne    0x000000011c3393db
  0x000000011c3393c4: mov    %rdx,0x120(%r9)
  0x000000011c3393cb: movq   $0x1,0x128(%r9)
  0x000000011c3393d6: jmpq   0x000000011c339407
  0x000000011c3393db: cmpq   $0x0,0x130(%r9)
  0x000000011c3393e6: jne    0x000000011c3393ff
  0x000000011c3393e8: mov    %rdx,0x130(%r9)
  0x000000011c3393ef: movq   $0x1,0x138(%r9)
  0x000000011c3393fa: jmpq   0x000000011c339407
  0x000000011c3393ff: addq   $0x1,0x118(%r9)
  0x000000011c339407: mov    %rdi,%rdx
  0x000000011c33940a: mov    $0x0,%r9d
  0x000000011c339410: mov    $0x1,%edi          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 612)

  0x000000011c339415: nop
  0x000000011c339416: nop
  0x000000011c339417: callq  0x000000011c24c0a0  ; OopMap{off=636}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 612)
                                                ;   {optimized virtual_call}
  0x000000011c33941c: add    $0x80,%rsp
  0x000000011c339423: pop    %rbp
  0x000000011c339424: test   %eax,-0xf85232a(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33942a: retq   
  0x000000011c33942b: mov    %rdi,0x8(%rsp)
  0x000000011c339430: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c339438: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=669}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 612)
                                                ;   {runtime_call}
  0x000000011c33943d: jmpq   0x000000011c339201
  0x000000011c339442: mov    %rdi,0x8(%rsp)
  0x000000011c339447: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33944f: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop rcx=Oop off=692}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {runtime_call}
  0x000000011c339454: jmpq   0x000000011c339245
  0x000000011c339459: callq  0x000000011c301ac0  ; OopMap{rdx=Oop [104]=Oop [88]=Oop off=702}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::put@2 (line 612)
                                                ;   {runtime_call}
  0x000000011c33945e: nop
  0x000000011c33945f: nop
  0x000000011c339460: mov    0x2a8(%r15),%rax
  0x000000011c339467: movabs $0x0,%r10
  0x000000011c339471: mov    %r10,0x2a8(%r15)
  0x000000011c339478: movabs $0x0,%r10
  0x000000011c339482: mov    %r10,0x2b0(%r15)
  0x000000011c339489: add    $0x80,%rsp
  0x000000011c339490: pop    %rbp
  0x000000011c339491: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c339496: hlt    
  0x000000011c339497: hlt    
  0x000000011c339498: hlt    
  0x000000011c339499: hlt    
  0x000000011c33949a: hlt    
  0x000000011c33949b: hlt    
  0x000000011c33949c: hlt    
  0x000000011c33949d: hlt    
  0x000000011c33949e: hlt    
  0x000000011c33949f: hlt    
[Stub Code]
  0x000000011c3394a0: nop                       ;   {no_reloc}
  0x000000011c3394a1: nop
  0x000000011c3394a2: nop
  0x000000011c3394a3: nop
  0x000000011c3394a4: nop
  0x000000011c3394a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3394af: jmpq   0x000000011c3394af  ;   {runtime_call}
  0x000000011c3394b4: nop
  0x000000011c3394b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c3394bf: jmpq   0x000000011c3394bf  ;   {runtime_call}
[Exception Handler]
  0x000000011c3394c4: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c3394c9: mov    %rsp,-0x28(%rsp)
  0x000000011c3394ce: sub    $0x80,%rsp
  0x000000011c3394d5: mov    %rax,0x78(%rsp)
  0x000000011c3394da: mov    %rcx,0x70(%rsp)
  0x000000011c3394df: mov    %rdx,0x68(%rsp)
  0x000000011c3394e4: mov    %rbx,0x60(%rsp)
  0x000000011c3394e9: mov    %rbp,0x50(%rsp)
  0x000000011c3394ee: mov    %rsi,0x48(%rsp)
  0x000000011c3394f3: mov    %rdi,0x40(%rsp)
  0x000000011c3394f8: mov    %r8,0x38(%rsp)
  0x000000011c3394fd: mov    %r9,0x30(%rsp)
  0x000000011c339502: mov    %r10,0x28(%rsp)
  0x000000011c339507: mov    %r11,0x20(%rsp)
  0x000000011c33950c: mov    %r12,0x18(%rsp)
  0x000000011c339511: mov    %r13,0x10(%rsp)
  0x000000011c339516: mov    %r14,0x8(%rsp)
  0x000000011c33951b: mov    %r15,(%rsp)
  0x000000011c33951f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c339529: movabs $0x11c3394c9,%rsi  ;   {internal_word}
  0x000000011c339533: mov    %rsp,%rdx
  0x000000011c339536: and    $0xfffffffffffffff0,%rsp
  0x000000011c33953a: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33953f: hlt    
[Deopt Handler Code]
  0x000000011c339540: movabs $0x11c339540,%r10  ;   {section_word}
  0x000000011c33954a: push   %r10
  0x000000011c33954c: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c339551: hlt    
  0x000000011c339552: hlt    
  0x000000011c339553: hlt    
  0x000000011c339554: hlt    
  0x000000011c339555: hlt    
  0x000000011c339556: hlt    
  0x000000011c339557: hlt    
<nmethod compile_id='70' compiler='C1' level='3' entry='0x000000011c3391a0' size='1752' address='0x000000011c339010' relocation_offset='296' insts_offset='400' stub_offset='1168' scopes_data_offset='1368' scopes_pcs_offset='1520' dependencies_offset='1728' nul_chk_table_offset='1736' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1065' iicount='1065' stamp='1.365'/>
<writer thread='42243'/>
<task_queued compile_id='78' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='5505' iicount='5505' stamp='1.365' comment='tiered' hot_count='5505'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c339710:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112331838} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuffer&apos;
  # parm0:    rdx       = char
  #           [sp+0x110]  (sp of caller)
  0x000000011c3398c0: mov    0x8(%rsi),%r10d
  0x000000011c3398c4: shl    $0x3,%r10
  0x000000011c3398c8: cmp    %rax,%r10
  0x000000011c3398cb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c3398d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c3398dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c3398e0: mov    %eax,-0x14000(%rsp)
  0x000000011c3398e7: push   %rbp
  0x000000011c3398e8: sub    $0x100,%rsp
  0x000000011c3398ef: lea    0xe0(%rsp),%rdi
  0x000000011c3398f7: mov    %rsi,0x8(%rdi)
  0x000000011c3398fb: mov    (%rsi),%rax
  0x000000011c3398fe: mov    %rax,%rbx
  0x000000011c339901: and    $0x7,%rbx
  0x000000011c339905: cmp    $0x5,%rbx
  0x000000011c339909: jne    0x000000011c339990
  0x000000011c33990f: mov    0x8(%rsi),%ebx
  0x000000011c339912: shl    $0x3,%rbx
  0x000000011c339916: mov    0xa8(%rbx),%rbx
  0x000000011c33991d: or     %r15,%rbx
  0x000000011c339920: xor    %rax,%rbx
  0x000000011c339923: and    $0xffffffffffffff87,%rbx
  0x000000011c339927: je     0x000000011c3399b8
  0x000000011c33992d: test   $0x7,%rbx
  0x000000011c339934: jne    0x000000011c33997d
  0x000000011c339936: test   $0x300,%rbx
  0x000000011c33993d: jne    0x000000011c33995c
  0x000000011c33993f: and    $0x37f,%rax
  0x000000011c339946: mov    %rax,%rbx
  0x000000011c339949: or     %r15,%rbx
  0x000000011c33994c: lock cmpxchg %rbx,(%rsi)
  0x000000011c339951: jne    0x000000011c339dc6
  0x000000011c339957: jmpq   0x000000011c3399b8
  0x000000011c33995c: mov    0x8(%rsi),%ebx
  0x000000011c33995f: shl    $0x3,%rbx
  0x000000011c339963: mov    0xa8(%rbx),%rbx
  0x000000011c33996a: or     %r15,%rbx
  0x000000011c33996d: lock cmpxchg %rbx,(%rsi)
  0x000000011c339972: jne    0x000000011c339dc6
  0x000000011c339978: jmpq   0x000000011c3399b8
  0x000000011c33997d: mov    0x8(%rsi),%ebx
  0x000000011c339980: shl    $0x3,%rbx
  0x000000011c339984: mov    0xa8(%rbx),%rbx
  0x000000011c33998b: lock cmpxchg %rbx,(%rsi)
  0x000000011c339990: mov    (%rsi),%rax
  0x000000011c339993: or     $0x1,%rax
  0x000000011c339997: mov    %rax,(%rdi)
  0x000000011c33999a: lock cmpxchg %rdi,(%rsi)
  0x000000011c33999f: je     0x000000011c3399b8
  0x000000011c3399a5: sub    %rsp,%rax
  0x000000011c3399a8: and    $0xfffffffffffff007,%rax
  0x000000011c3399af: mov    %rax,(%rdi)
  0x000000011c3399b2: jne    0x000000011c339dc6
  0x000000011c3399b8: movabs $0x112610bc0,%rdi  ;   {metadata(method data for {method} {0x0000000112331838} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c3399c2: mov    0xdc(%rdi),%ebx
  0x000000011c3399c8: add    $0x8,%ebx
  0x000000011c3399cb: mov    %ebx,0xdc(%rdi)
  0x000000011c3399d1: movabs $0x112331838,%rdi  ;   {metadata({method} {0x0000000112331838} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c3399db: and    $0x1ff8,%ebx
  0x000000011c3399e1: cmp    $0x0,%ebx
  0x000000011c3399e4: je     0x000000011c339dd9  ;*aload_0
                                                ; - java.lang.StringBuffer::append@0 (line 380)

  0x000000011c3399ea: movl   $0x0,0x14(%rsi)
  0x000000011c3399f1: mov    %rsi,%rdi
  0x000000011c3399f4: shr    $0x9,%rdi
  0x000000011c3399f8: movabs $0x10c974000,%rbx
  0x000000011c339a02: movb   $0x0,(%rdi,%rbx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x000000011c339a06: mov    %rsi,%rdi
  0x000000011c339a09: movabs $0x112610bc0,%rbx  ;   {metadata(method data for {method} {0x0000000112331838} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x000000011c339a13: addq   $0x1,0x108(%rbx)
  0x000000011c339a1b: movabs $0x1125d4fb0,%rdi  ;   {metadata(method data for {method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c339a25: mov    0xdc(%rdi),%ebx
  0x000000011c339a2b: add    $0x8,%ebx
  0x000000011c339a2e: mov    %ebx,0xdc(%rdi)
  0x000000011c339a34: movabs $0x112336618,%rdi  ;   {metadata({method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c339a3e: and    $0x7ffff8,%ebx
  0x000000011c339a44: cmp    $0x0,%ebx
  0x000000011c339a47: je     0x000000011c339df0
  0x000000011c339a4d: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339a50: inc    %edi
  0x000000011c339a52: mov    %rsi,%rbx
  0x000000011c339a55: movabs $0x1125d4fb0,%rax  ;   {metadata(method data for {method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c339a5f: addq   $0x1,0x108(%rax)
  0x000000011c339a67: movabs $0x1124d7970,%rbx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c339a71: mov    0xdc(%rbx),%eax
  0x000000011c339a77: add    $0x8,%eax
  0x000000011c339a7a: mov    %eax,0xdc(%rbx)
  0x000000011c339a80: movabs $0x1123354e0,%rbx  ;   {metadata({method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c339a8a: and    $0x7ffff8,%eax
  0x000000011c339a90: cmp    $0x0,%eax
  0x000000011c339a93: je     0x000000011c339e07
  0x000000011c339a99: mov    0x10(%rsi),%ebx
  0x000000011c339a9c: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339aa0: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x000000011c339e1e
  0x000000011c339aa3: mov    %rdi,%rcx
  0x000000011c339aa6: sub    %eax,%ecx
  0x000000011c339aa8: cmp    $0x0,%ecx
  0x000000011c339aab: movabs $0x1124d7970,%rcx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c339ab5: movabs $0x108,%r8
  0x000000011c339abf: jle    0x000000011c339acf
  0x000000011c339ac5: movabs $0x118,%r8
  0x000000011c339acf: mov    (%rcx,%r8,1),%r9
  0x000000011c339ad3: lea    0x1(%r9),%r9
  0x000000011c339ad7: mov    %r9,(%rcx,%r8,1)
  0x000000011c339adb: jg     0x000000011c339aed  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339ae1: mov    %edx,0xc4(%rsp)
  0x000000011c339ae8: jmpq   0x000000011c339d56  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339aed: mov    %eax,0xc0(%rsp)
  0x000000011c339af4: mov    %rbx,0xc8(%rsp)
  0x000000011c339afc: mov    %edx,0xc4(%rsp)
  0x000000011c339b03: mov    %rsi,%rcx
  0x000000011c339b06: movabs $0x1124d7970,%r8   ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c339b10: addq   $0x1,0x128(%r8)
  0x000000011c339b18: mov    %rdi,%rdx
  0x000000011c339b1b: mov    %rsi,%rdi
  0x000000011c339b1e: mov    %rdi,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339b21: mov    %rdi,0xd0(%rsp)
  0x000000011c339b29: nop
  0x000000011c339b2a: nop
  0x000000011c339b2b: nop
  0x000000011c339b2c: nop
  0x000000011c339b2d: nop
  0x000000011c339b2e: nop
  0x000000011c339b2f: callq  0x000000011c24c0a0  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=628}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {optimized virtual_call}
  0x000000011c339b34: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339b37: movabs $0x1124d7970,%rbx  ;   {metadata(method data for {method} {0x00000001123354e0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c339b41: addq   $0x1,0x138(%rbx)
  0x000000011c339b49: movabs $0x11258f020,%rbx  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c339b53: mov    0xdc(%rbx),%edx
  0x000000011c339b59: add    $0x8,%edx
  0x000000011c339b5c: mov    %edx,0xdc(%rbx)
  0x000000011c339b62: movabs $0x1123dac50,%rbx  ;   {metadata({method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c339b6c: and    $0x7ffff8,%edx
  0x000000011c339b72: cmp    $0x0,%edx
  0x000000011c339b75: je     0x000000011c339e23
  0x000000011c339b7b: mov    %r8,%rbx
  0x000000011c339b7e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011c339b88: movslq %ebx,%rbx
  0x000000011c339b8b: mov    %rbx,%rdi
  0x000000011c339b8e: cmp    $0xffffff,%rbx
  0x000000011c339b95: ja     0x000000011c339e3a
  0x000000011c339b9b: movabs $0x17,%rsi
  0x000000011c339ba5: lea    (%rsi,%rbx,2),%rsi
  0x000000011c339ba9: and    $0xfffffffffffffff8,%rsi
  0x000000011c339bad: mov    0x60(%r15),%rax
  0x000000011c339bb1: lea    (%rax,%rsi,1),%rsi
  0x000000011c339bb5: cmp    0x70(%r15),%rsi
  0x000000011c339bb9: ja     0x000000011c339e3a
  0x000000011c339bbf: mov    %rsi,0x60(%r15)
  0x000000011c339bc3: sub    %rax,%rsi
  0x000000011c339bc6: movq   $0x1,(%rax)
  0x000000011c339bcd: mov    %rdx,%rcx
  0x000000011c339bd0: shr    $0x3,%rcx
  0x000000011c339bd4: mov    %ecx,0x8(%rax)
  0x000000011c339bd7: mov    %ebx,0xc(%rax)
  0x000000011c339bda: sub    $0x10,%rsi
  0x000000011c339bde: je     0x000000011c339bf5
  0x000000011c339be4: xor    %rbx,%rbx
  0x000000011c339be7: shr    $0x3,%rsi
  0x000000011c339beb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011c339bf0: dec    %rsi
  0x000000011c339bf3: jne    0x000000011c339beb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339bf5: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c339bff: addq   $0x1,0x108(%rsi)
  0x000000011c339c07: movabs $0x112489e90,%rsi  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c339c11: mov    0xdc(%rsi),%edx
  0x000000011c339c17: add    $0x8,%edx
  0x000000011c339c1a: mov    %edx,0xdc(%rsi)
  0x000000011c339c20: movabs $0x1123b6508,%rsi  ;   {metadata({method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c339c2a: and    $0x7ffff8,%edx
  0x000000011c339c30: cmp    $0x0,%edx
  0x000000011c339c33: je     0x000000011c339e44
  0x000000011c339c39: mov    0xc0(%rsp),%esi
  0x000000011c339c40: cmp    %r8d,%esi
  0x000000011c339c43: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c339c4d: movabs $0x108,%rcx
  0x000000011c339c57: jg     0x000000011c339c67
  0x000000011c339c5d: movabs $0x118,%rcx
  0x000000011c339c67: mov    (%rdx,%rcx,1),%r9
  0x000000011c339c6b: lea    0x1(%r9),%r9
  0x000000011c339c6f: mov    %r9,(%rdx,%rcx,1)
  0x000000011c339c73: jg     0x000000011c339c91  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339c79: movabs $0x112489e90,%rdx  ;   {metadata(method data for {method} {0x00000001123b6508} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000011c339c83: incl   0x128(%rdx)
  0x000000011c339c89: mov    %rsi,%r9
  0x000000011c339c8c: jmpq   0x000000011c339c94  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339c91: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339c94: mov    0xc8(%rsp),%rbx
  0x000000011c339c9c: movabs $0x11258f020,%rsi  ;   {metadata(method data for {method} {0x00000001123dac50} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000011c339ca6: addq   $0x1,0x118(%rsi)
  0x000000011c339cae: mov    %rbx,%rsi
  0x000000011c339cb1: mov    $0x0,%edx
  0x000000011c339cb6: mov    %rax,%rcx
  0x000000011c339cb9: mov    $0x0,%r8d
  0x000000011c339cbf: mov    %rax,0xd8(%rsp)
  0x000000011c339cc7: lea    (%rdx,%r9,1),%rdi
  0x000000011c339ccb: cmp    0xc(%rsi),%edi
  0x000000011c339cce: ja     0x000000011c339e5b
  0x000000011c339cd4: lea    (%r8,%r9,1),%rdi
  0x000000011c339cd8: cmp    0xc(%rcx),%edi
  0x000000011c339cdb: ja     0x000000011c339e5b
  0x000000011c339ce1: test   %r9d,%r9d
  0x000000011c339ce4: jl     0x000000011c339e5b
  0x000000011c339cea: je     0x000000011c339d26
  0x000000011c339cf0: movslq %edx,%rdx
  0x000000011c339cf3: movslq %r8d,%r8
  0x000000011c339cf6: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011c339cfb: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011c339d00: mov    %r9,%rdx
  0x000000011c339d03: test   $0xf,%esp
  0x000000011c339d09: je     0x000000011c339d21
  0x000000011c339d0f: sub    $0x8,%rsp
  0x000000011c339d13: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011c339d18: add    $0x8,%rsp
  0x000000011c339d1c: jmpq   0x000000011c339d26
  0x000000011c339d21: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339d26: mov    0xd8(%rsp),%rax
  0x000000011c339d2e: mov    0xd0(%rsp),%rsi
  0x000000011c339d36: mov    %rax,%r10
  0x000000011c339d39: shr    $0x3,%r10
  0x000000011c339d3d: mov    %r10d,0x10(%rsi)
  0x000000011c339d41: mov    %rsi,%rax
  0x000000011c339d44: shr    $0x9,%rax
  0x000000011c339d48: movabs $0x10c974000,%rdi
  0x000000011c339d52: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339d56: mov    0xc4(%rsp),%edx
  0x000000011c339d5d: mov    0x10(%rsi),%eax
  0x000000011c339d60: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339d64: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339d67: mov    %rdi,%rbx
  0x000000011c339d6a: inc    %ebx
  0x000000011c339d6c: mov    %ebx,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339d6f: movslq %edi,%rbx
  0x000000011c339d72: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x000000011c339e69
  0x000000011c339d75: jae    0x000000011c339e73
  0x000000011c339d7b: mov    %dx,0x10(%rax,%rbx,2)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x000000011c339d80: lea    0xe0(%rsp),%rax
  0x000000011c339d88: mov    0x8(%rax),%rbx
  0x000000011c339d8c: mov    (%rbx),%rdi
  0x000000011c339d8f: and    $0x7,%rdi
  0x000000011c339d93: cmp    $0x5,%rdi
  0x000000011c339d97: je     0x000000011c339db4
  0x000000011c339d9d: mov    (%rax),%rdi
  0x000000011c339da0: test   %rdi,%rdi
  0x000000011c339da3: je     0x000000011c339db4
  0x000000011c339da9: lock cmpxchg %rdi,(%rbx)
  0x000000011c339dae: jne    0x000000011c339e7c  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x000000011c339db4: mov    %rsi,%rax
  0x000000011c339db7: add    $0x100,%rsp
  0x000000011c339dbe: pop    %rbp
  0x000000011c339dbf: test   %eax,-0xf852cc5(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c339dc5: retq   
  0x000000011c339dc6: mov    %rsi,0x8(%rsp)
  0x000000011c339dcb: mov    %rdi,(%rsp)
  0x000000011c339dcf: callq  0x000000011c3044a0  ; OopMap{rsi=Oop [232]=Oop off=1300}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x000000011c339dd4: jmpq   0x000000011c3399b8
  0x000000011c339dd9: mov    %rdi,0x8(%rsp)
  0x000000011c339dde: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c339de6: callq  0x000000011c306120  ; OopMap{rsi=Oop [232]=Oop off=1323}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x000000011c339deb: jmpq   0x000000011c3399ea
  0x000000011c339df0: mov    %rdi,0x8(%rsp)
  0x000000011c339df5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c339dfd: callq  0x000000011c306120  ; OopMap{rsi=Oop [232]=Oop off=1346}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e02: jmpq   0x000000011c339a4d
  0x000000011c339e07: mov    %rbx,0x8(%rsp)
  0x000000011c339e0c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c339e14: callq  0x000000011c306120  ; OopMap{rsi=Oop [232]=Oop off=1369}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e19: jmpq   0x000000011c339a99
  0x000000011c339e1e: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rbx=Oop [232]=Oop off=1379}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e23: mov    %rbx,0x8(%rsp)
  0x000000011c339e28: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c339e30: callq  0x000000011c306120  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1397}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e35: jmpq   0x000000011c339b7b
  0x000000011c339e3a: callq  0x000000011c302b20  ; OopMap{[208]=Oop [200]=Oop [232]=Oop off=1407}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e3f: jmpq   0x000000011c339bf5
  0x000000011c339e44: mov    %rsi,0x8(%rsp)
  0x000000011c339e49: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c339e51: callq  0x000000011c306120  ; OopMap{[208]=Oop [200]=Oop rax=Oop [232]=Oop off=1430}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e56: jmpq   0x000000011c339c39
  0x000000011c339e5b: nop
  0x000000011c339e5c: nop
  0x000000011c339e5d: nop
  0x000000011c339e5e: nop
  0x000000011c339e5f: callq  0x000000011c24c520  ; OopMap{[208]=Oop [216]=Oop [232]=Oop off=1444}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {static_call}
  0x000000011c339e64: jmpq   0x000000011c339d26
  0x000000011c339e69: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rax=Oop [232]=Oop off=1454}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e6e: callq  0x000000011c301ac0  ; OopMap{rsi=Oop rax=Oop [232]=Oop off=1459}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e73: mov    %rdi,(%rsp)
  0x000000011c339e77: callq  0x000000011c274080  ; OopMap{rsi=Oop rax=Oop [232]=Oop off=1468}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x000000011c339e7c: lea    0xe0(%rsp),%rax
  0x000000011c339e84: mov    %rax,(%rsp)
  0x000000011c339e88: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c339e8d: jmpq   0x000000011c339db4
  0x000000011c339e92: nop
  0x000000011c339e93: nop
  0x000000011c339e94: mov    0x2a8(%r15),%rax
  0x000000011c339e9b: movabs $0x0,%r10
  0x000000011c339ea5: mov    %r10,0x2a8(%r15)
  0x000000011c339eac: movabs $0x0,%r10
  0x000000011c339eb6: mov    %r10,0x2b0(%r15)
  0x000000011c339ebd: mov    %rax,%rbx
  0x000000011c339ec0: lea    0xe0(%rsp),%rax
  0x000000011c339ec8: mov    0x8(%rax),%rsi
  0x000000011c339ecc: mov    (%rsi),%rdi
  0x000000011c339ecf: and    $0x7,%rdi
  0x000000011c339ed3: cmp    $0x5,%rdi
  0x000000011c339ed7: je     0x000000011c339ef4
  0x000000011c339edd: mov    (%rax),%rdi
  0x000000011c339ee0: test   %rdi,%rdi
  0x000000011c339ee3: je     0x000000011c339ef4
  0x000000011c339ee9: lock cmpxchg %rdi,(%rsi)
  0x000000011c339eee: jne    0x000000011c339f04
  0x000000011c339ef4: mov    %rbx,%rax
  0x000000011c339ef7: add    $0x100,%rsp
  0x000000011c339efe: pop    %rbp
  0x000000011c339eff: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c339f04: lea    0xe0(%rsp),%rax
  0x000000011c339f0c: mov    %rax,(%rsp)
  0x000000011c339f10: callq  0x000000011c3048e0  ;   {runtime_call}
  0x000000011c339f15: jmp    0x000000011c339ef4
  0x000000011c339f17: hlt    
  0x000000011c339f18: hlt    
  0x000000011c339f19: hlt    
  0x000000011c339f1a: hlt    
  0x000000011c339f1b: hlt    
  0x000000011c339f1c: hlt    
  0x000000011c339f1d: hlt    
  0x000000011c339f1e: hlt    
  0x000000011c339f1f: hlt    
[Stub Code]
  0x000000011c339f20: nop                       ;   {no_reloc}
  0x000000011c339f21: nop
  0x000000011c339f22: nop
  0x000000011c339f23: nop
  0x000000011c339f24: nop
  0x000000011c339f25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c339f2f: jmpq   0x000000011c339f2f  ;   {runtime_call}
  0x000000011c339f34: nop
  0x000000011c339f35: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c339f3f: jmpq   0x000000011c339f3f  ;   {runtime_call}
[Exception Handler]
  0x000000011c339f44: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c339f49: mov    %rsp,-0x28(%rsp)
  0x000000011c339f4e: sub    $0x80,%rsp
  0x000000011c339f55: mov    %rax,0x78(%rsp)
  0x000000011c339f5a: mov    %rcx,0x70(%rsp)
  0x000000011c339f5f: mov    %rdx,0x68(%rsp)
  0x000000011c339f64: mov    %rbx,0x60(%rsp)
  0x000000011c339f69: mov    %rbp,0x50(%rsp)
  0x000000011c339f6e: mov    %rsi,0x48(%rsp)
  0x000000011c339f73: mov    %rdi,0x40(%rsp)
  0x000000011c339f78: mov    %r8,0x38(%rsp)
  0x000000011c339f7d: mov    %r9,0x30(%rsp)
  0x000000011c339f82: mov    %r10,0x28(%rsp)
  0x000000011c339f87: mov    %r11,0x20(%rsp)
  0x000000011c339f8c: mov    %r12,0x18(%rsp)
  0x000000011c339f91: mov    %r13,0x10(%rsp)
  0x000000011c339f96: mov    %r14,0x8(%rsp)
  0x000000011c339f9b: mov    %r15,(%rsp)
  0x000000011c339f9f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c339fa9: movabs $0x11c339f49,%rsi  ;   {internal_word}
  0x000000011c339fb3: mov    %rsp,%rdx
  0x000000011c339fb6: and    $0xfffffffffffffff0,%rsp
  0x000000011c339fba: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c339fbf: hlt    
[Deopt Handler Code]
  0x000000011c339fc0: movabs $0x11c339fc0,%r10  ;   {section_word}
  0x000000011c339fca: push   %r10
  0x000000011c339fcc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c339fd1: hlt    
  0x000000011c339fd2: hlt    
  0x000000011c339fd3: hlt    
  0x000000011c339fd4: hlt    
  0x000000011c339fd5: hlt    
  0x000000011c339fd6: hlt    
  0x000000011c339fd7: hlt    
<nmethod compile_id='77' compiler='C1' level='3' entry='0x000000011c3398c0' size='3240' address='0x000000011c339710' relocation_offset='296' insts_offset='432' stub_offset='2064' scopes_data_offset='2288' scopes_pcs_offset='2640' dependencies_offset='3200' nul_chk_table_offset='3208' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='7305' iicount='7305' stamp='1.376'/>
<writer thread='42243'/>
<task_queued compile_id='79' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='593' iicount='593' level='3' stamp='1.376' comment='tiered' hot_count='593'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c33a3d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c33a540: mov    0x8(%rsi),%r10d
  0x000000011c33a544: shl    $0x3,%r10
  0x000000011c33a548: cmp    %rax,%r10
  0x000000011c33a54b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33a551: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33a55c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33a560: mov    %eax,-0x14000(%rsp)
  0x000000011c33a567: push   %rbp
  0x000000011c33a568: sub    $0x30,%rsp
  0x000000011c33a56c: movabs $0x11260d9c0,%rdi  ;   {metadata(method data for {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33a576: mov    0xdc(%rdi),%ebx
  0x000000011c33a57c: add    $0x8,%ebx
  0x000000011c33a57f: mov    %ebx,0xdc(%rdi)
  0x000000011c33a585: movabs $0x1123ae928,%rdi  ;   {metadata({method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33a58f: and    $0x1ff8,%ebx
  0x000000011c33a595: cmp    $0x0,%ebx
  0x000000011c33a598: je     0x000000011c33a63d  ;*aload_0
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 285)

  0x000000011c33a59e: mov    %rsi,%rdi
  0x000000011c33a5a1: movabs $0x11260d9c0,%rbx  ;   {metadata(method data for {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33a5ab: addq   $0x1,0x108(%rbx)
  0x000000011c33a5b3: movabs $0x1124371c0,%rdi  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c33a5bd: mov    0xdc(%rdi),%ebx
  0x000000011c33a5c3: add    $0x8,%ebx
  0x000000011c33a5c6: mov    %ebx,0xdc(%rdi)
  0x000000011c33a5cc: movabs $0x1122c0480,%rdi  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c33a5d6: and    $0x7ffff8,%ebx
  0x000000011c33a5dc: cmp    $0x0,%ebx
  0x000000011c33a5df: je     0x000000011c33a654
  0x000000011c33a5e5: mov    %edx,0xc(%rsi)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)

  0x000000011c33a5e8: mov    %rcx,%r10
  0x000000011c33a5eb: shr    $0x3,%r10
  0x000000011c33a5ef: mov    %r10d,0x10(%rsi)
  0x000000011c33a5f3: mov    %rsi,%rdi
  0x000000011c33a5f6: shr    $0x9,%rdi
  0x000000011c33a5fa: movabs $0x10c974000,%rbx
  0x000000011c33a604: movb   $0x0,(%rdi,%rbx,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)

  0x000000011c33a608: mov    %r8,%r10
  0x000000011c33a60b: shr    $0x3,%r10
  0x000000011c33a60f: mov    %r10d,0x14(%rsi)
  0x000000011c33a613: mov    %rsi,%rdi
  0x000000011c33a616: shr    $0x9,%rdi
  0x000000011c33a61a: movb   $0x0,(%rdi,%rbx,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)

  0x000000011c33a61e: mov    %r9,%r10
  0x000000011c33a621: shr    $0x3,%r10
  0x000000011c33a625: mov    %r10d,0x18(%rsi)
  0x000000011c33a629: shr    $0x9,%rsi
  0x000000011c33a62d: movb   $0x0,(%rsi,%rbx,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)

  0x000000011c33a631: add    $0x30,%rsp
  0x000000011c33a635: pop    %rbp
  0x000000011c33a636: test   %eax,-0xf85353c(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33a63c: retq   
  0x000000011c33a63d: mov    %rdi,0x8(%rsp)
  0x000000011c33a642: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33a64a: callq  0x000000011c306120  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=271}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ;   {runtime_call}
  0x000000011c33a64f: jmpq   0x000000011c33a59e
  0x000000011c33a654: mov    %rdi,0x8(%rsp)
  0x000000011c33a659: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33a661: callq  0x000000011c306120  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=294}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ;   {runtime_call}
  0x000000011c33a666: jmpq   0x000000011c33a5e5
  0x000000011c33a66b: nop
  0x000000011c33a66c: nop
  0x000000011c33a66d: mov    0x2a8(%r15),%rax
  0x000000011c33a674: movabs $0x0,%r10
  0x000000011c33a67e: mov    %r10,0x2a8(%r15)
  0x000000011c33a685: movabs $0x0,%r10
  0x000000011c33a68f: mov    %r10,0x2b0(%r15)
  0x000000011c33a696: add    $0x30,%rsp
  0x000000011c33a69a: pop    %rbp
  0x000000011c33a69b: jmpq   0x000000011c274520  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000011c33a6a0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c33a6a5: mov    %rsp,-0x28(%rsp)
  0x000000011c33a6aa: sub    $0x80,%rsp
  0x000000011c33a6b1: mov    %rax,0x78(%rsp)
  0x000000011c33a6b6: mov    %rcx,0x70(%rsp)
  0x000000011c33a6bb: mov    %rdx,0x68(%rsp)
  0x000000011c33a6c0: mov    %rbx,0x60(%rsp)
  0x000000011c33a6c5: mov    %rbp,0x50(%rsp)
  0x000000011c33a6ca: mov    %rsi,0x48(%rsp)
  0x000000011c33a6cf: mov    %rdi,0x40(%rsp)
  0x000000011c33a6d4: mov    %r8,0x38(%rsp)
  0x000000011c33a6d9: mov    %r9,0x30(%rsp)
  0x000000011c33a6de: mov    %r10,0x28(%rsp)
  0x000000011c33a6e3: mov    %r11,0x20(%rsp)
  0x000000011c33a6e8: mov    %r12,0x18(%rsp)
  0x000000011c33a6ed: mov    %r13,0x10(%rsp)
  0x000000011c33a6f2: mov    %r14,0x8(%rsp)
  0x000000011c33a6f7: mov    %r15,(%rsp)
  0x000000011c33a6fb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33a705: movabs $0x11c33a6a5,%rsi  ;   {internal_word}
  0x000000011c33a70f: mov    %rsp,%rdx
  0x000000011c33a712: and    $0xfffffffffffffff0,%rsp
  0x000000011c33a716: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33a71b: hlt    
[Deopt Handler Code]
  0x000000011c33a71c: movabs $0x11c33a71c,%r10  ;   {section_word}
  0x000000011c33a726: push   %r10
  0x000000011c33a728: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33a72d: hlt    
  0x000000011c33a72e: hlt    
  0x000000011c33a72f: hlt    
<nmethod compile_id='71' compiler='C1' level='3' entry='0x000000011c33a540' size='1112' address='0x000000011c33a3d0' relocation_offset='296' insts_offset='368' stub_offset='720' scopes_data_offset='888' scopes_pcs_offset='960' dependencies_offset='1104' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1041' iicount='1041' stamp='1.380'/>
Decoding compiled method 0x000000011c33d7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011242d3c0} &apos;removeEldestEntry&apos; &apos;(Ljava/util/Map$Entry;)Z&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/Map$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c33d920: mov    0x8(%rsi),%r10d
  0x000000011c33d924: shl    $0x3,%r10
  0x000000011c33d928: cmp    %rax,%r10
  0x000000011c33d92b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33d931: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33d93c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33d940: mov    %eax,-0x14000(%rsp)
  0x000000011c33d947: push   %rbp
  0x000000011c33d948: sub    $0x30,%rsp         ;*iconst_0
                                                ; - java.util.LinkedHashMap::removeEldestEntry@0 (line 509)

  0x000000011c33d94c: mov    $0x0,%eax
  0x000000011c33d951: add    $0x30,%rsp
  0x000000011c33d955: pop    %rbp
  0x000000011c33d956: test   %eax,-0xf85685c(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33d95c: retq   
  0x000000011c33d95d: nop
  0x000000011c33d95e: nop
  0x000000011c33d95f: mov    0x2a8(%r15),%rax
  0x000000011c33d966: movabs $0x0,%r10
  0x000000011c33d970: mov    %r10,0x2a8(%r15)
  0x000000011c33d977: movabs $0x0,%r10
  0x000000011c33d981: mov    %r10,0x2b0(%r15)
  0x000000011c33d988: add    $0x30,%rsp
  0x000000011c33d98c: pop    %rbp
  0x000000011c33d98d: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33d992: hlt    
  0x000000011c33d993: hlt    
  0x000000011c33d994: hlt    
  0x000000011c33d995: hlt    
  0x000000011c33d996: hlt    
  0x000000011c33d997: hlt    
  0x000000011c33d998: hlt    
  0x000000011c33d999: hlt    
  0x000000011c33d99a: hlt    
  0x000000011c33d99b: hlt    
  0x000000011c33d99c: hlt    
  0x000000011c33d99d: hlt    
  0x000000011c33d99e: hlt    
  0x000000011c33d99f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c33d9a0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c33d9a5: mov    %rsp,-0x28(%rsp)
  0x000000011c33d9aa: sub    $0x80,%rsp
  0x000000011c33d9b1: mov    %rax,0x78(%rsp)
  0x000000011c33d9b6: mov    %rcx,0x70(%rsp)
  0x000000011c33d9bb: mov    %rdx,0x68(%rsp)
  0x000000011c33d9c0: mov    %rbx,0x60(%rsp)
  0x000000011c33d9c5: mov    %rbp,0x50(%rsp)
  0x000000011c33d9ca: mov    %rsi,0x48(%rsp)
  0x000000011c33d9cf: mov    %rdi,0x40(%rsp)
  0x000000011c33d9d4: mov    %r8,0x38(%rsp)
  0x000000011c33d9d9: mov    %r9,0x30(%rsp)
  0x000000011c33d9de: mov    %r10,0x28(%rsp)
  0x000000011c33d9e3: mov    %r11,0x20(%rsp)
  0x000000011c33d9e8: mov    %r12,0x18(%rsp)
  0x000000011c33d9ed: mov    %r13,0x10(%rsp)
  0x000000011c33d9f2: mov    %r14,0x8(%rsp)
  0x000000011c33d9f7: mov    %r15,(%rsp)
  0x000000011c33d9fb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33da05: movabs $0x11c33d9a5,%rsi  ;   {internal_word}
  0x000000011c33da0f: mov    %rsp,%rdx
  0x000000011c33da12: and    $0xfffffffffffffff0,%rsp
  0x000000011c33da16: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33da1b: hlt    
[Deopt Handler Code]
  0x000000011c33da1c: movabs $0x11c33da1c,%r10  ;   {section_word}
  0x000000011c33da26: push   %r10
  0x000000011c33da28: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33da2d: hlt    
  0x000000011c33da2e: hlt    
  0x000000011c33da2f: hlt    
<nmethod compile_id='72' compiler='C1' level='1' entry='0x000000011c33d920' size='680' address='0x000000011c33d7d0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='587' iicount='587' stamp='1.382'/>
<writer thread='15619'/>
Decoding compiled method 0x000000011c33da90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112336618} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = char
  #           [sp+0x60]  (sp of caller)
  0x000000011c33dc00: mov    0x8(%rsi),%r10d
  0x000000011c33dc04: shl    $0x3,%r10
  0x000000011c33dc08: cmp    %r10,%rax
  0x000000011c33dc0b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33dc11: data32 xchg %ax,%ax
  0x000000011c33dc14: nopl   0x0(%rax,%rax,1)
  0x000000011c33dc1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33dc20: mov    %eax,-0x14000(%rsp)
  0x000000011c33dc27: push   %rbp
  0x000000011c33dc28: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x000000011c33dc2c: mov    %edx,(%rsp)
  0x000000011c33dc2f: mov    %rsi,%rbx
  0x000000011c33dc32: mov    0x10(%rsi),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dc35: mov    0xc(%r12,%rdi,8),%ebp  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x000000011c33df0b
  0x000000011c33dc3a: mov    0xc(%rsi),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x000000011c33dc3e: mov    %r11d,%r9d
  0x000000011c33dc41: sub    %ebp,%r9d
  0x000000011c33dc44: mov    %rdi,%r8
  0x000000011c33dc47: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dc4b: inc    %r9d
  0x000000011c33dc4e: mov    %r11d,%edx
  0x000000011c33dc51: inc    %edx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x000000011c33dc53: test   %r9d,%r9d
  0x000000011c33dc56: jg     0x000000011c33dc8a  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x000000011c33dc58: mov    %edx,0xc(%rbx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x000000011c33dc5b: test   %r8,%r8
  0x000000011c33dc5e: je     0x000000011c33de8c
  0x000000011c33dc64: mov    0xc(%r8),%r9d
  0x000000011c33dc68: cmp    %r9d,%r11d
  0x000000011c33dc6b: jae    0x000000011c33dea5
  0x000000011c33dc71: mov    (%rsp),%r10d
  0x000000011c33dc75: mov    %r10w,0x10(%r8,%r11,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x000000011c33dc7b: mov    %rbx,%rax
  0x000000011c33dc7e: add    $0x50,%rsp
  0x000000011c33dc82: pop    %rbp
  0x000000011c33dc83: test   %eax,-0xf856c89(%rip)        # 0x000000010cae7000
                                                ;   {poll_return}
  0x000000011c33dc89: retq   
  0x000000011c33dc8a: mov    %ebp,%r10d
  0x000000011c33dc8d: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dc90: mov    %r10d,%r9d
  0x000000011c33dc93: sub    %r11d,%r9d
  0x000000011c33dc96: inc    %r9d
  0x000000011c33dc99: test   %r9d,%r9d
  0x000000011c33dc9c: jge    0x000000011c33ddee  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dca2: mov    %edx,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dca5: test   %r10d,%r10d
  0x000000011c33dca8: jle    0x000000011c33dcb8  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dcaa: mov    $0x7ffffff7,%r11d
  0x000000011c33dcb0: sub    %r10d,%r11d
  0x000000011c33dcb3: test   %r11d,%r11d
  0x000000011c33dcb6: jge    0x000000011c33dcdd  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dcb8: mov    %edi,0x4(%rsp)
  0x000000011c33dcbc: mov    %r8,0x10(%rsp)
  0x000000011c33dcc1: mov    %rsi,0x8(%rsp)
  0x000000011c33dcc6: nop
  0x000000011c33dcc7: callq  0x000000011c24c0a0  ; OopMap{[4]=NarrowOop [8]=Oop [16]=Oop off=204}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {optimized virtual_call}
  0x000000011c33dccc: mov    0x8(%rsp),%rbx
  0x000000011c33dcd1: mov    0x10(%rsp),%r8
  0x000000011c33dcd6: mov    %eax,%r10d
  0x000000011c33dcd9: mov    0x4(%rsp),%edi     ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dcdd: cmp    $0x80000,%r10d
  0x000000011c33dce4: ja     0x000000011c33dec1
  0x000000011c33dcea: movslq %r10d,%r11
  0x000000011c33dced: shl    %r11
  0x000000011c33dcf0: add    $0x17,%r11
  0x000000011c33dcf4: mov    %r11,%rdx
  0x000000011c33dcf7: and    $0xfffffffffffffff8,%rdx
  0x000000011c33dcfb: cmp    $0x80000,%r10d
  0x000000011c33dd02: ja     0x000000011c33de3a
  0x000000011c33dd08: mov    0x60(%r15),%r13
  0x000000011c33dd0c: mov    %r13,%r9
  0x000000011c33dd0f: add    %rdx,%r9
  0x000000011c33dd12: cmp    0x70(%r15),%r9
  0x000000011c33dd16: jae    0x000000011c33de3a
  0x000000011c33dd1c: mov    %r9,0x60(%r15)
  0x000000011c33dd20: prefetchw 0xc0(%r9)
  0x000000011c33dd28: movq   $0x1,0x0(%r13)
  0x000000011c33dd30: prefetchw 0x100(%r9)
  0x000000011c33dd38: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x000000011c33dd40: mov    %r10d,0xc(%r13)
  0x000000011c33dd44: prefetchw 0x140(%r9)
  0x000000011c33dd4c: prefetchw 0x180(%r9)      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dd54: cmp    %r10d,%ebp
  0x000000011c33dd57: mov    %r10d,%r9d
  0x000000011c33dd5a: cmovl  %ebp,%r9d          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dd5e: mov    %r13,%r8
  0x000000011c33dd61: add    $0x10,%r8
  0x000000011c33dd65: shr    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dd69: mov    %r13,%rcx
  0x000000011c33dd6c: shr    $0x3,%rcx          ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dd70: mov    %ecx,0x4(%rsp)
  0x000000011c33dd74: mov    %r11,%rcx
  0x000000011c33dd77: add    $0xfffffffffffffffe,%rcx  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dd7b: lea    (%r12,%rdi,8),%rsi  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dd7f: cmp    %r9d,%ebp
  0x000000011c33dd82: jb     0x000000011c33dec9
  0x000000011c33dd88: cmp    %r9d,%r10d
  0x000000011c33dd8b: jb     0x000000011c33dec9
  0x000000011c33dd91: test   %r9d,%r9d
  0x000000011c33dd94: jle    0x000000011c33def9
  0x000000011c33dd9a: lea    0x10(%r12,%rdi,8),%rsi
  0x000000011c33dd9f: cmp    %r10d,%r9d
  0x000000011c33dda2: jl     0x000000011c33ddf7
  0x000000011c33dda4: add    $0xfffffffffffffff0,%rdx
  0x000000011c33dda8: shr    $0x3,%rdx
  0x000000011c33ddac: mov    %rsi,%rdi
  0x000000011c33ddaf: mov    %r8,%rsi
  0x000000011c33ddb2: movabs $0x11c258ac0,%r10
  0x000000011c33ddbc: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33ddbf: mov    0x4(%rsp),%r10d
  0x000000011c33ddc4: mov    %r10d,0x10(%rbx)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33ddc8: mov    0xc(%rbx),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x000000011c33ddcc: mov    %rbx,%r10
  0x000000011c33ddcf: mov    %r11d,%edx
  0x000000011c33ddd2: inc    %edx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x000000011c33ddd4: shr    $0x9,%r10
  0x000000011c33ddd8: movabs $0x10c974000,%r8
  0x000000011c33dde2: mov    %r12b,(%r8,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dde6: mov    %r13,%r8
  0x000000011c33dde9: jmpq   0x000000011c33dc58
  0x000000011c33ddee: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33ddf2: jmpq   0x000000011c33dca5
  0x000000011c33ddf7: movslq %r9d,%rdx
  0x000000011c33ddfa: mov    %rdx,%r10
  0x000000011c33ddfd: shl    %r10
  0x000000011c33de00: add    $0x10,%r10
  0x000000011c33de04: mov    %r10,%r9
  0x000000011c33de07: and    $0xfffffffffffffff9,%r9
  0x000000011c33de0b: mov    %r13,%rdi
  0x000000011c33de0e: add    %r9,%rdi
  0x000000011c33de11: shr    $0x3,%r10
  0x000000011c33de15: sub    %r10,%r11
  0x000000011c33de18: mov    %r11,%rcx
  0x000000011c33de1b: xor    %rax,%rax
  0x000000011c33de1e: shl    $0x3,%rcx
  0x000000011c33de22: rep rex.W stos %al,%es:(%rdi)
  0x000000011c33de25: mov    %rsi,%rdi
  0x000000011c33de28: mov    %r8,%rsi
  0x000000011c33de2b: movabs $0x11c258800,%r10
  0x000000011c33de35: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33de38: jmp    0x000000011c33ddbf
  0x000000011c33de3a: mov    %edi,0x30(%rsp)
  0x000000011c33de3e: mov    %rdx,0x18(%rsp)
  0x000000011c33de43: mov    %r11,0x10(%rsp)
  0x000000011c33de48: mov    %r10d,0x4(%rsp)
  0x000000011c33de4d: mov    %rbx,0x8(%rsp)
  0x000000011c33de52: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000011c33de5c: mov    0x4(%rsp),%edx
  0x000000011c33de60: mov    %r8,0x28(%rsp)
  0x000000011c33de65: xchg   %ax,%ax
  0x000000011c33de67: callq  0x000000011c309fe0  ; OopMap{[8]=Oop [40]=Oop [48]=NarrowOop off=620}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c33de6c: mov    0x8(%rsp),%rbx
  0x000000011c33de71: mov    0x4(%rsp),%r10d
  0x000000011c33de76: mov    0x10(%rsp),%r11
  0x000000011c33de7b: mov    0x18(%rsp),%rdx
  0x000000011c33de80: mov    %rax,%r13
  0x000000011c33de83: mov    0x30(%rsp),%edi
  0x000000011c33de87: jmpq   0x000000011c33dd54
  0x000000011c33de8c: mov    $0xfffffff6,%esi
  0x000000011c33de91: mov    (%rsp),%ebp
  0x000000011c33de94: mov    %r11d,(%rsp)
  0x000000011c33de98: data32 xchg %ax,%ax
  0x000000011c33de9b: callq  0x000000011c24b6a0  ; OopMap{off=672}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000011c33dea0: callq  0x000000010e88997c  ;   {runtime_call}
  0x000000011c33dea5: mov    $0xffffffe4,%esi
  0x000000011c33deaa: mov    %rbx,%rbp
  0x000000011c33dead: mov    %r8,0x8(%rsp)
  0x000000011c33deb2: mov    %r11d,0x4(%rsp)
  0x000000011c33deb7: callq  0x000000011c24b6a0  ; OopMap{rbp=Oop [8]=Oop off=700}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000011c33debc: callq  0x000000010e88997c  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x000000011c33dec1: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33dec4: jmpq   0x000000011c33dced
  0x000000011c33dec9: mov    %r13,0x8(%rsp)
  0x000000011c33dece: mov    %rbx,%rbp
  0x000000011c33ded1: mov    %r8,%rdi
  0x000000011c33ded4: xor    %rax,%rax
  0x000000011c33ded7: shl    $0x3,%rcx
  0x000000011c33dedb: rep rex.W stos %al,%es:(%rdi)
  0x000000011c33dede: xor    %edx,%edx
  0x000000011c33dee0: mov    %r13,%rcx
  0x000000011c33dee3: xor    %r8d,%r8d
  0x000000011c33dee6: nop
  0x000000011c33dee7: callq  0x000000011c308f60  ; OopMap{rbp=Oop [4]=NarrowOop [8]=Oop off=748}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c33deec: mov    %rbp,%rbx
  0x000000011c33deef: mov    0x8(%rsp),%r13
  0x000000011c33def4: jmpq   0x000000011c33ddbf
  0x000000011c33def9: mov    %r8,%rdi
  0x000000011c33defc: xor    %rax,%rax
  0x000000011c33deff: shl    $0x3,%rcx
  0x000000011c33df03: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33df06: jmpq   0x000000011c33ddbf
  0x000000011c33df0b: mov    $0xfffffff6,%esi
  0x000000011c33df10: data32 xchg %ax,%ax
  0x000000011c33df13: callq  0x000000011c24b6a0  ; OopMap{off=792}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x000000011c33df18: callq  0x000000010e88997c  ;   {runtime_call}
  0x000000011c33df1d: jmp    0x000000011c33df1f  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33df1f: mov    %rax,%rsi
  0x000000011c33df22: jmp    0x000000011c33df27  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x000000011c33df24: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x000000011c33df27: add    $0x50,%rsp
  0x000000011c33df2b: pop    %rbp
  0x000000011c33df2c: jmpq   0x000000011c3135e0  ;   {runtime_call}
  0x000000011c33df31: hlt    
  0x000000011c33df32: hlt    
  0x000000011c33df33: hlt    
  0x000000011c33df34: hlt    
  0x000000011c33df35: hlt    
  0x000000011c33df36: hlt    
  0x000000011c33df37: hlt    
  0x000000011c33df38: hlt    
  0x000000011c33df39: hlt    
  0x000000011c33df3a: hlt    
  0x000000011c33df3b: hlt    
  0x000000011c33df3c: hlt    
  0x000000011c33df3d: hlt    
  0x000000011c33df3e: hlt    
  0x000000011c33df3f: hlt    
[Stub Code]
  0x000000011c33df40: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000011c33df4a: jmpq   0x000000011c33df4a  ;   {runtime_call}
[Exception Handler]
  0x000000011c33df4f: jmpq   0x000000011c2747e0  ;   {runtime_call}
[Deopt Handler Code]
  0x000000011c33df54: callq  0x000000011c33df59
  0x000000011c33df59: subq   $0x5,(%rsp)
  0x000000011c33df5e: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33df63: hlt    
  0x000000011c33df64: hlt    
  0x000000011c33df65: hlt    
  0x000000011c33df66: hlt    
  0x000000011c33df67: hlt    
<nmethod compile_id='78' compiler='C2' level='4' entry='0x000000011c33dc00' size='2352' address='0x000000011c33da90' relocation_offset='296' insts_offset='368' stub_offset='1200' scopes_data_offset='1280' scopes_pcs_offset='1584' dependencies_offset='2256' handler_table_offset='2264' nul_chk_table_offset='2336' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='7785' iicount='7785' stamp='1.389'/>
<make_not_entrant thread='15619' compile_id='45' compiler='C1' level='3' stamp='1.389'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c33cf50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011242c7a8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0xa0]  (sp of caller)
  0x000000011c33d0e0: mov    0x8(%rsi),%r10d
  0x000000011c33d0e4: shl    $0x3,%r10
  0x000000011c33d0e8: cmp    %rax,%r10
  0x000000011c33d0eb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33d0f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33d0fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33d100: mov    %eax,-0x14000(%rsp)
  0x000000011c33d107: push   %rbp
  0x000000011c33d108: sub    $0x90,%rsp
  0x000000011c33d10f: mov    %rsi,%rbx
  0x000000011c33d112: mov    %rdx,%r11
  0x000000011c33d115: mov    %rcx,%r13
  0x000000011c33d118: movabs $0x11260fd08,%rdx  ;   {metadata(method data for {method} {0x000000011242c7a8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33d122: mov    0xdc(%rdx),%esi
  0x000000011c33d128: add    $0x8,%esi
  0x000000011c33d12b: mov    %esi,0xdc(%rdx)
  0x000000011c33d131: movabs $0x11242c7a8,%rdx  ;   {metadata({method} {0x000000011242c7a8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33d13b: and    $0x1ff8,%esi
  0x000000011c33d141: cmp    $0x0,%esi
  0x000000011c33d144: je     0x000000011c33d3d4
  0x000000011c33d14a: movabs $0x7c002ca18,%rdx  ;   {metadata(&apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000000011c33d154: mov    0x60(%r15),%rax
  0x000000011c33d158: lea    0x28(%rax),%rdi
  0x000000011c33d15c: cmp    0x70(%r15),%rdi
  0x000000011c33d160: ja     0x000000011c33d3eb
  0x000000011c33d166: mov    %rdi,0x60(%r15)
  0x000000011c33d16a: mov    0xa8(%rdx),%rcx
  0x000000011c33d171: mov    %rcx,(%rax)
  0x000000011c33d174: mov    %rdx,%rcx
  0x000000011c33d177: shr    $0x3,%rcx
  0x000000011c33d17b: mov    %ecx,0x8(%rax)
  0x000000011c33d17e: xor    %rcx,%rcx
  0x000000011c33d181: mov    %ecx,0xc(%rax)
  0x000000011c33d184: xor    %rcx,%rcx
  0x000000011c33d187: mov    %rcx,0x10(%rax)
  0x000000011c33d18b: mov    %rcx,0x18(%rax)
  0x000000011c33d18f: mov    %rcx,0x20(%rax)    ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)

  0x000000011c33d193: mov    %rax,%rsi
  0x000000011c33d196: movabs $0x11260fd08,%rdi  ;   {metadata(method data for {method} {0x000000011242c7a8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33d1a0: addq   $0x1,0x108(%rdi)
  0x000000011c33d1a8: movabs $0x11260fe68,%rsi  ;   {metadata(method data for {method} {0x0000000112432f00} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000000011c33d1b2: mov    0xdc(%rsi),%edi
  0x000000011c33d1b8: add    $0x8,%edi
  0x000000011c33d1bb: mov    %edi,0xdc(%rsi)
  0x000000011c33d1c1: movabs $0x112432f00,%rsi  ;   {metadata({method} {0x0000000112432f00} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000000011c33d1cb: and    $0x7ffff8,%edi
  0x000000011c33d1d1: cmp    $0x0,%edi
  0x000000011c33d1d4: je     0x000000011c33d3f8
  0x000000011c33d1da: mov    %rax,%rsi
  0x000000011c33d1dd: movabs $0x11260fe68,%rdi  ;   {metadata(method data for {method} {0x0000000112432f00} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000000011c33d1e7: addq   $0x1,0x108(%rdi)
  0x000000011c33d1ef: movabs $0x11260d9c0,%rsi  ;   {metadata(method data for {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33d1f9: mov    0xdc(%rsi),%edi
  0x000000011c33d1ff: add    $0x8,%edi
  0x000000011c33d202: mov    %edi,0xdc(%rsi)
  0x000000011c33d208: movabs $0x1123ae928,%rsi  ;   {metadata({method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33d212: and    $0x7ffff8,%edi
  0x000000011c33d218: cmp    $0x0,%edi
  0x000000011c33d21b: je     0x000000011c33d40f
  0x000000011c33d221: mov    %rax,%rsi
  0x000000011c33d224: movabs $0x11260d9c0,%rdi  ;   {metadata(method data for {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33d22e: addq   $0x1,0x108(%rdi)
  0x000000011c33d236: movabs $0x1124371c0,%rsi  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c33d240: mov    0xdc(%rsi),%edi
  0x000000011c33d246: add    $0x8,%edi
  0x000000011c33d249: mov    %edi,0xdc(%rsi)
  0x000000011c33d24f: movabs $0x1122c0480,%rsi  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c33d259: and    $0x7ffff8,%edi
  0x000000011c33d25f: cmp    $0x0,%edi
  0x000000011c33d262: je     0x000000011c33d426
  0x000000011c33d268: mov    %r11d,0xc(%rax)    ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000000011c33d26c: mov    %r13,%r10
  0x000000011c33d26f: shr    $0x3,%r10
  0x000000011c33d273: mov    %r10d,0x10(%rax)
  0x000000011c33d277: mov    %rax,%rsi
  0x000000011c33d27a: shr    $0x9,%rsi
  0x000000011c33d27e: movabs $0x10c974000,%rdi
  0x000000011c33d288: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000000011c33d28c: mov    %r8,%r10
  0x000000011c33d28f: shr    $0x3,%r10
  0x000000011c33d293: mov    %r10d,0x14(%rax)
  0x000000011c33d297: mov    %rax,%rsi
  0x000000011c33d29a: shr    $0x9,%rsi
  0x000000011c33d29e: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000000011c33d2a2: mov    %r9,%r10
  0x000000011c33d2a5: shr    $0x3,%r10
  0x000000011c33d2a9: mov    %r10d,0x18(%rax)
  0x000000011c33d2ad: mov    %rax,%rsi
  0x000000011c33d2b0: shr    $0x9,%rsi
  0x000000011c33d2b4: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x000000011c33d2b8: mov    %rbx,%rsi
  0x000000011c33d2bb: movabs $0x11260fd08,%rdx  ;   {metadata(method data for {method} {0x000000011242c7a8} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33d2c5: addq   $0x1,0x118(%rdx)
  0x000000011c33d2cd: movabs $0x11260ffb8,%rsi  ;   {metadata(method data for {method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33d2d7: mov    0xdc(%rsi),%edx
  0x000000011c33d2dd: add    $0x8,%edx
  0x000000011c33d2e0: mov    %edx,0xdc(%rsi)
  0x000000011c33d2e6: movabs $0x11242c588,%rsi  ;   {metadata({method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33d2f0: and    $0x7ffff8,%edx
  0x000000011c33d2f6: cmp    $0x0,%edx
  0x000000011c33d2f9: je     0x000000011c33d43d
  0x000000011c33d2ff: mov    0x34(%rbx),%esi
  0x000000011c33d302: shl    $0x3,%rsi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000011c33d306: mov    %rax,%r10
  0x000000011c33d309: shr    $0x3,%r10
  0x000000011c33d30d: mov    %r10d,0x34(%rbx)
  0x000000011c33d311: mov    %rbx,%rdx
  0x000000011c33d314: shr    $0x9,%rdx
  0x000000011c33d318: movb   $0x0,(%rdx,%rdi,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000011c33d31c: cmp    $0x0,%rsi
  0x000000011c33d320: movabs $0x11260ffb8,%rdi  ;   {metadata(method data for {method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33d32a: movabs $0x108,%rdx
  0x000000011c33d334: jne    0x000000011c33d344
  0x000000011c33d33a: movabs $0x118,%rdx
  0x000000011c33d344: mov    (%rdi,%rdx,1),%rcx
  0x000000011c33d348: lea    0x1(%rcx),%rcx
  0x000000011c33d34c: mov    %rcx,(%rdi,%rdx,1)
  0x000000011c33d350: jne    0x000000011c33d392  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000011c33d356: mov    %rax,%r10
  0x000000011c33d359: shr    $0x3,%r10
  0x000000011c33d35d: mov    %r10d,0x30(%rbx)
  0x000000011c33d361: shr    $0x9,%rbx
  0x000000011c33d365: movabs $0x10c974000,%rsi
  0x000000011c33d36f: movb   $0x0,(%rbx,%rsi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000011c33d373: movabs $0x11260ffb8,%rsi  ;   {metadata(method data for {method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33d37d: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000011c33d383: add    $0x90,%rsp
  0x000000011c33d38a: pop    %rbp
  0x000000011c33d38b: test   %eax,-0xf856291(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33d391: retq   
  0x000000011c33d392: mov    %rsi,%r10
  0x000000011c33d395: shr    $0x3,%r10
  0x000000011c33d399: mov    %r10d,0x1c(%rax)
  0x000000011c33d39d: mov    %rax,%rdi
  0x000000011c33d3a0: shr    $0x9,%rdi
  0x000000011c33d3a4: movabs $0x10c974000,%rbx
  0x000000011c33d3ae: movb   $0x0,(%rdi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000011c33d3b2: mov    %rax,%r10
  0x000000011c33d3b5: shr    $0x3,%r10
  0x000000011c33d3b9: mov    %r10d,0x20(%rsi)   ; implicit exception: dispatches to 0x000000011c33d454
  0x000000011c33d3bd: shr    $0x9,%rsi
  0x000000011c33d3c1: movb   $0x0,(%rsi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x000000011c33d3c5: add    $0x90,%rsp
  0x000000011c33d3cc: pop    %rbp
  0x000000011c33d3cd: test   %eax,-0xf8562d3(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33d3d3: retq   
  0x000000011c33d3d4: mov    %rdx,0x8(%rsp)
  0x000000011c33d3d9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33d3e1: callq  0x000000011c306120  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop off=774}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::newNode@-1 (line 256)
                                                ;   {runtime_call}
  0x000000011c33d3e6: jmpq   0x000000011c33d14a
  0x000000011c33d3eb: mov    %rdx,%rdx
  0x000000011c33d3ee: callq  0x000000011c302220  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop off=787}
                                                ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)
                                                ;   {runtime_call}
  0x000000011c33d3f3: jmpq   0x000000011c33d193
  0x000000011c33d3f8: mov    %rsi,0x8(%rsp)
  0x000000011c33d3fd: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33d405: callq  0x000000011c306120  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop rax=Oop off=810}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@-1 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000000011c33d40a: jmpq   0x000000011c33d1da
  0x000000011c33d40f: mov    %rsi,0x8(%rsp)
  0x000000011c33d414: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33d41c: callq  0x000000011c306120  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop rax=Oop off=833}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000000011c33d421: jmpq   0x000000011c33d221
  0x000000011c33d426: mov    %rsi,0x8(%rsp)
  0x000000011c33d42b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33d433: callq  0x000000011c306120  ; OopMap{rbx=Oop r13=Oop r8=Oop r9=Oop rax=Oop off=856}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x000000011c33d438: jmpq   0x000000011c33d268
  0x000000011c33d43d: mov    %rsi,0x8(%rsp)
  0x000000011c33d442: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33d44a: callq  0x000000011c306120  ; OopMap{rbx=Oop rax=Oop off=879}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x000000011c33d44f: jmpq   0x000000011c33d2ff
  0x000000011c33d454: callq  0x000000011c301ac0  ; OopMap{rax=Oop rsi=Oop off=889}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x000000011c33d459: nop
  0x000000011c33d45a: nop
  0x000000011c33d45b: mov    0x2a8(%r15),%rax
  0x000000011c33d462: movabs $0x0,%r10
  0x000000011c33d46c: mov    %r10,0x2a8(%r15)
  0x000000011c33d473: movabs $0x0,%r10
  0x000000011c33d47d: mov    %r10,0x2b0(%r15)
  0x000000011c33d484: add    $0x90,%rsp
  0x000000011c33d48b: pop    %rbp
  0x000000011c33d48c: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33d491: hlt    
  0x000000011c33d492: hlt    
  0x000000011c33d493: hlt    
  0x000000011c33d494: hlt    
  0x000000011c33d495: hlt    
  0x000000011c33d496: hlt    
  0x000000011c33d497: hlt    
  0x000000011c33d498: hlt    
  0x000000011c33d499: hlt    
  0x000000011c33d49a: hlt    
  0x000000011c33d49b: hlt    
  0x000000011c33d49c: hlt    
  0x000000011c33d49d: hlt    
  0x000000011c33d49e: hlt    
  0x000000011c33d49f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c33d4a0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c33d4a5: mov    %rsp,-0x28(%rsp)
  0x000000011c33d4aa: sub    $0x80,%rsp
  0x000000011c33d4b1: mov    %rax,0x78(%rsp)
  0x000000011c33d4b6: mov    %rcx,0x70(%rsp)
  0x000000011c33d4bb: mov    %rdx,0x68(%rsp)
  0x000000011c33d4c0: mov    %rbx,0x60(%rsp)
  0x000000011c33d4c5: mov    %rbp,0x50(%rsp)
  0x000000011c33d4ca: mov    %rsi,0x48(%rsp)
  0x000000011c33d4cf: mov    %rdi,0x40(%rsp)
  0x000000011c33d4d4: mov    %r8,0x38(%rsp)
  0x000000011c33d4d9: mov    %r9,0x30(%rsp)
  0x000000011c33d4de: mov    %r10,0x28(%rsp)
  0x000000011c33d4e3: mov    %r11,0x20(%rsp)
  0x000000011c33d4e8: mov    %r12,0x18(%rsp)
  0x000000011c33d4ed: mov    %r13,0x10(%rsp)
  0x000000011c33d4f2: mov    %r14,0x8(%rsp)
  0x000000011c33d4f7: mov    %r15,(%rsp)
  0x000000011c33d4fb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33d505: movabs $0x11c33d4a5,%rsi  ;   {internal_word}
  0x000000011c33d50f: mov    %rsp,%rdx
  0x000000011c33d512: and    $0xfffffffffffffff0,%rsp
  0x000000011c33d516: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33d51b: hlt    
[Deopt Handler Code]
  0x000000011c33d51c: movabs $0x11c33d51c,%r10  ;   {section_word}
  0x000000011c33d526: push   %r10
  0x000000011c33d528: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33d52d: hlt    
  0x000000011c33d52e: hlt    
  0x000000011c33d52f: hlt    
<nmethod compile_id='73' compiler='C1' level='3' entry='0x000000011c33d0e0' size='2160' address='0x000000011c33cf50' relocation_offset='296' insts_offset='400' stub_offset='1360' scopes_data_offset='1544' scopes_pcs_offset='1800' dependencies_offset='2136' nul_chk_table_offset='2144' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='648' iicount='648' stamp='1.396'/>
Decoding compiled method 0x000000011c33c750:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001123355a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000011c33c8e0: mov    0x8(%rsi),%r10d
  0x000000011c33c8e4: shl    $0x3,%r10
  0x000000011c33c8e8: cmp    %rax,%r10
  0x000000011c33c8eb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33c8f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33c8fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33c900: mov    %eax,-0x14000(%rsp)
  0x000000011c33c907: push   %rbp
  0x000000011c33c908: sub    $0x40,%rsp
  0x000000011c33c90c: movabs $0x11258ed30,%rax  ;   {metadata(method data for {method} {0x00000001123355a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33c916: mov    0xdc(%rax),%edi
  0x000000011c33c91c: add    $0x8,%edi
  0x000000011c33c91f: mov    %edi,0xdc(%rax)
  0x000000011c33c925: movabs $0x1123355a0,%rax  ;   {metadata({method} {0x00000001123355a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33c92f: and    $0x1ff8,%edi
  0x000000011c33c935: cmp    $0x0,%edi
  0x000000011c33c938: je     0x000000011c33cb7e  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@0 (line 150)

  0x000000011c33c93e: mov    0x10(%rsi),%eax
  0x000000011c33c941: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)

  0x000000011c33c945: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; implicit exception: dispatches to 0x000000011c33cb95
  0x000000011c33c948: shl    %eax
  0x000000011c33c94a: add    $0x2,%eax
  0x000000011c33c94d: mov    %rax,%rdi
  0x000000011c33c950: sub    %edx,%edi
  0x000000011c33c952: cmp    $0x0,%edi
  0x000000011c33c955: movabs $0x11258ed30,%rdi  ;   {metadata(method data for {method} {0x00000001123355a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33c95f: movabs $0x108,%rcx
  0x000000011c33c969: jge    0x000000011c33c979
  0x000000011c33c96f: movabs $0x118,%rcx
  0x000000011c33c979: mov    (%rdi,%rcx,1),%rbx
  0x000000011c33c97d: lea    0x1(%rbx),%rbx
  0x000000011c33c981: mov    %rbx,(%rdi,%rcx,1)
  0x000000011c33c985: jge    0x000000011c33c98e  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)

  0x000000011c33c98b: mov    %rdx,%rax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)

  0x000000011c33c98e: cmp    $0x0,%eax
  0x000000011c33c991: movabs $0x11258ed30,%rdi  ;   {metadata(method data for {method} {0x00000001123355a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33c99b: movabs $0x128,%rcx
  0x000000011c33c9a5: jle    0x000000011c33c9b5
  0x000000011c33c9ab: movabs $0x138,%rcx
  0x000000011c33c9b5: mov    (%rdi,%rcx,1),%rbx
  0x000000011c33c9b9: lea    0x1(%rbx),%rbx
  0x000000011c33c9bd: mov    %rbx,(%rdi,%rcx,1)
  0x000000011c33c9c1: jle    0x000000011c33ca07  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)

  0x000000011c33c9c7: mov    $0x7ffffff7,%edi
  0x000000011c33c9cc: sub    %eax,%edi
  0x000000011c33c9ce: cmp    $0x0,%edi
  0x000000011c33c9d1: movabs $0x11258ed30,%rdi  ;   {metadata(method data for {method} {0x00000001123355a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33c9db: movabs $0x148,%rcx
  0x000000011c33c9e5: jge    0x000000011c33c9f5
  0x000000011c33c9eb: movabs $0x158,%rcx
  0x000000011c33c9f5: mov    (%rdi,%rcx,1),%rbx
  0x000000011c33c9f9: lea    0x1(%rbx),%rbx
  0x000000011c33c9fd: mov    %rbx,(%rdi,%rcx,1)
  0x000000011c33ca01: jge    0x000000011c33caf6  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)

  0x000000011c33ca07: movabs $0x11258ed30,%rax  ;   {metadata(method data for {method} {0x00000001123355a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33ca11: addq   $0x1,0x168(%rax)
  0x000000011c33ca19: movabs $0x112610d18,%rax  ;   {metadata(method data for {method} {0x0000000112335650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33ca23: mov    0xdc(%rax),%esi
  0x000000011c33ca29: add    $0x8,%esi
  0x000000011c33ca2c: mov    %esi,0xdc(%rax)
  0x000000011c33ca32: movabs $0x112335650,%rax  ;   {metadata({method} {0x0000000112335650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33ca3c: and    $0x7ffff8,%esi
  0x000000011c33ca42: cmp    $0x0,%esi
  0x000000011c33ca45: je     0x000000011c33cb9a
  0x000000011c33ca4b: mov    $0x7fffffff,%eax
  0x000000011c33ca50: sub    %edx,%eax
  0x000000011c33ca52: cmp    $0x0,%eax
  0x000000011c33ca55: movabs $0x112610d18,%rax  ;   {metadata(method data for {method} {0x0000000112335650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33ca5f: movabs $0x108,%rsi
  0x000000011c33ca69: jge    0x000000011c33ca79
  0x000000011c33ca6f: movabs $0x118,%rsi
  0x000000011c33ca79: mov    (%rax,%rsi,1),%rdi
  0x000000011c33ca7d: lea    0x1(%rdi),%rdi
  0x000000011c33ca81: mov    %rdi,(%rax,%rsi,1)
  0x000000011c33ca85: jl     0x000000011c33cb08  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@4 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000011c33ca8b: cmp    $0x7ffffff7,%edx
  0x000000011c33ca91: movabs $0x112610d18,%rax  ;   {metadata(method data for {method} {0x0000000112335650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33ca9b: movabs $0x138,%rsi
  0x000000011c33caa5: jle    0x000000011c33cab5
  0x000000011c33caab: movabs $0x148,%rsi
  0x000000011c33cab5: mov    (%rax,%rsi,1),%rdi
  0x000000011c33cab9: lea    0x1(%rdi),%rdi
  0x000000011c33cabd: mov    %rdi,(%rax,%rsi,1)
  0x000000011c33cac1: jle    0x000000011c33cadc  ;*if_icmple
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@18 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000011c33cac7: movabs $0x112610d18,%rax  ;   {metadata(method data for {method} {0x0000000112335650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33cad1: incl   0x158(%rax)
  0x000000011c33cad7: jmpq   0x000000011c33cae1  ;*goto
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@22 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000011c33cadc: mov    $0x7ffffff7,%edx   ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@27 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000011c33cae1: movabs $0x11258ed30,%rax  ;   {metadata(method data for {method} {0x00000001123355a0} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33caeb: incl   0x178(%rax)
  0x000000011c33caf1: jmpq   0x000000011c33caf9  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)

  0x000000011c33caf6: mov    %rax,%rdx
  0x000000011c33caf9: mov    %rdx,%rax
  0x000000011c33cafc: add    $0x40,%rsp
  0x000000011c33cb00: pop    %rbp
  0x000000011c33cb01: test   %eax,-0xf855a07(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33cb07: retq                      ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)

  0x000000011c33cb08: jmpq   0x000000011c33cbc0  ;   {no_reloc}
  0x000000011c33cb0d: add    %al,(%rax)
  0x000000011c33cb0f: add    %al,(%rax)
  0x000000011c33cb11: add    %cl,-0x75(%rcx)
  0x000000011c33cb14: rex.RXB (bad) 
  0x000000011c33cb16: lea    0x20(%rax),%rdi
  0x000000011c33cb1a: cmp    0x70(%r15),%rdi
  0x000000011c33cb1e: ja     0x000000011c33cbca
  0x000000011c33cb24: mov    %rdi,0x60(%r15)
  0x000000011c33cb28: mov    0xa8(%rdx),%rcx
  0x000000011c33cb2f: mov    %rcx,(%rax)
  0x000000011c33cb32: mov    %rdx,%rcx
  0x000000011c33cb35: shr    $0x3,%rcx
  0x000000011c33cb39: mov    %ecx,0x8(%rax)
  0x000000011c33cb3c: xor    %rcx,%rcx
  0x000000011c33cb3f: mov    %ecx,0xc(%rax)
  0x000000011c33cb42: xor    %rcx,%rcx
  0x000000011c33cb45: mov    %rcx,0x10(%rax)
  0x000000011c33cb49: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000011c33cb4d: mov    %rax,%rsi
  0x000000011c33cb50: movabs $0x112610d18,%rdi  ;   {metadata(method data for {method} {0x0000000112335650} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000011c33cb5a: addq   $0x1,0x128(%rdi)
  0x000000011c33cb62: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x000000011c33cb65: mov    %rax,0x30(%rsp)
  0x000000011c33cb6a: nop
  0x000000011c33cb6b: nop
  0x000000011c33cb6c: nop
  0x000000011c33cb6d: nop
  0x000000011c33cb6e: nop
  0x000000011c33cb6f: callq  0x000000011c24c0a0  ; OopMap{[48]=Oop off=660}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {optimized virtual_call}
  0x000000011c33cb74: mov    0x30(%rsp),%rax
  0x000000011c33cb79: jmpq   0x000000011c33cc02
  0x000000011c33cb7e: mov    %rax,0x8(%rsp)
  0x000000011c33cb83: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33cb8b: callq  0x000000011c306120  ; OopMap{rsi=Oop off=688}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ;   {runtime_call}
  0x000000011c33cb90: jmpq   0x000000011c33c93e
  0x000000011c33cb95: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=698}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ;   {runtime_call}
  0x000000011c33cb9a: mov    %rax,0x8(%rsp)
  0x000000011c33cb9f: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33cba7: callq  0x000000011c306120  ; OopMap{off=716}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@-1 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000000011c33cbac: jmpq   0x000000011c33ca4b
  0x000000011c33cbb1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011c33cbbb: mov    $0xa050f00,%eax
  0x000000011c33cbc0: callq  0x000000011c305120  ; OopMap{off=741}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000000011c33cbc5: jmpq   0x000000011c33cb08
  0x000000011c33cbca: mov    %rdx,%rdx
  0x000000011c33cbcd: callq  0x000000011c302220  ; OopMap{off=754}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x000000011c33cbd2: jmpq   0x000000011c33cb4d
  0x000000011c33cbd7: nop
  0x000000011c33cbd8: nop
  0x000000011c33cbd9: mov    0x2a8(%r15),%rax
  0x000000011c33cbe0: movabs $0x0,%r10
  0x000000011c33cbea: mov    %r10,0x2a8(%r15)
  0x000000011c33cbf1: movabs $0x0,%r10
  0x000000011c33cbfb: mov    %r10,0x2b0(%r15)
  0x000000011c33cc02: add    $0x40,%rsp
  0x000000011c33cc06: pop    %rbp
  0x000000011c33cc07: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33cc0c: hlt    
  0x000000011c33cc0d: hlt    
  0x000000011c33cc0e: hlt    
  0x000000011c33cc0f: hlt    
  0x000000011c33cc10: hlt    
  0x000000011c33cc11: hlt    
  0x000000011c33cc12: hlt    
  0x000000011c33cc13: hlt    
  0x000000011c33cc14: hlt    
  0x000000011c33cc15: hlt    
  0x000000011c33cc16: hlt    
  0x000000011c33cc17: hlt    
  0x000000011c33cc18: hlt    
  0x000000011c33cc19: hlt    
  0x000000011c33cc1a: hlt    
  0x000000011c33cc1b: hlt    
  0x000000011c33cc1c: hlt    
  0x000000011c33cc1d: hlt    
  0x000000011c33cc1e: hlt    
  0x000000011c33cc1f: hlt    
[Stub Code]
  0x000000011c33cc20: nop                       ;   {no_reloc}
  0x000000011c33cc21: nop
  0x000000011c33cc22: nop
  0x000000011c33cc23: nop
  0x000000011c33cc24: nop
  0x000000011c33cc25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33cc2f: jmpq   0x000000011c33cc2f  ;   {runtime_call}
[Exception Handler]
  0x000000011c33cc34: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c33cc39: mov    %rsp,-0x28(%rsp)
  0x000000011c33cc3e: sub    $0x80,%rsp
  0x000000011c33cc45: mov    %rax,0x78(%rsp)
  0x000000011c33cc4a: mov    %rcx,0x70(%rsp)
  0x000000011c33cc4f: mov    %rdx,0x68(%rsp)
  0x000000011c33cc54: mov    %rbx,0x60(%rsp)
  0x000000011c33cc59: mov    %rbp,0x50(%rsp)
  0x000000011c33cc5e: mov    %rsi,0x48(%rsp)
  0x000000011c33cc63: mov    %rdi,0x40(%rsp)
  0x000000011c33cc68: mov    %r8,0x38(%rsp)
  0x000000011c33cc6d: mov    %r9,0x30(%rsp)
  0x000000011c33cc72: mov    %r10,0x28(%rsp)
  0x000000011c33cc77: mov    %r11,0x20(%rsp)
  0x000000011c33cc7c: mov    %r12,0x18(%rsp)
  0x000000011c33cc81: mov    %r13,0x10(%rsp)
  0x000000011c33cc86: mov    %r14,0x8(%rsp)
  0x000000011c33cc8b: mov    %r15,(%rsp)
  0x000000011c33cc8f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33cc99: movabs $0x11c33cc39,%rsi  ;   {internal_word}
  0x000000011c33cca3: mov    %rsp,%rdx
  0x000000011c33cca6: and    $0xfffffffffffffff0,%rsp
  0x000000011c33ccaa: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33ccaf: hlt    
[Deopt Handler Code]
  0x000000011c33ccb0: movabs $0x11c33ccb0,%r10  ;   {section_word}
  0x000000011c33ccba: push   %r10
  0x000000011c33ccbc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33ccc1: hlt    
  0x000000011c33ccc2: hlt    
  0x000000011c33ccc3: hlt    
  0x000000011c33ccc4: hlt    
  0x000000011c33ccc5: hlt    
  0x000000011c33ccc6: hlt    
  0x000000011c33ccc7: hlt    
<nmethod compile_id='79' compiler='C1' level='3' entry='0x000000011c33c8e0' size='1976' address='0x000000011c33c750' relocation_offset='296' insts_offset='400' stub_offset='1232' scopes_data_offset='1416' scopes_pcs_offset='1584' dependencies_offset='1952' nul_chk_table_offset='1960' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='595' iicount='595' stamp='1.401'/>
Decoding compiled method 0x000000011c33c250:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112432f00} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;
  # this:     rsi:rsi   = &apos;java/util/LinkedHashMap$Entry&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000011c33c3c0: mov    0x8(%rsi),%r10d
  0x000000011c33c3c4: shl    $0x3,%r10
  0x000000011c33c3c8: cmp    %rax,%r10
  0x000000011c33c3cb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33c3d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33c3dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33c3e0: mov    %eax,-0x14000(%rsp)
  0x000000011c33c3e7: push   %rbp
  0x000000011c33c3e8: sub    $0x60,%rsp
  0x000000011c33c3ec: movabs $0x11260fe68,%rdi  ;   {metadata(method data for {method} {0x0000000112432f00} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000000011c33c3f6: mov    0xdc(%rdi),%ebx
  0x000000011c33c3fc: add    $0x8,%ebx
  0x000000011c33c3ff: mov    %ebx,0xdc(%rdi)
  0x000000011c33c405: movabs $0x112432f00,%rdi  ;   {metadata({method} {0x0000000112432f00} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000000011c33c40f: and    $0x1ff8,%ebx
  0x000000011c33c415: cmp    $0x0,%ebx
  0x000000011c33c418: je     0x000000011c33c504  ;*aload_0
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@0 (line 195)

  0x000000011c33c41e: mov    %rsi,%rdi
  0x000000011c33c421: movabs $0x11260fe68,%rbx  ;   {metadata(method data for {method} {0x0000000112432f00} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x000000011c33c42b: addq   $0x1,0x108(%rbx)
  0x000000011c33c433: movabs $0x11260d9c0,%rdi  ;   {metadata(method data for {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33c43d: mov    0xdc(%rdi),%ebx
  0x000000011c33c443: add    $0x8,%ebx
  0x000000011c33c446: mov    %ebx,0xdc(%rdi)
  0x000000011c33c44c: movabs $0x1123ae928,%rdi  ;   {metadata({method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33c456: and    $0x7ffff8,%ebx
  0x000000011c33c45c: cmp    $0x0,%ebx
  0x000000011c33c45f: je     0x000000011c33c51b
  0x000000011c33c465: mov    %rsi,%rdi
  0x000000011c33c468: movabs $0x11260d9c0,%rbx  ;   {metadata(method data for {method} {0x00000001123ae928} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x000000011c33c472: addq   $0x1,0x108(%rbx)
  0x000000011c33c47a: movabs $0x1124371c0,%rdi  ;   {metadata(method data for {method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c33c484: mov    0xdc(%rdi),%ebx
  0x000000011c33c48a: add    $0x8,%ebx
  0x000000011c33c48d: mov    %ebx,0xdc(%rdi)
  0x000000011c33c493: movabs $0x1122c0480,%rdi  ;   {metadata({method} {0x00000001122c0480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000011c33c49d: and    $0x7ffff8,%ebx
  0x000000011c33c4a3: cmp    $0x0,%ebx
  0x000000011c33c4a6: je     0x000000011c33c532
  0x000000011c33c4ac: mov    %edx,0xc(%rsi)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x000000011c33c4af: mov    %rcx,%r10
  0x000000011c33c4b2: shr    $0x3,%r10
  0x000000011c33c4b6: mov    %r10d,0x10(%rsi)
  0x000000011c33c4ba: mov    %rsi,%rdi
  0x000000011c33c4bd: shr    $0x9,%rdi
  0x000000011c33c4c1: movabs $0x10c974000,%rbx
  0x000000011c33c4cb: movb   $0x0,(%rdi,%rbx,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x000000011c33c4cf: mov    %r8,%r10
  0x000000011c33c4d2: shr    $0x3,%r10
  0x000000011c33c4d6: mov    %r10d,0x14(%rsi)
  0x000000011c33c4da: mov    %rsi,%rdi
  0x000000011c33c4dd: shr    $0x9,%rdi
  0x000000011c33c4e1: movb   $0x0,(%rdi,%rbx,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x000000011c33c4e5: mov    %r9,%r10
  0x000000011c33c4e8: shr    $0x3,%r10
  0x000000011c33c4ec: mov    %r10d,0x18(%rsi)
  0x000000011c33c4f0: shr    $0x9,%rsi
  0x000000011c33c4f4: movb   $0x0,(%rsi,%rbx,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 289)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x000000011c33c4f8: add    $0x60,%rsp
  0x000000011c33c4fc: pop    %rbp
  0x000000011c33c4fd: test   %eax,-0xf855403(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33c503: retq   
  0x000000011c33c504: mov    %rdi,0x8(%rsp)
  0x000000011c33c509: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33c511: callq  0x000000011c306120  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=342}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@-1 (line 195)
                                                ;   {runtime_call}
  0x000000011c33c516: jmpq   0x000000011c33c41e
  0x000000011c33c51b: mov    %rdi,0x8(%rsp)
  0x000000011c33c520: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33c528: callq  0x000000011c306120  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=365}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ;   {runtime_call}
  0x000000011c33c52d: jmpq   0x000000011c33c465
  0x000000011c33c532: mov    %rdi,0x8(%rsp)
  0x000000011c33c537: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33c53f: callq  0x000000011c306120  ; OopMap{rsi=Oop rcx=Oop r8=Oop r9=Oop off=388}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ;   {runtime_call}
  0x000000011c33c544: jmpq   0x000000011c33c4ac
  0x000000011c33c549: nop
  0x000000011c33c54a: nop
  0x000000011c33c54b: mov    0x2a8(%r15),%rax
  0x000000011c33c552: movabs $0x0,%r10
  0x000000011c33c55c: mov    %r10,0x2a8(%r15)
  0x000000011c33c563: movabs $0x0,%r10
  0x000000011c33c56d: mov    %r10,0x2b0(%r15)
  0x000000011c33c574: add    $0x60,%rsp
  0x000000011c33c578: pop    %rbp
  0x000000011c33c579: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33c57e: hlt    
  0x000000011c33c57f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c33c580: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c33c585: mov    %rsp,-0x28(%rsp)
  0x000000011c33c58a: sub    $0x80,%rsp
  0x000000011c33c591: mov    %rax,0x78(%rsp)
  0x000000011c33c596: mov    %rcx,0x70(%rsp)
  0x000000011c33c59b: mov    %rdx,0x68(%rsp)
  0x000000011c33c5a0: mov    %rbx,0x60(%rsp)
  0x000000011c33c5a5: mov    %rbp,0x50(%rsp)
  0x000000011c33c5aa: mov    %rsi,0x48(%rsp)
  0x000000011c33c5af: mov    %rdi,0x40(%rsp)
  0x000000011c33c5b4: mov    %r8,0x38(%rsp)
  0x000000011c33c5b9: mov    %r9,0x30(%rsp)
  0x000000011c33c5be: mov    %r10,0x28(%rsp)
  0x000000011c33c5c3: mov    %r11,0x20(%rsp)
  0x000000011c33c5c8: mov    %r12,0x18(%rsp)
  0x000000011c33c5cd: mov    %r13,0x10(%rsp)
  0x000000011c33c5d2: mov    %r14,0x8(%rsp)
  0x000000011c33c5d7: mov    %r15,(%rsp)
  0x000000011c33c5db: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33c5e5: movabs $0x11c33c585,%rsi  ;   {internal_word}
  0x000000011c33c5ef: mov    %rsp,%rdx
  0x000000011c33c5f2: and    $0xfffffffffffffff0,%rsp
  0x000000011c33c5f6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33c5fb: hlt    
[Deopt Handler Code]
  0x000000011c33c5fc: movabs $0x11c33c5fc,%r10  ;   {section_word}
  0x000000011c33c606: push   %r10
  0x000000011c33c608: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33c60d: hlt    
  0x000000011c33c60e: hlt    
  0x000000011c33c60f: hlt    
<nmethod compile_id='74' compiler='C1' level='3' entry='0x000000011c33c3c0' size='1256' address='0x000000011c33c250' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1088' dependencies_offset='1248' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='648' iicount='648' stamp='1.405'/>
Decoding compiled method 0x000000011c33bd50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/LinkedHashMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c33bec0: mov    0x8(%rsi),%r10d
  0x000000011c33bec4: shl    $0x3,%r10
  0x000000011c33bec8: cmp    %rax,%r10
  0x000000011c33becb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33bed1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33bedc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33bee0: mov    %eax,-0x14000(%rsp)
  0x000000011c33bee7: push   %rbp
  0x000000011c33bee8: sub    $0x30,%rsp
  0x000000011c33beec: movabs $0x11260ffb8,%rdi  ;   {metadata(method data for {method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33bef6: mov    0xdc(%rdi),%ebx
  0x000000011c33befc: add    $0x8,%ebx
  0x000000011c33beff: mov    %ebx,0xdc(%rdi)
  0x000000011c33bf05: movabs $0x11242c588,%rdi  ;   {metadata({method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33bf0f: and    $0x1ff8,%ebx
  0x000000011c33bf15: cmp    $0x0,%ebx
  0x000000011c33bf18: je     0x000000011c33bff7  ;*aload_0
                                                ; - java.util.LinkedHashMap::linkNodeLast@0 (line 223)

  0x000000011c33bf1e: mov    0x34(%rsi),%edi
  0x000000011c33bf21: shl    $0x3,%rdi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)

  0x000000011c33bf25: mov    %rdx,%r10
  0x000000011c33bf28: shr    $0x3,%r10
  0x000000011c33bf2c: mov    %r10d,0x34(%rsi)
  0x000000011c33bf30: mov    %rsi,%rbx
  0x000000011c33bf33: shr    $0x9,%rbx
  0x000000011c33bf37: movabs $0x10c974000,%rax
  0x000000011c33bf41: movb   $0x0,(%rbx,%rax,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)

  0x000000011c33bf45: cmp    $0x0,%rdi
  0x000000011c33bf49: movabs $0x11260ffb8,%rbx  ;   {metadata(method data for {method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33bf53: movabs $0x108,%rax
  0x000000011c33bf5d: jne    0x000000011c33bf6d
  0x000000011c33bf63: movabs $0x118,%rax
  0x000000011c33bf6d: mov    (%rbx,%rax,1),%rcx
  0x000000011c33bf71: lea    0x1(%rcx),%rcx
  0x000000011c33bf75: mov    %rcx,(%rbx,%rax,1)
  0x000000011c33bf79: jne    0x000000011c33bfb8  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)

  0x000000011c33bf7f: mov    %rdx,%r10
  0x000000011c33bf82: shr    $0x3,%r10
  0x000000011c33bf86: mov    %r10d,0x30(%rsi)
  0x000000011c33bf8a: shr    $0x9,%rsi
  0x000000011c33bf8e: movabs $0x10c974000,%rdi
  0x000000011c33bf98: movb   $0x0,(%rsi,%rdi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)

  0x000000011c33bf9c: movabs $0x11260ffb8,%rsi  ;   {metadata(method data for {method} {0x000000011242c588} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33bfa6: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)

  0x000000011c33bfac: add    $0x30,%rsp
  0x000000011c33bfb0: pop    %rbp
  0x000000011c33bfb1: test   %eax,-0xf854eb7(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33bfb7: retq   
  0x000000011c33bfb8: mov    %rdi,%r10
  0x000000011c33bfbb: shr    $0x3,%r10
  0x000000011c33bfbf: mov    %r10d,0x1c(%rdx)   ; implicit exception: dispatches to 0x000000011c33c00e
  0x000000011c33bfc3: mov    %rdx,%rsi
  0x000000011c33bfc6: shr    $0x9,%rsi
  0x000000011c33bfca: movabs $0x10c974000,%rbx
  0x000000011c33bfd4: movb   $0x0,(%rsi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)

  0x000000011c33bfd8: mov    %rdx,%r10
  0x000000011c33bfdb: shr    $0x3,%r10
  0x000000011c33bfdf: mov    %r10d,0x20(%rdi)   ; implicit exception: dispatches to 0x000000011c33c013
  0x000000011c33bfe3: shr    $0x9,%rdi
  0x000000011c33bfe7: movb   $0x0,(%rdi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)

  0x000000011c33bfeb: add    $0x30,%rsp
  0x000000011c33bfef: pop    %rbp
  0x000000011c33bff0: test   %eax,-0xf854ef6(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33bff6: retq   
  0x000000011c33bff7: mov    %rdi,0x8(%rsp)
  0x000000011c33bffc: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33c004: callq  0x000000011c306120  ; OopMap{rsi=Oop rdx=Oop off=329}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ;   {runtime_call}
  0x000000011c33c009: jmpq   0x000000011c33bf1e
  0x000000011c33c00e: callq  0x000000011c301ac0  ; OopMap{rdi=Oop rdx=Oop off=339}
                                                ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ;   {runtime_call}
  0x000000011c33c013: callq  0x000000011c301ac0  ; OopMap{rdi=Oop off=344}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ;   {runtime_call}
  0x000000011c33c018: nop
  0x000000011c33c019: nop
  0x000000011c33c01a: mov    0x2a8(%r15),%rax
  0x000000011c33c021: movabs $0x0,%r10
  0x000000011c33c02b: mov    %r10,0x2a8(%r15)
  0x000000011c33c032: movabs $0x0,%r10
  0x000000011c33c03c: mov    %r10,0x2b0(%r15)
  0x000000011c33c043: add    $0x30,%rsp
  0x000000011c33c047: pop    %rbp
  0x000000011c33c048: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33c04d: hlt    
  0x000000011c33c04e: hlt    
  0x000000011c33c04f: hlt    
  0x000000011c33c050: hlt    
  0x000000011c33c051: hlt    
  0x000000011c33c052: hlt    
  0x000000011c33c053: hlt    
  0x000000011c33c054: hlt    
  0x000000011c33c055: hlt    
  0x000000011c33c056: hlt    
  0x000000011c33c057: hlt    
  0x000000011c33c058: hlt    
  0x000000011c33c059: hlt    
  0x000000011c33c05a: hlt    
  0x000000011c33c05b: hlt    
  0x000000011c33c05c: hlt    
  0x000000011c33c05d: hlt    
  0x000000011c33c05e: hlt    
  0x000000011c33c05f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c33c060: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c33c065: mov    %rsp,-0x28(%rsp)
  0x000000011c33c06a: sub    $0x80,%rsp
  0x000000011c33c071: mov    %rax,0x78(%rsp)
  0x000000011c33c076: mov    %rcx,0x70(%rsp)
  0x000000011c33c07b: mov    %rdx,0x68(%rsp)
  0x000000011c33c080: mov    %rbx,0x60(%rsp)
  0x000000011c33c085: mov    %rbp,0x50(%rsp)
  0x000000011c33c08a: mov    %rsi,0x48(%rsp)
  0x000000011c33c08f: mov    %rdi,0x40(%rsp)
  0x000000011c33c094: mov    %r8,0x38(%rsp)
  0x000000011c33c099: mov    %r9,0x30(%rsp)
  0x000000011c33c09e: mov    %r10,0x28(%rsp)
  0x000000011c33c0a3: mov    %r11,0x20(%rsp)
  0x000000011c33c0a8: mov    %r12,0x18(%rsp)
  0x000000011c33c0ad: mov    %r13,0x10(%rsp)
  0x000000011c33c0b2: mov    %r14,0x8(%rsp)
  0x000000011c33c0b7: mov    %r15,(%rsp)
  0x000000011c33c0bb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33c0c5: movabs $0x11c33c065,%rsi  ;   {internal_word}
  0x000000011c33c0cf: mov    %rsp,%rdx
  0x000000011c33c0d2: and    $0xfffffffffffffff0,%rsp
  0x000000011c33c0d6: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33c0db: hlt    
[Deopt Handler Code]
  0x000000011c33c0dc: movabs $0x11c33c0dc,%r10  ;   {section_word}
  0x000000011c33c0e6: push   %r10
  0x000000011c33c0e8: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33c0ed: hlt    
  0x000000011c33c0ee: hlt    
  0x000000011c33c0ef: hlt    
<nmethod compile_id='75' compiler='C1' level='3' entry='0x000000011c33bec0' size='1264' address='0x000000011c33bd50' relocation_offset='296' insts_offset='368' stub_offset='784' scopes_data_offset='936' scopes_pcs_offset='1024' dependencies_offset='1232' nul_chk_table_offset='1240' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='648' iicount='648' stamp='1.409'/>
Decoding compiled method 0x000000011c33b3d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rsi:rsi   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    rdx       = boolean
  #           [sp+0x90]  (sp of caller)
  0x000000011c33b580: mov    0x8(%rsi),%r10d
  0x000000011c33b584: shl    $0x3,%r10
  0x000000011c33b588: cmp    %rax,%r10
  0x000000011c33b58b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33b591: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33b59c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33b5a0: mov    %eax,-0x14000(%rsp)
  0x000000011c33b5a7: push   %rbp
  0x000000011c33b5a8: sub    $0x80,%rsp
  0x000000011c33b5af: movabs $0x112610118,%rdi  ;   {metadata(method data for {method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33b5b9: mov    0xdc(%rdi),%ebx
  0x000000011c33b5bf: add    $0x8,%ebx
  0x000000011c33b5c2: mov    %ebx,0xdc(%rdi)
  0x000000011c33b5c8: movabs $0x11242cb58,%rdi  ;   {metadata({method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33b5d2: and    $0x1ff8,%ebx
  0x000000011c33b5d8: cmp    $0x0,%ebx
  0x000000011c33b5db: je     0x000000011c33b983  ;*iload_1
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@0 (line 299)

  0x000000011c33b5e1: cmp    $0x0,%edx
  0x000000011c33b5e4: movabs $0x112610118,%rdx  ;   {metadata(method data for {method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33b5ee: movabs $0x108,%rdi
  0x000000011c33b5f8: je     0x000000011c33b608
  0x000000011c33b5fe: movabs $0x118,%rdi
  0x000000011c33b608: mov    (%rdx,%rdi,1),%rbx
  0x000000011c33b60c: lea    0x1(%rbx),%rbx
  0x000000011c33b610: mov    %rbx,(%rdx,%rdi,1)
  0x000000011c33b614: je     0x000000011c33b974  ;*ifeq
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@1 (line 299)

  0x000000011c33b61a: mov    0x30(%rsi),%edi
  0x000000011c33b61d: shl    $0x3,%rdi          ;*getfield head
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@5 (line 299)

  0x000000011c33b621: cmp    $0x0,%rdi
  0x000000011c33b625: movabs $0x112610118,%rdx  ;   {metadata(method data for {method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33b62f: movabs $0x128,%rbx
  0x000000011c33b639: je     0x000000011c33b649
  0x000000011c33b63f: movabs $0x138,%rbx
  0x000000011c33b649: mov    (%rdx,%rbx,1),%rax
  0x000000011c33b64d: lea    0x1(%rax),%rax
  0x000000011c33b651: mov    %rax,(%rdx,%rbx,1)
  0x000000011c33b655: je     0x000000011c33b974  ;*ifnull
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@10 (line 299)

  0x000000011c33b65b: mov    %rsi,%rdx
  0x000000011c33b65e: movabs $0x112610118,%rbx  ;   {metadata(method data for {method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33b668: mov    0x8(%rdx),%edx
  0x000000011c33b66b: shl    $0x3,%rdx
  0x000000011c33b66f: cmp    0x150(%rbx),%rdx
  0x000000011c33b676: jne    0x000000011c33b685
  0x000000011c33b678: addq   $0x1,0x158(%rbx)
  0x000000011c33b680: jmpq   0x000000011c33b6eb
  0x000000011c33b685: cmp    0x160(%rbx),%rdx
  0x000000011c33b68c: jne    0x000000011c33b69b
  0x000000011c33b68e: addq   $0x1,0x168(%rbx)
  0x000000011c33b696: jmpq   0x000000011c33b6eb
  0x000000011c33b69b: cmpq   $0x0,0x150(%rbx)
  0x000000011c33b6a6: jne    0x000000011c33b6bf
  0x000000011c33b6a8: mov    %rdx,0x150(%rbx)
  0x000000011c33b6af: movq   $0x1,0x158(%rbx)
  0x000000011c33b6ba: jmpq   0x000000011c33b6eb
  0x000000011c33b6bf: cmpq   $0x0,0x160(%rbx)
  0x000000011c33b6ca: jne    0x000000011c33b6e3
  0x000000011c33b6cc: mov    %rdx,0x160(%rbx)
  0x000000011c33b6d3: movq   $0x1,0x168(%rbx)
  0x000000011c33b6de: jmpq   0x000000011c33b6eb
  0x000000011c33b6e3: addq   $0x1,0x148(%rbx)
  0x000000011c33b6eb: mov    %rdi,%rdx
  0x000000011c33b6ee: mov    %rsi,%rbx
  0x000000011c33b6f1: mov    %rbx,%rsi          ;*invokevirtual removeEldestEntry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@15 (line 299)

  0x000000011c33b6f4: mov    %rbx,0x60(%rsp)
  0x000000011c33b6f9: mov    %rdi,0x58(%rsp)
  0x000000011c33b6fe: nop
  0x000000011c33b6ff: nop
  0x000000011c33b700: nop
  0x000000011c33b701: nop
  0x000000011c33b702: nop
  0x000000011c33b703: nop
  0x000000011c33b704: nop
  0x000000011c33b705: movabs $0xffffffffffffffff,%rax
  0x000000011c33b70f: callq  0x000000011c24c2e0  ; OopMap{[96]=Oop [88]=Oop off=404}
                                                ;*invokevirtual removeEldestEntry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@15 (line 299)
                                                ;   {virtual_call}
  0x000000011c33b714: cmp    $0x0,%eax
  0x000000011c33b717: movabs $0x112610118,%rsi  ;   {metadata(method data for {method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33b721: movabs $0x178,%rdi
  0x000000011c33b72b: je     0x000000011c33b73b
  0x000000011c33b731: movabs $0x188,%rdi
  0x000000011c33b73b: mov    (%rsi,%rdi,1),%rbx
  0x000000011c33b73f: lea    0x1(%rbx),%rbx
  0x000000011c33b743: mov    %rbx,(%rsi,%rdi,1)
  0x000000011c33b747: je     0x000000011c33b974  ;*ifeq
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@18 (line 299)

  0x000000011c33b74d: mov    0x58(%rsp),%rdi
  0x000000011c33b752: mov    0x10(%rdi),%edi    ; implicit exception: dispatches to 0x000000011c33b99a
  0x000000011c33b755: shl    $0x3,%rdi          ;*getfield key
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@22 (line 300)

  0x000000011c33b759: movabs $0x112610118,%rsi  ;   {metadata(method data for {method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33b763: addq   $0x1,0x198(%rsi)
  0x000000011c33b76b: movabs $0x112533790,%rsi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33b775: mov    0xdc(%rsi),%ebx
  0x000000011c33b77b: add    $0x8,%ebx
  0x000000011c33b77e: mov    %ebx,0xdc(%rsi)
  0x000000011c33b784: movabs $0x1123a9a20,%rsi  ;   {metadata({method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33b78e: and    $0x7ffff8,%ebx
  0x000000011c33b794: cmp    $0x0,%ebx
  0x000000011c33b797: je     0x000000011c33b99f
  0x000000011c33b79d: cmp    $0x0,%rdi
  0x000000011c33b7a1: movabs $0x112533790,%rsi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33b7ab: movabs $0x108,%rbx
  0x000000011c33b7b5: jne    0x000000011c33b7c5
  0x000000011c33b7bb: movabs $0x118,%rbx
  0x000000011c33b7c5: mov    (%rsi,%rbx,1),%rax
  0x000000011c33b7c9: lea    0x1(%rax),%rax
  0x000000011c33b7cd: mov    %rax,(%rsi,%rbx,1)
  0x000000011c33b7d1: jne    0x000000011c33b7f6  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x000000011c33b7d7: movabs $0x112533790,%rsi  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33b7e1: incl   0x128(%rsi)
  0x000000011c33b7e7: mov    $0x0,%esi
  0x000000011c33b7ec: mov    %rdi,0x68(%rsp)
  0x000000011c33b7f1: jmpq   0x000000011c33b8b0  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x000000011c33b7f6: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000011c33b9b6
  0x000000011c33b7f9: mov    %rdi,%rsi
  0x000000011c33b7fc: movabs $0x112533790,%rbx  ;   {metadata(method data for {method} {0x00000001123a9a20} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x000000011c33b806: mov    0x8(%rsi),%esi
  0x000000011c33b809: shl    $0x3,%rsi
  0x000000011c33b80d: cmp    0x148(%rbx),%rsi
  0x000000011c33b814: jne    0x000000011c33b823
  0x000000011c33b816: addq   $0x1,0x150(%rbx)
  0x000000011c33b81e: jmpq   0x000000011c33b889
  0x000000011c33b823: cmp    0x158(%rbx),%rsi
  0x000000011c33b82a: jne    0x000000011c33b839
  0x000000011c33b82c: addq   $0x1,0x160(%rbx)
  0x000000011c33b834: jmpq   0x000000011c33b889
  0x000000011c33b839: cmpq   $0x0,0x148(%rbx)
  0x000000011c33b844: jne    0x000000011c33b85d
  0x000000011c33b846: mov    %rsi,0x148(%rbx)
  0x000000011c33b84d: movq   $0x1,0x150(%rbx)
  0x000000011c33b858: jmpq   0x000000011c33b889
  0x000000011c33b85d: cmpq   $0x0,0x158(%rbx)
  0x000000011c33b868: jne    0x000000011c33b881
  0x000000011c33b86a: mov    %rsi,0x158(%rbx)
  0x000000011c33b871: movq   $0x1,0x160(%rbx)
  0x000000011c33b87c: jmpq   0x000000011c33b889
  0x000000011c33b881: addq   $0x1,0x140(%rbx)
  0x000000011c33b889: mov    %rdi,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x000000011c33b88c: mov    %rdi,0x68(%rsp)
  0x000000011c33b891: nop
  0x000000011c33b892: nop
  0x000000011c33b893: nop
  0x000000011c33b894: nop
  0x000000011c33b895: movabs $0xffffffffffffffff,%rax
  0x000000011c33b89f: callq  0x000000011c24c2e0  ; OopMap{[96]=Oop [104]=Oop off=804}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {virtual_call}
  0x000000011c33b8a4: mov    %rax,%rdx
  0x000000011c33b8a7: shr    $0x10,%edx
  0x000000011c33b8aa: xor    %rax,%rdx
  0x000000011c33b8ad: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x000000011c33b8b0: mov    0x68(%rsp),%rdi
  0x000000011c33b8b5: mov    0x60(%rsp),%rbx
  0x000000011c33b8ba: mov    %rbx,%rdx
  0x000000011c33b8bd: movabs $0x112610118,%rcx  ;   {metadata(method data for {method} {0x000000011242cb58} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x000000011c33b8c7: mov    0x8(%rdx),%edx
  0x000000011c33b8ca: shl    $0x3,%rdx
  0x000000011c33b8ce: cmp    0x1b0(%rcx),%rdx
  0x000000011c33b8d5: jne    0x000000011c33b8e4
  0x000000011c33b8d7: addq   $0x1,0x1b8(%rcx)
  0x000000011c33b8df: jmpq   0x000000011c33b94a
  0x000000011c33b8e4: cmp    0x1c0(%rcx),%rdx
  0x000000011c33b8eb: jne    0x000000011c33b8fa
  0x000000011c33b8ed: addq   $0x1,0x1c8(%rcx)
  0x000000011c33b8f5: jmpq   0x000000011c33b94a
  0x000000011c33b8fa: cmpq   $0x0,0x1b0(%rcx)
  0x000000011c33b905: jne    0x000000011c33b91e
  0x000000011c33b907: mov    %rdx,0x1b0(%rcx)
  0x000000011c33b90e: movq   $0x1,0x1b8(%rcx)
  0x000000011c33b919: jmpq   0x000000011c33b94a
  0x000000011c33b91e: cmpq   $0x0,0x1c0(%rcx)
  0x000000011c33b929: jne    0x000000011c33b942
  0x000000011c33b92b: mov    %rdx,0x1c0(%rcx)
  0x000000011c33b932: movq   $0x1,0x1c8(%rcx)
  0x000000011c33b93d: jmpq   0x000000011c33b94a
  0x000000011c33b942: addq   $0x1,0x1a8(%rcx)
  0x000000011c33b94a: mov    %rsi,%rdx
  0x000000011c33b94d: mov    %rdi,%rcx
  0x000000011c33b950: movabs $0x0,%r8           ;   {oop(NULL)}
  0x000000011c33b95a: mov    $0x0,%r9d
  0x000000011c33b960: mov    $0x1,%edi
  0x000000011c33b965: mov    %rbx,%rsi          ;*invokevirtual removeNode
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@35 (line 301)

  0x000000011c33b968: nop
  0x000000011c33b969: nop
  0x000000011c33b96a: nop
  0x000000011c33b96b: nop
  0x000000011c33b96c: nop
  0x000000011c33b96d: nop
  0x000000011c33b96e: nop
  0x000000011c33b96f: callq  0x000000011c24c0a0  ; OopMap{off=1012}
                                                ;*invokevirtual removeNode
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@35 (line 301)
                                                ;   {optimized virtual_call}
  0x000000011c33b974: add    $0x80,%rsp
  0x000000011c33b97b: pop    %rbp
  0x000000011c33b97c: test   %eax,-0xf854882(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33b982: retq   
  0x000000011c33b983: mov    %rdi,0x8(%rsp)
  0x000000011c33b988: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33b990: callq  0x000000011c306120  ; OopMap{rsi=Oop off=1045}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@-1 (line 299)
                                                ;   {runtime_call}
  0x000000011c33b995: jmpq   0x000000011c33b5e1
  0x000000011c33b99a: callq  0x000000011c301ac0  ; OopMap{[96]=Oop off=1055}
                                                ;*getfield key
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@22 (line 300)
                                                ;   {runtime_call}
  0x000000011c33b99f: mov    %rsi,0x8(%rsp)
  0x000000011c33b9a4: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33b9ac: callq  0x000000011c306120  ; OopMap{[96]=Oop rdi=Oop off=1073}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {runtime_call}
  0x000000011c33b9b1: jmpq   0x000000011c33b79d
  0x000000011c33b9b6: callq  0x000000011c301ac0  ; OopMap{[96]=Oop rdi=Oop off=1083}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {runtime_call}
  0x000000011c33b9bb: nop
  0x000000011c33b9bc: nop
  0x000000011c33b9bd: mov    0x2a8(%r15),%rax
  0x000000011c33b9c4: movabs $0x0,%r10
  0x000000011c33b9ce: mov    %r10,0x2a8(%r15)
  0x000000011c33b9d5: movabs $0x0,%r10
  0x000000011c33b9df: mov    %r10,0x2b0(%r15)
  0x000000011c33b9e6: add    $0x80,%rsp
  0x000000011c33b9ed: pop    %rbp
  0x000000011c33b9ee: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33b9f3: hlt    
  0x000000011c33b9f4: hlt    
  0x000000011c33b9f5: hlt    
  0x000000011c33b9f6: hlt    
  0x000000011c33b9f7: hlt    
  0x000000011c33b9f8: hlt    
  0x000000011c33b9f9: hlt    
  0x000000011c33b9fa: hlt    
  0x000000011c33b9fb: hlt    
  0x000000011c33b9fc: hlt    
  0x000000011c33b9fd: hlt    
  0x000000011c33b9fe: hlt    
  0x000000011c33b9ff: hlt    
[Stub Code]
  0x000000011c33ba00: nop                       ;   {no_reloc}
  0x000000011c33ba01: nop
  0x000000011c33ba02: nop
  0x000000011c33ba03: nop
  0x000000011c33ba04: nop
  0x000000011c33ba05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33ba0f: jmpq   0x000000011c33ba0f  ;   {runtime_call}
  0x000000011c33ba14: nop
  0x000000011c33ba15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33ba1f: jmpq   0x000000011c33ba1f  ;   {runtime_call}
  0x000000011c33ba24: nop
  0x000000011c33ba25: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33ba2f: jmpq   0x000000011c33ba2f  ;   {runtime_call}
[Exception Handler]
  0x000000011c33ba34: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c33ba39: mov    %rsp,-0x28(%rsp)
  0x000000011c33ba3e: sub    $0x80,%rsp
  0x000000011c33ba45: mov    %rax,0x78(%rsp)
  0x000000011c33ba4a: mov    %rcx,0x70(%rsp)
  0x000000011c33ba4f: mov    %rdx,0x68(%rsp)
  0x000000011c33ba54: mov    %rbx,0x60(%rsp)
  0x000000011c33ba59: mov    %rbp,0x50(%rsp)
  0x000000011c33ba5e: mov    %rsi,0x48(%rsp)
  0x000000011c33ba63: mov    %rdi,0x40(%rsp)
  0x000000011c33ba68: mov    %r8,0x38(%rsp)
  0x000000011c33ba6d: mov    %r9,0x30(%rsp)
  0x000000011c33ba72: mov    %r10,0x28(%rsp)
  0x000000011c33ba77: mov    %r11,0x20(%rsp)
  0x000000011c33ba7c: mov    %r12,0x18(%rsp)
  0x000000011c33ba81: mov    %r13,0x10(%rsp)
  0x000000011c33ba86: mov    %r14,0x8(%rsp)
  0x000000011c33ba8b: mov    %r15,(%rsp)
  0x000000011c33ba8f: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33ba99: movabs $0x11c33ba39,%rsi  ;   {internal_word}
  0x000000011c33baa3: mov    %rsp,%rdx
  0x000000011c33baa6: and    $0xfffffffffffffff0,%rsp
  0x000000011c33baaa: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33baaf: hlt    
[Deopt Handler Code]
  0x000000011c33bab0: movabs $0x11c33bab0,%r10  ;   {section_word}
  0x000000011c33baba: push   %r10
  0x000000011c33babc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33bac1: hlt    
  0x000000011c33bac2: hlt    
  0x000000011c33bac3: hlt    
  0x000000011c33bac4: hlt    
  0x000000011c33bac5: hlt    
  0x000000011c33bac6: hlt    
  0x000000011c33bac7: hlt    
<nmethod compile_id='76' compiler='C1' level='3' entry='0x000000011c33b580' size='2368' address='0x000000011c33b3d0' relocation_offset='296' insts_offset='432' stub_offset='1584' scopes_data_offset='1800' scopes_pcs_offset='2000' dependencies_offset='2336' nul_chk_table_offset='2344' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='648' iicount='648' stamp='1.416'/>
Decoding compiled method 0x000000011c33b0d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000112486c20} &apos;getRef&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/Parts&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000011c33b220: mov    0x8(%rsi),%r10d
  0x000000011c33b224: shl    $0x3,%r10
  0x000000011c33b228: cmp    %rax,%r10
  0x000000011c33b22b: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33b231: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33b23c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33b240: mov    %eax,-0x14000(%rsp)
  0x000000011c33b247: push   %rbp
  0x000000011c33b248: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.Parts::getRef@0 (line 1452)

  0x000000011c33b24c: mov    0x14(%rsi),%eax
  0x000000011c33b24f: shl    $0x3,%rax          ;*getfield ref
                                                ; - java.net.Parts::getRef@1 (line 1452)

  0x000000011c33b253: add    $0x30,%rsp
  0x000000011c33b257: pop    %rbp
  0x000000011c33b258: test   %eax,-0xf85415e(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33b25e: retq   
  0x000000011c33b25f: nop
  0x000000011c33b260: nop
  0x000000011c33b261: mov    0x2a8(%r15),%rax
  0x000000011c33b268: movabs $0x0,%r10
  0x000000011c33b272: mov    %r10,0x2a8(%r15)
  0x000000011c33b279: movabs $0x0,%r10
  0x000000011c33b283: mov    %r10,0x2b0(%r15)
  0x000000011c33b28a: add    $0x30,%rsp
  0x000000011c33b28e: pop    %rbp
  0x000000011c33b28f: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33b294: hlt    
  0x000000011c33b295: hlt    
  0x000000011c33b296: hlt    
  0x000000011c33b297: hlt    
  0x000000011c33b298: hlt    
  0x000000011c33b299: hlt    
  0x000000011c33b29a: hlt    
  0x000000011c33b29b: hlt    
  0x000000011c33b29c: hlt    
  0x000000011c33b29d: hlt    
  0x000000011c33b29e: hlt    
  0x000000011c33b29f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011c33b2a0: callq  0x000000011c303960  ;   {no_reloc}
  0x000000011c33b2a5: mov    %rsp,-0x28(%rsp)
  0x000000011c33b2aa: sub    $0x80,%rsp
  0x000000011c33b2b1: mov    %rax,0x78(%rsp)
  0x000000011c33b2b6: mov    %rcx,0x70(%rsp)
  0x000000011c33b2bb: mov    %rdx,0x68(%rsp)
  0x000000011c33b2c0: mov    %rbx,0x60(%rsp)
  0x000000011c33b2c5: mov    %rbp,0x50(%rsp)
  0x000000011c33b2ca: mov    %rsi,0x48(%rsp)
  0x000000011c33b2cf: mov    %rdi,0x40(%rsp)
  0x000000011c33b2d4: mov    %r8,0x38(%rsp)
  0x000000011c33b2d9: mov    %r9,0x30(%rsp)
  0x000000011c33b2de: mov    %r10,0x28(%rsp)
  0x000000011c33b2e3: mov    %r11,0x20(%rsp)
  0x000000011c33b2e8: mov    %r12,0x18(%rsp)
  0x000000011c33b2ed: mov    %r13,0x10(%rsp)
  0x000000011c33b2f2: mov    %r14,0x8(%rsp)
  0x000000011c33b2f7: mov    %r15,(%rsp)
  0x000000011c33b2fb: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33b305: movabs $0x11c33b2a5,%rsi  ;   {internal_word}
  0x000000011c33b30f: mov    %rsp,%rdx
  0x000000011c33b312: and    $0xfffffffffffffff0,%rsp
  0x000000011c33b316: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33b31b: hlt    
[Deopt Handler Code]
  0x000000011c33b31c: movabs $0x11c33b31c,%r10  ;   {section_word}
  0x000000011c33b326: push   %r10
  0x000000011c33b328: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33b32d: hlt    
  0x000000011c33b32e: hlt    
  0x000000011c33b32f: hlt    
<nmethod compile_id='63' compiler='C1' level='1' entry='0x000000011c33b220' size='704' address='0x000000011c33b0d0' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/Parts getRef ()Ljava/lang/String;' bytes='5' count='133' iicount='133' stamp='1.418'/>
<writer thread='9475'/>
<task_queued compile_id='80' method='java/lang/String lastIndexOf (I)I' bytes='13' count='384' iicount='384' level='3' stamp='2.253' comment='tiered' hot_count='384'/>
<writer thread='21763'/>
Decoding compiled method 0x000000011c33ac50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001122c5300} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011c33adc0: mov    0x8(%rsi),%r10d
  0x000000011c33adc4: shl    $0x3,%r10
  0x000000011c33adc8: cmp    %rax,%r10
  0x000000011c33adcb: jne    0x000000011c24be60  ;   {runtime_call}
  0x000000011c33add1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011c33addc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011c33ade0: mov    %eax,-0x14000(%rsp)
  0x000000011c33ade7: push   %rbp
  0x000000011c33ade8: sub    $0x30,%rsp
  0x000000011c33adec: movabs $0x1126117b0,%rcx  ;   {metadata(method data for {method} {0x00000001122c5300} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c33adf6: mov    0xdc(%rcx),%edi
  0x000000011c33adfc: add    $0x8,%edi
  0x000000011c33adff: mov    %edi,0xdc(%rcx)
  0x000000011c33ae05: movabs $0x1122c5300,%rcx  ;   {metadata({method} {0x00000001122c5300} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c33ae0f: and    $0x1ff8,%edi
  0x000000011c33ae15: cmp    $0x0,%edi
  0x000000011c33ae18: je     0x000000011c33aed0  ;*aload_0
                                                ; - java.lang.String::lastIndexOf@0 (line 1611)

  0x000000011c33ae1e: mov    0xc(%rsi),%ecx
  0x000000011c33ae21: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@3 (line 1611)

  0x000000011c33ae25: mov    0xc(%rcx),%ecx     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ; implicit exception: dispatches to 0x000000011c33aee7
  0x000000011c33ae28: mov    %rsi,%rdi
  0x000000011c33ae2b: movabs $0x1126117b0,%rbx  ;   {metadata(method data for {method} {0x00000001122c5300} &apos;lastIndexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x000000011c33ae35: mov    0x8(%rdi),%edi
  0x000000011c33ae38: shl    $0x3,%rdi
  0x000000011c33ae3c: cmp    0x110(%rbx),%rdi
  0x000000011c33ae43: jne    0x000000011c33ae52
  0x000000011c33ae45: addq   $0x1,0x118(%rbx)
  0x000000011c33ae4d: jmpq   0x000000011c33aeb8
  0x000000011c33ae52: cmp    0x120(%rbx),%rdi
  0x000000011c33ae59: jne    0x000000011c33ae68
  0x000000011c33ae5b: addq   $0x1,0x128(%rbx)
  0x000000011c33ae63: jmpq   0x000000011c33aeb8
  0x000000011c33ae68: cmpq   $0x0,0x110(%rbx)
  0x000000011c33ae73: jne    0x000000011c33ae8c
  0x000000011c33ae75: mov    %rdi,0x110(%rbx)
  0x000000011c33ae7c: movq   $0x1,0x118(%rbx)
  0x000000011c33ae87: jmpq   0x000000011c33aeb8
  0x000000011c33ae8c: cmpq   $0x0,0x120(%rbx)
  0x000000011c33ae97: jne    0x000000011c33aeb0
  0x000000011c33ae99: mov    %rdi,0x120(%rbx)
  0x000000011c33aea0: movq   $0x1,0x128(%rbx)
  0x000000011c33aeab: jmpq   0x000000011c33aeb8
  0x000000011c33aeb0: addq   $0x1,0x108(%rbx)
  0x000000011c33aeb8: dec    %ecx
  0x000000011c33aeba: nop
  0x000000011c33aebb: nop
  0x000000011c33aebc: nop
  0x000000011c33aebd: nop
  0x000000011c33aebe: nop
  0x000000011c33aebf: callq  0x000000011c24c0a0  ; OopMap{off=260}
                                                ;*invokevirtual lastIndexOf
                                                ; - java.lang.String::lastIndexOf@9 (line 1611)
                                                ;   {optimized virtual_call}
  0x000000011c33aec4: add    $0x30,%rsp
  0x000000011c33aec8: pop    %rbp
  0x000000011c33aec9: test   %eax,-0xf853dcf(%rip)        # 0x000000010cae7100
                                                ;   {poll_return}
  0x000000011c33aecf: retq   
  0x000000011c33aed0: mov    %rcx,0x8(%rsp)
  0x000000011c33aed5: movq   $0xffffffffffffffff,(%rsp)
  0x000000011c33aedd: callq  0x000000011c306120  ; OopMap{rsi=Oop off=290}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1611)
                                                ;   {runtime_call}
  0x000000011c33aee2: jmpq   0x000000011c33ae1e
  0x000000011c33aee7: callq  0x000000011c301ac0  ; OopMap{rsi=Oop off=300}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@6 (line 1611)
                                                ;   {runtime_call}
  0x000000011c33aeec: nop
  0x000000011c33aeed: nop
  0x000000011c33aeee: mov    0x2a8(%r15),%rax
  0x000000011c33aef5: movabs $0x0,%r10
  0x000000011c33aeff: mov    %r10,0x2a8(%r15)
  0x000000011c33af06: movabs $0x0,%r10
  0x000000011c33af10: mov    %r10,0x2b0(%r15)
  0x000000011c33af17: add    $0x30,%rsp
  0x000000011c33af1b: pop    %rbp
  0x000000011c33af1c: jmpq   0x000000011c274520  ;   {runtime_call}
  0x000000011c33af21: hlt    
  0x000000011c33af22: hlt    
  0x000000011c33af23: hlt    
  0x000000011c33af24: hlt    
  0x000000011c33af25: hlt    
  0x000000011c33af26: hlt    
  0x000000011c33af27: hlt    
  0x000000011c33af28: hlt    
  0x000000011c33af29: hlt    
  0x000000011c33af2a: hlt    
  0x000000011c33af2b: hlt    
  0x000000011c33af2c: hlt    
  0x000000011c33af2d: hlt    
  0x000000011c33af2e: hlt    
  0x000000011c33af2f: hlt    
  0x000000011c33af30: hlt    
  0x000000011c33af31: hlt    
  0x000000011c33af32: hlt    
  0x000000011c33af33: hlt    
  0x000000011c33af34: hlt    
  0x000000011c33af35: hlt    
  0x000000011c33af36: hlt    
  0x000000011c33af37: hlt    
  0x000000011c33af38: hlt    
  0x000000011c33af39: hlt    
  0x000000011c33af3a: hlt    
  0x000000011c33af3b: hlt    
  0x000000011c33af3c: hlt    
  0x000000011c33af3d: hlt    
  0x000000011c33af3e: hlt    
  0x000000011c33af3f: hlt    
[Stub Code]
  0x000000011c33af40: nop                       ;   {no_reloc}
  0x000000011c33af41: nop
  0x000000011c33af42: nop
  0x000000011c33af43: nop
  0x000000011c33af44: nop
  0x000000011c33af45: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011c33af4f: jmpq   0x000000011c33af4f  ;   {runtime_call}
[Exception Handler]
  0x000000011c33af54: callq  0x000000011c303960  ;   {runtime_call}
  0x000000011c33af59: mov    %rsp,-0x28(%rsp)
  0x000000011c33af5e: sub    $0x80,%rsp
  0x000000011c33af65: mov    %rax,0x78(%rsp)
  0x000000011c33af6a: mov    %rcx,0x70(%rsp)
  0x000000011c33af6f: mov    %rdx,0x68(%rsp)
  0x000000011c33af74: mov    %rbx,0x60(%rsp)
  0x000000011c33af79: mov    %rbp,0x50(%rsp)
  0x000000011c33af7e: mov    %rsi,0x48(%rsp)
  0x000000011c33af83: mov    %rdi,0x40(%rsp)
  0x000000011c33af88: mov    %r8,0x38(%rsp)
  0x000000011c33af8d: mov    %r9,0x30(%rsp)
  0x000000011c33af92: mov    %r10,0x28(%rsp)
  0x000000011c33af97: mov    %r11,0x20(%rsp)
  0x000000011c33af9c: mov    %r12,0x18(%rsp)
  0x000000011c33afa1: mov    %r13,0x10(%rsp)
  0x000000011c33afa6: mov    %r14,0x8(%rsp)
  0x000000011c33afab: mov    %r15,(%rsp)
  0x000000011c33afaf: movabs $0x10e9dd410,%rdi  ;   {external_word}
  0x000000011c33afb9: movabs $0x11c33af59,%rsi  ;   {internal_word}
  0x000000011c33afc3: mov    %rsp,%rdx
  0x000000011c33afc6: and    $0xfffffffffffffff0,%rsp
  0x000000011c33afca: callq  0x000000010e806396  ;   {runtime_call}
  0x000000011c33afcf: hlt    
[Deopt Handler Code]
  0x000000011c33afd0: movabs $0x11c33afd0,%r10  ;   {section_word}
  0x000000011c33afda: push   %r10
  0x000000011c33afdc: jmpq   0x000000011c24d500  ;   {runtime_call}
  0x000000011c33afe1: hlt    
  0x000000011c33afe2: hlt    
  0x000000011c33afe3: hlt    
  0x000000011c33afe4: hlt    
  0x000000011c33afe5: hlt    
  0x000000011c33afe6: hlt    
  0x000000011c33afe7: hlt    
<nmethod compile_id='80' compiler='C1' level='3' entry='0x000000011c33adc0' size='1128' address='0x000000011c33ac50' relocation_offset='296' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='976' dependencies_offset='1104' nul_chk_table_offset='1112' method='java/lang/String lastIndexOf (I)I' bytes='13' count='384' iicount='384' stamp='2.256'/>
<tty_done stamp='11.975'/>
</tty>
<compilation_log thread='15619'>
<start_compile_thread name='C2 CompilerThread2' thread='15619' process='16173' stamp='0.114'/>
<task compile_id='42' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='5671' iicount='5672' stamp='1.169'>
<phase name='parse' nodes='3' live='3' stamp='1.169'>
<klass id='834' name='[B' flags='1041'/>
<klass id='842' name='java/io/BufferedInputStream' flags='1'/>
<method id='843' holder='842' name='getBufIfOpen' return='834' flags='2' bytes='21' compile_id='33' compiler='C1' level='3' iicount='5711'/>
<klass id='845' name='java/io/IOException' flags='1'/>
<uncommon_trap method='843' bci='9' reason='unloaded' action='reinterpret' index='2' klass='845'/>
<parse method='843' uses='5711' stamp='1.169'>
<bc code='199' bci='6'/>
<branch target_bci='19' taken='5709' not_taken='0' cnt='5709' prob='always'/>
<uncommon_trap bci='6' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='46' live='44' memory='26144' stamp='1.169'/>
</parse>
<phase_done name='parse' nodes='47' live='28' stamp='1.169'/>
</phase>
<phase name='optimizer' nodes='47' live='28' stamp='1.169'>
<phase name='ccp' nodes='47' live='28' stamp='1.169'>
<phase_done name='ccp' nodes='47' live='28' stamp='1.169'/>
</phase>
<phase name='idealLoop' nodes='47' live='28' stamp='1.169'>
<phase_done name='idealLoop' nodes='47' live='28' stamp='1.169'/>
</phase>
<phase_done name='optimizer' nodes='50' live='28' stamp='1.169'/>
</phase>
<phase name='matcher' nodes='50' live='28' stamp='1.169'>
<phase_done name='matcher' nodes='29' live='29' stamp='1.169'/>
</phase>
<phase name='regalloc' nodes='34' live='34' stamp='1.169'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='33' stamp='1.169'/>
</phase>
<phase name='output' nodes='36' live='33' stamp='1.169'>
<phase_done name='output' nodes='45' live='41' stamp='1.169'/>
</phase>
<code_cache total_blobs='287' nmethods='32' adapters='169' free_code_cache='250470784'/>
<task_done success='1' nmsize='120' count='6696' stamp='1.170'/>
</task>
<task compile_id='78' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='5509' iicount='5511' stamp='1.365'>
<phase name='parse' nodes='3' live='3' stamp='1.365'>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='726' name='char'/>
<method id='842' holder='803' name='append' return='803' arguments='726' flags='1' bytes='29' compile_id='45' compiler='C1' level='3' iicount='5547'/>
<parse method='842' uses='5547' stamp='1.365'>
<bc code='183' bci='7'/>
<type id='733' name='void'/>
<type id='731' name='int'/>
<method id='844' holder='803' name='ensureCapacityInternal' return='733' arguments='731' flags='2' bytes='27' compile_id='27' compiler='C1' level='3' iicount='6981'/>
<call method='844' count='5272' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='5545' stamp='1.365'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6670' not_taken='334' cnt='7004' prob='0.952313'/>
<bc code='183' bci='17'/>
<method id='845' holder='803' name='newCapacity' return='731' arguments='731' flags='2' bytes='39' iicount='576'/>
<call method='845' count='334' prof_factor='0.794299' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='265' stamp='1.366'>
<bc code='183' bci='31'/>
<method id='849' holder='803' name='hugeCapacity' return='731' arguments='731' flags='2' bytes='28' iicount='1'/>
<call method='849' count='-1' prof_factor='0.460069' inline='1'/>
<klass id='761' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='849' bci='7' reason='unloaded' action='reinterpret' index='12' klass='761'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='147' live='145' memory='44832' stamp='1.366'/>
</parse>
<bc code='184' bci='20'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='846' name='java/util/Arrays' flags='1'/>
<method id='847' holder='846' name='copyOf' return='831' arguments='831 731' flags='9' bytes='19' iicount='607'/>
<call method='847' count='334' prof_factor='0.794299' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='265' stamp='1.366'>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='11'/>
<klass id='851' name='java/lang/Math' flags='17'/>
<method id='852' holder='851' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='4546'/>
<call method='852' count='-1' prof_factor='0.436573' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='853' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='853' count='-1' prof_factor='0.436573' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='338' live='334' memory='84440' stamp='1.366'/>
</parse>
<parse_done nodes='365' live='360' memory='89720' stamp='1.376'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='414' live='406' memory='98384' stamp='1.376'/>
</parse>
<phase_done name='parse' nodes='416' live='259' stamp='1.376'/>
</phase>
<phase name='optimizer' nodes='416' live='259' stamp='1.376'>
<phase name='escapeAnalysis' nodes='420' live='255' stamp='1.376'>
<phase name='connectionGraph' nodes='421' live='256' stamp='1.376'>
<phase_done name='connectionGraph' nodes='421' live='256' stamp='1.377'/>
</phase>
<phase_done name='escapeAnalysis' nodes='421' live='256' stamp='1.377'/>
</phase>
<phase name='ccp' nodes='421' live='256' stamp='1.377'>
<phase_done name='ccp' nodes='421' live='256' stamp='1.377'/>
</phase>
<phase name='idealLoop' nodes='421' live='255' stamp='1.377'>
<phase_done name='idealLoop' nodes='439' live='246' stamp='1.377'/>
</phase>
<phase name='idealLoop' nodes='439' live='246' stamp='1.377'>
<phase_done name='idealLoop' nodes='445' live='246' stamp='1.377'/>
</phase>
<phase_done name='optimizer' nodes='504' live='285' stamp='1.377'/>
</phase>
<phase name='matcher' nodes='504' live='285' stamp='1.377'>
<phase_done name='matcher' nodes='283' live='283' stamp='1.377'/>
</phase>
<phase name='regalloc' nodes='352' live='351' stamp='1.378'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='461' live='425' stamp='1.379'/>
</phase>
<phase name='output' nodes='461' live='425' stamp='1.379'>
<phase_done name='output' nodes='481' live='438' stamp='1.380'/>
</phase>
<code_cache total_blobs='329' nmethods='69' adapters='173' free_code_cache='250386112'/>
<task_done success='1' nmsize='872' count='7785' inlined_bytes='96' stamp='1.389'/>
</task>
</compilation_log>
<compilation_log thread='21763'>
<start_compile_thread name='C1 CompilerThread3' thread='21763' process='16173' stamp='0.114'/>
<task compile_id='1' method='java/lang/Math min (II)I' bytes='11' count='2949' iicount='2949' level='3' stamp='0.115'>
<phase name='buildIR' stamp='0.115'>
<type id='731' name='int'/>
<klass id='842' name='java/lang/Math' flags='17'/>
<method id='843' holder='842' name='min' return='731' arguments='731 731' flags='9' bytes='11' iicount='2949'/>
<parse method='843'  stamp='0.115'>
<parse_done stamp='0.115'/>
</parse>
<phase name='optimize_blocks' stamp='0.115'>
<phase_done name='optimize_blocks' stamp='0.115'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.115'>
<phase_done name='rangeCheckElimination' stamp='0.115'/>
</phase>
<phase name='optimize_null_checks' stamp='0.115'>
<phase_done name='optimize_null_checks' stamp='0.115'/>
</phase>
<phase_done name='buildIR' stamp='0.115'/>
</phase>
<phase name='emit_lir' stamp='0.115'>
<phase name='lirGeneration' stamp='0.115'>
<phase_done name='lirGeneration' stamp='0.115'/>
</phase>
<phase name='linearScan' stamp='0.115'>
<phase_done name='linearScan' stamp='0.115'/>
</phase>
<phase_done name='emit_lir' stamp='0.115'/>
</phase>
<phase name='codeemit' stamp='0.115'>
<phase_done name='codeemit' stamp='0.115'/>
</phase>
<phase name='codeinstall' stamp='0.115'>
<phase_done name='codeinstall' stamp='0.120'/>
</phase>
<code_cache total_blobs='221' nmethods='1' adapters='146' free_code_cache='250598208'/>
<task_done success='1' nmsize='400' count='2963' stamp='0.120'/>
</task>
<task compile_id='2' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='478' backedge_count='29850' iicount='478' level='3' stamp='0.120'>
<phase name='buildIR' stamp='0.120'>
<type id='731' name='int'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='834' name='[B' flags='1041'/>
<klass id='842' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='843' holder='842' name='encode' return='731' arguments='831 731 731 834' flags='1' bytes='359' iicount='478'/>
<parse method='843'  stamp='0.120'>
<bc code='184' bci='14'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='2963'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.120'/>
</parse>
<bc code='184' bci='139'/>
<type id='725' name='boolean'/>
<type id='726' name='char'/>
<klass id='820' name='java/lang/Character' flags='17'/>
<method id='848' holder='820' name='isSurrogate' return='725' arguments='726' flags='9' bytes='18' iicount='22'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='0.120'/>
</parse>
<bc code='183' bci='157'/>
<type id='733' name='void'/>
<klass id='850' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<method id='851' holder='850' name='&lt;init&gt;' return='733' unloaded='1'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='175'/>
<method id='852' holder='850' name='parse' return='731' arguments='726 831 731 731' unloaded='1'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='186'/>
<klass id='854' name='java/nio/charset/CodingErrorAction' flags='1'/>
<klass id='853' name='java/nio/charset/CharsetEncoder' flags='1025'/>
<method id='855' holder='853' name='malformedInputAction' return='854' flags='1' bytes='5' iicount='1'/>
<call method='855' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<parse_done stamp='0.120'/>
</parse>
<parse_done stamp='0.121'/>
</parse>
<phase name='optimize_blocks' stamp='0.121'>
<phase_done name='optimize_blocks' stamp='0.121'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.121'>
<phase_done name='rangeCheckElimination' stamp='0.121'/>
</phase>
<phase name='optimize_null_checks' stamp='0.121'>
<phase_done name='optimize_null_checks' stamp='0.121'/>
</phase>
<phase_done name='buildIR' stamp='0.121'/>
</phase>
<phase name='emit_lir' stamp='0.121'>
<phase name='lirGeneration' stamp='0.121'>
<phase_done name='lirGeneration' stamp='0.121'/>
</phase>
<phase name='linearScan' stamp='0.121'>
<phase_done name='linearScan' stamp='0.121'/>
</phase>
<phase_done name='emit_lir' stamp='0.121'/>
</phase>
<phase name='codeemit' stamp='0.121'>
<phase_done name='codeemit' stamp='0.121'/>
</phase>
<phase name='codeinstall' stamp='0.121'>
<phase_done name='codeinstall' stamp='0.145'/>
</phase>
<code_cache total_blobs='231' nmethods='2' adapters='149' free_code_cache='250557888'/>
<task_done success='1' nmsize='2872' count='478' backedge_count='29850' inlined_bytes='34' stamp='0.145'/>
</task>
<task compile_id='5' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1085' backedge_count='4368' iicount='1085' level='3' stamp='0.145'>
<phase name='buildIR' stamp='0.145'>
<type id='725' name='boolean'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='equals' return='725' arguments='738' flags='1' bytes='81' iicount='1085'/>
<parse method='842'  stamp='0.145'>
<parse_done stamp='0.145'/>
</parse>
<phase name='optimize_blocks' stamp='0.145'>
<phase_done name='optimize_blocks' stamp='0.145'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.145'>
<phase_done name='rangeCheckElimination' stamp='0.145'/>
</phase>
<phase name='optimize_null_checks' stamp='0.145'>
<phase_done name='optimize_null_checks' stamp='0.145'/>
</phase>
<phase_done name='buildIR' stamp='0.145'/>
</phase>
<phase name='emit_lir' stamp='0.145'>
<phase name='lirGeneration' stamp='0.145'>
<phase_done name='lirGeneration' stamp='0.145'/>
</phase>
<phase name='linearScan' stamp='0.145'>
<phase_done name='linearScan' stamp='0.146'/>
</phase>
<phase_done name='emit_lir' stamp='0.146'/>
</phase>
<phase name='codeemit' stamp='0.146'>
<phase_done name='codeemit' stamp='0.146'/>
</phase>
<phase name='codeinstall' stamp='0.146'>
<phase_done name='codeinstall' stamp='0.156'/>
</phase>
<code_cache total_blobs='236' nmethods='3' adapters='150' free_code_cache='250554368'/>
<task_done success='1' nmsize='1360' count='1092' backedge_count='4393' stamp='0.156'/>
</task>
<task compile_id='4' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='538' iicount='538' level='3' stamp='0.156'>
<phase name='buildIR' stamp='0.156'>
<klass id='750' name='java/lang/SecurityManager' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='842' holder='744' name='getSecurityManager' return='750' flags='9' bytes='4' iicount='538'/>
<parse method='842'  stamp='0.156'>
<parse_done stamp='0.156'/>
</parse>
<phase name='optimize_blocks' stamp='0.156'>
<phase_done name='optimize_blocks' stamp='0.156'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.156'>
<phase_done name='rangeCheckElimination' stamp='0.156'/>
</phase>
<phase name='optimize_null_checks' stamp='0.156'>
<phase_done name='optimize_null_checks' stamp='0.156'/>
</phase>
<phase_done name='buildIR' stamp='0.156'/>
</phase>
<phase name='emit_lir' stamp='0.156'>
<phase name='lirGeneration' stamp='0.156'>
<phase_done name='lirGeneration' stamp='0.156'/>
</phase>
<phase name='linearScan' stamp='0.156'>
<phase_done name='linearScan' stamp='0.156'/>
</phase>
<phase_done name='emit_lir' stamp='0.156'/>
</phase>
<phase name='codeemit' stamp='0.156'>
<phase_done name='codeemit' stamp='0.156'/>
</phase>
<phase name='codeinstall' stamp='0.156'>
<phase_done name='codeinstall' stamp='0.159'/>
</phase>
<code_cache total_blobs='237' nmethods='4' adapters='150' free_code_cache='250553344'/>
<task_done success='1' nmsize='336' count='541' stamp='0.159'/>
</task>
<task compile_id='7' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4480' iicount='4480' level='3' stamp='0.159'>
<phase name='buildIR' stamp='0.159'>
<type id='733' name='void'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<method id='842' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' iicount='4480'/>
<parse method='842'  stamp='0.159'>
<parse_done stamp='0.159'/>
</parse>
<phase name='optimize_blocks' stamp='0.159'>
<phase_done name='optimize_blocks' stamp='0.159'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.159'>
<phase_done name='rangeCheckElimination' stamp='0.159'/>
</phase>
<phase name='optimize_null_checks' stamp='0.159'>
<phase_done name='optimize_null_checks' stamp='0.159'/>
</phase>
<phase_done name='buildIR' stamp='0.159'/>
</phase>
<phase name='emit_lir' stamp='0.159'>
<phase name='lirGeneration' stamp='0.159'>
<phase_done name='lirGeneration' stamp='0.159'/>
</phase>
<phase name='linearScan' stamp='0.159'>
<phase_done name='linearScan' stamp='0.159'/>
</phase>
<phase_done name='emit_lir' stamp='0.159'/>
</phase>
<phase name='codeemit' stamp='0.159'>
<phase_done name='codeemit' stamp='0.159'/>
</phase>
<phase name='codeinstall' stamp='0.159'>
<phase_done name='codeinstall' stamp='0.161'/>
</phase>
<code_cache total_blobs='240' nmethods='5' adapters='150' free_code_cache='250545792'/>
<task_done success='1' nmsize='336' count='4491' stamp='0.161'/>
</task>
<task compile_id='10' method='java/lang/String length ()I' bytes='6' count='2432' iicount='2432' level='3' stamp='0.161'>
<phase name='buildIR' stamp='0.161'>
<type id='731' name='int'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='length' return='731' flags='1' bytes='6' iicount='2432'/>
<parse method='842'  stamp='0.161'>
<parse_done stamp='0.161'/>
</parse>
<phase name='optimize_blocks' stamp='0.161'>
<phase_done name='optimize_blocks' stamp='0.161'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.161'>
<phase_done name='rangeCheckElimination' stamp='0.161'/>
</phase>
<phase name='optimize_null_checks' stamp='0.161'>
<phase_done name='optimize_null_checks' stamp='0.161'/>
</phase>
<phase_done name='buildIR' stamp='0.161'/>
</phase>
<phase name='emit_lir' stamp='0.161'>
<phase name='lirGeneration' stamp='0.161'>
<phase_done name='lirGeneration' stamp='0.161'/>
</phase>
<phase name='linearScan' stamp='0.161'>
<phase_done name='linearScan' stamp='0.161'/>
</phase>
<phase_done name='emit_lir' stamp='0.161'/>
</phase>
<phase name='codeemit' stamp='0.161'>
<phase_done name='codeemit' stamp='0.161'/>
</phase>
<phase name='codeinstall' stamp='0.161'>
<phase_done name='codeinstall' stamp='0.165'/>
</phase>
<code_cache total_blobs='241' nmethods='7' adapters='150' free_code_cache='250555136'/>
<task_done success='1' nmsize='368' count='2509' stamp='0.165'/>
</task>
<task compile_id='8' method='java/lang/String getBytes (Ljava/lang/String;)[B' bytes='27' count='257' iicount='257' level='3' stamp='0.165'>
<phase name='buildIR' stamp='0.168'>
<klass id='834' name='[B' flags='1041'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='getBytes' return='834' arguments='739' flags='1' bytes='27' iicount='257'/>
<parse method='842'  stamp='0.168'>
<bc code='183' bci='8'/>
<type id='733' name='void'/>
<klass id='838' name='java/lang/NullPointerException' flags='1'/>
<method id='844' holder='838' name='&lt;init&gt;' return='733' flags='1' bytes='5' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='23'/>
<klass id='831' name='[C' flags='1041'/>
<type id='731' name='int'/>
<klass id='846' name='java/lang/StringCoding' flags='0'/>
<method id='847' holder='846' name='encode' return='834' arguments='739 831 731 731' flags='8' bytes='120' iicount='258'/>
<call method='847' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.168'/>
</parse>
<phase name='optimize_blocks' stamp='0.168'>
<phase_done name='optimize_blocks' stamp='0.168'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.168'>
<phase_done name='rangeCheckElimination' stamp='0.168'/>
</phase>
<phase name='optimize_null_checks' stamp='0.168'>
<phase_done name='optimize_null_checks' stamp='0.168'/>
</phase>
<phase_done name='buildIR' stamp='0.168'/>
</phase>
<phase name='emit_lir' stamp='0.168'>
<phase name='lirGeneration' stamp='0.168'>
<phase_done name='lirGeneration' stamp='0.168'/>
</phase>
<phase name='linearScan' stamp='0.168'>
<phase_done name='linearScan' stamp='0.168'/>
</phase>
<phase_done name='emit_lir' stamp='0.168'/>
</phase>
<phase name='codeemit' stamp='0.168'>
<phase_done name='codeemit' stamp='0.168'/>
</phase>
<phase name='codeinstall' stamp='0.168'>
<phase_done name='codeinstall' stamp='0.174'/>
</phase>
<code_cache total_blobs='244' nmethods='8' adapters='151' free_code_cache='250552896'/>
<task_done success='1' nmsize='664' count='260' stamp='0.174'/>
</task>
<task compile_id='12' method='java/io/UnixFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='75' count='235' backedge_count='17418' iicount='235' level='3' stamp='0.174'>
<phase name='buildIR' stamp='0.174'>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='842' name='java/io/UnixFileSystem' flags='0'/>
<method id='843' holder='842' name='normalize' return='739' arguments='739' flags='1' bytes='75' iicount='235'/>
<parse method='843'  stamp='0.174'>
<bc code='182' bci='1'/>
<type id='731' name='int'/>
<method id='845' holder='739' name='length' return='731' flags='1' bytes='6' compile_id='10' compiler='C1' level='3' iicount='2518'/>
<call method='845' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='0.174'/>
</parse>
<bc code='182' bci='19'/>
<type id='726' name='char'/>
<method id='847' holder='739' name='charAt' return='726' arguments='731' flags='1' bytes='29' iicount='21148'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='18'/>
<type id='733' name='void'/>
<klass id='849' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='850' holder='849' name='&lt;init&gt;' return='733' arguments='731' unloaded='1'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.174'/>
</parse>
<bc code='183' bci='44'/>
<method id='851' holder='842' name='normalize' return='739' arguments='739 731 731' flags='2' bytes='132' iicount='1'/>
<call method='851' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='69'/>
<call method='851' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.174'/>
</parse>
<phase name='optimize_blocks' stamp='0.174'>
<phase_done name='optimize_blocks' stamp='0.175'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.175'>
<phase_done name='rangeCheckElimination' stamp='0.175'/>
</phase>
<phase name='optimize_null_checks' stamp='0.175'>
<phase_done name='optimize_null_checks' stamp='0.175'/>
</phase>
<phase_done name='buildIR' stamp='0.175'/>
</phase>
<phase name='emit_lir' stamp='0.175'>
<phase name='lirGeneration' stamp='0.175'>
<phase_done name='lirGeneration' stamp='0.175'/>
</phase>
<phase name='linearScan' stamp='0.175'>
<phase_done name='linearScan' stamp='0.175'/>
</phase>
<phase_done name='emit_lir' stamp='0.175'/>
</phase>
<phase name='codeemit' stamp='0.175'>
<phase_done name='codeemit' stamp='0.175'/>
</phase>
<phase name='codeinstall' stamp='0.175'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='0.188'/>
</phase>
<code_cache total_blobs='250' nmethods='9' adapters='154' free_code_cache='250537408'/>
<task_done success='1' nmsize='1640' count='237' backedge_count='17502' inlined_bytes='35' stamp='0.188'/>
</task>
<task compile_id='13' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='902' iicount='902' level='3' stamp='0.188'>
<phase name='buildIR' stamp='0.188'>
<type id='733' name='void'/>
<klass id='831' name='[C' flags='1041'/>
<type id='731' name='int'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='&lt;init&gt;' return='733' arguments='831 731 731' flags='1' bytes='82' iicount='902'/>
<parse method='842'  stamp='0.188'>
<bc code='183' bci='1'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<method id='844' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='7' compiler='C1' level='3' iicount='4537'/>
<call method='844' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<parse_done stamp='0.188'/>
</parse>
<bc code='183' bci='13'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='847' holder='846' name='&lt;init&gt;' return='733' arguments='731' unloaded='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='849' name='java/util/Arrays' flags='1'/>
<method id='850' holder='849' name='copyOfRange' return='831' arguments='831 731 731' flags='9' bytes='63' iicount='963'/>
<call method='850' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.196'/>
</parse>
<phase name='optimize_blocks' stamp='0.196'>
<phase_done name='optimize_blocks' stamp='0.196'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.196'>
<phase_done name='rangeCheckElimination' stamp='0.196'/>
</phase>
<phase name='optimize_null_checks' stamp='0.196'>
<phase_done name='optimize_null_checks' stamp='0.196'/>
</phase>
<phase_done name='buildIR' stamp='0.196'/>
</phase>
<phase name='emit_lir' stamp='0.196'>
<phase name='lirGeneration' stamp='0.196'>
<phase_done name='lirGeneration' stamp='0.196'/>
</phase>
<phase name='linearScan' stamp='0.196'>
<phase_done name='linearScan' stamp='0.196'/>
</phase>
<phase_done name='emit_lir' stamp='0.196'/>
</phase>
<phase name='codeemit' stamp='0.196'>
<phase_done name='codeemit' stamp='0.196'/>
</phase>
<phase name='codeinstall' stamp='0.196'>
<phase_done name='codeinstall' stamp='0.206'/>
</phase>
<code_cache total_blobs='253' nmethods='12' adapters='156' free_code_cache='250542080'/>
<task_done success='1' nmsize='1272' count='915' inlined_bytes='1' stamp='0.206'/>
</task>
<task compile_id='16' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='842' backedge_count='2677' iicount='842' level='3' stamp='0.206'>
<phase name='buildIR' stamp='0.206'>
<type id='725' name='boolean'/>
<klass id='739' name='java/lang/String' flags='17'/>
<type id='731' name='int'/>
<method id='842' holder='739' name='startsWith' return='725' arguments='739 731' flags='1' bytes='72' iicount='842'/>
<parse method='842'  stamp='0.206'>
<parse_done stamp='0.206'/>
</parse>
<phase name='optimize_blocks' stamp='0.206'>
<phase_done name='optimize_blocks' stamp='0.206'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.206'>
<phase_done name='rangeCheckElimination' stamp='0.206'/>
</phase>
<phase name='optimize_null_checks' stamp='0.206'>
<phase_done name='optimize_null_checks' stamp='0.206'/>
</phase>
<phase_done name='buildIR' stamp='0.206'/>
</phase>
<phase name='emit_lir' stamp='0.206'>
<phase name='lirGeneration' stamp='0.206'>
<phase_done name='lirGeneration' stamp='0.206'/>
</phase>
<phase name='linearScan' stamp='0.206'>
<phase_done name='linearScan' stamp='0.206'/>
</phase>
<phase_done name='emit_lir' stamp='0.206'/>
</phase>
<phase name='codeemit' stamp='0.206'>
<phase_done name='codeemit' stamp='0.206'/>
</phase>
<phase name='codeinstall' stamp='0.206'>
<phase_done name='codeinstall' stamp='0.212'/>
</phase>
<code_cache total_blobs='255' nmethods='13' adapters='156' free_code_cache='250534848'/>
<task_done success='1' nmsize='816' count='845' backedge_count='2678' stamp='0.212'/>
</task>
<task compile_id='21' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='4612' iicount='4612' level='1' stamp='0.212'>
<phase name='buildIR' stamp='0.212'>
<type id='733' name='void'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<method id='842' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='7' compiler='C1' level='3' iicount='4612'/>
<parse method='842'  stamp='0.212'>
<parse_done stamp='0.212'/>
</parse>
<phase name='optimize_blocks' stamp='0.212'>
<phase_done name='optimize_blocks' stamp='0.212'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.212'>
<phase_done name='rangeCheckElimination' stamp='0.212'/>
</phase>
<phase name='optimize_null_checks' stamp='0.212'>
<phase_done name='optimize_null_checks' stamp='0.212'/>
</phase>
<phase_done name='buildIR' stamp='0.212'/>
</phase>
<phase name='emit_lir' stamp='0.212'>
<phase name='lirGeneration' stamp='0.212'>
<phase_done name='lirGeneration' stamp='0.212'/>
</phase>
<phase name='linearScan' stamp='0.212'>
<phase_done name='linearScan' stamp='0.212'/>
</phase>
<phase_done name='emit_lir' stamp='0.212'/>
</phase>
<phase name='codeemit' stamp='0.212'>
<phase_done name='codeemit' stamp='0.212'/>
</phase>
<phase name='codeinstall' stamp='0.212'>
<phase_done name='codeinstall' stamp='0.218'/>
</phase>
<code_cache total_blobs='256' nmethods='15' adapters='156' free_code_cache='250537664'/>
<task_done success='1' nmsize='272' count='4632' stamp='0.218'/>
</task>
<task compile_id='17' method='java/util/BitSet get (I)Z' bytes='69' count='384' iicount='384' level='3' stamp='0.218'>
<phase name='buildIR' stamp='0.218'>
<type id='725' name='boolean'/>
<type id='731' name='int'/>
<klass id='842' name='java/util/BitSet' flags='1'/>
<method id='843' holder='842' name='get' return='725' arguments='731' flags='1' bytes='69' iicount='384'/>
<parse method='843'  stamp='0.218'>
<bc code='183' bci='12'/>
<type id='733' name='void'/>
<klass id='805' name='java/lang/StringBuilder' flags='17'/>
<method id='846' holder='805' name='&lt;init&gt;' return='733' flags='1' bytes='7' iicount='308'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='3'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='848' holder='803' name='&lt;init&gt;' return='733' arguments='731' flags='0' bytes='12' iicount='377'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<method id='850' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='4632'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.218'/>
</parse>
<parse_done stamp='0.218'/>
</parse>
<parse_done stamp='0.218'/>
</parse>
<bc code='182' bci='17'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='853' holder='805' name='append' return='805' arguments='739' flags='1' bytes='8' iicount='699'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<method id='855' holder='803' name='append' return='803' arguments='739' flags='1' bytes='50' iicount='888'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.218'/>
</parse>
<bc code='182' bci='21'/>
<method id='857' holder='805' name='append' return='805' arguments='731' flags='1' bytes='8' iicount='1'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<method id='859' holder='803' name='append' return='803' arguments='731' flags='1' bytes='62' iicount='1'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.218'/>
</parse>
<bc code='182' bci='24'/>
<method id='861' holder='805' name='toString' return='739' flags='1' bytes='17' iicount='314'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='13'/>
<klass id='831' name='[C' flags='1041'/>
<method id='863' holder='739' name='&lt;init&gt;' return='733' arguments='831 731 731' flags='1' bytes='82' compile_id='13' compiler='C1' level='3' iicount='926'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.218'/>
</parse>
<bc code='183' bci='27'/>
<klass id='845' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='865' holder='845' name='&lt;init&gt;' return='733' arguments='739' unloaded='1'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='32'/>
<method id='866' holder='842' name='checkInvariants' return='733' flags='2' bytes='111' iicount='435'/>
<call method='866' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='36'/>
<method id='868' holder='842' name='wordIndex' return='731' arguments='731' flags='10' bytes='5' iicount='436'/>
<call method='868' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<parse_done stamp='0.219'/>
</parse>
<parse_done stamp='0.219'/>
</parse>
<phase name='optimize_blocks' stamp='0.219'>
<phase_done name='optimize_blocks' stamp='0.219'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.219'>
<phase_done name='rangeCheckElimination' stamp='0.219'/>
</phase>
<phase name='optimize_null_checks' stamp='0.219'>
<phase_done name='optimize_null_checks' stamp='0.219'/>
</phase>
<phase_done name='buildIR' stamp='0.219'/>
</phase>
<phase name='emit_lir' stamp='0.219'>
<phase name='lirGeneration' stamp='0.219'>
<phase_done name='lirGeneration' stamp='0.219'/>
</phase>
<phase name='linearScan' stamp='0.219'>
<phase_done name='linearScan' stamp='0.219'/>
</phase>
<phase_done name='emit_lir' stamp='0.219'/>
</phase>
<phase name='codeemit' stamp='0.219'>
<phase_done name='codeemit' stamp='0.219'/>
</phase>
<phase name='codeinstall' stamp='0.219'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='0.230'/>
</phase>
<code_cache total_blobs='257' nmethods='16' adapters='156' free_code_cache='250533312'/>
<task_done success='1' nmsize='2440' count='384' inlined_bytes='58' stamp='0.230'/>
</task>
<task compile_id='15' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='657' iicount='657' level='3' stamp='0.230'>
<phase name='buildIR' stamp='0.230'>
<type id='725' name='boolean'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='startsWith' return='725' arguments='739' flags='1' bytes='7' iicount='658'/>
<parse method='842'  stamp='0.230'>
<bc code='182' bci='3'/>
<type id='731' name='int'/>
<method id='844' holder='739' name='startsWith' return='725' arguments='739 731' flags='1' bytes='72' compile_id='16' compiler='C1' level='3' iicount='953'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.230'/>
</parse>
<phase name='optimize_blocks' stamp='0.230'>
<phase_done name='optimize_blocks' stamp='0.230'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.230'>
<phase_done name='rangeCheckElimination' stamp='0.230'/>
</phase>
<phase name='optimize_null_checks' stamp='0.230'>
<phase_done name='optimize_null_checks' stamp='0.230'/>
</phase>
<phase_done name='buildIR' stamp='0.230'/>
</phase>
<phase name='emit_lir' stamp='0.230'>
<phase name='lirGeneration' stamp='0.230'>
<phase_done name='lirGeneration' stamp='0.230'/>
</phase>
<phase name='linearScan' stamp='0.230'>
<phase_done name='linearScan' stamp='0.230'/>
</phase>
<phase_done name='emit_lir' stamp='0.230'/>
</phase>
<phase name='codeemit' stamp='0.230'>
<phase_done name='codeemit' stamp='0.230'/>
</phase>
<phase name='codeinstall' stamp='0.230'>
<phase_done name='codeinstall' stamp='0.233'/>
</phase>
<code_cache total_blobs='261' nmethods='17' adapters='159' free_code_cache='250530496'/>
<task_done success='1' nmsize='520' count='663' stamp='0.233'/>
</task>
<task compile_id='27' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='1290' iicount='1290' level='3' stamp='0.233'>
<phase name='buildIR' stamp='0.233'>
<type id='733' name='void'/>
<type id='731' name='int'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='842' holder='803' name='ensureCapacityInternal' return='733' arguments='731' flags='2' bytes='27' iicount='1290'/>
<parse method='842'  stamp='0.233'>
<bc code='183' bci='17'/>
<method id='844' holder='803' name='newCapacity' return='731' arguments='731' flags='2' bytes='39' iicount='465'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='846' name='java/util/Arrays' flags='1'/>
<method id='847' holder='846' name='copyOf' return='831' arguments='831 731' flags='9' bytes='19' iicount='491'/>
<call method='847' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='184' bci='11'/>
<klass id='849' name='java/lang/Math' flags='17'/>
<method id='850' holder='849' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='3237'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.233'/>
</parse>
<bc code='184' bci='14'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='852' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='852' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.233'/>
</parse>
<parse_done stamp='0.233'/>
</parse>
<phase name='optimize_blocks' stamp='0.233'>
<phase_done name='optimize_blocks' stamp='0.233'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.233'>
<phase_done name='rangeCheckElimination' stamp='0.233'/>
</phase>
<phase name='optimize_null_checks' stamp='0.233'>
<phase_done name='optimize_null_checks' stamp='0.233'/>
</phase>
<phase_done name='buildIR' stamp='0.233'/>
</phase>
<phase name='emit_lir' stamp='0.233'>
<phase name='lirGeneration' stamp='0.233'>
<phase_done name='lirGeneration' stamp='0.233'/>
</phase>
<phase name='linearScan' stamp='0.233'>
<phase_done name='linearScan' stamp='0.233'/>
</phase>
<phase_done name='emit_lir' stamp='0.233'/>
</phase>
<phase name='codeemit' stamp='0.233'>
<phase_done name='codeemit' stamp='0.234'/>
</phase>
<phase name='codeinstall' stamp='0.234'>
<phase_done name='codeinstall' stamp='0.241'/>
</phase>
<code_cache total_blobs='266' nmethods='18' adapters='163' free_code_cache='250526272'/>
<task_done success='1' nmsize='1144' count='1294' inlined_bytes='30' stamp='0.242'/>
</task>
<task compile_id='29' method='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo access$000 (Lcom/jep/github/interview/concurrency/threadDemo/VisibilityDemo;)Z' bytes='5' count='135592' iicount='135597' level='1' stamp='0.242'>
<phase name='buildIR' stamp='0.242'>
<type id='725' name='boolean'/>
<klass id='842' name='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo' flags='1'/>
<method id='843' holder='842' name='access$000' return='725' arguments='842' flags='4104' bytes='5' iicount='135907'/>
<parse method='843'  stamp='0.242'>
<parse_done stamp='0.242'/>
</parse>
<phase name='optimize_blocks' stamp='0.242'>
<phase_done name='optimize_blocks' stamp='0.242'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.242'>
<phase_done name='rangeCheckElimination' stamp='0.242'/>
</phase>
<phase name='optimize_null_checks' stamp='0.242'>
<phase_done name='optimize_null_checks' stamp='0.242'/>
</phase>
<phase_done name='buildIR' stamp='0.242'/>
</phase>
<phase name='emit_lir' stamp='0.242'>
<phase name='lirGeneration' stamp='0.242'>
<phase_done name='lirGeneration' stamp='0.242'/>
</phase>
<phase name='linearScan' stamp='0.242'>
<phase_done name='linearScan' stamp='0.242'/>
</phase>
<phase_done name='emit_lir' stamp='0.242'/>
</phase>
<phase name='codeemit' stamp='0.242'>
<phase_done name='codeemit' stamp='0.242'/>
</phase>
<phase name='codeinstall' stamp='0.242'>
<phase_done name='codeinstall' stamp='0.244'/>
</phase>
<code_cache total_blobs='267' nmethods='19' adapters='163' free_code_cache='250525504'/>
<task_done success='1' nmsize='240' count='161792' stamp='0.244'/>
</task>
<task compile_id='28' method='java/lang/String indexOf (I)I' bytes='7' count='944' iicount='944' level='3' stamp='0.244'>
<phase name='buildIR' stamp='0.244'>
<type id='731' name='int'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='indexOf' return='731' arguments='731' flags='1' bytes='7' iicount='944'/>
<parse method='842'  stamp='0.244'>
<bc code='182' bci='3'/>
<method id='844' holder='739' name='indexOf' return='731' arguments='731 731' flags='1' bytes='70' compile_id='18' compiler='C2' level='4' iicount='834'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.244'/>
</parse>
<phase name='optimize_blocks' stamp='0.244'>
<phase_done name='optimize_blocks' stamp='0.244'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.244'>
<phase_done name='rangeCheckElimination' stamp='0.244'/>
</phase>
<phase name='optimize_null_checks' stamp='0.244'>
<phase_done name='optimize_null_checks' stamp='0.244'/>
</phase>
<phase_done name='buildIR' stamp='0.244'/>
</phase>
<phase name='emit_lir' stamp='0.244'>
<phase name='lirGeneration' stamp='0.244'>
<phase_done name='lirGeneration' stamp='0.244'/>
</phase>
<phase name='linearScan' stamp='0.244'>
<phase_done name='linearScan' stamp='0.244'/>
</phase>
<phase_done name='emit_lir' stamp='0.244'/>
</phase>
<phase name='codeemit' stamp='0.244'>
<phase_done name='codeemit' stamp='0.244'/>
</phase>
<phase name='codeinstall' stamp='0.244'>
<phase_done name='codeinstall' stamp='0.247'/>
</phase>
<code_cache total_blobs='269' nmethods='20' adapters='163' free_code_cache='250519040'/>
<task_done success='1' nmsize='520' count='944' stamp='0.247'/>
</task>
<task compile_id='26' method='java/util/ArrayList size ()I' bytes='5' count='392' iicount='392' level='1' stamp='0.247'>
<phase name='buildIR' stamp='0.247'>
<type id='731' name='int'/>
<klass id='842' name='java/util/ArrayList' flags='1'/>
<method id='843' holder='842' name='size' return='731' flags='1' bytes='5' iicount='392'/>
<parse method='843'  stamp='0.247'>
<parse_done stamp='0.247'/>
</parse>
<phase name='optimize_blocks' stamp='0.247'>
<phase_done name='optimize_blocks' stamp='0.247'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.247'>
<phase_done name='rangeCheckElimination' stamp='0.247'/>
</phase>
<phase name='optimize_null_checks' stamp='0.247'>
<phase_done name='optimize_null_checks' stamp='0.247'/>
</phase>
<phase_done name='buildIR' stamp='0.247'/>
</phase>
<phase name='emit_lir' stamp='0.247'>
<phase name='lirGeneration' stamp='0.247'>
<phase_done name='lirGeneration' stamp='0.247'/>
</phase>
<phase name='linearScan' stamp='0.247'>
<phase_done name='linearScan' stamp='0.247'/>
</phase>
<phase_done name='emit_lir' stamp='0.247'/>
</phase>
<phase name='codeemit' stamp='0.247'>
<phase_done name='codeemit' stamp='0.247'/>
</phase>
<phase name='codeinstall' stamp='0.247'>
<phase_done name='codeinstall' stamp='0.252'/>
</phase>
<code_cache total_blobs='270' nmethods='22' adapters='163' free_code_cache='250522816'/>
<task_done success='1' nmsize='272' count='392' stamp='0.252'/>
</task>
<task compile_id='24' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='916' iicount='916' level='3' stamp='0.252'>
<phase name='buildIR' stamp='0.252'>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='803' name='append' return='803' arguments='739' flags='1' bytes='50' iicount='916'/>
<parse method='842'  stamp='0.252'>
<bc code='183' bci='5'/>
<method id='844' holder='803' name='appendNull' return='803' flags='2' bytes='56' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='731' name='int'/>
<method id='846' holder='739' name='length' return='731' flags='1' bytes='6' compile_id='10' compiler='C1' level='3' iicount='2681'/>
<call method='846' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.252'/>
</parse>
<bc code='183' bci='21'/>
<type id='733' name='void'/>
<method id='848' holder='803' name='ensureCapacityInternal' return='733' arguments='731' flags='2' bytes='27' compile_id='27' compiler='C1' level='3' iicount='1294'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='17'/>
<method id='850' holder='803' name='newCapacity' return='731' arguments='731' flags='2' bytes='39' iicount='465'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='831' arguments='831 731' flags='9' bytes='19' iicount='491'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='184' bci='11'/>
<klass id='855' name='java/lang/Math' flags='17'/>
<method id='856' holder='855' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='3247'/>
<call method='856' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<parse_done stamp='0.252'/>
</parse>
<bc code='184' bci='14'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='858' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.252'/>
</parse>
<parse_done stamp='0.252'/>
</parse>
<bc code='182' bci='35'/>
<method id='860' holder='739' name='getChars' return='733' arguments='731 731 831 731' flags='1' bytes='62' iicount='916'/>
<call method='860' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.252'/>
</parse>
<phase name='optimize_blocks' stamp='0.252'>
<phase_done name='optimize_blocks' stamp='0.252'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.252'>
<phase_done name='rangeCheckElimination' stamp='0.252'/>
</phase>
<phase name='optimize_null_checks' stamp='0.252'>
<phase_done name='optimize_null_checks' stamp='0.252'/>
</phase>
<phase_done name='buildIR' stamp='0.252'/>
</phase>
<phase name='emit_lir' stamp='0.252'>
<phase name='lirGeneration' stamp='0.252'>
<phase_done name='lirGeneration' stamp='0.252'/>
</phase>
<phase name='linearScan' stamp='0.252'>
<phase_done name='linearScan' stamp='0.253'/>
</phase>
<phase_done name='emit_lir' stamp='0.253'/>
</phase>
<phase name='codeemit' stamp='0.253'>
<phase_done name='codeemit' stamp='0.253'/>
</phase>
<phase name='codeinstall' stamp='0.253'>
<phase_done name='codeinstall' stamp='0.266'/>
</phase>
<code_cache total_blobs='271' nmethods='23' adapters='163' free_code_cache='250519296'/>
<task_done success='1' nmsize='1880' count='916' inlined_bytes='63' stamp='0.266'/>
</task>
<task compile_id='25' method='java/lang/String getChars (II[CI)V' bytes='62' count='916' iicount='916' level='3' stamp='0.266'>
<phase name='buildIR' stamp='0.266'>
<type id='733' name='void'/>
<type id='731' name='int'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='getChars' return='733' arguments='731 731 831 731' flags='1' bytes='62' iicount='916'/>
<parse method='842'  stamp='0.266'>
<bc code='183' bci='9'/>
<klass id='844' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='845' holder='844' name='&lt;init&gt;' return='733' arguments='731' unloaded='1'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='846' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.266'/>
</parse>
<phase name='optimize_blocks' stamp='0.266'>
<phase_done name='optimize_blocks' stamp='0.266'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.266'>
<phase_done name='rangeCheckElimination' stamp='0.266'/>
</phase>
<phase name='optimize_null_checks' stamp='0.266'>
<phase_done name='optimize_null_checks' stamp='0.266'/>
</phase>
<phase_done name='buildIR' stamp='0.266'/>
</phase>
<phase name='emit_lir' stamp='0.266'>
<phase name='lirGeneration' stamp='0.266'>
<phase_done name='lirGeneration' stamp='0.266'/>
</phase>
<phase name='linearScan' stamp='0.266'>
<phase_done name='linearScan' stamp='0.266'/>
</phase>
<phase_done name='emit_lir' stamp='0.266'/>
</phase>
<phase name='codeemit' stamp='0.266'>
<phase_done name='codeemit' stamp='0.266'/>
</phase>
<phase name='codeinstall' stamp='0.266'>
<phase_done name='codeinstall' stamp='0.273'/>
</phase>
<code_cache total_blobs='272' nmethods='24' adapters='163' free_code_cache='250516992'/>
<task_done success='1' nmsize='1080' count='918' stamp='0.273'/>
</task>
<task compile_id='31' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='1024' iicount='1024' level='3' stamp='0.273'>
<phase name='buildIR' stamp='0.273'>
<klass id='831' name='[C' flags='1041'/>
<type id='731' name='int'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOfRange' return='831' arguments='831 731 731' flags='9' bytes='63' iicount='1024'/>
<parse method='843'  stamp='0.273'>
<bc code='183' bci='16'/>
<type id='733' name='void'/>
<klass id='805' name='java/lang/StringBuilder' flags='17'/>
<method id='846' holder='805' name='&lt;init&gt;' return='733' flags='1' bytes='7' iicount='320'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='3'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='848' holder='803' name='&lt;init&gt;' return='733' arguments='731' flags='0' bytes='12' iicount='390'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<method id='850' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='4674'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='0.273'/>
</parse>
<parse_done stamp='0.273'/>
</parse>
<parse_done stamp='0.273'/>
</parse>
<bc code='182' bci='20'/>
<method id='852' holder='805' name='append' return='805' arguments='731' flags='1' bytes='8' iicount='7'/>
<call method='852' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='183' bci='2'/>
<method id='854' holder='803' name='append' return='803' arguments='731' flags='1' bytes='62' iicount='7'/>
<call method='854' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.273'/>
</parse>
<bc code='182' bci='25'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='857' holder='805' name='append' return='805' arguments='739' flags='1' bytes='8' iicount='726'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<method id='859' holder='803' name='append' return='803' arguments='739' flags='1' bytes='50' compile_id='24' compiler='C1' level='3' iicount='918'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.273'/>
</parse>
<bc code='182' bci='29'/>
<call method='852' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<bc code='183' bci='2'/>
<call method='854' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.273'/>
</parse>
<bc code='182' bci='32'/>
<method id='861' holder='805' name='toString' return='739' flags='1' bytes='17' iicount='323'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='13'/>
<method id='863' holder='739' name='&lt;init&gt;' return='733' arguments='831 731 731' flags='1' bytes='82' compile_id='13' compiler='C1' level='3' iicount='963'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.273'/>
</parse>
<bc code='183' bci='35'/>
<klass id='845' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='865' holder='845' name='&lt;init&gt;' return='733' arguments='739' flags='1' bytes='6' iicount='1'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='867' name='java/lang/Math' flags='17'/>
<method id='868' holder='867' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='3258'/>
<call method='868' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<parse_done stamp='0.273'/>
</parse>
<bc code='184' bci='57'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='870' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='870' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.273'/>
</parse>
<phase name='optimize_blocks' stamp='0.273'>
<phase_done name='optimize_blocks' stamp='0.273'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.273'>
<phase_done name='rangeCheckElimination' stamp='0.273'/>
</phase>
<phase name='optimize_null_checks' stamp='0.273'>
<phase_done name='optimize_null_checks' stamp='0.273'/>
</phase>
<phase_done name='buildIR' stamp='0.273'/>
</phase>
<phase name='emit_lir' stamp='0.273'>
<phase name='lirGeneration' stamp='0.273'>
<phase_done name='lirGeneration' stamp='0.273'/>
</phase>
<phase name='linearScan' stamp='0.273'>
<phase_done name='linearScan' stamp='0.273'/>
</phase>
<phase_done name='emit_lir' stamp='0.273'/>
</phase>
<phase name='codeemit' stamp='0.273'>
<phase_done name='codeemit' stamp='0.273'/>
</phase>
<phase name='codeinstall' stamp='0.273'>
<phase_done name='codeinstall' stamp='0.289'/>
</phase>
<code_cache total_blobs='273' nmethods='25' adapters='163' free_code_cache='250512064'/>
<task_done success='1' nmsize='2872' count='1024' inlined_bytes='72' stamp='0.289'/>
</task>
<task compile_id='23' method='java/net/URL getAuthority ()Ljava/lang/String;' bytes='5' count='264' iicount='264' level='1' stamp='0.289'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='264' stamp='0.289'/>
</task>
<task compile_id='20' method='java/net/URL getPath ()Ljava/lang/String;' bytes='5' count='268' iicount='268' level='1' stamp='0.289'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='268' stamp='0.289'/>
</task>
<task compile_id='19' method='java/net/URL getHost ()Ljava/lang/String;' bytes='5' count='141' iicount='141' level='1' stamp='0.289'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='141' stamp='0.289'/>
</task>
<task compile_id='9' method='java/lang/StringCoding encode (Ljava/lang/String;[CII)[B' bytes='120' count='272' iicount='272' level='3' stamp='0.289'>
<phase name='buildIR' stamp='0.289'>
<klass id='834' name='[B' flags='1041'/>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='831' name='[C' flags='1041'/>
<type id='731' name='int'/>
<klass id='842' name='java/lang/StringCoding' flags='0'/>
<method id='843' holder='842' name='encode' return='834' arguments='739 831 731 731' flags='8' bytes='120' iicount='272'/>
<parse method='843'  stamp='0.289'>
<bc code='184' bci='3'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='846' name='java/lang/ThreadLocal' flags='1'/>
<method id='849' holder='842' name='deref' return='738' arguments='846' flags='10' bytes='19' iicount='340'/>
<call method='849' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='182' bci='1'/>
<method id='851' holder='846' name='get' return='738' flags='1' bytes='38' iicount='344'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='846'/>
<bc code='182' bci='15'/>
<klass id='765' name='java/lang/ref/SoftReference' flags='1'/>
<method id='853' holder='765' name='get' return='738' flags='1' bytes='29' iicount='354'/>
<call method='853' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='765' x='853'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='1'/>
<klass id='764' name='java/lang/ref/Reference' flags='1025'/>
<method id='855' holder='764' name='get' return='738' flags='1' bytes='5' iicount='742'/>
<call method='855' instr='invokespecial'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.289'/>
</parse>
<parse_done stamp='0.289'/>
</parse>
<bc code='192' bci='6'/>
<klass id='845' name='java/lang/StringCoding$StringEncoder' flags='10'/>
<dependency type='leaf_type' ctxk='845'/>
<bc code='182' bci='32'/>
<method id='859' holder='845' name='requestedCharsetName' return='739' flags='16' bytes='5' iicount='270'/>
<call method='859' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='845'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<parse_done stamp='0.289'/>
</parse>
<bc code='182' bci='35'/>
<type id='725' name='boolean'/>
<method id='861' holder='739' name='equals' return='725' arguments='738' flags='1' bytes='81' compile_id='5' compiler='C1' level='3' iicount='1172'/>
<call method='861' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='45'/>
<method id='863' holder='845' name='charsetName' return='739' flags='0' bytes='31' iicount='1'/>
<call method='863' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='845'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='845'/>
<parse method='863'>
<bc code='185' bci='17'/>
<klass id='866' name='sun/nio/cs/HistoricallyNamedCharset' flags='1537'/>
<method id='867' holder='866' name='historicalName' return='739' flags='1025' bytes='0' iicount='1'/>
<call method='867' instr='invokeinterface'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='27'/>
<klass id='865' name='java/nio/charset/Charset' flags='1025'/>
<method id='868' holder='865' name='name' return='739' flags='17' bytes='5' iicount='82'/>
<call method='868' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='868'>
<parse_done stamp='0.289'/>
</parse>
<parse_done stamp='0.289'/>
</parse>
<bc code='182' bci='48'/>
<call method='861' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='59'/>
<method id='870' holder='842' name='lookupCharset' return='865' arguments='739' flags='10' bytes='24' iicount='3'/>
<call method='870' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='870'>
<bc code='184' bci='1'/>
<method id='872' holder='865' name='isSupported' return='725' arguments='739' flags='9' bytes='13' iicount='10'/>
<call method='872' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='872'>
<bc code='184' bci='1'/>
<method id='874' holder='865' name='lookup' return='865' arguments='739' flags='10' bytes='44' iicount='26'/>
<call method='874' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.289'/>
</parse>
<bc code='184' bci='8'/>
<method id='876' holder='865' name='forName' return='865' arguments='739' flags='9' bytes='20' iicount='15'/>
<call method='876' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='876'>
<bc code='184' bci='1'/>
<call method='874' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='16'/>
<type id='733' name='void'/>
<klass id='878' name='java/nio/charset/UnsupportedCharsetException' unloaded='1'/>
<method id='879' holder='878' name='&lt;init&gt;' return='733' arguments='739' unloaded='1'/>
<call method='879' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.289'/>
</parse>
<bc code='183' bci='18'/>
<klass id='745' name='java/lang/Throwable' flags='1'/>
<klass id='746' name='java/lang/Error' flags='1'/>
<method id='880' holder='746' name='&lt;init&gt;' return='733' arguments='745' flags='1' bytes='6' iicount='1'/>
<call method='880' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='0.290'/>
</parse>
<bc code='183' bci='78'/>
<klass id='882' name='java/lang/StringCoding$1' unloaded='1'/>
<method id='883' holder='845' name='&lt;init&gt;' return='733' arguments='865 739 882' flags='4096' bytes='7' iicount='2'/>
<call method='883' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='883'>
<bc code='183' bci='3'/>
<method id='885' holder='845' name='&lt;init&gt;' return='733' arguments='865 739' flags='2' bytes='54' iicount='2'/>
<call method='885' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.290'/>
</parse>
<bc code='183' bci='99'/>
<klass id='887' name='java/io/UnsupportedEncodingException' unloaded='1'/>
<method id='888' holder='887' name='&lt;init&gt;' return='733' arguments='739' unloaded='1'/>
<call method='888' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='108'/>
<method id='889' holder='842' name='set' return='733' arguments='846 738' flags='10' bytes='13' iicount='3'/>
<call method='889' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='889'>
<bc code='183' bci='6'/>
<method id='891' holder='765' name='&lt;init&gt;' return='733' arguments='738' flags='1' bytes='13' iicount='106'/>
<call method='891' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='891'>
<bc code='183' bci='2'/>
<method id='893' holder='764' name='&lt;init&gt;' return='733' arguments='738' flags='0' bytes='7' iicount='112'/>
<call method='893' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='893'>
<bc code='183' bci='3'/>
<klass id='771' name='java/lang/ref/ReferenceQueue' flags='1'/>
<method id='895' holder='764' name='&lt;init&gt;' return='733' arguments='738 771' flags='0' bytes='25' iicount='344'/>
<call method='895' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.290'/>
</parse>
<parse_done stamp='0.290'/>
</parse>
<bc code='182' bci='9'/>
<method id='897' holder='846' name='set' return='733' arguments='738' flags='1' bytes='30' iicount='4'/>
<call method='897' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='846'/>
<parse method='897'>
<bc code='184' bci='0'/>
<klass id='772' name='java/lang/Thread' flags='1'/>
<method id='899' holder='772' name='currentThread' return='772' flags='265' bytes='0' iicount='372'/>
<call method='899' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='6'/>
<klass id='901' name='java/lang/ThreadLocal$ThreadLocalMap' flags='8'/>
<method id='902' holder='846' name='getMap' return='901' arguments='772' flags='0' bytes='5' iicount='352'/>
<call method='902' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='846'/>
<parse method='902'>
<parse_done stamp='0.290'/>
</parse>
<bc code='184' bci='17'/>
<method id='904' holder='901' name='access$100' return='733' arguments='901 846 738' flags='4104' bytes='7' iicount='6'/>
<call method='904' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='904'>
<bc code='183' bci='3'/>
<method id='906' holder='901' name='set' return='733' arguments='846 738' flags='2' bytes='136' iicount='6'/>
<call method='906' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='901'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.290'/>
</parse>
<bc code='182' bci='26'/>
<method id='908' holder='846' name='createMap' return='733' arguments='772 738' flags='0' bytes='14' iicount='2'/>
<call method='908' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='846'/>
<parse method='908'>
<bc code='183' bci='7'/>
<method id='910' holder='901' name='&lt;init&gt;' return='733' arguments='846 738' flags='0' bytes='53' iicount='2'/>
<call method='910' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.290'/>
</parse>
<parse_done stamp='0.290'/>
</parse>
<parse_done stamp='0.290'/>
</parse>
<bc code='182' bci='116'/>
<method id='912' holder='845' name='encode' return='834' arguments='831 731 731' flags='0' bytes='179' iicount='272'/>
<call method='912' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='845' x='912'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='845'/>
<parse_done stamp='0.290'/>
</parse>
<phase name='optimize_blocks' stamp='0.290'>
<phase_done name='optimize_blocks' stamp='0.290'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.290'>
<phase_done name='rangeCheckElimination' stamp='0.290'/>
</phase>
<phase name='optimize_null_checks' stamp='0.290'>
<phase_done name='optimize_null_checks' stamp='0.290'/>
</phase>
<phase_done name='buildIR' stamp='0.290'/>
</phase>
<phase name='emit_lir' stamp='0.290'>
<phase name='lirGeneration' stamp='0.290'>
<phase_done name='lirGeneration' stamp='0.290'/>
</phase>
<phase name='linearScan' stamp='0.290'>
<phase_done name='linearScan' stamp='0.290'/>
</phase>
<phase_done name='emit_lir' stamp='0.290'/>
</phase>
<phase name='codeemit' stamp='0.290'>
<phase_done name='codeemit' stamp='0.291'/>
</phase>
<phase name='codeinstall' stamp='0.291'>
<dependency type='leaf_type' ctxk='846'/>
<dependency type='leaf_type' ctxk='845'/>
<dependency type='leaf_type' ctxk='901'/>
<dependency type='unique_concrete_method' ctxk='765' x='853'/>
<dependency type='unique_concrete_method' ctxk='845' x='912'/>
<phase_done name='codeinstall' stamp='0.334'/>
</phase>
<code_cache total_blobs='274' nmethods='26' adapters='163' free_code_cache='250500736'/>
<task_done success='1' nmsize='6264' count='272' inlined_bytes='242' stamp='0.334'/>
</task>
<task compile_id='22' method='java/io/File getPrefixLength ()I' bytes='5' count='130' iicount='130' level='1' stamp='0.334'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='130' stamp='0.334'/>
</task>
<task compile_id='14' method='java/lang/StringCoding$StringEncoder requestedCharsetName ()Ljava/lang/String;' bytes='5' count='270' iicount='270' level='1' stamp='0.334'>
<phase name='buildIR' stamp='0.334'>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='842' name='java/lang/StringCoding$StringEncoder' flags='10'/>
<method id='843' holder='842' name='requestedCharsetName' return='739' flags='16' bytes='5' iicount='270'/>
<parse method='843'  stamp='0.334'>
<parse_done stamp='0.334'/>
</parse>
<phase name='optimize_blocks' stamp='0.334'>
<phase_done name='optimize_blocks' stamp='0.334'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.334'>
<phase_done name='rangeCheckElimination' stamp='0.334'/>
</phase>
<phase name='optimize_null_checks' stamp='0.334'>
<phase_done name='optimize_null_checks' stamp='0.334'/>
</phase>
<phase_done name='buildIR' stamp='0.334'/>
</phase>
<phase name='emit_lir' stamp='0.334'>
<phase name='lirGeneration' stamp='0.334'>
<phase_done name='lirGeneration' stamp='0.334'/>
</phase>
<phase name='linearScan' stamp='0.334'>
<phase_done name='linearScan' stamp='0.334'/>
</phase>
<phase_done name='emit_lir' stamp='0.334'/>
</phase>
<phase name='codeemit' stamp='0.334'>
<phase_done name='codeemit' stamp='0.334'/>
</phase>
<phase name='codeinstall' stamp='0.334'>
<phase_done name='codeinstall' stamp='0.337'/>
</phase>
<code_cache total_blobs='275' nmethods='27' adapters='163' free_code_cache='250499968'/>
<task_done success='1' nmsize='272' count='270' stamp='0.337'/>
</task>
<task compile_id='33' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='406' iicount='406' level='3' stamp='1.119'>
<phase name='buildIR' stamp='1.119'>
<klass id='834' name='[B' flags='1041'/>
<klass id='842' name='java/io/BufferedInputStream' flags='1'/>
<method id='843' holder='842' name='getBufIfOpen' return='834' flags='2' bytes='21' iicount='457'/>
<parse method='843'  stamp='1.119'>
<bc code='183' bci='15'/>
<type id='733' name='void'/>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='845' name='java/io/IOException' flags='1'/>
<method id='847' holder='845' name='&lt;init&gt;' return='733' arguments='739' flags='1' bytes='6' iicount='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.119'/>
</parse>
<phase name='optimize_blocks' stamp='1.119'>
<phase_done name='optimize_blocks' stamp='1.119'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.119'>
<phase_done name='rangeCheckElimination' stamp='1.119'/>
</phase>
<phase name='optimize_null_checks' stamp='1.119'>
<phase_done name='optimize_null_checks' stamp='1.119'/>
</phase>
<phase_done name='buildIR' stamp='1.119'/>
</phase>
<phase name='emit_lir' stamp='1.119'>
<phase name='lirGeneration' stamp='1.119'>
<phase_done name='lirGeneration' stamp='1.119'/>
</phase>
<phase name='linearScan' stamp='1.119'>
<phase_done name='linearScan' stamp='1.119'/>
</phase>
<phase_done name='emit_lir' stamp='1.119'/>
</phase>
<phase name='codeemit' stamp='1.119'>
<phase_done name='codeemit' stamp='1.119'/>
</phase>
<phase name='codeinstall' stamp='1.119'>
<phase_done name='codeinstall' stamp='1.122'/>
</phase>
<code_cache total_blobs='283' nmethods='29' adapters='169' free_code_cache='250494400'/>
<task_done success='1' nmsize='584' count='1520' stamp='1.122'/>
</task>
<task compile_id='35' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='374' backedge_count='5846' iicount='374' level='3' stamp='1.122'>
<phase name='buildIR' stamp='1.122'>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='843' name='java/io/DataInput' flags='1537'/>
<klass id='842' name='java/io/DataInputStream' flags='1'/>
<method id='844' holder='842' name='readUTF' return='739' arguments='843' flags='25' bytes='501' iicount='374'/>
<parse method='844'  stamp='1.122'>
<bc code='185' bci='1'/>
<type id='731' name='int'/>
<method id='846' holder='843' name='readUnsignedShort' return='731' flags='1025' bytes='0' iicount='1'/>
<call method='846' instr='invokeinterface'/>
<method id='847' holder='842' name='readUnsignedShort' return='731' flags='17' bytes='39' iicount='374'/>
<dependency type='unique_concrete_method' ctxk='843' x='847'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='842'/>
<bc code='193' bci='12'/>
<dependency type='leaf_type' ctxk='842'/>
<bc code='192' bci='19'/>
<dependency type='leaf_type' ctxk='842'/>
<bc code='185' bci='87'/>
<type id='733' name='void'/>
<klass id='834' name='[B' flags='1041'/>
<method id='849' holder='843' name='readFully' return='733' arguments='834 731 731' flags='1025' bytes='0' iicount='1'/>
<call method='849' instr='invokeinterface'/>
<method id='850' holder='842' name='readFully' return='733' arguments='834 731 731' flags='17' bytes='63' iicount='405'/>
<dependency type='unique_concrete_method' ctxk='843' x='850'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='842'/>
<bc code='183' bci='259'/>
<klass id='853' name='java/io/UTFDataFormatException' unloaded='1'/>
<method id='855' holder='853' name='&lt;init&gt;' return='733' arguments='739' unloaded='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='291'/>
<klass id='805' name='java/lang/StringBuilder' flags='17'/>
<method id='856' holder='805' name='&lt;init&gt;' return='733' flags='1' bytes='7' iicount='323'/>
<call method='856' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<bc code='183' bci='3'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='858' holder='803' name='&lt;init&gt;' return='733' arguments='731' flags='0' bytes='12' iicount='393'/>
<call method='858' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<bc code='183' bci='1'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<method id='860' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='5160'/>
<call method='860' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<parse_done stamp='1.122'/>
</parse>
<parse_done stamp='1.122'/>
</parse>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='296'/>
<method id='863' holder='805' name='append' return='805' arguments='739' flags='1' bytes='8' iicount='732'/>
<call method='863' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='2'/>
<method id='865' holder='803' name='append' return='803' arguments='739' flags='1' bytes='50' compile_id='24' compiler='C1' level='3' iicount='924'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='301'/>
<method id='867' holder='805' name='append' return='805' arguments='731' flags='1' bytes='8' iicount='7'/>
<call method='867' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<bc code='183' bci='2'/>
<method id='869' holder='803' name='append' return='803' arguments='731' flags='1' bytes='62' iicount='7'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='304'/>
<method id='871' holder='805' name='toString' return='739' flags='1' bytes='17' iicount='325'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='13'/>
<klass id='831' name='[C' flags='1041'/>
<method id='873' holder='739' name='&lt;init&gt;' return='733' arguments='831 731 731' flags='1' bytes='82' compile_id='13' compiler='C1' level='3' iicount='1449'/>
<call method='873' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='183' bci='307'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='351'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='403'/>
<call method='856' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<bc code='183' bci='3'/>
<call method='858' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<bc code='183' bci='1'/>
<call method='860' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<parse_done stamp='1.122'/>
</parse>
<parse_done stamp='1.122'/>
</parse>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='408'/>
<call method='863' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='2'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='415'/>
<call method='867' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<bc code='183' bci='2'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='418'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='13'/>
<call method='873' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='183' bci='421'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='469'/>
<call method='856' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='856'>
<bc code='183' bci='3'/>
<call method='858' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<bc code='183' bci='1'/>
<call method='860' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<parse_done stamp='1.122'/>
</parse>
<parse_done stamp='1.122'/>
</parse>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='474'/>
<call method='863' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='863'>
<bc code='183' bci='2'/>
<call method='865' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='479'/>
<call method='867' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<bc code='183' bci='2'/>
<call method='869' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='182' bci='482'/>
<call method='871' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='871'>
<bc code='183' bci='13'/>
<call method='873' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<bc code='183' bci='485'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='497'/>
<call method='873' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.122'/>
</parse>
<phase name='optimize_blocks' stamp='1.122'>
<phase_done name='optimize_blocks' stamp='1.122'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.122'>
<phase_done name='rangeCheckElimination' stamp='1.122'/>
</phase>
<phase name='optimize_null_checks' stamp='1.122'>
<phase_done name='optimize_null_checks' stamp='1.122'/>
</phase>
<phase_done name='buildIR' stamp='1.122'/>
</phase>
<phase name='emit_lir' stamp='1.122'>
<phase name='lirGeneration' stamp='1.122'>
<phase_done name='lirGeneration' stamp='1.122'/>
</phase>
<phase name='linearScan' stamp='1.122'>
<phase_done name='linearScan' stamp='1.123'/>
</phase>
<phase_done name='emit_lir' stamp='1.123'/>
</phase>
<phase name='codeemit' stamp='1.123'>
<phase_done name='codeemit' stamp='1.123'/>
</phase>
<phase name='codeinstall' stamp='1.123'>
<dependency type='leaf_type' ctxk='842'/>
<dependency type='unique_concrete_method' ctxk='843' x='847'/>
<dependency type='unique_concrete_method' ctxk='843' x='850'/>
<phase_done name='codeinstall' stamp='1.163'/>
</phase>
<code_cache total_blobs='284' nmethods='30' adapters='169' free_code_cache='250479168'/>
<task_done success='1' nmsize='8680' count='601' backedge_count='8585' inlined_bytes='159' stamp='1.163'/>
</task>
<task compile_id='39' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='988' backedge_count='988' iicount='988' level='3' stamp='1.163'>
<phase name='buildIR' stamp='1.163'>
<type id='733' name='void'/>
<klass id='834' name='[B' flags='1041'/>
<type id='731' name='int'/>
<klass id='842' name='java/io/DataInputStream' flags='1'/>
<method id='843' holder='842' name='readFully' return='733' arguments='834 731 731' flags='17' bytes='63' iicount='988'/>
<parse method='843'  stamp='1.163'>
<bc code='183' bci='8'/>
<klass id='846' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='847' holder='846' name='&lt;init&gt;' return='733' unloaded='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='34'/>
<klass id='807' name='java/io/InputStream' flags='1025'/>
<method id='849' holder='807' name='read' return='731' arguments='834 731 731' flags='1' bytes='109' iicount='1'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='48'/>
<klass id='850' name='java/io/EOFException' unloaded='1'/>
<method id='851' holder='850' name='&lt;init&gt;' return='733' unloaded='1'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.163'/>
</parse>
<phase name='optimize_blocks' stamp='1.163'>
<phase_done name='optimize_blocks' stamp='1.163'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.163'>
<phase_done name='rangeCheckElimination' stamp='1.163'/>
</phase>
<phase name='optimize_null_checks' stamp='1.163'>
<phase_done name='optimize_null_checks' stamp='1.163'/>
</phase>
<phase_done name='buildIR' stamp='1.163'/>
</phase>
<phase name='emit_lir' stamp='1.163'>
<phase name='lirGeneration' stamp='1.163'>
<phase_done name='lirGeneration' stamp='1.163'/>
</phase>
<phase name='linearScan' stamp='1.163'>
<phase_done name='linearScan' stamp='1.164'/>
</phase>
<phase_done name='emit_lir' stamp='1.164'/>
</phase>
<phase name='codeemit' stamp='1.164'>
<phase_done name='codeemit' stamp='1.164'/>
</phase>
<phase name='codeinstall' stamp='1.164'>
<phase_done name='codeinstall' stamp='1.169'/>
</phase>
<code_cache total_blobs='285' nmethods='31' adapters='169' free_code_cache='250476864'/>
<task_done success='1' nmsize='1128' count='988' backedge_count='988' stamp='1.169'/>
</task>
<task compile_id='34' method='java/io/BufferedInputStream read ()I' bytes='49' count='3759' iicount='3759' level='3' stamp='1.169'>
<phase name='buildIR' stamp='1.169'>
<type id='731' name='int'/>
<klass id='842' name='java/io/BufferedInputStream' flags='1'/>
<method id='843' holder='842' name='read' return='731' flags='33' bytes='49' iicount='3785'/>
<parse method='843'  stamp='1.169'>
<bc code='183' bci='12'/>
<type id='733' name='void'/>
<method id='845' holder='842' name='fill' return='733' flags='2' bytes='233' iicount='13'/>
<call method='845' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='29'/>
<klass id='834' name='[B' flags='1041'/>
<method id='847' holder='842' name='getBufIfOpen' return='834' flags='2' bytes='21' compile_id='33' compiler='C1' level='3' iicount='5989'/>
<call method='847' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='15'/>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='849' name='java/io/IOException' flags='1'/>
<method id='851' holder='849' name='&lt;init&gt;' return='733' arguments='739' flags='1' bytes='6' iicount='1'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.169'/>
</parse>
<parse_done stamp='1.169'/>
</parse>
<phase name='optimize_blocks' stamp='1.169'>
<phase_done name='optimize_blocks' stamp='1.169'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.169'>
<phase_done name='rangeCheckElimination' stamp='1.169'/>
</phase>
<phase name='optimize_null_checks' stamp='1.169'>
<phase_done name='optimize_null_checks' stamp='1.169'/>
</phase>
<phase_done name='buildIR' stamp='1.169'/>
</phase>
<phase name='emit_lir' stamp='1.169'>
<phase name='lirGeneration' stamp='1.169'>
<phase_done name='lirGeneration' stamp='1.169'/>
</phase>
<phase name='linearScan' stamp='1.169'>
<phase_done name='linearScan' stamp='1.169'/>
</phase>
<phase_done name='emit_lir' stamp='1.169'/>
</phase>
<phase name='codeemit' stamp='1.169'>
<phase_done name='codeemit' stamp='1.169'/>
</phase>
<phase name='codeinstall' stamp='1.169'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.178'/>
</phase>
<code_cache total_blobs='287' nmethods='33' adapters='169' free_code_cache='250473600'/>
<task_done success='1' nmsize='1400' count='5191' inlined_bytes='21' stamp='1.178'/>
</task>
<task compile_id='36' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='998' backedge_count='12' iicount='998' level='3' stamp='1.178'>
<phase name='buildIR' stamp='1.178'>
<type id='731' name='int'/>
<klass id='834' name='[B' flags='1041'/>
<klass id='842' name='java/io/BufferedInputStream' flags='1'/>
<method id='843' holder='842' name='read' return='731' arguments='834 731 731' flags='33' bytes='113' iicount='998'/>
<parse method='843'  stamp='1.178'>
<bc code='183' bci='1'/>
<method id='846' holder='842' name='getBufIfOpen' return='834' flags='2' bytes='21' compile_id='42' compiler='C2' level='4' iicount='6696'/>
<call method='846' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='15'/>
<type id='733' name='void'/>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='848' name='java/io/IOException' flags='1'/>
<method id='850' holder='848' name='&lt;init&gt;' return='733' arguments='739' flags='1' bytes='6' iicount='1'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.178'/>
</parse>
<bc code='183' bci='26'/>
<klass id='852' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='853' holder='852' name='&lt;init&gt;' return='733' unloaded='1'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='49'/>
<method id='854' holder='842' name='read1' return='731' arguments='834 731 731' flags='2' bytes='108' iicount='1010'/>
<call method='854' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='101'/>
<klass id='807' name='java/io/InputStream' flags='1025'/>
<method id='857' holder='807' name='available' return='731' flags='1' bytes='2' iicount='1'/>
<call method='857' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.178'/>
</parse>
<phase name='optimize_blocks' stamp='1.178'>
<phase_done name='optimize_blocks' stamp='1.178'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.178'>
<phase_done name='rangeCheckElimination' stamp='1.178'/>
</phase>
<phase name='optimize_null_checks' stamp='1.178'>
<phase_done name='optimize_null_checks' stamp='1.178'/>
</phase>
<phase_done name='buildIR' stamp='1.178'/>
</phase>
<phase name='emit_lir' stamp='1.178'>
<phase name='lirGeneration' stamp='1.178'>
<phase_done name='lirGeneration' stamp='1.178'/>
</phase>
<phase name='linearScan' stamp='1.178'>
<phase_done name='linearScan' stamp='1.178'/>
</phase>
<phase_done name='emit_lir' stamp='1.178'/>
</phase>
<phase name='codeemit' stamp='1.178'>
<phase_done name='codeemit' stamp='1.178'/>
</phase>
<phase name='codeinstall' stamp='1.178'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.190'/>
</phase>
<code_cache total_blobs='290' nmethods='34' adapters='171' free_code_cache='250468544'/>
<task_done success='1' nmsize='2360' count='998' backedge_count='12' inlined_bytes='21' stamp='1.190'/>
</task>
<task compile_id='41' method='java/io/DataInputStream readShort ()S' bytes='40' count='1994' iicount='1994' level='3' stamp='1.190'>
<phase name='buildIR' stamp='1.190'>
<type id='730' name='short'/>
<klass id='842' name='java/io/DataInputStream' flags='1'/>
<method id='843' holder='842' name='readShort' return='730' flags='17' bytes='40' iicount='1994'/>
<parse method='843'  stamp='1.190'>
<bc code='182' bci='4'/>
<type id='731' name='int'/>
<klass id='807' name='java/io/InputStream' flags='1025'/>
<method id='847' holder='807' name='read' return='731' flags='1025' bytes='0' iicount='1'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='12'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='26'/>
<type id='733' name='void'/>
<klass id='848' name='java/io/EOFException' unloaded='1'/>
<method id='849' holder='848' name='&lt;init&gt;' return='733' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.190'/>
</parse>
<phase name='optimize_blocks' stamp='1.190'>
<phase_done name='optimize_blocks' stamp='1.190'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.190'>
<phase_done name='rangeCheckElimination' stamp='1.190'/>
</phase>
<phase name='optimize_null_checks' stamp='1.190'>
<phase_done name='optimize_null_checks' stamp='1.190'/>
</phase>
<phase_done name='buildIR' stamp='1.190'/>
</phase>
<phase name='emit_lir' stamp='1.190'>
<phase name='lirGeneration' stamp='1.190'>
<phase_done name='lirGeneration' stamp='1.190'/>
</phase>
<phase name='linearScan' stamp='1.190'>
<phase_done name='linearScan' stamp='1.190'/>
</phase>
<phase_done name='emit_lir' stamp='1.190'/>
</phase>
<phase name='codeemit' stamp='1.190'>
<phase_done name='codeemit' stamp='1.190'/>
</phase>
<phase name='codeinstall' stamp='1.190'>
<phase_done name='codeinstall' stamp='1.195'/>
</phase>
<code_cache total_blobs='291' nmethods='35' adapters='171' free_code_cache='250466624'/>
<task_done success='1' nmsize='968' count='1994' stamp='1.195'/>
</task>
<task compile_id='43' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='798' iicount='798' level='3' stamp='1.195'>
<phase name='buildIR' stamp='1.195'>
<type id='731' name='int'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='842' name='java/util/HashMap' flags='1'/>
<method id='843' holder='842' name='hash' return='731' arguments='738' flags='24' bytes='20' iicount='798'/>
<parse method='843'  stamp='1.195'>
<bc code='182' bci='9'/>
<method id='845' holder='738' name='hashCode' return='731' flags='257' bytes='0' iicount='165'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.195'/>
</parse>
<phase name='optimize_blocks' stamp='1.195'>
<phase_done name='optimize_blocks' stamp='1.195'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.195'>
<phase_done name='rangeCheckElimination' stamp='1.195'/>
</phase>
<phase name='optimize_null_checks' stamp='1.195'>
<phase_done name='optimize_null_checks' stamp='1.195'/>
</phase>
<phase_done name='buildIR' stamp='1.195'/>
</phase>
<phase name='emit_lir' stamp='1.195'>
<phase name='lirGeneration' stamp='1.195'>
<phase_done name='lirGeneration' stamp='1.195'/>
</phase>
<phase name='linearScan' stamp='1.195'>
<phase_done name='linearScan' stamp='1.195'/>
</phase>
<phase_done name='emit_lir' stamp='1.195'/>
</phase>
<phase name='codeemit' stamp='1.195'>
<phase_done name='codeemit' stamp='1.195'/>
</phase>
<phase name='codeinstall' stamp='1.195'>
<phase_done name='codeinstall' stamp='1.197'/>
</phase>
<code_cache total_blobs='292' nmethods='36' adapters='171' free_code_cache='250465408'/>
<task_done success='1' nmsize='584' count='798' stamp='1.197'/>
</task>
<task compile_id='37' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='1010' iicount='1010' level='3' stamp='1.197'>
<phase name='buildIR' stamp='1.197'>
<type id='731' name='int'/>
<klass id='834' name='[B' flags='1041'/>
<klass id='842' name='java/io/BufferedInputStream' flags='1'/>
<method id='843' holder='842' name='read1' return='731' arguments='834 731 731' flags='2' bytes='108' iicount='1010'/>
<parse method='843'  stamp='1.197'>
<bc code='183' bci='18'/>
<method id='845' holder='842' name='getBufIfOpen' return='834' flags='2' bytes='21' compile_id='42' compiler='C2' level='4' iicount='6696'/>
<call method='845' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<bc code='183' bci='15'/>
<type id='733' name='void'/>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='847' name='java/io/IOException' flags='1'/>
<method id='849' holder='847' name='&lt;init&gt;' return='733' arguments='739' flags='1' bytes='6' iicount='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.197'/>
</parse>
<bc code='183' bci='33'/>
<klass id='807' name='java/io/InputStream' flags='1025'/>
<method id='851' holder='842' name='getInIfOpen' return='807' flags='2' bytes='21' iicount='23'/>
<call method='851' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='15'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.197'/>
</parse>
<bc code='182' bci='39'/>
<method id='854' holder='807' name='read' return='731' arguments='834 731 731' flags='1' bytes='109' iicount='1'/>
<call method='854' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='44'/>
<method id='855' holder='842' name='fill' return='733' flags='2' bytes='233' iicount='13'/>
<call method='855' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='80'/>
<call method='845' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<bc code='183' bci='15'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.198'/>
</parse>
<bc code='184' bci='91'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='857' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.198'/>
</parse>
<phase name='optimize_blocks' stamp='1.198'>
<phase_done name='optimize_blocks' stamp='1.198'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.198'>
<phase_done name='rangeCheckElimination' stamp='1.198'/>
</phase>
<phase name='optimize_null_checks' stamp='1.198'>
<phase_done name='optimize_null_checks' stamp='1.198'/>
</phase>
<phase_done name='buildIR' stamp='1.198'/>
</phase>
<phase name='emit_lir' stamp='1.198'>
<phase name='lirGeneration' stamp='1.198'>
<phase_done name='lirGeneration' stamp='1.198'/>
</phase>
<phase name='linearScan' stamp='1.198'>
<phase_done name='linearScan' stamp='1.198'/>
</phase>
<phase_done name='emit_lir' stamp='1.198'/>
</phase>
<phase name='codeemit' stamp='1.198'>
<phase_done name='codeemit' stamp='1.198'/>
</phase>
<phase name='codeinstall' stamp='1.198'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.210'/>
</phase>
<code_cache total_blobs='293' nmethods='37' adapters='171' free_code_cache='250461056'/>
<task_done success='1' nmsize='2264' count='1010' inlined_bytes='63' stamp='1.210'/>
</task>
<task compile_id='38' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='601' iicount='601' level='3' stamp='1.210'>
<phase name='buildIR' stamp='1.210'>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='842' name='java/io/DataInputStream' flags='1'/>
<method id='843' holder='842' name='readUTF' return='739' flags='17' bytes='5' iicount='601'/>
<parse method='843'  stamp='1.210'>
<bc code='184' bci='1'/>
<klass id='845' name='java/io/DataInput' flags='1537'/>
<method id='846' holder='842' name='readUTF' return='739' arguments='845' flags='25' bytes='501' compile_id='35' compiler='C1' level='3' iicount='601'/>
<call method='846' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.210'/>
</parse>
<phase name='optimize_blocks' stamp='1.210'>
<phase_done name='optimize_blocks' stamp='1.210'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.210'>
<phase_done name='rangeCheckElimination' stamp='1.210'/>
</phase>
<phase name='optimize_null_checks' stamp='1.210'>
<phase_done name='optimize_null_checks' stamp='1.210'/>
</phase>
<phase_done name='buildIR' stamp='1.210'/>
</phase>
<phase name='emit_lir' stamp='1.210'>
<phase name='lirGeneration' stamp='1.210'>
<phase_done name='lirGeneration' stamp='1.210'/>
</phase>
<phase name='linearScan' stamp='1.210'>
<phase_done name='linearScan' stamp='1.210'/>
</phase>
<phase_done name='emit_lir' stamp='1.210'/>
</phase>
<phase name='codeemit' stamp='1.210'>
<phase_done name='codeemit' stamp='1.210'/>
</phase>
<phase name='codeinstall' stamp='1.210'>
<phase_done name='codeinstall' stamp='1.212'/>
</phase>
<code_cache total_blobs='294' nmethods='38' adapters='171' free_code_cache='250460096'/>
<task_done success='1' nmsize='392' count='601' stamp='1.212'/>
</task>
<task compile_id='40' method='java/io/DataInputStream readUnsignedShort ()I' bytes='39' count='601' iicount='601' level='3' stamp='1.212'>
<phase name='buildIR' stamp='1.212'>
<type id='731' name='int'/>
<klass id='842' name='java/io/DataInputStream' flags='1'/>
<method id='843' holder='842' name='readUnsignedShort' return='731' flags='17' bytes='39' iicount='601'/>
<parse method='843'  stamp='1.212'>
<bc code='182' bci='4'/>
<klass id='807' name='java/io/InputStream' flags='1025'/>
<method id='847' holder='807' name='read' return='731' flags='1025' bytes='0' iicount='1'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='12'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='26'/>
<type id='733' name='void'/>
<klass id='848' name='java/io/EOFException' unloaded='1'/>
<method id='849' holder='848' name='&lt;init&gt;' return='733' unloaded='1'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.212'/>
</parse>
<phase name='optimize_blocks' stamp='1.212'>
<phase_done name='optimize_blocks' stamp='1.212'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.212'>
<phase_done name='rangeCheckElimination' stamp='1.212'/>
</phase>
<phase name='optimize_null_checks' stamp='1.212'>
<phase_done name='optimize_null_checks' stamp='1.212'/>
</phase>
<phase_done name='buildIR' stamp='1.212'/>
</phase>
<phase name='emit_lir' stamp='1.212'>
<phase name='lirGeneration' stamp='1.212'>
<phase_done name='lirGeneration' stamp='1.212'/>
</phase>
<phase name='linearScan' stamp='1.212'>
<phase_done name='linearScan' stamp='1.212'/>
</phase>
<phase_done name='emit_lir' stamp='1.212'/>
</phase>
<phase name='codeemit' stamp='1.212'>
<phase_done name='codeemit' stamp='1.212'/>
</phase>
<phase name='codeinstall' stamp='1.212'>
<phase_done name='codeinstall' stamp='1.217'/>
</phase>
<code_cache total_blobs='295' nmethods='39' adapters='171' free_code_cache='250458240'/>
<task_done success='1' nmsize='936' count='601' stamp='1.217'/>
</task>
<task compile_id='44' method='java/lang/StringBuilder append (C)Ljava/lang/StringBuilder;' bytes='8' count='385' iicount='385' level='3' stamp='1.217'>
<phase name='buildIR' stamp='1.217'>
<klass id='805' name='java/lang/StringBuilder' flags='17'/>
<type id='726' name='char'/>
<method id='842' holder='805' name='append' return='805' arguments='726' flags='1' bytes='8' iicount='385'/>
<parse method='842'  stamp='1.217'>
<bc code='183' bci='2'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='803' name='append' return='803' arguments='726' flags='1' bytes='29' iicount='385'/>
<call method='844' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<bc code='183' bci='7'/>
<type id='733' name='void'/>
<type id='731' name='int'/>
<method id='846' holder='803' name='ensureCapacityInternal' return='733' arguments='731' flags='2' bytes='27' compile_id='27' compiler='C1' level='3' iicount='1321'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='17'/>
<method id='848' holder='803' name='newCapacity' return='731' arguments='731' flags='2' bytes='39' iicount='471'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='850' name='java/util/Arrays' flags='1'/>
<method id='851' holder='850' name='copyOf' return='831' arguments='831 731' flags='9' bytes='19' iicount='498'/>
<call method='851' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='184' bci='11'/>
<klass id='853' name='java/lang/Math' flags='17'/>
<method id='854' holder='853' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='3887'/>
<call method='854' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<parse_done stamp='1.217'/>
</parse>
<bc code='184' bci='14'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='856' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='856' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.217'/>
</parse>
<parse_done stamp='1.217'/>
</parse>
<parse_done stamp='1.217'/>
</parse>
<parse_done stamp='1.217'/>
</parse>
<phase name='optimize_blocks' stamp='1.217'>
<phase_done name='optimize_blocks' stamp='1.217'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.217'>
<phase_done name='rangeCheckElimination' stamp='1.217'/>
</phase>
<phase name='optimize_null_checks' stamp='1.217'>
<phase_done name='optimize_null_checks' stamp='1.217'/>
</phase>
<phase_done name='buildIR' stamp='1.217'/>
</phase>
<phase name='emit_lir' stamp='1.217'>
<phase name='lirGeneration' stamp='1.217'>
<phase_done name='lirGeneration' stamp='1.217'/>
</phase>
<phase name='linearScan' stamp='1.217'>
<phase_done name='linearScan' stamp='1.217'/>
</phase>
<phase_done name='emit_lir' stamp='1.217'/>
</phase>
<phase name='codeemit' stamp='1.217'>
<phase_done name='codeemit' stamp='1.217'/>
</phase>
<phase name='codeinstall' stamp='1.217'>
<phase_done name='codeinstall' stamp='1.225'/>
</phase>
<code_cache total_blobs='296' nmethods='40' adapters='171' free_code_cache='250455424'/>
<task_done success='1' nmsize='1432' count='385' inlined_bytes='86' stamp='1.225'/>
</task>
<task compile_id='45' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='385' iicount='385' level='3' stamp='1.225'>
<phase name='buildIR' stamp='1.225'>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='726' name='char'/>
<method id='842' holder='803' name='append' return='803' arguments='726' flags='1' bytes='29' iicount='385'/>
<parse method='842'  stamp='1.225'>
<bc code='183' bci='7'/>
<type id='733' name='void'/>
<type id='731' name='int'/>
<method id='844' holder='803' name='ensureCapacityInternal' return='733' arguments='731' flags='2' bytes='27' compile_id='27' compiler='C1' level='3' iicount='1321'/>
<call method='844' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<bc code='183' bci='17'/>
<method id='846' holder='803' name='newCapacity' return='731' arguments='731' flags='2' bytes='39' iicount='471'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='848' name='java/util/Arrays' flags='1'/>
<method id='849' holder='848' name='copyOf' return='831' arguments='831 731' flags='9' bytes='19' iicount='498'/>
<call method='849' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='184' bci='11'/>
<klass id='851' name='java/lang/Math' flags='17'/>
<method id='852' holder='851' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='3887'/>
<call method='852' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='852'>
<parse_done stamp='1.225'/>
</parse>
<bc code='184' bci='14'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='854' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='854' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.225'/>
</parse>
<parse_done stamp='1.225'/>
</parse>
<parse_done stamp='1.225'/>
</parse>
<phase name='optimize_blocks' stamp='1.225'>
<phase_done name='optimize_blocks' stamp='1.225'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.225'>
<phase_done name='rangeCheckElimination' stamp='1.225'/>
</phase>
<phase name='optimize_null_checks' stamp='1.225'>
<phase_done name='optimize_null_checks' stamp='1.225'/>
</phase>
<phase_done name='buildIR' stamp='1.225'/>
</phase>
<phase name='emit_lir' stamp='1.225'>
<phase name='lirGeneration' stamp='1.225'>
<phase_done name='lirGeneration' stamp='1.225'/>
</phase>
<phase name='linearScan' stamp='1.225'>
<phase_done name='linearScan' stamp='1.226'/>
</phase>
<phase_done name='emit_lir' stamp='1.226'/>
</phase>
<phase name='codeemit' stamp='1.226'>
<phase_done name='codeemit' stamp='1.226'/>
</phase>
<phase name='codeinstall' stamp='1.226'>
<phase_done name='codeinstall' stamp='1.233'/>
</phase>
<code_cache total_blobs='298' nmethods='41' adapters='172' free_code_cache='250452096'/>
<task_done success='1' nmsize='1336' count='385' inlined_bytes='57' stamp='1.233'/>
</task>
<task compile_id='46' method='sun/instrument/InstrumentationImpl transform (Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/Class;Ljava/security/ProtectionDomain;[BZ)[B' bytes='38' count='261' iicount='261' level='3' stamp='1.233'>
<phase name='buildIR' stamp='1.233'>
<klass id='834' name='[B' flags='1041'/>
<klass id='742' name='java/lang/ClassLoader' flags='1025'/>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='740' name='java/lang/Class' flags='17'/>
<klass id='751' name='java/security/ProtectionDomain' flags='1'/>
<type id='725' name='boolean'/>
<klass id='842' name='sun/instrument/InstrumentationImpl' flags='1'/>
<method id='843' holder='842' name='transform' return='834' arguments='742 739 740 751 834 725' flags='2' bytes='38' iicount='261'/>
<parse method='843'  stamp='1.233'>
<bc code='182' bci='34'/>
<klass id='845' name='sun/instrument/TransformerManager' flags='1'/>
<method id='846' holder='845' name='transform' return='834' arguments='742 739 740 751 834' flags='1' bytes='98' iicount='261'/>
<call method='846' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='845' x='846'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='845'/>
<parse_done stamp='1.233'/>
</parse>
<phase name='optimize_blocks' stamp='1.233'>
<phase_done name='optimize_blocks' stamp='1.233'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.233'>
<phase_done name='rangeCheckElimination' stamp='1.233'/>
</phase>
<phase name='optimize_null_checks' stamp='1.233'>
<phase_done name='optimize_null_checks' stamp='1.233'/>
</phase>
<phase_done name='buildIR' stamp='1.233'/>
</phase>
<phase name='emit_lir' stamp='1.233'>
<phase name='lirGeneration' stamp='1.233'>
<phase_done name='lirGeneration' stamp='1.233'/>
</phase>
<phase name='linearScan' stamp='1.233'>
<phase_done name='linearScan' stamp='1.233'/>
</phase>
<phase_done name='emit_lir' stamp='1.233'/>
</phase>
<phase name='codeemit' stamp='1.233'>
<phase_done name='codeemit' stamp='1.233'/>
</phase>
<phase name='codeinstall' stamp='1.233'>
<dependency type='leaf_type' ctxk='845'/>
<dependency type='unique_concrete_method' ctxk='845' x='846'/>
<phase_done name='codeinstall' stamp='1.237'/>
</phase>
<code_cache total_blobs='299' nmethods='42' adapters='172' free_code_cache='250450688'/>
<task_done success='1' nmsize='616' count='263' stamp='1.237'/>
</task>
<task compile_id='47' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='263' iicount='263' level='1' stamp='1.237'>
<phase name='buildIR' stamp='1.237'>
<klass id='844' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='842' name='sun/instrument/TransformerManager' flags='1'/>
<method id='845' holder='842' name='getSnapshotTransformerList' return='844' flags='2' bytes='5' iicount='263'/>
<parse method='845'  stamp='1.237'>
<parse_done stamp='1.237'/>
</parse>
<phase name='optimize_blocks' stamp='1.237'>
<phase_done name='optimize_blocks' stamp='1.237'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.237'>
<phase_done name='rangeCheckElimination' stamp='1.237'/>
</phase>
<phase name='optimize_null_checks' stamp='1.237'>
<phase_done name='optimize_null_checks' stamp='1.237'/>
</phase>
<phase_done name='buildIR' stamp='1.237'/>
</phase>
<phase name='emit_lir' stamp='1.237'>
<phase name='lirGeneration' stamp='1.237'>
<phase_done name='lirGeneration' stamp='1.237'/>
</phase>
<phase name='linearScan' stamp='1.237'>
<phase_done name='linearScan' stamp='1.237'/>
</phase>
<phase_done name='emit_lir' stamp='1.237'/>
</phase>
<phase name='codeemit' stamp='1.237'>
<phase_done name='codeemit' stamp='1.237'/>
</phase>
<phase name='codeinstall' stamp='1.237'>
<phase_done name='codeinstall' stamp='1.238'/>
</phase>
<code_cache total_blobs='300' nmethods='43' adapters='172' free_code_cache='250449920'/>
<task_done success='1' nmsize='272' count='264' stamp='1.238'/>
</task>
<task compile_id='48' method='java/lang/String lastIndexOf (II)I' bytes='52' count='332' backedge_count='13958' iicount='332' level='3' stamp='1.239'>
<phase name='buildIR' stamp='1.239'>
<type id='731' name='int'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='lastIndexOf' return='731' arguments='731 731' flags='1' bytes='52' iicount='332'/>
<parse method='842'  stamp='1.239'>
<bc code='184' bci='16'/>
<klass id='844' name='java/lang/Math' flags='17'/>
<method id='845' holder='844' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='3913'/>
<call method='845' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='1.239'/>
</parse>
<bc code='183' bci='48'/>
<method id='847' holder='739' name='lastIndexOfSupplementary' return='731' arguments='731 731' flags='2' bytes='70' iicount='1'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.239'/>
</parse>
<phase name='optimize_blocks' stamp='1.239'>
<phase_done name='optimize_blocks' stamp='1.239'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.239'>
<phase_done name='rangeCheckElimination' stamp='1.239'/>
</phase>
<phase name='optimize_null_checks' stamp='1.239'>
<phase_done name='optimize_null_checks' stamp='1.239'/>
</phase>
<phase_done name='buildIR' stamp='1.239'/>
</phase>
<phase name='emit_lir' stamp='1.239'>
<phase name='lirGeneration' stamp='1.239'>
<phase_done name='lirGeneration' stamp='1.239'/>
</phase>
<phase name='linearScan' stamp='1.239'>
<phase_done name='linearScan' stamp='1.239'/>
</phase>
<phase_done name='emit_lir' stamp='1.239'/>
</phase>
<phase name='codeemit' stamp='1.239'>
<phase_done name='codeemit' stamp='1.239'/>
</phase>
<phase name='codeinstall' stamp='1.239'>
<phase_done name='codeinstall' stamp='1.243'/>
</phase>
<code_cache total_blobs='301' nmethods='44' adapters='172' free_code_cache='250448000'/>
<task_done success='1' nmsize='904' count='332' backedge_count='13958' inlined_bytes='11' stamp='1.243'/>
</task>
<task compile_id='49' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='161' backedge_count='12026' iicount='161' level='3' stamp='1.244'>
<phase name='buildIR' stamp='1.244'>
<type id='731' name='int'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='indexOf' return='731' arguments='831 731 731 831 731 731 731' flags='8' bytes='166' iicount='161'/>
<parse method='842'  stamp='1.244'>
<parse_done stamp='1.244'/>
</parse>
<phase name='optimize_blocks' stamp='1.244'>
<phase_done name='optimize_blocks' stamp='1.244'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.244'>
<phase_done name='rangeCheckElimination' stamp='1.244'/>
</phase>
<phase name='optimize_null_checks' stamp='1.244'>
<phase_done name='optimize_null_checks' stamp='1.244'/>
</phase>
<phase_done name='buildIR' stamp='1.244'/>
</phase>
<phase name='emit_lir' stamp='1.244'>
<phase name='lirGeneration' stamp='1.244'>
<phase_done name='lirGeneration' stamp='1.244'/>
</phase>
<phase name='linearScan' stamp='1.244'>
<phase_done name='linearScan' stamp='1.244'/>
</phase>
<phase_done name='emit_lir' stamp='1.244'/>
</phase>
<phase name='codeemit' stamp='1.244'>
<phase_done name='codeemit' stamp='1.244'/>
</phase>
<phase name='codeinstall' stamp='1.244'>
<phase_done name='codeinstall' stamp='1.252'/>
</phase>
<code_cache total_blobs='303' nmethods='45' adapters='172' free_code_cache='250442816'/>
<task_done success='1' nmsize='1616' count='161' backedge_count='12026' stamp='1.252'/>
</task>
<task compile_id='50' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='167' backedge_count='3188' iicount='167' level='3' stamp='1.252'>
<phase name='buildIR' stamp='1.252'>
<klass id='739' name='java/lang/String' flags='17'/>
<type id='725' name='boolean'/>
<klass id='842' name='java/io/BufferedReader' flags='1'/>
<method id='843' holder='842' name='readLine' return='739' arguments='725' flags='0' bytes='304' iicount='167'/>
<parse method='843'  stamp='1.252'>
<bc code='183' bci='11'/>
<type id='733' name='void'/>
<method id='846' holder='842' name='ensureOpen' return='733' flags='2' bytes='18' iicount='179'/>
<call method='846' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='13'/>
<klass id='848' name='java/io/IOException' flags='1'/>
<method id='850' holder='848' name='&lt;init&gt;' return='733' arguments='739' flags='1' bytes='6' iicount='1'/>
<call method='850' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.252'/>
</parse>
<bc code='183' bci='44'/>
<method id='852' holder='842' name='fill' return='733' flags='2' bytes='170' iicount='9'/>
<call method='852' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='63'/>
<type id='731' name='int'/>
<klass id='804' name='java/lang/StringBuffer' flags='17'/>
<method id='854' holder='804' name='length' return='731' flags='33' bytes='5' iicount='1'/>
<call method='854' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<parse_done stamp='1.252'/>
</parse>
<bc code='182' bci='70'/>
<method id='856' holder='804' name='toString' return='739' flags='33' bytes='36' iicount='66'/>
<call method='856' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='208'/>
<klass id='831' name='[C' flags='1041'/>
<method id='858' holder='739' name='&lt;init&gt;' return='733' arguments='831 731 731' flags='1' bytes='82' compile_id='13' compiler='C1' level='3' iicount='1735'/>
<call method='858' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='226'/>
<method id='860' holder='804' name='append' return='804' arguments='831 731 731' flags='33' bytes='15' iicount='1'/>
<call method='860' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<bc code='183' bci='9'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='862' holder='803' name='append' return='803' arguments='831 731 731' flags='1' bytes='40' iicount='1'/>
<call method='862' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.252'/>
</parse>
<bc code='182' bci='231'/>
<call method='856' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='275'/>
<method id='865' holder='804' name='&lt;init&gt;' return='733' arguments='731' flags='1' bytes='6' iicount='66'/>
<call method='865' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='865'>
<bc code='183' bci='2'/>
<method id='867' holder='803' name='&lt;init&gt;' return='733' arguments='731' flags='0' bytes='12' iicount='406'/>
<call method='867' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<bc code='183' bci='1'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<method id='869' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='5457'/>
<call method='869' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='869'>
<parse_done stamp='1.252'/>
</parse>
<parse_done stamp='1.252'/>
</parse>
<parse_done stamp='1.252'/>
</parse>
<bc code='182' bci='289'/>
<call method='860' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='860'>
<bc code='183' bci='9'/>
<call method='862' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.252'/>
</parse>
<parse_done stamp='1.253'/>
</parse>
<phase name='optimize_blocks' stamp='1.253'>
<phase_done name='optimize_blocks' stamp='1.253'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.253'>
<phase_done name='rangeCheckElimination' stamp='1.253'/>
</phase>
<phase name='optimize_null_checks' stamp='1.253'>
<phase_done name='optimize_null_checks' stamp='1.253'/>
</phase>
<phase_done name='buildIR' stamp='1.253'/>
</phase>
<phase name='emit_lir' stamp='1.253'>
<phase name='lirGeneration' stamp='1.253'>
<phase_done name='lirGeneration' stamp='1.253'/>
</phase>
<phase name='linearScan' stamp='1.253'>
<phase_done name='linearScan' stamp='1.253'/>
</phase>
<phase_done name='emit_lir' stamp='1.253'/>
</phase>
<phase name='codeemit' stamp='1.253'>
<phase_done name='codeemit' stamp='1.253'/>
</phase>
<phase name='codeinstall' stamp='1.253'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.282'/>
</phase>
<code_cache total_blobs='304' nmethods='46' adapters='172' free_code_cache='250431616'/>
<task_done success='1' nmsize='5992' count='179' backedge_count='3341' inlined_bytes='72' stamp='1.282'/>
</task>
<task compile_id='56' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='1044' iicount='1044' level='3' stamp='1.283'>
<phase name='buildIR' stamp='1.283'>
<klass id='842' name='java/lang/CharacterData' flags='1024'/>
<type id='731' name='int'/>
<method id='843' holder='842' name='of' return='842' arguments='731' flags='24' bytes='120' iicount='1044'/>
<parse method='843'  stamp='1.283'>
<parse_done stamp='1.283'/>
</parse>
<phase name='optimize_blocks' stamp='1.283'>
<phase_done name='optimize_blocks' stamp='1.283'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.283'>
<phase_done name='rangeCheckElimination' stamp='1.283'/>
</phase>
<phase name='optimize_null_checks' stamp='1.283'>
<phase_done name='optimize_null_checks' stamp='1.283'/>
</phase>
<phase_done name='buildIR' stamp='1.283'/>
</phase>
<phase name='emit_lir' stamp='1.283'>
<phase name='lirGeneration' stamp='1.283'>
<phase_done name='lirGeneration' stamp='1.283'/>
</phase>
<phase name='linearScan' stamp='1.283'>
<phase_done name='linearScan' stamp='1.283'/>
</phase>
<phase_done name='emit_lir' stamp='1.283'/>
</phase>
<phase name='codeemit' stamp='1.283'>
<phase_done name='codeemit' stamp='1.283'/>
</phase>
<phase name='codeinstall' stamp='1.283'>
<phase_done name='codeinstall' stamp='1.291'/>
</phase>
<code_cache total_blobs='305' nmethods='47' adapters='172' free_code_cache='250428864'/>
<task_done success='1' nmsize='1456' count='1058' stamp='1.292'/>
</task>
<task compile_id='57' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='1058' iicount='1058' level='3' stamp='1.292'>
<phase name='buildIR' stamp='1.292'>
<type id='731' name='int'/>
<klass id='842' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='843' holder='842' name='getProperties' return='731' arguments='731' flags='0' bytes='11' iicount='1058'/>
<parse method='843'  stamp='1.292'>
<parse_done stamp='1.292'/>
</parse>
<phase name='optimize_blocks' stamp='1.292'>
<phase_done name='optimize_blocks' stamp='1.292'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.292'>
<phase_done name='rangeCheckElimination' stamp='1.292'/>
</phase>
<phase name='optimize_null_checks' stamp='1.292'>
<phase_done name='optimize_null_checks' stamp='1.292'/>
</phase>
<phase_done name='buildIR' stamp='1.292'/>
</phase>
<phase name='emit_lir' stamp='1.292'>
<phase name='lirGeneration' stamp='1.292'>
<phase_done name='lirGeneration' stamp='1.292'/>
</phase>
<phase name='linearScan' stamp='1.292'>
<phase_done name='linearScan' stamp='1.292'/>
</phase>
<phase_done name='emit_lir' stamp='1.292'/>
</phase>
<phase name='codeemit' stamp='1.292'>
<phase_done name='codeemit' stamp='1.292'/>
</phase>
<phase name='codeinstall' stamp='1.292'>
<phase_done name='codeinstall' stamp='1.294'/>
</phase>
<code_cache total_blobs='306' nmethods='48' adapters='172' free_code_cache='250427840'/>
<task_done success='1' nmsize='400' count='1079' stamp='1.294'/>
</task>
<task compile_id='58' method='java/lang/Character toLowerCase (I)I' bytes='9' count='820' iicount='820' level='3' stamp='1.294'>
<phase name='buildIR' stamp='1.294'>
<type id='731' name='int'/>
<klass id='820' name='java/lang/Character' flags='17'/>
<method id='842' holder='820' name='toLowerCase' return='731' arguments='731' flags='9' bytes='9' iicount='820'/>
<parse method='842'  stamp='1.294'>
<bc code='184' bci='1'/>
<klass id='845' name='java/lang/CharacterData' flags='1024'/>
<method id='846' holder='845' name='of' return='845' arguments='731' flags='24' bytes='120' compile_id='56' compiler='C1' level='3' iicount='1079'/>
<call method='846' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='848' holder='845' name='toLowerCase' return='731' arguments='731' flags='1024' bytes='0' iicount='1'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.294'/>
</parse>
<phase name='optimize_blocks' stamp='1.294'>
<phase_done name='optimize_blocks' stamp='1.294'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.294'>
<phase_done name='rangeCheckElimination' stamp='1.294'/>
</phase>
<phase name='optimize_null_checks' stamp='1.294'>
<phase_done name='optimize_null_checks' stamp='1.294'/>
</phase>
<phase_done name='buildIR' stamp='1.294'/>
</phase>
<phase name='emit_lir' stamp='1.294'>
<phase name='lirGeneration' stamp='1.294'>
<phase_done name='lirGeneration' stamp='1.294'/>
</phase>
<phase name='linearScan' stamp='1.294'>
<phase_done name='linearScan' stamp='1.294'/>
</phase>
<phase_done name='emit_lir' stamp='1.294'/>
</phase>
<phase name='codeemit' stamp='1.294'>
<phase_done name='codeemit' stamp='1.294'/>
</phase>
<phase name='codeinstall' stamp='1.294'>
<phase_done name='codeinstall' stamp='1.297'/>
</phase>
<code_cache total_blobs='307' nmethods='49' adapters='172' free_code_cache='250426624'/>
<task_done success='1' nmsize='568' count='820' stamp='1.297'/>
</task>
<task compile_id='59' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='820' iicount='820' level='3' stamp='1.297'>
<phase name='buildIR' stamp='1.297'>
<type id='731' name='int'/>
<klass id='842' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='843' holder='842' name='toLowerCase' return='731' arguments='731' flags='0' bytes='39' iicount='820'/>
<parse method='843'  stamp='1.297'>
<bc code='182' bci='4'/>
<method id='845' holder='842' name='getProperties' return='731' arguments='731' flags='0' bytes='11' compile_id='57' compiler='C1' level='3' iicount='1079'/>
<call method='845' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='842'/>
<parse method='845'>
<parse_done stamp='1.297'/>
</parse>
<parse_done stamp='1.297'/>
</parse>
<phase name='optimize_blocks' stamp='1.297'>
<phase_done name='optimize_blocks' stamp='1.297'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.297'>
<phase_done name='rangeCheckElimination' stamp='1.297'/>
</phase>
<phase name='optimize_null_checks' stamp='1.297'>
<phase_done name='optimize_null_checks' stamp='1.297'/>
</phase>
<phase_done name='buildIR' stamp='1.297'/>
</phase>
<phase name='emit_lir' stamp='1.297'>
<phase name='lirGeneration' stamp='1.297'>
<phase_done name='lirGeneration' stamp='1.297'/>
</phase>
<phase name='linearScan' stamp='1.297'>
<phase_done name='linearScan' stamp='1.297'/>
</phase>
<phase_done name='emit_lir' stamp='1.297'/>
</phase>
<phase name='codeemit' stamp='1.297'>
<phase_done name='codeemit' stamp='1.297'/>
</phase>
<phase name='codeinstall' stamp='1.297'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.300'/>
</phase>
<code_cache total_blobs='308' nmethods='50' adapters='172' free_code_cache='250425216'/>
<task_done success='1' nmsize='624' count='820' inlined_bytes='11' stamp='1.300'/>
</task>
<task compile_id='65' method='java/lang/Character toLowerCase (C)C' bytes='6' count='788' iicount='788' level='3' stamp='1.300'>
<phase name='buildIR' stamp='1.300'>
<type id='726' name='char'/>
<klass id='820' name='java/lang/Character' flags='17'/>
<method id='842' holder='820' name='toLowerCase' return='726' arguments='726' flags='9' bytes='6' iicount='788'/>
<parse method='842'  stamp='1.300'>
<bc code='184' bci='1'/>
<type id='731' name='int'/>
<method id='844' holder='820' name='toLowerCase' return='731' arguments='731' flags='9' bytes='9' compile_id='58' compiler='C1' level='3' iicount='820'/>
<call method='844' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<bc code='184' bci='1'/>
<klass id='847' name='java/lang/CharacterData' flags='1024'/>
<method id='848' holder='847' name='of' return='847' arguments='731' flags='24' bytes='120' compile_id='56' compiler='C1' level='3' iicount='1079'/>
<call method='848' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='850' holder='847' name='toLowerCase' return='731' arguments='731' flags='1024' bytes='0' iicount='1'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.300'/>
</parse>
<parse_done stamp='1.300'/>
</parse>
<phase name='optimize_blocks' stamp='1.300'>
<phase_done name='optimize_blocks' stamp='1.300'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.300'>
<phase_done name='rangeCheckElimination' stamp='1.300'/>
</phase>
<phase name='optimize_null_checks' stamp='1.300'>
<phase_done name='optimize_null_checks' stamp='1.300'/>
</phase>
<phase_done name='buildIR' stamp='1.300'/>
</phase>
<phase name='emit_lir' stamp='1.300'>
<phase name='lirGeneration' stamp='1.300'>
<phase_done name='lirGeneration' stamp='1.300'/>
</phase>
<phase name='linearScan' stamp='1.300'>
<phase_done name='linearScan' stamp='1.300'/>
</phase>
<phase_done name='emit_lir' stamp='1.300'/>
</phase>
<phase name='codeemit' stamp='1.300'>
<phase_done name='codeemit' stamp='1.300'/>
</phase>
<phase name='codeinstall' stamp='1.300'>
<phase_done name='codeinstall' stamp='1.303'/>
</phase>
<code_cache total_blobs='309' nmethods='51' adapters='172' free_code_cache='250423808'/>
<task_done success='1' nmsize='664' count='788' inlined_bytes='9' stamp='1.303'/>
</task>
<task compile_id='60' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='813' iicount='813' level='3' stamp='1.303'>
<phase name='buildIR' stamp='1.303'>
<klass id='805' name='java/lang/StringBuilder' flags='17'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='805' name='append' return='805' arguments='739' flags='1' bytes='8' iicount='813'/>
<parse method='842'  stamp='1.303'>
<bc code='183' bci='2'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='803' name='append' return='803' arguments='739' flags='1' bytes='50' compile_id='24' compiler='C1' level='3' iicount='1029'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.303'/>
</parse>
<phase name='optimize_blocks' stamp='1.303'>
<phase_done name='optimize_blocks' stamp='1.303'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.303'>
<phase_done name='rangeCheckElimination' stamp='1.303'/>
</phase>
<phase name='optimize_null_checks' stamp='1.303'>
<phase_done name='optimize_null_checks' stamp='1.303'/>
</phase>
<phase_done name='buildIR' stamp='1.303'/>
</phase>
<phase name='emit_lir' stamp='1.303'>
<phase name='lirGeneration' stamp='1.303'>
<phase_done name='lirGeneration' stamp='1.303'/>
</phase>
<phase name='linearScan' stamp='1.303'>
<phase_done name='linearScan' stamp='1.303'/>
</phase>
<phase_done name='emit_lir' stamp='1.303'/>
</phase>
<phase name='codeemit' stamp='1.303'>
<phase_done name='codeemit' stamp='1.303'/>
</phase>
<phase name='codeinstall' stamp='1.303'>
<phase_done name='codeinstall' stamp='1.305'/>
</phase>
<code_cache total_blobs='310' nmethods='52' adapters='172' free_code_cache='250422848'/>
<task_done success='1' nmsize='392' count='817' stamp='1.305'/>
</task>
<task compile_id='54' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='790' iicount='790' level='1' stamp='1.305'>
<phase name='buildIR' stamp='1.305'>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='764' name='java/lang/ref/Reference' flags='1025'/>
<method id='842' holder='764' name='get' return='738' flags='1' bytes='5' iicount='790'/>
<parse method='842'  stamp='1.305'>
<parse_done stamp='1.305'/>
</parse>
<phase name='optimize_blocks' stamp='1.305'>
<phase_done name='optimize_blocks' stamp='1.305'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.305'>
<phase_done name='rangeCheckElimination' stamp='1.305'/>
</phase>
<phase name='optimize_null_checks' stamp='1.305'>
<phase_done name='optimize_null_checks' stamp='1.305'/>
</phase>
<phase_done name='buildIR' stamp='1.305'/>
</phase>
<phase name='emit_lir' stamp='1.305'>
<phase name='lirGeneration' stamp='1.305'>
<phase_done name='lirGeneration' stamp='1.305'/>
</phase>
<phase name='linearScan' stamp='1.305'>
<phase_done name='linearScan' stamp='1.305'/>
</phase>
<phase_done name='emit_lir' stamp='1.305'/>
</phase>
<phase name='codeemit' stamp='1.305'>
<phase_done name='codeemit' stamp='1.305'/>
</phase>
<phase name='codeinstall' stamp='1.305'>
<phase_done name='codeinstall' stamp='1.307'/>
</phase>
<code_cache total_blobs='311' nmethods='53' adapters='172' free_code_cache='250422144'/>
<task_done success='1' nmsize='272' count='790' stamp='1.307'/>
</task>
<task compile_id='66' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='264' iicount='264' level='1' stamp='1.307'>
<phase name='buildIR' stamp='1.307'>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='811' name='java/net/URL' flags='17'/>
<method id='842' holder='811' name='getFile' return='739' flags='1' bytes='5' iicount='264'/>
<parse method='842'  stamp='1.307'>
<parse_done stamp='1.307'/>
</parse>
<phase name='optimize_blocks' stamp='1.307'>
<phase_done name='optimize_blocks' stamp='1.307'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.307'>
<phase_done name='rangeCheckElimination' stamp='1.307'/>
</phase>
<phase name='optimize_null_checks' stamp='1.307'>
<phase_done name='optimize_null_checks' stamp='1.307'/>
</phase>
<phase_done name='buildIR' stamp='1.307'/>
</phase>
<phase name='emit_lir' stamp='1.307'>
<phase name='lirGeneration' stamp='1.307'>
<phase_done name='lirGeneration' stamp='1.307'/>
</phase>
<phase name='linearScan' stamp='1.307'>
<phase_done name='linearScan' stamp='1.307'/>
</phase>
<phase_done name='emit_lir' stamp='1.307'/>
</phase>
<phase name='codeemit' stamp='1.307'>
<phase_done name='codeemit' stamp='1.307'/>
</phase>
<phase name='codeinstall' stamp='1.307'>
<phase_done name='codeinstall' stamp='1.308'/>
</phase>
<code_cache total_blobs='313' nmethods='54' adapters='173' free_code_cache='250420864'/>
<task_done success='1' nmsize='272' count='264' stamp='1.308'/>
</task>
<task compile_id='55' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='395' iicount='395' level='1' stamp='1.308'>
<phase name='buildIR' stamp='1.308'>
<type id='731' name='int'/>
<klass id='842' name='java/lang/ThreadLocal' flags='1'/>
<method id='843' holder='842' name='access$400' return='731' arguments='842' flags='4104' bytes='5' iicount='395'/>
<parse method='843'  stamp='1.308'>
<parse_done stamp='1.308'/>
</parse>
<phase name='optimize_blocks' stamp='1.308'>
<phase_done name='optimize_blocks' stamp='1.308'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.308'>
<phase_done name='rangeCheckElimination' stamp='1.308'/>
</phase>
<phase name='optimize_null_checks' stamp='1.308'>
<phase_done name='optimize_null_checks' stamp='1.308'/>
</phase>
<phase_done name='buildIR' stamp='1.308'/>
</phase>
<phase name='emit_lir' stamp='1.308'>
<phase name='lirGeneration' stamp='1.308'>
<phase_done name='lirGeneration' stamp='1.308'/>
</phase>
<phase name='linearScan' stamp='1.308'>
<phase_done name='linearScan' stamp='1.308'/>
</phase>
<phase_done name='emit_lir' stamp='1.308'/>
</phase>
<phase name='codeemit' stamp='1.308'>
<phase_done name='codeemit' stamp='1.308'/>
</phase>
<phase name='codeinstall' stamp='1.308'>
<phase_done name='codeinstall' stamp='1.309'/>
</phase>
<code_cache total_blobs='314' nmethods='55' adapters='173' free_code_cache='250420096'/>
<task_done success='1' nmsize='240' count='395' stamp='1.309'/>
</task>
<task compile_id='53' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='666' iicount='666' level='3' stamp='1.309'>
<phase name='buildIR' stamp='1.309'>
<klass id='834' name='[B' flags='1041'/>
<type id='731' name='int'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='834' arguments='834 731' flags='9' bytes='19' iicount='666'/>
<parse method='843'  stamp='1.309'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='4311'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='1.309'/>
</parse>
<bc code='184' bci='14'/>
<type id='733' name='void'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='848' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.309'/>
</parse>
<phase name='optimize_blocks' stamp='1.309'>
<phase_done name='optimize_blocks' stamp='1.309'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.309'>
<phase_done name='rangeCheckElimination' stamp='1.309'/>
</phase>
<phase name='optimize_null_checks' stamp='1.309'>
<phase_done name='optimize_null_checks' stamp='1.309'/>
</phase>
<phase_done name='buildIR' stamp='1.309'/>
</phase>
<phase name='emit_lir' stamp='1.309'>
<phase name='lirGeneration' stamp='1.309'>
<phase_done name='lirGeneration' stamp='1.309'/>
</phase>
<phase name='linearScan' stamp='1.309'>
<phase_done name='linearScan' stamp='1.309'/>
</phase>
<phase_done name='emit_lir' stamp='1.309'/>
</phase>
<phase name='codeemit' stamp='1.309'>
<phase_done name='codeemit' stamp='1.309'/>
</phase>
<phase name='codeinstall' stamp='1.309'>
<phase_done name='codeinstall' stamp='1.313'/>
</phase>
<code_cache total_blobs='315' nmethods='56' adapters='173' free_code_cache='250418496'/>
<task_done success='1' nmsize='808' count='667' inlined_bytes='11' stamp='1.313'/>
</task>
<task compile_id='51' method='java/util/ArrayList add (Ljava/lang/Object;)Z' bytes='29' count='281' iicount='281' level='3' stamp='1.313'>
<phase name='buildIR' stamp='1.313'>
<type id='725' name='boolean'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='842' name='java/util/ArrayList' flags='1'/>
<method id='843' holder='842' name='add' return='725' arguments='738' flags='1' bytes='29' iicount='281'/>
<parse method='843'  stamp='1.313'>
<bc code='183' bci='7'/>
<type id='733' name='void'/>
<type id='731' name='int'/>
<method id='845' holder='842' name='ensureCapacityInternal' return='733' arguments='731' flags='2' bytes='13' iicount='281'/>
<call method='845' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<bc code='184' bci='6'/>
<klass id='847' name='[Ljava/lang/Object;' flags='1041'/>
<method id='848' holder='842' name='calculateCapacity' return='731' arguments='847 731' flags='10' bytes='16' iicount='281'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='184' bci='10'/>
<klass id='852' name='java/lang/Math' flags='17'/>
<method id='853' holder='852' name='max' return='731' arguments='731 731' flags='9' bytes='11' iicount='3021'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<parse_done stamp='1.313'/>
</parse>
<parse_done stamp='1.313'/>
</parse>
<bc code='183' bci='9'/>
<method id='855' holder='842' name='ensureExplicitCapacity' return='733' arguments='731' flags='2' bytes='26' iicount='281'/>
<call method='855' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='183' bci='22'/>
<method id='858' holder='842' name='grow' return='733' arguments='731' flags='2' bytes='45' iicount='30'/>
<call method='858' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.313'/>
</parse>
<parse_done stamp='1.313'/>
</parse>
<parse_done stamp='1.313'/>
</parse>
<phase name='optimize_blocks' stamp='1.313'>
<phase_done name='optimize_blocks' stamp='1.313'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.313'>
<phase_done name='rangeCheckElimination' stamp='1.313'/>
</phase>
<phase name='optimize_null_checks' stamp='1.313'>
<phase_done name='optimize_null_checks' stamp='1.313'/>
</phase>
<phase_done name='buildIR' stamp='1.313'/>
</phase>
<phase name='emit_lir' stamp='1.313'>
<phase name='lirGeneration' stamp='1.313'>
<phase_done name='lirGeneration' stamp='1.313'/>
</phase>
<phase name='linearScan' stamp='1.313'>
<phase_done name='linearScan' stamp='1.314'/>
</phase>
<phase_done name='emit_lir' stamp='1.314'/>
</phase>
<phase name='codeemit' stamp='1.314'>
<phase_done name='codeemit' stamp='1.314'/>
</phase>
<phase name='codeinstall' stamp='1.314'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.322'/>
</phase>
<code_cache total_blobs='316' nmethods='57' adapters='173' free_code_cache='250415744'/>
<task_done success='1' nmsize='1416' count='281' inlined_bytes='66' stamp='1.322'/>
</task>
<task compile_id='64' method='java/util/Vector size ()I' bytes='5' count='268' iicount='268' level='1' stamp='1.322'>
<phase name='buildIR' stamp='1.322'>
<type id='731' name='int'/>
<klass id='842' name='java/util/Vector' flags='1'/>
<method id='843' holder='842' name='size' return='731' flags='33' bytes='5' iicount='268'/>
<parse method='843'  stamp='1.322'>
<parse_done stamp='1.322'/>
</parse>
<phase name='optimize_blocks' stamp='1.322'>
<phase_done name='optimize_blocks' stamp='1.322'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.322'>
<phase_done name='rangeCheckElimination' stamp='1.322'/>
</phase>
<phase name='optimize_null_checks' stamp='1.322'>
<phase_done name='optimize_null_checks' stamp='1.322'/>
</phase>
<phase_done name='buildIR' stamp='1.322'/>
</phase>
<phase name='emit_lir' stamp='1.322'>
<phase name='lirGeneration' stamp='1.322'>
<phase_done name='lirGeneration' stamp='1.322'/>
</phase>
<phase name='linearScan' stamp='1.322'>
<phase_done name='linearScan' stamp='1.322'/>
</phase>
<phase_done name='emit_lir' stamp='1.322'/>
</phase>
<phase name='codeemit' stamp='1.322'>
<phase_done name='codeemit' stamp='1.322'/>
</phase>
<phase name='codeinstall' stamp='1.322'>
<phase_done name='codeinstall' stamp='1.324'/>
</phase>
<code_cache total_blobs='317' nmethods='58' adapters='173' free_code_cache='250414592'/>
<task_done success='1' nmsize='624' count='268' stamp='1.324'/>
</task>
<task compile_id='52' method='java/util/ArrayList ensureCapacityInternal (I)V' bytes='13' count='281' iicount='281' level='3' stamp='1.324'>
<phase name='buildIR' stamp='1.324'>
<type id='733' name='void'/>
<type id='731' name='int'/>
<klass id='842' name='java/util/ArrayList' flags='1'/>
<method id='843' holder='842' name='ensureCapacityInternal' return='733' arguments='731' flags='2' bytes='13' iicount='281'/>
<parse method='843'  stamp='1.324'>
<bc code='184' bci='6'/>
<klass id='845' name='[Ljava/lang/Object;' flags='1041'/>
<method id='846' holder='842' name='calculateCapacity' return='731' arguments='845 731' flags='10' bytes='16' iicount='281'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='184' bci='10'/>
<klass id='850' name='java/lang/Math' flags='17'/>
<method id='851' holder='850' name='max' return='731' arguments='731 731' flags='9' bytes='11' iicount='3021'/>
<call method='851' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='1.325'/>
</parse>
<parse_done stamp='1.325'/>
</parse>
<bc code='183' bci='9'/>
<method id='853' holder='842' name='ensureExplicitCapacity' return='733' arguments='731' flags='2' bytes='26' iicount='281'/>
<call method='853' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='22'/>
<method id='856' holder='842' name='grow' return='733' arguments='731' flags='2' bytes='45' iicount='30'/>
<call method='856' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='842'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.325'/>
</parse>
<parse_done stamp='1.325'/>
</parse>
<phase name='optimize_blocks' stamp='1.325'>
<phase_done name='optimize_blocks' stamp='1.325'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.325'>
<phase_done name='rangeCheckElimination' stamp='1.325'/>
</phase>
<phase name='optimize_null_checks' stamp='1.325'>
<phase_done name='optimize_null_checks' stamp='1.325'/>
</phase>
<phase_done name='buildIR' stamp='1.325'/>
</phase>
<phase name='emit_lir' stamp='1.325'>
<phase name='lirGeneration' stamp='1.325'>
<phase_done name='lirGeneration' stamp='1.325'/>
</phase>
<phase name='linearScan' stamp='1.325'>
<phase_done name='linearScan' stamp='1.325'/>
</phase>
<phase_done name='emit_lir' stamp='1.325'/>
</phase>
<phase name='codeemit' stamp='1.325'>
<phase_done name='codeemit' stamp='1.325'/>
</phase>
<phase name='codeinstall' stamp='1.325'>
<dependency type='leaf_type' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.329'/>
</phase>
<code_cache total_blobs='318' nmethods='59' adapters='173' free_code_cache='250412736'/>
<task_done success='1' nmsize='904' count='281' inlined_bytes='53' stamp='1.329'/>
</task>
<task compile_id='68' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='393' iicount='393' level='3' stamp='1.329'>
<phase name='buildIR' stamp='1.329'>
<type id='733' name='void'/>
<type id='725' name='boolean'/>
<klass id='842' name='java/util/HashMap' flags='1'/>
<method id='843' holder='842' name='afterNodeInsertion' return='733' arguments='725' flags='0' bytes='1' iicount='393'/>
<parse method='843'  stamp='1.329'>
<parse_done stamp='1.329'/>
</parse>
<phase name='optimize_blocks' stamp='1.329'>
<phase_done name='optimize_blocks' stamp='1.329'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.329'>
<phase_done name='rangeCheckElimination' stamp='1.329'/>
</phase>
<phase name='optimize_null_checks' stamp='1.329'>
<phase_done name='optimize_null_checks' stamp='1.329'/>
</phase>
<phase_done name='buildIR' stamp='1.329'/>
</phase>
<phase name='emit_lir' stamp='1.329'>
<phase name='lirGeneration' stamp='1.329'>
<phase_done name='lirGeneration' stamp='1.329'/>
</phase>
<phase name='linearScan' stamp='1.329'>
<phase_done name='linearScan' stamp='1.329'/>
</phase>
<phase_done name='emit_lir' stamp='1.329'/>
</phase>
<phase name='codeemit' stamp='1.329'>
<phase_done name='codeemit' stamp='1.329'/>
</phase>
<phase name='codeinstall' stamp='1.329'>
<phase_done name='codeinstall' stamp='1.331'/>
</phase>
<code_cache total_blobs='319' nmethods='60' adapters='173' free_code_cache='250411904'/>
<task_done success='1' nmsize='336' count='393' stamp='1.331'/>
</task>
<task compile_id='67' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='393' iicount='393' level='3' stamp='1.331'>
<phase name='buildIR' stamp='1.331'>
<klass id='843' name='java/util/HashMap$Node' flags='8'/>
<type id='731' name='int'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='842' name='java/util/HashMap' flags='1'/>
<method id='844' holder='842' name='newNode' return='843' arguments='731 738 738 843' flags='0' bytes='13' iicount='393'/>
<parse method='844'  stamp='1.331'>
<bc code='183' bci='9'/>
<type id='733' name='void'/>
<method id='846' holder='843' name='&lt;init&gt;' return='733' arguments='731 738 738 843' flags='0' bytes='26' iicount='454'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='1'/>
<method id='848' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='5497'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<parse_done stamp='1.331'/>
</parse>
<parse_done stamp='1.331'/>
</parse>
<parse_done stamp='1.331'/>
</parse>
<phase name='optimize_blocks' stamp='1.331'>
<phase_done name='optimize_blocks' stamp='1.331'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.331'>
<phase_done name='rangeCheckElimination' stamp='1.331'/>
</phase>
<phase name='optimize_null_checks' stamp='1.331'>
<phase_done name='optimize_null_checks' stamp='1.331'/>
</phase>
<phase_done name='buildIR' stamp='1.331'/>
</phase>
<phase name='emit_lir' stamp='1.331'>
<phase name='lirGeneration' stamp='1.331'>
<phase_done name='lirGeneration' stamp='1.331'/>
</phase>
<phase name='linearScan' stamp='1.331'>
<phase_done name='linearScan' stamp='1.331'/>
</phase>
<phase_done name='emit_lir' stamp='1.331'/>
</phase>
<phase name='codeemit' stamp='1.331'>
<phase_done name='codeemit' stamp='1.331'/>
</phase>
<phase name='codeinstall' stamp='1.331'>
<phase_done name='codeinstall' stamp='1.335'/>
</phase>
<code_cache total_blobs='320' nmethods='61' adapters='173' free_code_cache='250410432'/>
<task_done success='1' nmsize='688' count='393' inlined_bytes='27' stamp='1.335'/>
</task>
<task compile_id='61' method='java/net/Parts getPath ()Ljava/lang/String;' bytes='5' count='133' iicount='133' level='1' stamp='1.335'>
<phase name='buildIR' stamp='1.335'>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='842' name='java/net/Parts' flags='0'/>
<method id='843' holder='842' name='getPath' return='739' flags='0' bytes='5' iicount='133'/>
<parse method='843'  stamp='1.335'>
<parse_done stamp='1.336'/>
</parse>
<phase name='optimize_blocks' stamp='1.336'>
<phase_done name='optimize_blocks' stamp='1.336'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.336'>
<phase_done name='rangeCheckElimination' stamp='1.336'/>
</phase>
<phase name='optimize_null_checks' stamp='1.336'>
<phase_done name='optimize_null_checks' stamp='1.336'/>
</phase>
<phase_done name='buildIR' stamp='1.336'/>
</phase>
<phase name='emit_lir' stamp='1.336'>
<phase name='lirGeneration' stamp='1.336'>
<phase_done name='lirGeneration' stamp='1.336'/>
</phase>
<phase name='linearScan' stamp='1.336'>
<phase_done name='linearScan' stamp='1.336'/>
</phase>
<phase_done name='emit_lir' stamp='1.336'/>
</phase>
<phase name='codeemit' stamp='1.336'>
<phase_done name='codeemit' stamp='1.336'/>
</phase>
<phase name='codeinstall' stamp='1.336'>
<phase_done name='codeinstall' stamp='1.337'/>
</phase>
<code_cache total_blobs='321' nmethods='62' adapters='173' free_code_cache='250409664'/>
<task_done success='1' nmsize='272' count='133' stamp='1.337'/>
</task>
<task compile_id='62' method='java/net/Parts getQuery ()Ljava/lang/String;' bytes='5' count='133' iicount='133' level='1' stamp='1.337'>
<phase name='buildIR' stamp='1.337'>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='842' name='java/net/Parts' flags='0'/>
<method id='843' holder='842' name='getQuery' return='739' flags='0' bytes='5' iicount='133'/>
<parse method='843'  stamp='1.337'>
<parse_done stamp='1.337'/>
</parse>
<phase name='optimize_blocks' stamp='1.337'>
<phase_done name='optimize_blocks' stamp='1.337'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.337'>
<phase_done name='rangeCheckElimination' stamp='1.337'/>
</phase>
<phase name='optimize_null_checks' stamp='1.337'>
<phase_done name='optimize_null_checks' stamp='1.337'/>
</phase>
<phase_done name='buildIR' stamp='1.337'/>
</phase>
<phase name='emit_lir' stamp='1.337'>
<phase name='lirGeneration' stamp='1.337'>
<phase_done name='lirGeneration' stamp='1.337'/>
</phase>
<phase name='linearScan' stamp='1.337'>
<phase_done name='linearScan' stamp='1.337'/>
</phase>
<phase_done name='emit_lir' stamp='1.337'/>
</phase>
<phase name='codeemit' stamp='1.337'>
<phase_done name='codeemit' stamp='1.337'/>
</phase>
<phase name='codeinstall' stamp='1.337'>
<phase_done name='codeinstall' stamp='1.338'/>
</phase>
<code_cache total_blobs='322' nmethods='63' adapters='173' free_code_cache='250408896'/>
<task_done success='1' nmsize='272' count='133' stamp='1.338'/>
</task>
<task compile_id='69' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='610' backedge_count='67' iicount='610' level='3' stamp='1.338'>
<phase name='buildIR' stamp='1.338'>
<klass id='738' name='java/lang/Object' flags='1'/>
<type id='731' name='int'/>
<type id='725' name='boolean'/>
<klass id='842' name='java/util/HashMap' flags='1'/>
<method id='843' holder='842' name='putVal' return='738' arguments='731 738 738 725 725' flags='16' bytes='300' iicount='610'/>
<parse method='843'  stamp='1.338'>
<bc code='182' bci='20'/>
<klass id='848' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='849' holder='842' name='resize' return='848' flags='16' bytes='359' iicount='42'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='847' name='java/util/HashMap$Node' flags='8'/>
<method id='851' holder='842' name='newNode' return='847' arguments='731 738 738 847' flags='0' bytes='13' compile_id='67' compiler='C1' level='3' iicount='393'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='852' holder='738' name='equals' return='725' arguments='738' flags='1' bytes='11' iicount='1'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='853' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='854' holder='853' name='putTreeVal' return='853' arguments='842 848 731 738 738' flags='16' bytes='314' iicount='1'/>
<call method='854' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='851' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='733' name='void'/>
<method id='855' holder='842' name='treeifyBin' return='733' arguments='848 731' flags='16' bytes='110' iicount='1'/>
<call method='855' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='857' holder='842' name='afterNodeAccess' return='733' arguments='847' flags='0' bytes='1' iicount='28'/>
<call method='857' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='849' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='858' holder='842' name='afterNodeInsertion' return='733' arguments='725' flags='0' bytes='1' compile_id='68' compiler='C1' level='3' iicount='393'/>
<call method='858' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.339'/>
</parse>
<phase name='optimize_blocks' stamp='1.339'>
<phase_done name='optimize_blocks' stamp='1.339'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.339'>
<phase_done name='rangeCheckElimination' stamp='1.339'/>
</phase>
<phase name='optimize_null_checks' stamp='1.339'>
<phase_done name='optimize_null_checks' stamp='1.339'/>
</phase>
<phase_done name='buildIR' stamp='1.339'/>
</phase>
<phase name='emit_lir' stamp='1.339'>
<phase name='lirGeneration' stamp='1.339'>
<phase_done name='lirGeneration' stamp='1.339'/>
</phase>
<phase name='linearScan' stamp='1.339'>
<phase_done name='linearScan' stamp='1.339'/>
</phase>
<phase_done name='emit_lir' stamp='1.339'/>
</phase>
<phase name='codeemit' stamp='1.339'>
<phase_done name='codeemit' stamp='1.339'/>
</phase>
<phase name='codeinstall' stamp='1.339'>
<phase_done name='codeinstall' stamp='1.360'/>
</phase>
<code_cache total_blobs='323' nmethods='64' adapters='173' free_code_cache='250400768'/>
<task_done success='1' nmsize='4792' count='1069' backedge_count='101' stamp='1.360'/>
</task>
<task compile_id='70' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1065' iicount='1065' level='3' stamp='1.360'>
<phase name='buildIR' stamp='1.360'>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='842' name='java/util/HashMap' flags='1'/>
<method id='843' holder='842' name='put' return='738' arguments='738 738' flags='1' bytes='13' iicount='1065'/>
<parse method='843'  stamp='1.360'>
<bc code='184' bci='2'/>
<type id='731' name='int'/>
<method id='845' holder='842' name='hash' return='731' arguments='738' flags='24' bytes='20' compile_id='43' compiler='C1' level='3' iicount='1502'/>
<call method='845' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<bc code='182' bci='9'/>
<method id='847' holder='738' name='hashCode' return='731' flags='257' bytes='0' iicount='187'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.361'/>
</parse>
<bc code='182' bci='9'/>
<type id='725' name='boolean'/>
<method id='848' holder='842' name='putVal' return='738' arguments='731 738 738 725 725' flags='16' bytes='300' compile_id='69' compiler='C1' level='3' iicount='1069'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.361'/>
</parse>
<phase name='optimize_blocks' stamp='1.361'>
<phase_done name='optimize_blocks' stamp='1.361'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.361'>
<phase_done name='rangeCheckElimination' stamp='1.361'/>
</phase>
<phase name='optimize_null_checks' stamp='1.361'>
<phase_done name='optimize_null_checks' stamp='1.361'/>
</phase>
<phase_done name='buildIR' stamp='1.361'/>
</phase>
<phase name='emit_lir' stamp='1.361'>
<phase name='lirGeneration' stamp='1.361'>
<phase_done name='lirGeneration' stamp='1.361'/>
</phase>
<phase name='linearScan' stamp='1.361'>
<phase_done name='linearScan' stamp='1.361'/>
</phase>
<phase_done name='emit_lir' stamp='1.361'/>
</phase>
<phase name='codeemit' stamp='1.361'>
<phase_done name='codeemit' stamp='1.361'/>
</phase>
<phase name='codeinstall' stamp='1.361'>
<phase_done name='codeinstall' stamp='1.365'/>
</phase>
<code_cache total_blobs='324' nmethods='65' adapters='173' free_code_cache='250398976'/>
<task_done success='1' nmsize='952' count='1065' inlined_bytes='20' stamp='1.365'/>
</task>
<task compile_id='77' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='5093' iicount='5093' level='3' stamp='1.365'>
<phase name='buildIR' stamp='1.365'>
<klass id='804' name='java/lang/StringBuffer' flags='17'/>
<type id='726' name='char'/>
<method id='842' holder='804' name='append' return='804' arguments='726' flags='33' bytes='13' iicount='5120'/>
<parse method='842'  stamp='1.365'>
<bc code='183' bci='7'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='844' holder='803' name='append' return='803' arguments='726' flags='1' bytes='29' compile_id='45' compiler='C1' level='3' iicount='5740'/>
<call method='844' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<bc code='183' bci='7'/>
<type id='733' name='void'/>
<type id='731' name='int'/>
<method id='846' holder='803' name='ensureCapacityInternal' return='733' arguments='731' flags='2' bytes='27' compile_id='27' compiler='C1' level='3' iicount='7088'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='17'/>
<method id='848' holder='803' name='newCapacity' return='731' arguments='731' flags='2' bytes='39' iicount='576'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='831' name='[C' flags='1041'/>
<klass id='850' name='java/util/Arrays' flags='1'/>
<method id='851' holder='850' name='copyOf' return='831' arguments='831 731' flags='9' bytes='19' iicount='607'/>
<call method='851' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='184' bci='11'/>
<klass id='853' name='java/lang/Math' flags='17'/>
<method id='854' holder='853' name='min' return='731' arguments='731 731' flags='9' bytes='11' compile_id='1' compiler='C1' level='3' iicount='4505'/>
<call method='854' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<parse_done stamp='1.365'/>
</parse>
<bc code='184' bci='14'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<method id='856' holder='744' name='arraycopy' return='733' arguments='738 731 738 731 731' flags='265' bytes='0' compile_id='11' compile_kind='c2n' level='0' iicount='3200'/>
<call method='856' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.366'/>
</parse>
<parse_done stamp='1.366'/>
</parse>
<parse_done stamp='1.366'/>
</parse>
<parse_done stamp='1.366'/>
</parse>
<phase name='optimize_blocks' stamp='1.366'>
<phase_done name='optimize_blocks' stamp='1.366'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.366'>
<phase_done name='rangeCheckElimination' stamp='1.366'/>
</phase>
<phase name='optimize_null_checks' stamp='1.366'>
<phase_done name='optimize_null_checks' stamp='1.366'/>
</phase>
<phase_done name='buildIR' stamp='1.366'/>
</phase>
<phase name='emit_lir' stamp='1.366'>
<phase name='lirGeneration' stamp='1.366'>
<phase_done name='lirGeneration' stamp='1.366'/>
</phase>
<phase name='linearScan' stamp='1.366'>
<phase_done name='linearScan' stamp='1.366'/>
</phase>
<phase_done name='emit_lir' stamp='1.366'/>
</phase>
<phase name='codeemit' stamp='1.366'>
<phase_done name='codeemit' stamp='1.366'/>
</phase>
<phase name='codeinstall' stamp='1.366'>
<phase_done name='codeinstall' stamp='1.376'/>
</phase>
<code_cache total_blobs='325' nmethods='66' adapters='173' free_code_cache='250395712'/>
<task_done success='1' nmsize='1816' count='7305' inlined_bytes='86' stamp='1.376'/>
</task>
<task compile_id='71' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1041' iicount='1041' level='3' stamp='1.376'>
<phase name='buildIR' stamp='1.376'>
<type id='733' name='void'/>
<type id='731' name='int'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='842' name='java/util/HashMap$Node' flags='8'/>
<method id='843' holder='842' name='&lt;init&gt;' return='733' arguments='731 738 738 842' flags='0' bytes='26' iicount='1041'/>
<parse method='843'  stamp='1.376'>
<bc code='183' bci='1'/>
<method id='845' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='5562'/>
<call method='845' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='842'/>
<parse_done stamp='1.376'/>
</parse>
<parse_done stamp='1.376'/>
</parse>
<phase name='optimize_blocks' stamp='1.376'>
<phase_done name='optimize_blocks' stamp='1.376'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.376'>
<phase_done name='rangeCheckElimination' stamp='1.376'/>
</phase>
<phase name='optimize_null_checks' stamp='1.376'>
<phase_done name='optimize_null_checks' stamp='1.376'/>
</phase>
<phase_done name='buildIR' stamp='1.376'/>
</phase>
<phase name='emit_lir' stamp='1.376'>
<phase name='lirGeneration' stamp='1.376'>
<phase_done name='lirGeneration' stamp='1.376'/>
</phase>
<phase name='linearScan' stamp='1.376'>
<phase_done name='linearScan' stamp='1.376'/>
</phase>
<phase_done name='emit_lir' stamp='1.376'/>
</phase>
<phase name='codeemit' stamp='1.376'>
<phase_done name='codeemit' stamp='1.376'/>
</phase>
<phase name='codeinstall' stamp='1.376'>
<dependency type='no_finalizable_subclasses' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.380'/>
</phase>
<code_cache total_blobs='327' nmethods='67' adapters='173' free_code_cache='250389184'/>
<task_done success='1' nmsize='496' count='1041' inlined_bytes='1' stamp='1.380'/>
</task>
<task compile_id='72' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='587' iicount='587' level='1' stamp='1.380'>
<phase name='buildIR' stamp='1.380'>
<type id='725' name='boolean'/>
<klass id='843' name='java/util/Map$Entry' flags='1545'/>
<klass id='842' name='java/util/LinkedHashMap' flags='1'/>
<method id='844' holder='842' name='removeEldestEntry' return='725' arguments='843' flags='4' bytes='2' iicount='587'/>
<parse method='844'  stamp='1.380'>
<parse_done stamp='1.380'/>
</parse>
<phase name='optimize_blocks' stamp='1.380'>
<phase_done name='optimize_blocks' stamp='1.380'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.380'>
<phase_done name='rangeCheckElimination' stamp='1.380'/>
</phase>
<phase name='optimize_null_checks' stamp='1.380'>
<phase_done name='optimize_null_checks' stamp='1.380'/>
</phase>
<phase_done name='buildIR' stamp='1.380'/>
</phase>
<phase name='emit_lir' stamp='1.380'>
<phase name='lirGeneration' stamp='1.380'>
<phase_done name='lirGeneration' stamp='1.380'/>
</phase>
<phase name='linearScan' stamp='1.380'>
<phase_done name='linearScan' stamp='1.380'/>
</phase>
<phase_done name='emit_lir' stamp='1.380'/>
</phase>
<phase name='codeemit' stamp='1.380'>
<phase_done name='codeemit' stamp='1.380'/>
</phase>
<phase name='codeinstall' stamp='1.380'>
<phase_done name='codeinstall' stamp='1.382'/>
</phase>
<code_cache total_blobs='329' nmethods='68' adapters='173' free_code_cache='250381696'/>
<task_done success='1' nmsize='272' count='587' stamp='1.382'/>
</task>
<task compile_id='73' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='648' iicount='648' level='3' stamp='1.382'>
<phase name='buildIR' stamp='1.382'>
<klass id='843' name='java/util/HashMap$Node' flags='8'/>
<type id='731' name='int'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='842' name='java/util/LinkedHashMap' flags='1'/>
<method id='844' holder='842' name='newNode' return='843' arguments='731 738 738 843' flags='0' bytes='23' iicount='648'/>
<parse method='844'  stamp='1.382'>
<bc code='183' bci='9'/>
<type id='733' name='void'/>
<klass id='846' name='java/util/LinkedHashMap$Entry' flags='8'/>
<method id='847' holder='846' name='&lt;init&gt;' return='733' arguments='731 738 738 843' flags='0' bytes='10' iicount='648'/>
<call method='847' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='6'/>
<method id='849' holder='843' name='&lt;init&gt;' return='733' arguments='731 738 738 843' flags='0' bytes='26' compile_id='71' compiler='C1' level='3' iicount='1041'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='1'/>
<method id='851' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='5565'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='1.389'/>
</parse>
<parse_done stamp='1.389'/>
</parse>
<parse_done stamp='1.389'/>
</parse>
<bc code='183' bci='17'/>
<method id='853' holder='842' name='linkNodeLast' return='733' arguments='846' flags='2' bytes='33' iicount='648'/>
<call method='853' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<parse_done stamp='1.389'/>
</parse>
<parse_done stamp='1.389'/>
</parse>
<phase name='optimize_blocks' stamp='1.389'>
<phase_done name='optimize_blocks' stamp='1.389'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.389'>
<phase_done name='rangeCheckElimination' stamp='1.389'/>
</phase>
<phase name='optimize_null_checks' stamp='1.389'>
<phase_done name='optimize_null_checks' stamp='1.389'/>
</phase>
<phase_done name='buildIR' stamp='1.389'/>
</phase>
<phase name='emit_lir' stamp='1.389'>
<phase name='lirGeneration' stamp='1.389'>
<phase_done name='lirGeneration' stamp='1.389'/>
</phase>
<phase name='linearScan' stamp='1.389'>
<phase_done name='linearScan' stamp='1.389'/>
</phase>
<phase_done name='emit_lir' stamp='1.389'/>
</phase>
<phase name='codeemit' stamp='1.389'>
<phase_done name='codeemit' stamp='1.389'/>
</phase>
<phase name='codeinstall' stamp='1.389'>
<phase_done name='codeinstall' stamp='1.396'/>
</phase>
<code_cache total_blobs='329' nmethods='70' adapters='173' free_code_cache='250389312'/>
<task_done success='1' nmsize='1104' count='648' inlined_bytes='70' stamp='1.396'/>
</task>
<task compile_id='79' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='595' iicount='595' level='3' stamp='1.396'>
<phase name='buildIR' stamp='1.396'>
<type id='731' name='int'/>
<klass id='803' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='842' holder='803' name='newCapacity' return='731' arguments='731' flags='2' bytes='39' iicount='595'/>
<parse method='842'  stamp='1.396'>
<bc code='183' bci='31'/>
<method id='844' holder='803' name='hugeCapacity' return='731' arguments='731' flags='2' bytes='28' iicount='1'/>
<call method='844' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<bc code='183' bci='11'/>
<type id='733' name='void'/>
<klass id='761' name='java/lang/OutOfMemoryError' flags='1'/>
<method id='846' holder='761' name='&lt;init&gt;' return='733' flags='1' bytes='5' iicount='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.396'/>
</parse>
<parse_done stamp='1.396'/>
</parse>
<phase name='optimize_blocks' stamp='1.396'>
<phase_done name='optimize_blocks' stamp='1.396'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.396'>
<phase_done name='rangeCheckElimination' stamp='1.396'/>
</phase>
<phase name='optimize_null_checks' stamp='1.396'>
<phase_done name='optimize_null_checks' stamp='1.396'/>
</phase>
<phase_done name='buildIR' stamp='1.396'/>
</phase>
<phase name='emit_lir' stamp='1.396'>
<phase name='lirGeneration' stamp='1.396'>
<phase_done name='lirGeneration' stamp='1.396'/>
</phase>
<phase name='linearScan' stamp='1.396'>
<phase_done name='linearScan' stamp='1.396'/>
</phase>
<phase_done name='emit_lir' stamp='1.396'/>
</phase>
<phase name='codeemit' stamp='1.396'>
<phase_done name='codeemit' stamp='1.396'/>
</phase>
<phase name='codeinstall' stamp='1.396'>
<phase_done name='codeinstall' stamp='1.401'/>
</phase>
<code_cache total_blobs='330' nmethods='71' adapters='173' free_code_cache='250387264'/>
<task_done success='1' nmsize='1000' count='595' inlined_bytes='28' stamp='1.401'/>
</task>
<task compile_id='74' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='648' iicount='648' level='3' stamp='1.401'>
<phase name='buildIR' stamp='1.401'>
<type id='733' name='void'/>
<type id='731' name='int'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='843' name='java/util/HashMap$Node' flags='8'/>
<klass id='842' name='java/util/LinkedHashMap$Entry' flags='8'/>
<method id='844' holder='842' name='&lt;init&gt;' return='733' arguments='731 738 738 843' flags='0' bytes='10' iicount='648'/>
<parse method='844'  stamp='1.401'>
<bc code='183' bci='6'/>
<method id='846' holder='843' name='&lt;init&gt;' return='733' arguments='731 738 738 843' flags='0' bytes='26' compile_id='71' compiler='C1' level='3' iicount='1041'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='1'/>
<method id='848' holder='738' name='&lt;init&gt;' return='733' flags='1' bytes='1' compile_id='21' compiler='C1' level='1' iicount='5565'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='842'/>
<parse_done stamp='1.401'/>
</parse>
<parse_done stamp='1.401'/>
</parse>
<parse_done stamp='1.401'/>
</parse>
<phase name='optimize_blocks' stamp='1.401'>
<phase_done name='optimize_blocks' stamp='1.401'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.401'>
<phase_done name='rangeCheckElimination' stamp='1.401'/>
</phase>
<phase name='optimize_null_checks' stamp='1.401'>
<phase_done name='optimize_null_checks' stamp='1.401'/>
</phase>
<phase_done name='buildIR' stamp='1.401'/>
</phase>
<phase name='emit_lir' stamp='1.401'>
<phase name='lirGeneration' stamp='1.401'>
<phase_done name='lirGeneration' stamp='1.401'/>
</phase>
<phase name='linearScan' stamp='1.401'>
<phase_done name='linearScan' stamp='1.402'/>
</phase>
<phase_done name='emit_lir' stamp='1.402'/>
</phase>
<phase name='codeemit' stamp='1.402'>
<phase_done name='codeemit' stamp='1.402'/>
</phase>
<phase name='codeinstall' stamp='1.402'>
<dependency type='no_finalizable_subclasses' ctxk='842'/>
<phase_done name='codeinstall' stamp='1.405'/>
</phase>
<code_cache total_blobs='331' nmethods='72' adapters='173' free_code_cache='250385984'/>
<task_done success='1' nmsize='592' count='648' inlined_bytes='27' stamp='1.405'/>
</task>
<task compile_id='75' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='648' iicount='648' level='3' stamp='1.405'>
<phase name='buildIR' stamp='1.405'>
<type id='733' name='void'/>
<klass id='843' name='java/util/LinkedHashMap$Entry' flags='8'/>
<klass id='842' name='java/util/LinkedHashMap' flags='1'/>
<method id='844' holder='842' name='linkNodeLast' return='733' arguments='843' flags='2' bytes='33' iicount='648'/>
<parse method='844'  stamp='1.405'>
<parse_done stamp='1.405'/>
</parse>
<phase name='optimize_blocks' stamp='1.405'>
<phase_done name='optimize_blocks' stamp='1.405'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.405'>
<phase_done name='rangeCheckElimination' stamp='1.405'/>
</phase>
<phase name='optimize_null_checks' stamp='1.405'>
<phase_done name='optimize_null_checks' stamp='1.405'/>
</phase>
<phase_done name='buildIR' stamp='1.405'/>
</phase>
<phase name='emit_lir' stamp='1.405'>
<phase name='lirGeneration' stamp='1.405'>
<phase_done name='lirGeneration' stamp='1.405'/>
</phase>
<phase name='linearScan' stamp='1.405'>
<phase_done name='linearScan' stamp='1.405'/>
</phase>
<phase_done name='emit_lir' stamp='1.405'/>
</phase>
<phase name='codeemit' stamp='1.405'>
<phase_done name='codeemit' stamp='1.405'/>
</phase>
<phase name='codeinstall' stamp='1.405'>
<phase_done name='codeinstall' stamp='1.409'/>
</phase>
<code_cache total_blobs='332' nmethods='73' adapters='173' free_code_cache='250384704'/>
<task_done success='1' nmsize='560' count='648' stamp='1.409'/>
</task>
<task compile_id='76' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='648' iicount='648' level='3' stamp='1.409'>
<phase name='buildIR' stamp='1.409'>
<type id='733' name='void'/>
<type id='725' name='boolean'/>
<klass id='842' name='java/util/LinkedHashMap' flags='1'/>
<method id='843' holder='842' name='afterNodeInsertion' return='733' arguments='725' flags='0' bytes='40' iicount='648'/>
<parse method='843'  stamp='1.409'>
<bc code='182' bci='15'/>
<klass id='846' name='java/util/Map$Entry' flags='1545'/>
<method id='847' holder='842' name='removeEldestEntry' return='725' arguments='846' flags='4' bytes='2' compile_id='72' compiler='C1' level='1' iicount='587'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='28'/>
<type id='731' name='int'/>
<klass id='738' name='java/lang/Object' flags='1'/>
<klass id='849' name='java/util/HashMap' flags='1'/>
<method id='850' holder='849' name='hash' return='731' arguments='738' flags='24' bytes='20' compile_id='43' compiler='C1' level='3' iicount='1502'/>
<call method='850' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='182' bci='9'/>
<method id='852' holder='738' name='hashCode' return='731' flags='257' bytes='0' iicount='187'/>
<call method='852' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.409'/>
</parse>
<bc code='182' bci='35'/>
<klass id='848' name='java/util/HashMap$Node' flags='8'/>
<method id='853' holder='849' name='removeNode' return='848' arguments='731 738 738 725 725' flags='16' bytes='291' iicount='1'/>
<call method='853' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.409'/>
</parse>
<phase name='optimize_blocks' stamp='1.409'>
<phase_done name='optimize_blocks' stamp='1.409'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.409'>
<phase_done name='rangeCheckElimination' stamp='1.409'/>
</phase>
<phase name='optimize_null_checks' stamp='1.409'>
<phase_done name='optimize_null_checks' stamp='1.409'/>
</phase>
<phase_done name='buildIR' stamp='1.409'/>
</phase>
<phase name='emit_lir' stamp='1.409'>
<phase name='lirGeneration' stamp='1.409'>
<phase_done name='lirGeneration' stamp='1.409'/>
</phase>
<phase name='linearScan' stamp='1.409'>
<phase_done name='linearScan' stamp='1.409'/>
</phase>
<phase_done name='emit_lir' stamp='1.409'/>
</phase>
<phase name='codeemit' stamp='1.409'>
<phase_done name='codeemit' stamp='1.409'/>
</phase>
<phase name='codeinstall' stamp='1.409'>
<phase_done name='codeinstall' stamp='1.416'/>
</phase>
<code_cache total_blobs='333' nmethods='74' adapters='173' free_code_cache='250382272'/>
<task_done success='1' nmsize='1352' count='648' inlined_bytes='20' stamp='1.416'/>
</task>
<task compile_id='63' method='java/net/Parts getRef ()Ljava/lang/String;' bytes='5' count='133' iicount='133' level='1' stamp='1.416'>
<phase name='buildIR' stamp='1.416'>
<klass id='739' name='java/lang/String' flags='17'/>
<klass id='842' name='java/net/Parts' flags='0'/>
<method id='843' holder='842' name='getRef' return='739' flags='0' bytes='5' iicount='133'/>
<parse method='843'  stamp='1.416'>
<parse_done stamp='1.416'/>
</parse>
<phase name='optimize_blocks' stamp='1.416'>
<phase_done name='optimize_blocks' stamp='1.416'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.416'>
<phase_done name='rangeCheckElimination' stamp='1.416'/>
</phase>
<phase name='optimize_null_checks' stamp='1.416'>
<phase_done name='optimize_null_checks' stamp='1.416'/>
</phase>
<phase_done name='buildIR' stamp='1.416'/>
</phase>
<phase name='emit_lir' stamp='1.416'>
<phase name='lirGeneration' stamp='1.416'>
<phase_done name='lirGeneration' stamp='1.416'/>
</phase>
<phase name='linearScan' stamp='1.416'>
<phase_done name='linearScan' stamp='1.416'/>
</phase>
<phase_done name='emit_lir' stamp='1.416'/>
</phase>
<phase name='codeemit' stamp='1.416'>
<phase_done name='codeemit' stamp='1.416'/>
</phase>
<phase name='codeinstall' stamp='1.416'>
<phase_done name='codeinstall' stamp='1.418'/>
</phase>
<code_cache total_blobs='334' nmethods='75' adapters='173' free_code_cache='250381504'/>
<task_done success='1' nmsize='272' count='133' stamp='1.418'/>
</task>
<task compile_id='80' method='java/lang/String lastIndexOf (I)I' bytes='13' count='384' iicount='384' level='3' stamp='2.253'>
<phase name='buildIR' stamp='2.253'>
<type id='731' name='int'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='lastIndexOf' return='731' arguments='731' flags='1' bytes='13' iicount='384'/>
<parse method='842'  stamp='2.253'>
<bc code='182' bci='9'/>
<method id='844' holder='739' name='lastIndexOf' return='731' arguments='731 731' flags='1' bytes='52' compile_id='48' compiler='C1' level='3' iicount='387'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='2.253'/>
</parse>
<phase name='optimize_blocks' stamp='2.253'>
<phase_done name='optimize_blocks' stamp='2.253'/>
</phase>
<phase name='rangeCheckElimination' stamp='2.253'>
<phase_done name='rangeCheckElimination' stamp='2.253'/>
</phase>
<phase name='optimize_null_checks' stamp='2.253'>
<phase_done name='optimize_null_checks' stamp='2.253'/>
</phase>
<phase_done name='buildIR' stamp='2.253'/>
</phase>
<phase name='emit_lir' stamp='2.253'>
<phase name='lirGeneration' stamp='2.253'>
<phase_done name='lirGeneration' stamp='2.253'/>
</phase>
<phase name='linearScan' stamp='2.253'>
<phase_done name='linearScan' stamp='2.253'/>
</phase>
<phase_done name='emit_lir' stamp='2.253'/>
</phase>
<phase name='codeemit' stamp='2.253'>
<phase_done name='codeemit' stamp='2.253'/>
</phase>
<phase name='codeinstall' stamp='2.253'>
<phase_done name='codeinstall' stamp='2.256'/>
</phase>
<code_cache total_blobs='335' nmethods='76' adapters='173' free_code_cache='250380352'/>
<task_done success='1' nmsize='552' count='384' stamp='2.256'/>
</task>
</compilation_log>
<compilation_log thread='16387'>
<start_compile_thread name='C2 CompilerThread1' thread='16387' process='16173' stamp='0.114'/>
<task compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='21117' iicount='21117' stamp='0.168'>
<phase name='parse' nodes='3' live='3' stamp='0.168'>
<type id='726' name='char'/>
<type id='731' name='int'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='charAt' return='726' arguments='731' flags='1' bytes='29' iicount='21117'/>
<klass id='844' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='842' bci='13' reason='unloaded' action='reinterpret' index='6' klass='844'/>
<parse method='842' uses='21117' stamp='0.168'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='21117' cnt='21117' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='21117' not_taken='0' cnt='21117' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.174'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.174'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.174'>
<phase name='ccp' nodes='103' live='63' stamp='0.174'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.174'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.174'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.175'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.175'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.175'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.175'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.175'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.175'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.175'>
<phase_done name='output' nodes='94' live='86' stamp='0.188'/>
</phase>
<code_cache total_blobs='252' nmethods='11' adapters='155' free_code_cache='250540032'/>
<task_done success='1' nmsize='216' count='21208' stamp='0.196'/>
</task>
<task compile_id='30' compile_kind='osr' method='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo$1 run ()V' bytes='26' count='1' backedge_count='162725' iicount='1' osr_bci='2' stamp='0.244'>
<phase name='parse' nodes='3' live='3' stamp='0.244'>
<type id='733' name='void'/>
<klass id='842' name='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo$1' flags='0'/>
<method id='843' holder='842' name='run' return='733' flags='1' bytes='26' iicount='1'/>
<klass id='744' name='java/lang/System' flags='17'/>
<uncommon_trap method='843' bci='18' reason='unloaded' action='reinterpret' index='33' klass='744'/>
<parse method='843' uses='1' osr_bci='2' stamp='0.244'>
<uncommon_trap method='843' bci='18' reason='unloaded' action='reinterpret' index='33' klass='744'/>
<dependency type='leaf_type' ctxk='842'/>
<dependency type='leaf_type' ctxk='842'/>
<uncommon_trap bci='2' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='2' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='2' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='3'/>
<uncommon_trap bci='3' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='6'/>
<type id='725' name='boolean'/>
<klass id='845' name='com/jep/github/interview/concurrency/threadDemo/VisibilityDemo' flags='1'/>
<method id='846' holder='845' name='access$000' return='725' arguments='845' flags='4104' bytes='5' compile_id='29' compiler='C1' level='1' iicount='161792'/>
<call method='846' count='0' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='0' stamp='0.244'>
<bc code='180' bci='1'/>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='147' live='141' memory='43520' stamp='0.244'/>
</parse>
<bc code='153' bci='9'/>
<branch target_bci='18' taken='0' not_taken='0'/>
<bc code='178' bci='18'/>
<uncommon_trap bci='18' reason='unloaded' action='reinterpret' index='33'/>
<parse_done nodes='164' live='157' memory='46152' stamp='0.244'/>
</parse>
<phase_done name='parse' nodes='164' live='113' stamp='0.244'/>
</phase>
<phase name='optimizer' nodes='164' live='113' stamp='0.244'>
<phase name='idealLoop' nodes='169' live='104' stamp='0.244'>
<loop_tree>
<loop idx='169' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='191' live='93' stamp='0.244'/>
</phase>
<phase name='idealLoop' nodes='191' live='93' stamp='0.244'>
<phase_done name='idealLoop' nodes='196' live='97' stamp='0.244'/>
</phase>
<phase name='ccp' nodes='196' live='97' stamp='0.244'>
<phase_done name='ccp' nodes='196' live='97' stamp='0.244'/>
</phase>
<phase_done name='optimizer' nodes='202' live='80' stamp='0.244'/>
</phase>
<phase name='matcher' nodes='202' live='80' stamp='0.244'>
<phase_done name='matcher' nodes='69' live='69' stamp='0.244'/>
</phase>
<phase name='regalloc' nodes='95' live='93' stamp='0.244'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='101' live='98' stamp='0.244'/>
</phase>
<phase name='output' nodes='102' live='99' stamp='0.244'>
<phase_done name='output' nodes='115' live='107' stamp='0.247'/>
</phase>
<dependency type='leaf_type' ctxk='842'/>
<code_cache total_blobs='270' nmethods='21' adapters='163' free_code_cache='250518208'/>
<task_done success='1' nmsize='184' count='1' backedge_count='524288' inlined_bytes='5' stamp='0.250'/>
</task>
</compilation_log>
<compilation_log thread='16643'>
<start_compile_thread name='C2 CompilerThread0' thread='16643' process='16173' stamp='0.114'/>
<task compile_id='3' method='java/lang/String hashCode ()I' bytes='55' count='990' backedge_count='28665' iicount='990' stamp='0.168'>
<phase name='parse' nodes='3' live='3' stamp='0.168'>
<type id='731' name='int'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='hashCode' return='731' flags='1' bytes='55' iicount='990'/>
<parse method='842' uses='990' stamp='0.168'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='267' not_taken='404' cnt='671' prob='0.397914'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='1' not_taken='403' cnt='404' prob='0.00247525'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='403' not_taken='24507' cnt='24910' prob='0.0161782'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='403' not_taken='24507' cnt='24507' prob='0.0161782'/>
<parse_done nodes='190' live='184' memory='50008' stamp='0.174'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.174'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.174'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.174'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.175'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.175'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.175'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.175'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.175'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='364' live='198' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='364' live='198' stamp='0.175'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='370' live='184' stamp='0.176'/>
</phase>
<phase name='idealLoop' nodes='370' live='184' stamp='0.176'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='167' stamp='0.176'/>
</phase>
<phase_done name='optimizer' nodes='409' live='161' stamp='0.176'/>
</phase>
<phase name='matcher' nodes='409' live='161' stamp='0.176'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.176'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.176'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.177'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.177'>
<phase_done name='output' nodes='213' live='200' stamp='0.188'/>
</phase>
<code_cache total_blobs='252' nmethods='10' adapters='154' free_code_cache='250530048'/>
<task_done success='1' nmsize='376' count='997' backedge_count='28943' stamp='0.193'/>
</task>
<task compile_id='18' method='java/lang/String indexOf (II)I' bytes='70' count='827' backedge_count='42021' iicount='827' stamp='0.196'>
<phase name='parse' nodes='3' live='3' stamp='0.196'>
<type id='731' name='int'/>
<klass id='739' name='java/lang/String' flags='17'/>
<method id='842' holder='739' name='indexOf' return='731' arguments='731 731' flags='1' bytes='70' iicount='828'/>
<parse method='842' uses='828' stamp='0.196'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='618' not_taken='0' cnt='618' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='507' not_taken='111' cnt='618' prob='0.820388'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='507' cnt='507' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='489' not_taken='37014' cnt='37503' prob='0.013039'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='36996' not_taken='18' cnt='37014' prob='0.999514'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='489' not_taken='37014' cnt='36996' prob='0.013039'/>
<parse_done nodes='184' live='174' memory='50256' stamp='0.206'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.206'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.206'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.206'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.206'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.206'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.207'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.207'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.207'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.207'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.207'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.207'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='342' live='222' stamp='0.207'/>
</phase>
<phase name='idealLoop' nodes='342' live='222' stamp='0.207'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='288' stamp='0.207'/>
</phase>
<phase name='idealLoop' nodes='418' live='288' stamp='0.207'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='271' stamp='0.207'/>
</phase>
<phase name='idealLoop' nodes='418' live='271' stamp='0.207'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='385' inner_loop='1' main_loop='385' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='418' live='268' stamp='0.207'/>
</phase>
<phase_done name='optimizer' nodes='481' live='258' stamp='0.207'/>
</phase>
<phase name='matcher' nodes='481' live='258' stamp='0.207'>
<phase_done name='matcher' nodes='197' live='197' stamp='0.208'/>
</phase>
<phase name='regalloc' nodes='279' live='278' stamp='0.208'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='296' live='293' stamp='0.208'/>
</phase>
<phase name='output' nodes='296' live='293' stamp='0.208'>
<phase_done name='output' nodes='329' live='305' stamp='0.212'/>
</phase>
<code_cache total_blobs='256' nmethods='14' adapters='156' free_code_cache='250533056'/>
<task_done success='1' nmsize='472' count='834' backedge_count='42439' stamp='0.216'/>
</task>
</compilation_log>
<hotspot_log_done stamp='11.977'/>
</hotspot_log>
